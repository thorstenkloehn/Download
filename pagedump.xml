<mediawiki xmlns="http://www.mediawiki.org/xml/export-0.11/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mediawiki.org/xml/export-0.11/ http://www.mediawiki.org/xml/export-0.11.xsd" version="0.11" xml:lang="de">
  <siteinfo>
    <sitename>ahrensburg.city</sitename>
    <dbname>mediawiki</dbname>
    <base>https://ahrensburg.city/Hauptseite</base>
    <generator>MediaWiki 1.43.1</generator>
    <case>first-letter</case>
    <namespaces>
      <namespace key="-2" case="first-letter">Medium</namespace>
      <namespace key="-1" case="first-letter">Spezial</namespace>
      <namespace key="0" case="first-letter" />
      <namespace key="1" case="first-letter">Diskussion</namespace>
      <namespace key="2" case="first-letter">Benutzer</namespace>
      <namespace key="3" case="first-letter">Benutzer Diskussion</namespace>
      <namespace key="4" case="first-letter">Ahrensburg.city</namespace>
      <namespace key="5" case="first-letter">Ahrensburg.city Diskussion</namespace>
      <namespace key="6" case="first-letter">Datei</namespace>
      <namespace key="7" case="first-letter">Datei Diskussion</namespace>
      <namespace key="8" case="first-letter">MediaWiki</namespace>
      <namespace key="9" case="first-letter">MediaWiki Diskussion</namespace>
      <namespace key="10" case="first-letter">Vorlage</namespace>
      <namespace key="11" case="first-letter">Vorlage Diskussion</namespace>
      <namespace key="12" case="first-letter">Hilfe</namespace>
      <namespace key="13" case="first-letter">Hilfe Diskussion</namespace>
      <namespace key="14" case="first-letter">Kategorie</namespace>
      <namespace key="15" case="first-letter">Kategorie Diskussion</namespace>
      <namespace key="3000" case="first-letter">Server</namespace>
      <namespace key="3001" case="first-letter">Server Diskussion</namespace>
      <namespace key="3002" case="first-letter">Kurse</namespace>
      <namespace key="3003" case="first-letter">Kurse Diskussion</namespace>
      <namespace key="3004" case="first-letter">Ai</namespace>
      <namespace key="3005" case="first-letter">Ai Diskussion</namespace>
      <namespace key="3006" case="first-letter">Schwachstellen</namespace>
      <namespace key="3007" case="first-letter">Schwachstellen Diskussion</namespace>
      <namespace key="3008" case="first-letter">IDE</namespace>
      <namespace key="3009" case="first-letter">IDE Diskussion</namespace>
      <namespace key="3010" case="first-letter">Builder</namespace>
      <namespace key="3011" case="first-letter">Builder Diskussion</namespace>
      <namespace key="3012" case="first-letter">Backup</namespace>
      <namespace key="3013" case="first-letter">Backup Diskussion</namespace>
    </namespaces>
  </siteinfo>
  <page>
    <title>Hauptseite</title>
    <ns>0</ns>
    <id>1</id>
    <revision>
      <id>1</id>
      <timestamp>2025-06-27T23:53:51Z</timestamp>
      <contributor>
        <username>MediaWiki default</username>
        <id>2</id>
      </contributor>
      <origin>1</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="827" sha1="ijyt2ix39wzb50jz3zqzbv6c2qkshij" xml:space="preserve">&lt;strong&gt;MediaWiki wurde installiert.&lt;/strong&gt;

Hilfe zur Verwendung und Konfiguration der Wiki-Software findest du im [https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents Benutzerhandbuch].

== Starthilfen ==

* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Configuration_settings Liste der Konfigurationsparameter]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:FAQ Häufige Fragen zu MediaWiki]
* [https://lists.wikimedia.org/postorius/lists/mediawiki-announce.lists.wikimedia.org/ Mailingliste zu neuen Versionen von MediaWiki]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Localisation#Translation_resources Übersetze MediaWiki für deine Sprache]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Combating_spam Erfahre, wie du Spam auf deinem Wiki bekämpfen kannst]</text>
      <sha1>ijyt2ix39wzb50jz3zqzbv6c2qkshij</sha1>
    </revision>
    <revision>
      <id>2</id>
      <timestamp>2025-06-22T15:48:37Z</timestamp>
      <contributor>
        <username>MediaWiki default</username>
        <id>2</id>
      </contributor>
      <origin>2</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="827" sha1="ijyt2ix39wzb50jz3zqzbv6c2qkshij" xml:space="preserve">&lt;strong&gt;MediaWiki wurde installiert.&lt;/strong&gt;

Hilfe zur Verwendung und Konfiguration der Wiki-Software findest du im [https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents Benutzerhandbuch].

== Starthilfen ==

* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Configuration_settings Liste der Konfigurationsparameter]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:FAQ Häufige Fragen zu MediaWiki]
* [https://lists.wikimedia.org/postorius/lists/mediawiki-announce.lists.wikimedia.org/ Mailingliste zu neuen Versionen von MediaWiki]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Localisation#Translation_resources Übersetze MediaWiki für deine Sprache]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Combating_spam Erfahre, wie du Spam auf deinem Wiki bekämpfen kannst]</text>
      <sha1>ijyt2ix39wzb50jz3zqzbv6c2qkshij</sha1>
    </revision>
    <revision>
      <id>3</id>
      <timestamp>2025-06-13T20:46:09Z</timestamp>
      <contributor>
        <username>MediaWiki default</username>
        <id>2</id>
      </contributor>
      <origin>3</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="827" sha1="ijyt2ix39wzb50jz3zqzbv6c2qkshij" xml:space="preserve">&lt;strong&gt;MediaWiki wurde installiert.&lt;/strong&gt;

Hilfe zur Verwendung und Konfiguration der Wiki-Software findest du im [https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents Benutzerhandbuch].

== Starthilfen ==

* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Configuration_settings Liste der Konfigurationsparameter]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:FAQ Häufige Fragen zu MediaWiki]
* [https://lists.wikimedia.org/postorius/lists/mediawiki-announce.lists.wikimedia.org/ Mailingliste zu neuen Versionen von MediaWiki]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Localisation#Translation_resources Übersetze MediaWiki für deine Sprache]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Combating_spam Erfahre, wie du Spam auf deinem Wiki bekämpfen kannst]</text>
      <sha1>ijyt2ix39wzb50jz3zqzbv6c2qkshij</sha1>
    </revision>
    <revision>
      <id>4</id>
      <parentid>3</parentid>
      <timestamp>2025-06-13T23:54:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>4</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="841" sha1="ivaxkfxtqe4yg4se1bezb8zg1rg5k6q" xml:space="preserve">&lt;strong&gt;MediaWiki wurde installiert.&lt;/strong&gt;

Hilfe zur Verwendung und Konfiguration der Wiki-Software findest du im [https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents Benutzerhandbuch].

== Starthilfen ==

* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Configuration_settings Liste der Konfigurationsparameter]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:FAQ Häufige Fragen zu MediaWiki]
* [https://lists.wikimedia.org/postorius/lists/mediawiki-announce.lists.wikimedia.org/ Mailingliste zu neuen Versionen von MediaWiki]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Localisation#Translation_resources Übersetze MediaWiki für deine Sprache]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Combating_spam Erfahre, wie du Spam auf deinem Wiki bekämpfen kannst]
* [[Server:]]</text>
      <sha1>ivaxkfxtqe4yg4se1bezb8zg1rg5k6q</sha1>
    </revision>
    <revision>
      <id>5</id>
      <parentid>4</parentid>
      <timestamp>2025-06-13T23:55:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>5</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="851" sha1="irxb1ojz3j7ddh5o2zrfzuyvcx7edyv" xml:space="preserve">&lt;strong&gt;MediaWiki wurde installiert.&lt;/strong&gt;

Hilfe zur Verwendung und Konfiguration der Wiki-Software findest du im [https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents Benutzerhandbuch].

== Starthilfen ==

* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Configuration_settings Liste der Konfigurationsparameter]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:FAQ Häufige Fragen zu MediaWiki]
* [https://lists.wikimedia.org/postorius/lists/mediawiki-announce.lists.wikimedia.org/ Mailingliste zu neuen Versionen von MediaWiki]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Localisation#Translation_resources Übersetze MediaWiki für deine Sprache]
* [https://www.mediawiki.org/wiki/Special:MyLanguage/Manual:Combating_spam Erfahre, wie du Spam auf deinem Wiki bekämpfen kannst]
* [[Server:Hauptseite]]</text>
      <sha1>irxb1ojz3j7ddh5o2zrfzuyvcx7edyv</sha1>
    </revision>
    <revision>
      <id>6</id>
      <parentid>5</parentid>
      <timestamp>2025-06-14T03:29:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>6</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1847" sha1="fighx5r7g0jyfoqwsku12f8v4oghvdf" xml:space="preserve">__NOTOC__ 

== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, da es in der Vergangenheit zu viel Spam gab.
Wiki-Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
{{#geocode:Ahrensburg}}
== Allgemein ==
* [[Geografie]] - Informationen über die geographische Lage, das Klima und die Landschaft der Stadt
* [[Geschichte]] - Eine Übersicht über die Geschichte der Stadt und ihrer Entwicklung
* [[Kultur]] - Informationen über kulturelle Veranstaltungen, Museen, Theater und andere kulturelle Einrichtungen
* [[Bildung]] - Informationen über Schulen, Universitäten und andere Bildungseinrichtungen
* [[Wirtschaft]] - Informationen über die lokale Wirtschaft, Unternehmen und Arbeitsmöglichkeiten
* [[Verkehr]] - Informationen über öffentliche Verkehrsmittel, Straßen und Verkehrsanbindungen
* [[Freizeit]] - Informationen über Parks, Sportvereine, Freizeitaktivitäten und Erholungsgebiete
* [[Gesundheit]] - Informationen über Krankenhäuser, Ärzte und andere Gesundheitseinrichtungen
* [[Verwaltung]] - Informationen über die Stadtverwaltung, wichtige Adressen und Ansprechpartner
* [[Tourismus]] - Informationen für Touristen, Sehenswürdigkeiten, Unterkünfte und Restaurants
* [[Umwelt]] - Informationen über Umweltschutz, Naturschutzgebiete und nachhaltige Initiativen
* [[Bürgerbeteiligung]] - Informationen über Möglichkeiten zur Bürgerbeteiligung und lokale Initiativen
* [[Politik]] - Informationen über die politische Landschaft, Parteien und Wahlen
* [[Nahtlose Integration von KI und ML in Ihre Projekte]]
* [[Schwachstellenanalyse Tools]]
* [[Cloud Anbieter]]</text>
      <sha1>fighx5r7g0jyfoqwsku12f8v4oghvdf</sha1>
    </revision>
    <revision>
      <id>7</id>
      <parentid>6</parentid>
      <timestamp>2025-06-14T03:29:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>7</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1824" sha1="gvdr2amtke9e3a24tgvhytxolweibm3" xml:space="preserve">__NOTOC__ 

== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, da es in der Vergangenheit zu viel Spam gab.
Wiki-Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.

== Allgemein ==
* [[Geografie]] - Informationen über die geographische Lage, das Klima und die Landschaft der Stadt
* [[Geschichte]] - Eine Übersicht über die Geschichte der Stadt und ihrer Entwicklung
* [[Kultur]] - Informationen über kulturelle Veranstaltungen, Museen, Theater und andere kulturelle Einrichtungen
* [[Bildung]] - Informationen über Schulen, Universitäten und andere Bildungseinrichtungen
* [[Wirtschaft]] - Informationen über die lokale Wirtschaft, Unternehmen und Arbeitsmöglichkeiten
* [[Verkehr]] - Informationen über öffentliche Verkehrsmittel, Straßen und Verkehrsanbindungen
* [[Freizeit]] - Informationen über Parks, Sportvereine, Freizeitaktivitäten und Erholungsgebiete
* [[Gesundheit]] - Informationen über Krankenhäuser, Ärzte und andere Gesundheitseinrichtungen
* [[Verwaltung]] - Informationen über die Stadtverwaltung, wichtige Adressen und Ansprechpartner
* [[Tourismus]] - Informationen für Touristen, Sehenswürdigkeiten, Unterkünfte und Restaurants
* [[Umwelt]] - Informationen über Umweltschutz, Naturschutzgebiete und nachhaltige Initiativen
* [[Bürgerbeteiligung]] - Informationen über Möglichkeiten zur Bürgerbeteiligung und lokale Initiativen
* [[Politik]] - Informationen über die politische Landschaft, Parteien und Wahlen
* [[Nahtlose Integration von KI und ML in Ihre Projekte]]
* [[Schwachstellenanalyse Tools]]
* [[Cloud Anbieter]]</text>
      <sha1>gvdr2amtke9e3a24tgvhytxolweibm3</sha1>
    </revision>
    <revision>
      <id>8</id>
      <parentid>7</parentid>
      <timestamp>2025-06-14T03:29:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>8</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1823" sha1="j9twdnijlowdlickk454kxzva0sla6b" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, da es in der Vergangenheit zu viel Spam gab.
Wiki-Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.

== Allgemein ==
* [[Geografie]] - Informationen über die geographische Lage, das Klima und die Landschaft der Stadt
* [[Geschichte]] - Eine Übersicht über die Geschichte der Stadt und ihrer Entwicklung
* [[Kultur]] - Informationen über kulturelle Veranstaltungen, Museen, Theater und andere kulturelle Einrichtungen
* [[Bildung]] - Informationen über Schulen, Universitäten und andere Bildungseinrichtungen
* [[Wirtschaft]] - Informationen über die lokale Wirtschaft, Unternehmen und Arbeitsmöglichkeiten
* [[Verkehr]] - Informationen über öffentliche Verkehrsmittel, Straßen und Verkehrsanbindungen
* [[Freizeit]] - Informationen über Parks, Sportvereine, Freizeitaktivitäten und Erholungsgebiete
* [[Gesundheit]] - Informationen über Krankenhäuser, Ärzte und andere Gesundheitseinrichtungen
* [[Verwaltung]] - Informationen über die Stadtverwaltung, wichtige Adressen und Ansprechpartner
* [[Tourismus]] - Informationen für Touristen, Sehenswürdigkeiten, Unterkünfte und Restaurants
* [[Umwelt]] - Informationen über Umweltschutz, Naturschutzgebiete und nachhaltige Initiativen
* [[Bürgerbeteiligung]] - Informationen über Möglichkeiten zur Bürgerbeteiligung und lokale Initiativen
* [[Politik]] - Informationen über die politische Landschaft, Parteien und Wahlen
* [[Nahtlose Integration von KI und ML in Ihre Projekte]]
* [[Schwachstellenanalyse Tools]]
* [[Cloud Anbieter]]</text>
      <sha1>j9twdnijlowdlickk454kxzva0sla6b</sha1>
    </revision>
    <revision>
      <id>9</id>
      <parentid>8</parentid>
      <timestamp>2025-06-14T03:30:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>9</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1710" sha1="fla67fdqsevsuub4l5w9xvbdtscrjzz" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, da es in der Vergangenheit zu viel Spam gab.
Wiki-Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.

== Allgemein ==
* [[Geografie]] - Informationen über die geographische Lage, das Klima und die Landschaft der Stadt
* [[Geschichte]] - Eine Übersicht über die Geschichte der Stadt und ihrer Entwicklung
* [[Kultur]] - Informationen über kulturelle Veranstaltungen, Museen, Theater und andere kulturelle Einrichtungen
* [[Bildung]] - Informationen über Schulen, Universitäten und andere Bildungseinrichtungen
* [[Wirtschaft]] - Informationen über die lokale Wirtschaft, Unternehmen und Arbeitsmöglichkeiten
* [[Verkehr]] - Informationen über öffentliche Verkehrsmittel, Straßen und Verkehrsanbindungen
* [[Freizeit]] - Informationen über Parks, Sportvereine, Freizeitaktivitäten und Erholungsgebiete
* [[Gesundheit]] - Informationen über Krankenhäuser, Ärzte und andere Gesundheitseinrichtungen
* [[Verwaltung]] - Informationen über die Stadtverwaltung, wichtige Adressen und Ansprechpartner
* [[Tourismus]] - Informationen für Touristen, Sehenswürdigkeiten, Unterkünfte und Restaurants
* [[Umwelt]] - Informationen über Umweltschutz, Naturschutzgebiete und nachhaltige Initiativen
* [[Bürgerbeteiligung]] - Informationen über Möglichkeiten zur Bürgerbeteiligung und lokale Initiativen
* [[Politik]] - Informationen über die politische Landschaft, Parteien und Wahlen</text>
      <sha1>fla67fdqsevsuub4l5w9xvbdtscrjzz</sha1>
    </revision>
    <revision>
      <id>10</id>
      <parentid>9</parentid>
      <timestamp>2025-06-14T03:33:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>10</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1604" sha1="hsngw574t0hestbr7428pxvm0h8t6qt" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.

== Allgemeines ==
* [[Geografie]] – Informationen über die geografische Lage, das Klima und die Landschaft der Stadt
* [[Geschichte]] – Übersicht über die Geschichte der Stadt und ihre Entwicklung
* [[Kultur]] – Informationen zu kulturellen Veranstaltungen, Museen, Theatern und anderen kulturellen Einrichtungen
* [[Bildung]] – Informationen zu Schulen, Universitäten und weiteren Bildungseinrichtungen
* [[Wirtschaft]] – Informationen zur lokalen Wirtschaft, Unternehmen und Arbeitsmöglichkeiten
* [[Verkehr]] – Informationen zu öffentlichen Verkehrsmitteln, Straßen und Verkehrsanbindungen
* [[Freizeit]] – Informationen zu Parks, Sportvereinen, Freizeitaktivitäten und Erholungsgebieten
* [[Gesundheit]] – Informationen zu Krankenhäusern, Ärzten und weiteren Gesundheitseinrichtungen
* [[Verwaltung]] – Informationen zur Stadtverwaltung, wichtigen Adressen und Ansprechpartnern
* [[Tourismus]] – Informationen für Touristen, Sehenswürdigkeiten, Unterkünfte und Restaurants
* [[Umwelt]] – Informationen zu Umweltschutz, Naturschutzgebieten und nachhaltigen Initiativen
* [[Bürgerbeteiligung]] – Informationen zu Möglichkeiten der Bürgerbeteiligung und lokalen Initiativen
* [[Politik]] – Informationen zur politischen Landschaft, Parteien und Wahlen</text>
      <sha1>hsngw574t0hestbr7428pxvm0h8t6qt</sha1>
    </revision>
    <revision>
      <id>11</id>
      <parentid>10</parentid>
      <timestamp>2025-06-15T00:08:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>11</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1756" sha1="4gdmhbe2tchltkuvb03ebai89t8s1we" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.

== Allgemeines ==
* [[Geografie]] – Informationen über die geografische Lage, das Klima und die Landschaft der Stadt
* [[Geschichte]] – Übersicht über die Geschichte der Stadt und ihre Entwicklung
* [[Kultur]] – Informationen zu kulturellen Veranstaltungen, Museen, Theatern und anderen kulturellen Einrichtungen
* [[Bildung]] – Informationen zu Schulen, Universitäten und weiteren Bildungseinrichtungen
* [[Wirtschaft]] – Informationen zur lokalen Wirtschaft, Unternehmen und Arbeitsmöglichkeiten
* [[Verkehr]] – Informationen zu öffentlichen Verkehrsmitteln, Straßen und Verkehrsanbindungen
* [[Freizeit]] – Informationen zu Parks, Sportvereinen, Freizeitaktivitäten und Erholungsgebieten
* [[Gesundheit]] – Informationen zu Krankenhäusern, Ärzten und weiteren Gesundheitseinrichtungen
* [[Verwaltung]] – Informationen zur Stadtverwaltung, wichtigen Adressen und Ansprechpartnern
* [[Tourismus]] – Informationen für Touristen, Sehenswürdigkeiten, Unterkünfte und Restaurants
* [[Umwelt]] – Informationen zu Umweltschutz, Naturschutzgebieten und nachhaltigen Initiativen
* [[Bürgerbeteiligung]] – Informationen zu Möglichkeiten der Bürgerbeteiligung und lokalen Initiativen
* [[Politik]] – Informationen zur politischen Landschaft, Parteien und Wahlen



==Weitere Aufteilung==
* Veranstaltungskalender
* Nachrichten 
* Gastronomie- &amp; Einkaufsführer
* Freizeit &amp; Natur
* Kleinanzeigen
* Amtlich Anzeige</text>
      <sha1>4gdmhbe2tchltkuvb03ebai89t8s1we</sha1>
    </revision>
    <revision>
      <id>12</id>
      <parentid>11</parentid>
      <timestamp>2025-06-15T01:19:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>12</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1794" sha1="49oo2rkmtwb3vrdkkq8hejhfq3eia44" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geografie]] – Informationen über die geografische Lage, das Klima und die Landschaft der Stadt
* [[Geschichte]] – Übersicht über die Geschichte der Stadt und ihre Entwicklung
* [[Kultur]] – Informationen zu kulturellen Veranstaltungen, Museen, Theatern und anderen kulturellen Einrichtungen
* [[Bildung]] – Informationen zu Schulen, Universitäten und weiteren Bildungseinrichtungen
* [[Wirtschaft]] – Informationen zur lokalen Wirtschaft, Unternehmen und Arbeitsmöglichkeiten
* [[Verkehr]] – Informationen zu öffentlichen Verkehrsmitteln, Straßen und Verkehrsanbindungen
* [[Freizeit]] – Informationen zu Parks, Sportvereinen, Freizeitaktivitäten und Erholungsgebieten
* [[Gesundheit]] – Informationen zu Krankenhäusern, Ärzten und weiteren Gesundheitseinrichtungen
* [[Verwaltung]] – Informationen zur Stadtverwaltung, wichtigen Adressen und Ansprechpartnern
* [[Tourismus]] – Informationen für Touristen, Sehenswürdigkeiten, Unterkünfte und Restaurants
* [[Umwelt]] – Informationen zu Umweltschutz, Naturschutzgebieten und nachhaltigen Initiativen
* [[Bürgerbeteiligung]] – Informationen zu Möglichkeiten der Bürgerbeteiligung und lokalen Initiativen
* [[Politik]] – Informationen zur politischen Landschaft, Parteien und Wahlen



==Weitere Aufteilung==
* Veranstaltungskalender
* Nachrichten 
* Gastronomie- &amp; Einkaufsführer
* Freizeit &amp; Natur
* Kleinanzeigen
* Amtlich Anzeige</text>
      <sha1>49oo2rkmtwb3vrdkkq8hejhfq3eia44</sha1>
    </revision>
    <revision>
      <id>13</id>
      <parentid>12</parentid>
      <timestamp>2025-06-15T03:21:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>13</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="688" sha1="9mwe9cxocnq7ey6vcvrp0c5ckfy0mcw" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* Sehenswürdigkeiten &amp; Kultur
* Alltag &amp; Leben in Ahrensburg
* Natur &amp; Freizeit
* Infrastruktur &amp; Wirtschaft
* Personen &amp; Persönlichkeiten


==Weitere Aufteilung==
* Veranstaltungskalender
* Nachrichten 
* Gastronomie- &amp; Einkaufsführer
* Freizeit &amp; Natur
* Kleinanzeigen
* Amtlich Anzeige</text>
      <sha1>9mwe9cxocnq7ey6vcvrp0c5ckfy0mcw</sha1>
    </revision>
    <revision>
      <id>14</id>
      <parentid>13</parentid>
      <timestamp>2025-06-15T03:35:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>14</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="692" sha1="oav3t9x9pkz612bwptyzfr9fiu62ay0" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* Alltag &amp; Leben in Ahrensburg
* Natur &amp; Freizeit
* Infrastruktur &amp; Wirtschaft
* Personen &amp; Persönlichkeiten


==Weitere Aufteilung==
* Veranstaltungskalender
* Nachrichten 
* Gastronomie- &amp; Einkaufsführer
* Freizeit &amp; Natur
* Kleinanzeigen
* Amtlich Anzeige</text>
      <sha1>oav3t9x9pkz612bwptyzfr9fiu62ay0</sha1>
    </revision>
    <revision>
      <id>15</id>
      <parentid>14</parentid>
      <timestamp>2025-06-15T03:37:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Allgemeines */</comment>
      <origin>15</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="695" sha1="o42pvko2dfzut04q0rwt4okd4wkqaln" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* Natur &amp; Freizeit
* Infrastruktur &amp; Wirtschaft
* Personen &amp; Persönlichkeiten

==Weitere Aufteilung==
* Veranstaltungskalender
* Nachrichten 
* Gastronomie- &amp; Einkaufsführer
* Freizeit &amp; Natur
* Kleinanzeigen
* Amtlich Anzeige</text>
      <sha1>o42pvko2dfzut04q0rwt4okd4wkqaln</sha1>
    </revision>
    <revision>
      <id>16</id>
      <parentid>15</parentid>
      <timestamp>2025-06-15T03:43:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Allgemeines */</comment>
      <origin>16</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="699" sha1="2y8qk5tjnyz6skgkbs26c3aqn41sj9k" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* Infrastruktur &amp; Wirtschaft
* Personen &amp; Persönlichkeiten

==Weitere Aufteilung==
* Veranstaltungskalender
* Nachrichten 
* Gastronomie- &amp; Einkaufsführer
* Freizeit &amp; Natur
* Kleinanzeigen
* Amtlich Anzeige</text>
      <sha1>2y8qk5tjnyz6skgkbs26c3aqn41sj9k</sha1>
    </revision>
    <revision>
      <id>17</id>
      <parentid>16</parentid>
      <timestamp>2025-06-15T03:49:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Allgemeines */</comment>
      <origin>17</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="703" sha1="nwf3r7ybfyatodgc8yrhleh8r8mmko3" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* Personen &amp; Persönlichkeiten

==Weitere Aufteilung==
* Veranstaltungskalender
* Nachrichten 
* Gastronomie- &amp; Einkaufsführer
* Freizeit &amp; Natur
* Kleinanzeigen
* Amtlich Anzeige</text>
      <sha1>nwf3r7ybfyatodgc8yrhleh8r8mmko3</sha1>
    </revision>
    <revision>
      <id>18</id>
      <parentid>17</parentid>
      <timestamp>2025-06-15T03:54:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Allgemeines */</comment>
      <origin>18</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="707" sha1="821t5sz12haf4vpv1n9x5k55g84bswp" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]

==Weitere Aufteilung==
* Veranstaltungskalender
* Nachrichten 
* Gastronomie- &amp; Einkaufsführer
* Freizeit &amp; Natur
* Kleinanzeigen
* Amtlich Anzeige</text>
      <sha1>821t5sz12haf4vpv1n9x5k55g84bswp</sha1>
    </revision>
    <revision>
      <id>19</id>
      <parentid>18</parentid>
      <timestamp>2025-06-15T04:56:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>19</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="557" sha1="2pm9v75otslq5zdlqdrgr41s3t42r8x" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]</text>
      <sha1>2pm9v75otslq5zdlqdrgr41s3t42r8x</sha1>
    </revision>
    <revision>
      <id>20</id>
      <parentid>19</parentid>
      <timestamp>2025-06-16T05:25:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>20</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="589" sha1="kcp89kamwufr6vb3cms98q12wpc5nsz" xml:space="preserve">__NOTOC__ 
== Willkommen auf der Hauptseite ==
Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. Die Hauptseite und alle Artikel können nur von Administratoren bearbeitet werden, um Spam zu verhindern.
Inoffizielles Stadtwiki von Ahrensburg
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]


= Willkommen auf meiner Sei =</text>
      <sha1>kcp89kamwufr6vb3cms98q12wpc5nsz</sha1>
    </revision>
    <revision>
      <id>21</id>
      <parentid>20</parentid>
      <timestamp>2025-06-16T05:47:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>21</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="555" sha1="bd05xa50acllv65lxbjtu2vo6g51bpw" xml:space="preserve">__NOTOC__
== Inoffizielles Stadtwiki von Ahrensburg==
== Willkommen auf der Hauptseite ==

Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. 
Alle Artikel können jetzt von allen Benutzern bearbeitet werden.
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]


= Willkommen auf meiner Sei =</text>
      <sha1>bd05xa50acllv65lxbjtu2vo6g51bpw</sha1>
    </revision>
    <revision>
      <id>22</id>
      <parentid>21</parentid>
      <timestamp>2025-06-16T05:51:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Willkommen auf meiner Sei */</comment>
      <origin>22</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="523" sha1="qztjez3xokclcl3a5rfbdllsssgb2ps" xml:space="preserve">__NOTOC__
== Inoffizielles Stadtwiki von Ahrensburg==
== Willkommen auf der Hauptseite ==

Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. 
Alle Artikel können jetzt von allen Benutzern bearbeitet werden.
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]</text>
      <sha1>qztjez3xokclcl3a5rfbdllsssgb2ps</sha1>
    </revision>
    <revision>
      <id>23</id>
      <parentid>22</parentid>
      <timestamp>2025-06-16T06:30:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>23</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="533" sha1="1m94m67ek6kalgm9g2n5zncxcvpd5ul" xml:space="preserve">__NOTOC__
== Inoffizielles Stadtwiki von Ahrensburg==
== Willkommen auf der Hauptseite ==

Die '''Hauptseite''' ist die erste Seite, die Besucher einer Wiki-Website sehen. Sie enthält Links zu den wichtigsten Artikeln und Kategorien der Website. 
Alle Artikel können jetzt von allen Benutzern bearbeitet werden.
== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]

==Text==</text>
      <sha1>1m94m67ek6kalgm9g2n5zncxcvpd5ul</sha1>
    </revision>
    <revision>
      <id>24</id>
      <parentid>23</parentid>
      <timestamp>2025-06-16T18:25:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>24</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="888" sha1="28oxoct18dn0emdmhfhnejro191g70k" xml:space="preserve">__NOTOC__
== Inoffizielle Stadtseite von Ahrensburg – Dokumente ==
== Eine Wissensdatenbank über Ahrensburg ==
Dies ist eine private Sammlung, die jeder nutzen, herunterladen und weiterbearbeiten kann. Leider können Sie die Website nicht direkt bearbeiten, da keine Nutzerdaten gespeichert werden. In Deutschland gibt es keine gemeinfreie Sammlung, wie es sie in den USA gibt. Die Inhalte stehen jedoch unter einer freien Lizenz und können weiterverwendet werden. unten steht Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International
. Weitere Informationen finden Sie unter [[Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International]].


== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]

==Text==</text>
      <sha1>28oxoct18dn0emdmhfhnejro191g70k</sha1>
    </revision>
    <revision>
      <id>25</id>
      <parentid>24</parentid>
      <timestamp>2025-06-16T18:30:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>25</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="889" sha1="dx7cdafprwli41a1toc4aqj81e7h90j" xml:space="preserve">__NOTOC__
== Inoffizielle Stadtseite von Ahrensburg – Dokumente ==
== Eine Wissensdatenbank über Ahrensburg ==
Dies ist eine private Sammlung, die jeder nutzen, herunterladen und weiterbearbeiten kann. Leider können Sie die Website nicht direkt bearbeiten, da keine Nutzerdaten gespeichert werden. In Deutschland gibt es keine gemeinfreien Lizenzen, wie es sie in den USA gibt. Die Inhalte stehen jedoch unter einer freien Lizenz und können weiterverwendet werden. Unten steht: Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International. Weitere Informationen finden Sie unter [[Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International]].


== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]

==Text==</text>
      <sha1>dx7cdafprwli41a1toc4aqj81e7h90j</sha1>
    </revision>
    <revision>
      <id>26</id>
      <parentid>25</parentid>
      <timestamp>2025-06-16T18:36:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>26</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="935" sha1="rcncqbi58fepfunmiphx38ojwpayrfq" xml:space="preserve">__NOTOC__
== Inoffizielle Stadtseite von Ahrensburg – Dokumente ==
== Eine Wissensdatenbank über Ahrensburg ==
Dies ist eine private Sammlung, die jeder nutzen, herunterladen und weiterbearbeiten kann. Leider können Sie die Website nicht direkt bearbeiten, da keine Nutzerdaten gespeichert werden. In Deutschland gibt es keine gemeinfreien Lizenzen, wie es sie in den USA gibt. Die Inhalte stehen jedoch unter einer freien Lizenz und können weiterverwendet werden. Unten steht: Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International. Weitere Informationen finden Sie unter [https://creativecommons.org/licenses/by-sa/4.0/ Namensnennung-Weitergabe unter gleichen Bedingungen 4.0 International].


== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]

==Text==</text>
      <sha1>rcncqbi58fepfunmiphx38ojwpayrfq</sha1>
    </revision>
    <revision>
      <id>27</id>
      <parentid>26</parentid>
      <timestamp>2025-06-16T18:51:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>27</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1236" sha1="twiwlolvanvxgy046lw50cq442z57ey" xml:space="preserve">__NOTOC__
== Inoffizielle Stadtseite von Ahrensburg – Dokumente ==
Dokumentensammlung: Texte über Ahrensburg 
== Eine Wissensdatenbank über Ahrensburg ==
Dies ist eine private Sammlung, die jeder nutzen, herunterladen und weiterbearbeiten kann. Leider können Sie die Website nicht direkt bearbeiten, da keine Nutzerdaten gespeichert werden. In Deutschland gibt es keine gemeinfreien Lizenzen wie in den USA. Die Inhalte stehen jedoch unter einer freien Lizenz und können weiterverwendet werden. Unten steht: Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International. Weitere Informationen finden Sie unter [https://creativecommons.org/licenses/by-sa/4.0/ Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International].

Wenn Sie Texte im Internet veröffentlichen möchten, sollten sie umformuliert werden, da Suchmaschinen doppelte Inhalte nicht mögen. Wenn Sie ein Buch schreiben oder Texte ausdrucken möchten, müssen Sie nicht viel tun – es reicht, meine Homepage-Adresse anzugeben.


== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]</text>
      <sha1>twiwlolvanvxgy046lw50cq442z57ey</sha1>
    </revision>
    <revision>
      <id>28</id>
      <parentid>27</parentid>
      <timestamp>2025-06-16T19:40:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>28</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1217" sha1="0fclwjf6rlr4x2ugvkzmd0gkmpueugo" xml:space="preserve">__NOTOC__
== Inoffizielle Stadtseite von Ahrensburg – Dokumente ==
Dokumentensammlung: Texte über Ahrensburg 

== Eine Wissensdatenbank über Ahrensburg ==
Dies ist eine private Sammlung, die jeder nutzen, herunterladen und weiterbearbeiten kann. Leider können Sie die Website nicht direkt bearbeiten, da keine Nutzerdaten gespeichert werden. In Deutschland gibt es keine gemeinfreien Lizenzen wie in den USA. Die Inhalte stehen jedoch unter einer freien Lizenz und können weiterverwendet werden. Unten finden Sie weitere Informationen zur Lizenz „Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International“: [https://creativecommons.org/licenses/by-sa/4.0/ Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International].

Wenn Sie Texte im Internet veröffentlichen möchten, sollten diese umformuliert werden, da Suchmaschinen doppelte Inhalte nicht bevorzugen. Wenn Sie ein Buch schreiben oder Texte ausdrucken möchten, genügt es, meine Homepage-Adresse anzugeben.


== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]</text>
      <sha1>0fclwjf6rlr4x2ugvkzmd0gkmpueugo</sha1>
    </revision>
    <revision>
      <id>29</id>
      <parentid>2</parentid>
      <timestamp>2025-06-22T19:42:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>29</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1217" sha1="0fclwjf6rlr4x2ugvkzmd0gkmpueugo" xml:space="preserve">__NOTOC__
== Inoffizielle Stadtseite von Ahrensburg – Dokumente ==
Dokumentensammlung: Texte über Ahrensburg 

== Eine Wissensdatenbank über Ahrensburg ==
Dies ist eine private Sammlung, die jeder nutzen, herunterladen und weiterbearbeiten kann. Leider können Sie die Website nicht direkt bearbeiten, da keine Nutzerdaten gespeichert werden. In Deutschland gibt es keine gemeinfreien Lizenzen wie in den USA. Die Inhalte stehen jedoch unter einer freien Lizenz und können weiterverwendet werden. Unten finden Sie weitere Informationen zur Lizenz „Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International“: [https://creativecommons.org/licenses/by-sa/4.0/ Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International].

Wenn Sie Texte im Internet veröffentlichen möchten, sollten diese umformuliert werden, da Suchmaschinen doppelte Inhalte nicht bevorzugen. Wenn Sie ein Buch schreiben oder Texte ausdrucken möchten, genügt es, meine Homepage-Adresse anzugeben.


== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]</text>
      <sha1>0fclwjf6rlr4x2ugvkzmd0gkmpueugo</sha1>
    </revision>
    <revision>
      <id>326</id>
      <parentid>1</parentid>
      <timestamp>2025-06-28T01:51:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>326</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1217" sha1="0fclwjf6rlr4x2ugvkzmd0gkmpueugo" xml:space="preserve">__NOTOC__
== Inoffizielle Stadtseite von Ahrensburg – Dokumente ==
Dokumentensammlung: Texte über Ahrensburg 

== Eine Wissensdatenbank über Ahrensburg ==
Dies ist eine private Sammlung, die jeder nutzen, herunterladen und weiterbearbeiten kann. Leider können Sie die Website nicht direkt bearbeiten, da keine Nutzerdaten gespeichert werden. In Deutschland gibt es keine gemeinfreien Lizenzen wie in den USA. Die Inhalte stehen jedoch unter einer freien Lizenz und können weiterverwendet werden. Unten finden Sie weitere Informationen zur Lizenz „Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International“: [https://creativecommons.org/licenses/by-sa/4.0/ Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International].

Wenn Sie Texte im Internet veröffentlichen möchten, sollten diese umformuliert werden, da Suchmaschinen doppelte Inhalte nicht bevorzugen. Wenn Sie ein Buch schreiben oder Texte ausdrucken möchten, genügt es, meine Homepage-Adresse anzugeben.


== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]
* [[Personen &amp; Persönlichkeiten]]</text>
      <sha1>0fclwjf6rlr4x2ugvkzmd0gkmpueugo</sha1>
    </revision>
    <revision>
      <id>552</id>
      <parentid>326</parentid>
      <timestamp>2025-07-01T15:56:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>552</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1182" sha1="6cr6uiu5adt5z6vgva5roobd1dbxwtz" xml:space="preserve">__NOTOC__
== Inoffizielle Stadtseite von Ahrensburg – Dokumente ==
Dokumentensammlung: Texte über Ahrensburg 

== Eine Wissensdatenbank über Ahrensburg ==
Dies ist eine private Sammlung, die jeder nutzen, herunterladen und weiterbearbeiten kann. Leider können Sie die Website nicht direkt bearbeiten, da keine Nutzerdaten gespeichert werden. In Deutschland gibt es keine gemeinfreien Lizenzen wie in den USA. Die Inhalte stehen jedoch unter einer freien Lizenz und können weiterverwendet werden. Unten finden Sie weitere Informationen zur Lizenz „Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International“: [https://creativecommons.org/licenses/by-sa/4.0/ Namensnennung – Weitergabe unter gleichen Bedingungen 4.0 International].

Wenn Sie Texte im Internet veröffentlichen möchten, sollten diese umformuliert werden, da Suchmaschinen doppelte Inhalte nicht bevorzugen. Wenn Sie ein Buch schreiben oder Texte ausdrucken möchten, genügt es, meine Homepage-Adresse anzugeben.


== Allgemeines ==
* [[Geschichte &amp; Allgemeines]]
* [[Sehenswürdigkeiten &amp; Kultur]]
* [[Alltag &amp; Leben in Ahrensburg]]
* [[Natur &amp; Freizeit]]
* [[Infrastruktur &amp; Wirtschaft]]</text>
      <sha1>6cr6uiu5adt5z6vgva5roobd1dbxwtz</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Hauptseite</title>
    <ns>0</ns>
    <id>2</id>
    <revision>
      <id>30</id>
      <timestamp>2025-06-13T23:51:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Startseite“</comment>
      <origin>30</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10" sha1="laxtoews4xx8ub1ts0hgvtviz01bvza" xml:space="preserve">Startseite</text>
      <sha1>laxtoews4xx8ub1ts0hgvtviz01bvza</sha1>
    </revision>
    <revision>
      <id>31</id>
      <parentid>30</parentid>
      <timestamp>2025-06-13T23:55:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>31</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="19" sha1="g9acxmsdg2uvnac1msn1926pfi60eqd" xml:space="preserve">* [[Server:Mieten]]</text>
      <sha1>g9acxmsdg2uvnac1msn1926pfi60eqd</sha1>
    </revision>
    <revision>
      <id>32</id>
      <parentid>31</parentid>
      <timestamp>2025-06-14T00:48:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>32</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="45" sha1="py10d4p717i4uropnio4df6wmdrumsq" xml:space="preserve">* [[Server:Mieten]]
* [[Server:KachelServer]]</text>
      <sha1>py10d4p717i4uropnio4df6wmdrumsq</sha1>
    </revision>
    <revision>
      <id>33</id>
      <parentid>32</parentid>
      <timestamp>2025-06-14T01:00:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>33</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="79" sha1="31ad8qt4phjoy8ra52547chmryw5lbl" xml:space="preserve">* [[Server:Mieten]]
* [[Serber:Softwareinstallation]]
* [[Server:KachelServer]]</text>
      <sha1>31ad8qt4phjoy8ra52547chmryw5lbl</sha1>
    </revision>
    <revision>
      <id>34</id>
      <parentid>33</parentid>
      <timestamp>2025-06-14T01:00:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>34</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="79" sha1="6kgkt7i5n0fd7hc8j22zu3kudsrf5dt" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Softwareinstallation]]
* [[Server:KachelServer]]</text>
      <sha1>6kgkt7i5n0fd7hc8j22zu3kudsrf5dt</sha1>
    </revision>
    <revision>
      <id>35</id>
      <parentid>34</parentid>
      <timestamp>2025-06-14T01:01:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>35</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="80" sha1="c6yys9olhli5hhd621stj8xe1xsc59b" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Software Installation]]
* [[Server:KachelServer]]</text>
      <sha1>c6yys9olhli5hhd621stj8xe1xsc59b</sha1>
    </revision>
    <revision>
      <id>36</id>
      <parentid>35</parentid>
      <timestamp>2025-06-14T01:07:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>36</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="94" sha1="83wj0897euyroulpmm8pqmrbjj3tqc4" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]</text>
      <sha1>83wj0897euyroulpmm8pqmrbjj3tqc4</sha1>
    </revision>
    <revision>
      <id>37</id>
      <parentid>36</parentid>
      <timestamp>2025-06-14T03:00:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>37</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="127" sha1="sy1tkm63f9c4ohm75qa7jgzms4fjuh0" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]</text>
      <sha1>sy1tkm63f9c4ohm75qa7jgzms4fjuh0</sha1>
    </revision>
    <revision>
      <id>38</id>
      <parentid>37</parentid>
      <timestamp>2025-06-14T21:39:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>38</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="177" sha1="m96rb70kjgbsxeje9sznqbasggeqs8y" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:	TYPO3 (Tier 1)]]
* [[Server: Drupal]]</text>
      <sha1>m96rb70kjgbsxeje9sznqbasggeqs8y</sha1>
    </revision>
    <revision>
      <id>39</id>
      <parentid>38</parentid>
      <timestamp>2025-06-14T21:40:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>39</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="185" sha1="czzrg4e7hbwvraxcav6ro626h5429rf" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:	TYPO3 (Tier 1)]]
* [[Server: Drupal (Tier 1]]</text>
      <sha1>czzrg4e7hbwvraxcav6ro626h5429rf</sha1>
    </revision>
    <revision>
      <id>40</id>
      <parentid>39</parentid>
      <timestamp>2025-06-14T21:40:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>40</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="186" sha1="bkoge5c6eokzb3fwcfskn6k9htt4kjp" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:	TYPO3 (Tier 1)]]
* [[Server: Drupal (Tier 1)]]</text>
      <sha1>bkoge5c6eokzb3fwcfskn6k9htt4kjp</sha1>
    </revision>
    <revision>
      <id>41</id>
      <parentid>40</parentid>
      <timestamp>2025-06-14T21:40:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>41</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="184" sha1="tsbzn49ycl9260eq5iqii5mqffr5r6h" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:TYPO3 (Tier 1)]]
* [[Server:Drupal (Tier 1)]]</text>
      <sha1>tsbzn49ycl9260eq5iqii5mqffr5r6h</sha1>
    </revision>
    <revision>
      <id>42</id>
      <parentid>41</parentid>
      <timestamp>2025-06-14T23:59:10Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>42</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="209" sha1="kpfvd4qz80jtwom2ti83bhz0ei5f3l6" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:TYPO3 (Tier 1)]]
* [[Server:Drupal (Tier 1)]]
* [[Server:opencode.de]]</text>
      <sha1>kpfvd4qz80jtwom2ti83bhz0ei5f3l6</sha1>
    </revision>
    <revision>
      <id>43</id>
      <parentid>42</parentid>
      <timestamp>2025-06-15T01:03:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>43</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="220" sha1="azv5moyu0kpuyoyg5pwqi1gsdavco1y" xml:space="preserve">==Thema: Inoffizielles Stadtportal zum Thema Server-Software Verwalten==
* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]</text>
      <sha1>azv5moyu0kpuyoyg5pwqi1gsdavco1y</sha1>
    </revision>
    <revision>
      <id>44</id>
      <parentid>43</parentid>
      <timestamp>2025-06-15T01:11:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>44</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="212" sha1="gh135lv0a8tj7db96lne5rfeat71esg" xml:space="preserve">==Inoffizielles Stadtportal zur Verwaltung von Server-Software==
* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]</text>
      <sha1>gh135lv0a8tj7db96lne5rfeat71esg</sha1>
    </revision>
    <revision>
      <id>45</id>
      <parentid>44</parentid>
      <timestamp>2025-06-15T01:29:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>45</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="147" sha1="pcfoax9lwmbsrigsnwvnnf6cn2xhsjv" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]</text>
      <sha1>pcfoax9lwmbsrigsnwvnnf6cn2xhsjv</sha1>
    </revision>
    <revision>
      <id>46</id>
      <parentid>45</parentid>
      <timestamp>2025-06-15T01:53:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>46</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="176" sha1="lfyqtzkrtw655bha0hzbs6lt3ynheeo" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]


* Blog
* Nachrichtenportal</text>
      <sha1>lfyqtzkrtw655bha0hzbs6lt3ynheeo</sha1>
    </revision>
    <revision>
      <id>47</id>
      <parentid>46</parentid>
      <timestamp>2025-06-15T02:11:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>47</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="178" sha1="mql0r3cox64xmugk4henf233aii2206" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]


* Blog
* Nachrichtenportal
*</text>
      <sha1>mql0r3cox64xmugk4henf233aii2206</sha1>
    </revision>
    <revision>
      <id>48</id>
      <parentid>47</parentid>
      <timestamp>2025-06-15T02:37:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>48</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="257" sha1="pw404rf6yy24p6sq79daa6bez3xbwz4" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]


* Blog  - Drupal
* Nachrichtenportal - Typo3 und Drupal
* Veranstaltungskalender software und Portal
* Wiki</text>
      <sha1>pw404rf6yy24p6sq79daa6bez3xbwz4</sha1>
    </revision>
    <revision>
      <id>49</id>
      <parentid>48</parentid>
      <timestamp>2025-06-15T04:29:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>49</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="269" sha1="huhdlmd16lfyo8b9c7y8i8am65xgx95" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]


* Blog  - Drupal
* Nachrichtenportal - Typo3 und Drupal
* Veranstaltungskalender software und Portal
* Wiki - mediawiki</text>
      <sha1>huhdlmd16lfyo8b9c7y8i8am65xgx95</sha1>
    </revision>
    <revision>
      <id>50</id>
      <parentid>49</parentid>
      <timestamp>2025-06-15T05:07:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>50</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="306" sha1="3gf0xd87dbx51p19b87ur0we7o19esf" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]


* Blog  - Drupal
* Nachrichtenportal - Typo3 und Drupal
* Veranstaltungskalender software und Portal
* Wiki - mediawiki</text>
      <sha1>3gf0xd87dbx51p19b87ur0we7o19esf</sha1>
    </revision>
    <revision>
      <id>51</id>
      <parentid>50</parentid>
      <timestamp>2025-06-15T14:00:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>51</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="184" sha1="q8ebordstsohyf9ld5i2uuxx30lseld" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>q8ebordstsohyf9ld5i2uuxx30lseld</sha1>
    </revision>
    <revision>
      <id>52</id>
      <parentid>51</parentid>
      <timestamp>2025-06-16T01:06:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>52</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="224" sha1="fnq3me69vexnb4ebk77u7hq12k59gag" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

* [[Server:Mediawiki/Freigabeprozess]]</text>
      <sha1>fnq3me69vexnb4ebk77u7hq12k59gag</sha1>
    </revision>
    <revision>
      <id>53</id>
      <parentid>52</parentid>
      <timestamp>2025-06-16T02:10:32Z</timestamp>
      <contributor>
        <ip>95.90.254.18</ip>
      </contributor>
      <origin>53</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="231" sha1="7wyo0wszsgfq98czbac1ooblk2onrhs" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

* [[Server:Mediawiki/Freigabeprozess]]


gggg</text>
      <sha1>7wyo0wszsgfq98czbac1ooblk2onrhs</sha1>
    </revision>
    <revision>
      <id>54</id>
      <parentid>53</parentid>
      <timestamp>2025-06-16T03:33:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>54</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="269" sha1="lhn1jmgyv17t5t4j9luji1m0zo2m2xa" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

* [[Server:Mediawiki/Freigabeprozess]]
==Mediawiki Rechte- und Zugriffsverwaltung==</text>
      <sha1>lhn1jmgyv17t5t4j9luji1m0zo2m2xa</sha1>
    </revision>
    <revision>
      <id>55</id>
      <parentid>54</parentid>
      <timestamp>2025-06-16T09:08:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>55</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="349" sha1="b4v0n5qvl8joe25y2pctnn3mivjdq8r" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

* [[Server:Mediawiki/Freigabeprozess]]
* [[Server:Benutzerrechte änder]]
* [[Server:Namepace Benutzerrechte ändern]]
==Mediawiki Rechte- und Zugriffsverwaltung==</text>
      <sha1>b4v0n5qvl8joe25y2pctnn3mivjdq8r</sha1>
    </revision>
    <revision>
      <id>56</id>
      <parentid>55</parentid>
      <timestamp>2025-06-16T09:48:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>56</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1902" sha1="6yl859ra9y1uznb75xe0rj8qmf0aj02" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>6yl859ra9y1uznb75xe0rj8qmf0aj02</sha1>
    </revision>
    <revision>
      <id>57</id>
      <parentid>56</parentid>
      <timestamp>2025-06-16T09:56:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Nachteile */</comment>
      <origin>57</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1928" sha1="j6mczueeupevb09bvtjjqgksnjk2i5y" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
==Weiter Informationen==
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>j6mczueeupevb09bvtjjqgksnjk2i5y</sha1>
    </revision>
    <revision>
      <id>58</id>
      <parentid>57</parentid>
      <timestamp>2025-06-16T10:02:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>58</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1902" sha1="6yl859ra9y1uznb75xe0rj8qmf0aj02" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>6yl859ra9y1uznb75xe0rj8qmf0aj02</sha1>
    </revision>
    <revision>
      <id>59</id>
      <parentid>58</parentid>
      <timestamp>2025-06-17T23:32:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>59</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1921" sha1="4sqdea2e338ynj8s52pfwyuu2lqlxvw" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Nginx]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>4sqdea2e338ynj8s52pfwyuu2lqlxvw</sha1>
    </revision>
    <revision>
      <id>60</id>
      <parentid>59</parentid>
      <timestamp>2025-06-17T23:37:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>60</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1933" sha1="m4mrbk6c03y7xa325eno4q7cxtwc71l" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Nginx Einstellung]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>m4mrbk6c03y7xa325eno4q7cxtwc71l</sha1>
    </revision>
    <revision>
      <id>61</id>
      <parentid>60</parentid>
      <timestamp>2025-06-18T00:27:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>61</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1950" sha1="md3nhs9b6qsy94bfvve4vi3sropk0a2" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>md3nhs9b6qsy94bfvve4vi3sropk0a2</sha1>
    </revision>
    <revision>
      <id>62</id>
      <parentid>61</parentid>
      <timestamp>2025-06-18T08:48:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>62</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2024" sha1="3c4tl4btex1a4k7jgwclumur8rcoxc2" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>3c4tl4btex1a4k7jgwclumur8rcoxc2</sha1>
    </revision>
    <revision>
      <id>63</id>
      <parentid>62</parentid>
      <timestamp>2025-06-19T06:40:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>63</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2057" sha1="bn6izydi3rsjdtj9zv4l183y7ho3bha" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>bn6izydi3rsjdtj9zv4l183y7ho3bha</sha1>
    </revision>
    <revision>
      <id>64</id>
      <parentid>63</parentid>
      <timestamp>2025-06-19T08:06:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>64</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2188" sha1="41tq9saeh6g75nrgzyo7f8tywvm4h2h" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Visual Studio Code mit]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
==Vergleich: Drupal und Mediawiki nutzen==
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>41tq9saeh6g75nrgzyo7f8tywvm4h2h</sha1>
    </revision>
    <revision>
      <id>65</id>
      <parentid>64</parentid>
      <timestamp>2025-06-19T08:13:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>65</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2191" sha1="1b11d8570fboc6gntl148rf7zt9idaf" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
==Vergleich: Drupal und Mediawiki nutzen==
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>1b11d8570fboc6gntl148rf7zt9idaf</sha1>
    </revision>
    <revision>
      <id>66</id>
      <parentid>65</parentid>
      <timestamp>2025-06-19T08:28:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>66</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="430" sha1="fcf758jgpkfwaq8cm7cery5w00yhfe7" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>fcf758jgpkfwaq8cm7cery5w00yhfe7</sha1>
    </revision>
    <revision>
      <id>67</id>
      <parentid>66</parentid>
      <timestamp>2025-06-19T09:15:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>67</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="510" sha1="3fah6defxfjm6unyrup6xz8n5zksi6p" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>3fah6defxfjm6unyrup6xz8n5zksi6p</sha1>
    </revision>
    <revision>
      <id>68</id>
      <parentid>67</parentid>
      <timestamp>2025-06-19T21:18:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>68</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="530" sha1="0dpc0vfvg54nn4d78vky6gmnngjaqvj" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>0dpc0vfvg54nn4d78vky6gmnngjaqvj</sha1>
    </revision>
    <revision>
      <id>69</id>
      <parentid>68</parentid>
      <timestamp>2025-06-20T06:44:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>69</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="421" sha1="3zexuullu7osrvnt5tzwogt676ex36t" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]</text>
      <sha1>3zexuullu7osrvnt5tzwogt676ex36t</sha1>
    </revision>
    <revision>
      <id>70</id>
      <parentid>69</parentid>
      <timestamp>2025-06-20T07:26:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>70</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="530" sha1="0dpc0vfvg54nn4d78vky6gmnngjaqvj" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>0dpc0vfvg54nn4d78vky6gmnngjaqvj</sha1>
    </revision>
    <revision>
      <id>71</id>
      <parentid>70</parentid>
      <timestamp>2025-06-22T19:35:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>Thorsten verschob die Seite [[Ns3000:Hauptseite]] nach [[Server:Hauptseite]]</comment>
      <origin>70</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="530" sha1="0dpc0vfvg54nn4d78vky6gmnngjaqvj" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>0dpc0vfvg54nn4d78vky6gmnngjaqvj</sha1>
    </revision>
    <revision>
      <id>72</id>
      <parentid>71</parentid>
      <timestamp>2025-06-26T13:37:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>72</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="195" sha1="4rwir0b8py5qlqwsrb9imj1jbmfl0wa" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]</text>
      <sha1>4rwir0b8py5qlqwsrb9imj1jbmfl0wa</sha1>
    </revision>
    <revision>
      <id>73</id>
      <parentid>72</parentid>
      <timestamp>2025-06-26T13:56:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>73</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="231" sha1="podxxh7o6ddfvb2ecorik3g69o16u0o" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]</text>
      <sha1>podxxh7o6ddfvb2ecorik3g69o16u0o</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Ns3000:Mieten</title>
    <ns>0</ns>
    <id>3</id>
    <revision>
      <id>74</id>
      <timestamp>2025-06-13T23:56:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Webspace Mieten== Webspace ist ein wichtiger Bestandteil eines Hosting-Pakets und bezieht sich auf den Speicherplatz, den ein Hosting-Anbieter auf seinen Servern zur Verfügung stellt. Webspace wird verwendet, um Dateien, Bilder und andere Inhalte einer Website zu speichern und zu verwalten. Die Menge an Webspace, die benötigt wird, hängt von der Größe der Website und der Anzahl der Besucher ab. * [https://bero-host.de/webhosting/prepaid-webspace-m…“</comment>
      <origin>74</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8603" sha1="ra7qqzs496lgna7fs9pznsvuavwy8gu" xml:space="preserve">== Webspace Mieten==
Webspace ist ein wichtiger Bestandteil eines Hosting-Pakets und bezieht sich auf den Speicherplatz, den ein Hosting-Anbieter auf seinen Servern zur Verfügung stellt. Webspace wird verwendet, um Dateien, Bilder
und andere Inhalte einer Website zu speichern und zu verwalten. Die Menge an Webspace, die benötigt wird, hängt von der Größe der Website und der Anzahl der Besucher ab.
* [https://bero-host.de/webhosting/prepaid-webspace-mieten Bero-Host] bietet eine Vielzahl von Webspace-Paketen zu wettbewerbsfähigen Preisen an.
* [https://server.unesty.net/webspace unesty] bietet eine breite Palette von Webspace-Paketen mit hoher Leistung und Zuverlässigkeit an.
==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>ra7qqzs496lgna7fs9pznsvuavwy8gu</sha1>
    </revision>
    <revision>
      <id>75</id>
      <parentid>74</parentid>
      <timestamp>2025-06-14T00:35:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Webspace Mieten */</comment>
      <origin>75</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7912" sha1="h87lgi653cwqkzc5txo8vunxj7j3e83" xml:space="preserve">==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>h87lgi653cwqkzc5txo8vunxj7j3e83</sha1>
    </revision>
    <revision>
      <id>76</id>
      <parentid>75</parentid>
      <timestamp>2025-06-22T19:37:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>Thorsten verschob die Seite [[Ns3000:Mieten]] nach [[Server:Ns3000:Mieten]]</comment>
      <origin>75</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7912" sha1="h87lgi653cwqkzc5txo8vunxj7j3e83" xml:space="preserve">==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>h87lgi653cwqkzc5txo8vunxj7j3e83</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:KachelServer</title>
    <ns>0</ns>
    <id>4</id>
    <revision>
      <id>77</id>
      <timestamp>2025-06-14T00:49:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == Ubuntu 24.04 LTS Installation == Diese Seite beschreibt, wie man alle notwendige Software installiert, einrichtet und konfiguriert, um einen eigenen Kachelserver zu betreiben. Diese Schritt-für-Schritt-Anleitung wurde für Ubuntu Linux 24.04 (Noble Numbat) geschrieben und im April 2024 getestet.  == Softwareinstallation == Der OSM-Kachelserver-Stack ist eine Sammlung von Programmen und Bibliotheken, die zusammenarbeiten, um einen Kachelserver zu erst…“</comment>
      <origin>77</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="15995" sha1="082e3od9iw4o6la27oc4zrwg4m18hyn" xml:space="preserve">
== Ubuntu 24.04 LTS Installation ==
Diese Seite beschreibt, wie man alle notwendige Software installiert, einrichtet und konfiguriert, um einen eigenen Kachelserver zu betreiben. Diese Schritt-für-Schritt-Anleitung wurde für Ubuntu Linux 24.04 (Noble Numbat) geschrieben und im April 2024 getestet.

== Softwareinstallation ==
Der OSM-Kachelserver-Stack ist eine Sammlung von Programmen und Bibliotheken, die zusammenarbeiten, um einen Kachelserver zu erstellen. Wie so oft bei OpenStreetMap gibt es viele Wege, dieses Ziel zu erreichen, und fast alle Komponenten haben Alternativen, die verschiedene spezifische Vor- und Nachteile haben. Dieses Tutorial beschreibt die gängigste Version, die der auf den Haupt-Kachelserven von OpenStreetMap.org ähnlich ist.

Er besteht aus 5 Hauptkomponenten: mod_tile, renderd, mapnik, osm2pgsql und einer PostgreSQL/PostGIS-Datenbank. Mod_tile ist ein Apache-Modul, das zwischengespeicherte Kacheln bereitstellt und entscheidet, welche Kacheln neu gerendert werden müssen - entweder weil sie noch nicht zwischengespeichert sind oder weil sie veraltet sind. Renderd bietet ein Prioritätswarteschlangensystem für verschiedene Arten von Anfragen, um die Last von Renderanfragen zu verwalten und zu glätten. Mapnik ist die Softwarebibliothek, die das eigentliche Rendern durchführt und von renderd verwendet wird.

Dank der Arbeit der Debian- und Ubuntu-Maintainer, die neuesten Versionen dieser Pakete in Ubuntu 24.04 zu integrieren, sind diese Anweisungen etwas kürzer als einige frühere Versionen.

Diese Anweisungen wurden geschrieben und gegen einen neu installierten Ubuntu 24.04 Server getestet. Wenn Sie bereits andere Versionen einiger Software installiert haben (vielleicht haben Sie von einer früheren Version aktualisiert, oder Sie haben einige PPAs zum Laden eingerichtet), dann müssen Sie möglicherweise einige Anpassungen vornehmen.

Um diese Komponenten zu erstellen, müssen zunächst eine Vielzahl von Abhängigkeiten installiert werden.

Dieser Leitfaden geht davon aus, dass Sie alles von einem Nicht-Root-Benutzer über "sudo" ausführen. Versuchen Sie nicht, alles unten als Root zu tun; es wird nicht funktionieren.

Aktualisieren Sie zunächst Ihre Paketliste und installieren Sie die erforderlichen Pakete:

== Nutzer erstellen bei Ubuntu 24.04 LTS ==
Um einen neuen Nutzer in Ubuntu 24.04 LTS zu erstellen, können Sie die folgenden Schritte ausführen:

# Öffnen Sie ein Terminalfenster.
# Führen Sie den folgenden Befehl aus, um einen neuen Nutzer zu erstellen:

 &lt;code&gt;sudo adduser --force-badname _renderd
 sudo usermod -aG sudo _renderd
 exit&lt;/code&gt;

=== Login als neuer Nutzer ===
Der gegebene Codeblock zeigt, wie man sich als ein bestimmter Nutzer in einem Linux-System einloggt. Der Befehl &lt;code&gt;ssh&lt;/code&gt; wird verwendet, um eine sichere Shell-Sitzung zu starten.
 &lt;code&gt;ssh _renderd@localhost&lt;/code&gt;

=== System aktualisieren und upgraden ===
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades für Pakete zu aktualisieren, die installiert werden müssen, und neue Pakete, die installiert werden können.
   &lt;code&gt;sudo apt update
   sudo apt upgrade&lt;/code&gt;

== Nodjs Installation ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22&lt;/code&gt;

== Installation weitere Pakete ==
 &lt;code&gt;sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd&lt;/code&gt;
An diesem Punkt wurden einige neue Konten hinzugefügt. Sie können sie mit "tail /etc/passwd" sehen. "postgres" wird zur Verwaltung der Datenbanken verwendet, die wir zur Speicherung von Daten für das Rendering verwenden. "_renderd" wird für den Renderd-Daemon verwendet, und wir müssen sicherstellen, dass viele der unten aufgeführten Befehle als dieser Benutzer ausgeführt werden.

Jetzt müssen Sie eine PostGIS-Datenbank erstellen. Die Standardwerte verschiedener Programme gehen davon aus, dass die Datenbank "gis" heißt und wir werden in diesem Tutorial die gleiche Konvention verwenden, obwohl dies nicht notwendig ist. Beachten Sie, dass "_renderd" unten dem Benutzer entspricht, unter dem der Renderd-Daemon ausgeführt wird.
 &lt;code&gt;sudo -u postgres -i
 createuser _renderd
 createdb -E UTF8 -O _renderd gis
 psql -d gis -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d gis -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d gis -c "ALTER TABLE geometry_columns OWNER TO _renderd;" # Rechte setzen
 psql -d gis -c "ALTER TABLE spatial_ref_sys OWNER TO _renderd;" # Rechte setzen
 exit&lt;/code&gt;
(Das wird Sie aus dem Benutzer "postgres" herausbringen)

== Mapnik ==
Mapnik wurde oben installiert. Wir werden überprüfen, ob es korrekt installiert wurde, indem wir Folgendes tun:
 &lt;code&gt;python3
 &gt;&gt;&gt; import mapnik
 &gt;&gt;&gt;&lt;/code&gt;
Wenn Sie keine Fehlermeldung erhalten, ist Mapnik korrekt installiert. Drücken Sie "Ctrl-D", um Python zu verlassen.

== Konfiguration des Stylesheets ==
Jetzt, da alle notwendige Software installiert ist, müssen Sie ein Stylesheet herunterladen und konfigurieren.

Der Stil, den wir hier verwenden, ist der, der von der "Standard"-Karte auf der Website openstreetmap.org verwendet wird. Er wurde gewählt, weil er gut dokumentiert ist und überall auf der Welt funktionieren sollte (einschließlich an Orten mit nicht-lateinischen Ortsnamen). Es gibt jedoch ein paar Nachteile - es ist sehr viel ein Kompromiss, der global funktionieren soll, und es ist ziemlich kompliziert zu verstehen und zu modifizieren, falls Sie das tun müssen.

Die Heimat von "OpenStreetMap Carto" im Web ist &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/&lt;/nowiki&gt; und es hat seine eigenen Installationsanweisungen unter &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/blob/master/INSTALL.md&lt;/nowiki&gt; , obwohl wir hier alles abdecken, was getan werden muss.

Hier gehen wir davon aus, dass wir die Details des Stylesheets in einem Verzeichnis unter "src" im Home-Verzeichnis des jeweiligen Nicht-Root-Benutzerkontos speichern, das Sie verwenden; wir werden den Zugriff so ändern, dass der Benutzer "_renderd" darauf zugreifen kann.
 &lt;code&gt;mkdir ~/src
 cd ~/src
 git clone &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto&lt;/nowiki&gt;
 cd openstreetmap-carto
 git pull --all
 git switch --detach v5.9.0&lt;/code&gt;
Als nächstes installieren wir eine geeignete Version des "carto"-Compilers.
 &lt;code&gt;npm install -g carto
 carto -v&lt;/code&gt;
Das sollte mit einer Zahl antworten, die mindestens so hoch ist wie:
     &lt;code&gt;1.2.0&lt;/code&gt;
Dann konvertieren wir das Carto-Projekt in ein Format, das Mapnik verstehen kann:
 &lt;code&gt;carto project.mml &gt; mapnik.xml&lt;/code&gt;
Sie haben jetzt ein Mapnik XML-Stylesheet unter /home/IhrBenutzerkonto/src/openstreetmap-carto/mapnik.xml .

== Daten laden ==
Zunächst laden wir nur eine kleine Menge an Testdaten. Es sind andere Download-Standorte verfügbar, aber "download.geofabrik.de" bietet eine breite Palette an Optionen. In diesem Beispiel laden wir die Daten für Schlewig Holstein herunter, die derzeit etwa 32Mb groß sind.

Navigieren Sie zu &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein.html&lt;/nowiki&gt; und beachten Sie das Datum "Diese Datei wurde zuletzt geändert" (z.B. "2024-04-24T20:21:40Z"). Wir werden das später benötigen, wenn wir die Datenbank mit den nachfolgenden Änderungen der Menschen an OpenStreetMap aktualisieren wollen. Laden Sie es wie folgt herunter:
 &lt;code&gt;mkdir ~/data
 cd ~/data
 wget &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf&lt;/nowiki&gt;
 osmosis --read-pbf file=schleswig-holstein-latest.osm.pbf --bounding-box left=10.1141 right=10.3716 top=53.7136 bottom=53.6249 --write-pbf file=ahrensburg.pbf&lt;/code&gt;
 
Als nächstes müssen wir sicherstellen, dass der Benutzer "_renderd" auf das Stylesheet zugreifen kann. Um dies zu ermöglichen, benötigt er Zugriff auf den Ort, an dem Sie es heruntergeladen haben, und standardmäßig hat er keinen Zugriff auf Ihr Home-Verzeichnis. Wenn es sich in "src" unter Ihrem Benutzerkonto befindet, dann
 &lt;code&gt;chmod a+rx ~&lt;/code&gt;
wird funktionieren. Wenn Sie dies nicht tun möchten, können Sie es verschieben und die Verweise auf die Dateiorte in den nachfolgenden Befehlen ändern.

Der folgende Befehl wird die zuvor heruntergeladenen OpenStreetMap-Daten in die Datenbank einfügen. Dieser Schritt ist sehr intensiv in Bezug auf die Festplatten-I/O; der Import des gesamten Planeten kann je nach Hardware viele Stunden, Tage oder Wochen dauern. Für kleinere Extrakte ist die Importzeit entsprechend viel schneller, und Sie müssen möglicherweise mit verschiedenen -C-Werten experimentieren, um in den verfügbaren Speicher Ihres Rechners zu passen. Beachten Sie, dass der Benutzer "_renderd" für diesen Prozess verwendet wird.
 &lt;code&gt;sudo -u _renderd osm2pgsql -d gis --create --slim  -G --hstore --tag-transform-script ~/src/openstreetmap-carto/openstreetmap-carto.lua -C 2500 --number-processes 1 -S ~/src/openstreetmap-carto/openstreetmap-carto.style ~/data/ahrensburg.pbf&lt;/code&gt;

== Erstellen von Indizes ==
Seit der Version v5.3.0 müssen einige zusätzliche Indizes manuell angewendet werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f indexes.sql&lt;/code&gt;
Es sollte 16 Mal mit "CREATE INDEX" antworten.

== Datenbankfunktionen ==
In Version 5.9.0 von "OSM Carto" (veröffentlicht im Oktober 2024) müssen einige Funktionen manuell in die Datenbank geladen werden. Diese können jederzeit hinzugefügt / neu geladen werden mit:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f functions.sql&lt;/code&gt;

== Shapefile-Download ==
Obwohl die meisten Daten, die zur Erstellung der Karte verwendet werden, direkt aus der oben heruntergeladenen OpenStreetMap-Datendatei stammen, werden immer noch einige Shapefiles für Dinge wie Ländergrenzen bei niedriger Zoomstufe benötigt. Um diese herunterzuladen und zu indizieren, verwenden wir das gleiche Konto wie zuvor:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 mkdir data
 sudo chown _renderd data
 sudo -u _renderd scripts/get-external-data.py&lt;/code&gt;
Dieser Prozess beinhaltet einen erheblichen Download und kann einige Zeit in Anspruch nehmen - während er läuft, wird nicht viel auf dem Bildschirm angezeigt. Einige Daten gehen direkt in die Datenbank, und einige gehen in ein "data"-Verzeichnis unter "openstreetmap-carto". Wenn hier ein Problem auftritt, dann sind die Natural Earth Daten möglicherweise verschoben worden - schauen Sie sich dieses Problem und andere Probleme bei Natural Earth für weitere Details an. Wenn Sie den Download-Ort von Natural Earth ändern müssen, ist Ihre Kopie dieser Datei diejenige, die Sie bearbeiten sollten.

== Schriftarten ==
In der Version v5.6.0 und höher von Carto müssen Schriftarten manuell installiert werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 scripts/get-fonts.sh&lt;/code&gt;
Unser Testdatenbereich (Ahrensburg) wurde sowohl wegen seiner geringen Größe als auch wegen einiger Ortsnamen in dieser Region ausgewählt, die Namen mit nicht-lateinischen Zeichen enthalten.

== Einrichten Ihres Webservers ==

=== Konfigurieren von renderd ===
Die Konfigurationsdatei für "renderd" unter Ubuntu 24.04 ist "/etc/renderd.conf". Bearbeiten Sie diese mit einem Texteditor wie nano:
 &lt;code&gt;sudo nano /etc/renderd.conf&lt;/code&gt;
Ändern Sie die folgenden Zeilen, um sie an Ihre Umgebung anzupassen:
 &lt;code&gt;[s2o]
 URI=/hot/
 XML=/home/_renderd/src/openstreetmap-carto/mapnik.xml
 HOST=localhost
 TILESIZE=256
 MAXZOOM=20&lt;/code&gt;
Der Pfad zur XML-Datei "/home/accountname/src/openstreetmap-carto/mapnik.xml" muss auf den tatsächlichen Pfad auf Ihrem System geändert werden. Sie können auch "[s2o]" und "URI=/hot/" ändern, wenn Sie möchten. Wenn Sie mehr als einen Satz von Kacheln von einem Server rendern möchten, können Sie das tun - fügen Sie einfach einen weiteren Abschnitt wie "[s2o]" mit einem anderen Namen hinzu, der auf einen anderen Kartenstil verweist. Wenn Sie möchten, dass es sich auf eine andere Datenbank als die Standarddatenbank "gis" bezieht, können Sie das tun, aber das liegt außerhalb des Rahmens dieses Dokuments. Wenn Sie nur etwa 2Gb Speicher haben, sollten Sie auch "num_threads" auf 2 reduzieren. "URI=/hot/" wurde gewählt, damit die hier generierten Kacheln leichter anstelle der HOT-Kachel-Ebene auf OpenStreetMap.org verwendet werden können. Sie können hier etwas anderes verwenden, aber "/hot/" ist genauso gut wie alles andere.

Als dieser Leitfaden zum ersten Mal geschrieben wurde, war die von Ubuntu 24.04 bereitgestellte Version von Mapnik 3.1, und die Einstellung "plugins_dir" im Abschnitt "[mapnik]" der Datei war "/usr/lib/mapnik/3.1/input". Dieses "3.1" könnte sich in der Zukunft wieder ändern. Wenn beim Versuch, Kacheln zu rendern, ein Fehler auftritt, wie dieser:
 &lt;code&gt;An error occurred while loading the map layer 's2o': Could not create datasource for type: 'postgis' (no datasource plugin directories have been successfully registered)  encountered during parsing of layer 'landcover-low-zoom'&lt;/code&gt;
Dann schauen Sie in "/usr/lib/mapnik" und sehen Sie, welche Versionsverzeichnisse es gibt, und schauen Sie auch in "/usr/lib/mapnik/(version)/input", um sicherzustellen, dass dort eine Datei "postgis.input" existiert.

Jetzt, da wir "renderd" gesagt haben, wie es auf Kachelrendering-Anfragen reagieren soll, müssen wir dem Apache-Webserver sagen, dass er sie senden soll. Leider wurde die Konfiguration dafür aus den neuesten Versionen von mod_tile entfernt. Sie kann jedoch derzeit von hier installiert werden
 &lt;code&gt;cd /etc/apache2/conf-available/
 sudo wget &lt;nowiki&gt;https://raw.githubusercontent.com/openstreetmap/mod_tile/python-implementation/etc/apache2/renderd.conf&lt;/nowiki&gt;
 sudo a2enconf renderd
 sudo systemctl reload apache2&lt;/code&gt;

=== Reload Apache ===
 &lt;code&gt;sudo nano /usr/lib/systemd/system/renderd.service
 sudo systemctl daemon-reload
 sudo systemctl restart renderd
 sudo systemctl restart apache2&lt;/code&gt;

=== Apache Port ändern ===
 &lt;code&gt;sudo nano /etc/apache2/ports.conf&lt;/code&gt;
Ändern Sie den Port von 80 auf 8080
 &lt;code&gt;Listen 8080&lt;/code&gt;
Apache restarten
 &lt;code&gt;sudo systemctl restart apache2
 sudo apt-get install nginx
 sudo rm /etc/nginx/sites-enabled/default
 sudo systemctl stop nginx
 sudo snap install --classic certbot
 sudo ln -s /snap/bin/certbot /usr/bin/certbot
 sudo systemctl stop nginx
 sudo certbot certonly --standalone -d ahrensburg.city -d www.ahrensburg.city&lt;/code&gt;
 

== Neue Nutzer hinzufügen ==
 &lt;code&gt;sudo adduser thorsten
 sudo usermod -aG sudo thorsten
 exit&lt;/code&gt;
ssh thorsten@localhost
 &lt;code&gt;ssh thorsten@
 cd $HOME
 sudo -u postgres -i
 createuser thorsten
 createdb -E UTF8 -O thorsten thorsten
 psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO _renderd;" # Rechte setzen
 psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO _renderd;" # Rechte setzen
 psql -d thorsten -c "\password thorsten"
 exit # Ausloggen&lt;/code&gt;

=== Herunterladen der Daten ===
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf&lt;/nowiki&gt;
 osmosis --read-pbf file=schleswig-holstein-latest.osm.pbf --bounding-box left=10.1141 right=10.3716 top=53.7136 bottom=53.6249 --write-pbf file=ahrensburg.pbf
 
 osm2pgsql  -d thorsten --create  -G --hstore  ahrensburg.pbf&lt;/code&gt;</text>
      <sha1>082e3od9iw4o6la27oc4zrwg4m18hyn</sha1>
    </revision>
    <revision>
      <id>78</id>
      <parentid>77</parentid>
      <timestamp>2025-06-14T02:19:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>78</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="14963" sha1="oyix02yg6o7molp73tgirvomb6oo2l6" xml:space="preserve">
== Ubuntu 24.04 LTS Installation ==
Diese Seite beschreibt, wie man alle notwendige Software installiert, einrichtet und konfiguriert, um einen eigenen Kachelserver zu betreiben. Diese Schritt-für-Schritt-Anleitung wurde für Ubuntu Linux 24.04 (Noble Numbat) geschrieben und im April 2024 getestet.

== Softwareinstallation ==
Der OSM-Kachelserver-Stack ist eine Sammlung von Programmen und Bibliotheken, die zusammenarbeiten, um einen Kachelserver zu erstellen. Wie so oft bei OpenStreetMap gibt es viele Wege, dieses Ziel zu erreichen, und fast alle Komponenten haben Alternativen, die verschiedene spezifische Vor- und Nachteile haben. Dieses Tutorial beschreibt die gängigste Version, die der auf den Haupt-Kachelserven von OpenStreetMap.org ähnlich ist.

Er besteht aus 5 Hauptkomponenten: mod_tile, renderd, mapnik, osm2pgsql und einer PostgreSQL/PostGIS-Datenbank. Mod_tile ist ein Apache-Modul, das zwischengespeicherte Kacheln bereitstellt und entscheidet, welche Kacheln neu gerendert werden müssen - entweder weil sie noch nicht zwischengespeichert sind oder weil sie veraltet sind. Renderd bietet ein Prioritätswarteschlangensystem für verschiedene Arten von Anfragen, um die Last von Renderanfragen zu verwalten und zu glätten. Mapnik ist die Softwarebibliothek, die das eigentliche Rendern durchführt und von renderd verwendet wird.

Dank der Arbeit der Debian- und Ubuntu-Maintainer, die neuesten Versionen dieser Pakete in Ubuntu 24.04 zu integrieren, sind diese Anweisungen etwas kürzer als einige frühere Versionen.

Diese Anweisungen wurden geschrieben und gegen einen neu installierten Ubuntu 24.04 Server getestet. Wenn Sie bereits andere Versionen einiger Software installiert haben (vielleicht haben Sie von einer früheren Version aktualisiert, oder Sie haben einige PPAs zum Laden eingerichtet), dann müssen Sie möglicherweise einige Anpassungen vornehmen.

Um diese Komponenten zu erstellen, müssen zunächst eine Vielzahl von Abhängigkeiten installiert werden.

Dieser Leitfaden geht davon aus, dass Sie alles von einem Nicht-Root-Benutzer über "sudo" ausführen. Versuchen Sie nicht, alles unten als Root zu tun; es wird nicht funktionieren.

Aktualisieren Sie zunächst Ihre Paketliste und installieren Sie die erforderlichen Pakete:

== Nutzer erstellen bei Ubuntu 24.04 LTS ==
Um einen neuen Nutzer in Ubuntu 24.04 LTS zu erstellen, können Sie die folgenden Schritte ausführen:

# Öffnen Sie ein Terminalfenster.
# Führen Sie den folgenden Befehl aus, um einen neuen Nutzer zu erstellen:

 &lt;code&gt;sudo adduser --force-badname _renderd
 sudo usermod -aG sudo _renderd
 exit&lt;/code&gt;

=== Login als neuer Nutzer ===
Der gegebene Codeblock zeigt, wie man sich als ein bestimmter Nutzer in einem Linux-System einloggt. Der Befehl &lt;code&gt;ssh&lt;/code&gt; wird verwendet, um eine sichere Shell-Sitzung zu starten.
 &lt;code&gt;ssh _renderd@localhost&lt;/code&gt;
An diesem Punkt wurden einige neue Konten hinzugefügt. Sie können sie mit "tail /etc/passwd" sehen. "postgres" wird zur Verwaltung der Datenbanken verwendet, die wir zur Speicherung von Daten für das Rendering verwenden. "_renderd" wird für den Renderd-Daemon verwendet, und wir müssen sicherstellen, dass viele der unten aufgeführten Befehle als dieser Benutzer ausgeführt werden.

Jetzt müssen Sie eine PostGIS-Datenbank erstellen. Die Standardwerte verschiedener Programme gehen davon aus, dass die Datenbank "gis" heißt und wir werden in diesem Tutorial die gleiche Konvention verwenden, obwohl dies nicht notwendig ist. Beachten Sie, dass "_renderd" unten dem Benutzer entspricht, unter dem der Renderd-Daemon ausgeführt wird.
 &lt;code&gt;sudo -u postgres -i
 createuser _renderd
 createdb -E UTF8 -O _renderd gis
 psql -d gis -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d gis -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d gis -c "ALTER TABLE geometry_columns OWNER TO _renderd;" # Rechte setzen
 psql -d gis -c "ALTER TABLE spatial_ref_sys OWNER TO _renderd;" # Rechte setzen
 exit&lt;/code&gt;
(Das wird Sie aus dem Benutzer "postgres" herausbringen)

== Mapnik ==
Mapnik wurde oben installiert. Wir werden überprüfen, ob es korrekt installiert wurde, indem wir Folgendes tun:
 &lt;code&gt;python3
 &gt;&gt;&gt; import mapnik
 &gt;&gt;&gt;&lt;/code&gt;
Wenn Sie keine Fehlermeldung erhalten, ist Mapnik korrekt installiert. Drücken Sie "Ctrl-D", um Python zu verlassen.

== Konfiguration des Stylesheets ==
Jetzt, da alle notwendige Software installiert ist, müssen Sie ein Stylesheet herunterladen und konfigurieren.

Der Stil, den wir hier verwenden, ist der, der von der "Standard"-Karte auf der Website openstreetmap.org verwendet wird. Er wurde gewählt, weil er gut dokumentiert ist und überall auf der Welt funktionieren sollte (einschließlich an Orten mit nicht-lateinischen Ortsnamen). Es gibt jedoch ein paar Nachteile - es ist sehr viel ein Kompromiss, der global funktionieren soll, und es ist ziemlich kompliziert zu verstehen und zu modifizieren, falls Sie das tun müssen.

Die Heimat von "OpenStreetMap Carto" im Web ist &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/&lt;/nowiki&gt; und es hat seine eigenen Installationsanweisungen unter &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/blob/master/INSTALL.md&lt;/nowiki&gt; , obwohl wir hier alles abdecken, was getan werden muss.

Hier gehen wir davon aus, dass wir die Details des Stylesheets in einem Verzeichnis unter "src" im Home-Verzeichnis des jeweiligen Nicht-Root-Benutzerkontos speichern, das Sie verwenden; wir werden den Zugriff so ändern, dass der Benutzer "_renderd" darauf zugreifen kann.
 &lt;code&gt;mkdir ~/src
 cd ~/src
 git clone &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto&lt;/nowiki&gt;
 cd openstreetmap-carto
 git pull --all
 git switch --detach v5.9.0&lt;/code&gt;
Als nächstes installieren wir eine geeignete Version des "carto"-Compilers.
 &lt;code&gt;npm install -g carto
 carto -v&lt;/code&gt;
Das sollte mit einer Zahl antworten, die mindestens so hoch ist wie:
     &lt;code&gt;1.2.0&lt;/code&gt;
Dann konvertieren wir das Carto-Projekt in ein Format, das Mapnik verstehen kann:
 &lt;code&gt;carto project.mml &gt; mapnik.xml&lt;/code&gt;
Sie haben jetzt ein Mapnik XML-Stylesheet unter /home/IhrBenutzerkonto/src/openstreetmap-carto/mapnik.xml .

== Daten laden ==
Zunächst laden wir nur eine kleine Menge an Testdaten. Es sind andere Download-Standorte verfügbar, aber "download.geofabrik.de" bietet eine breite Palette an Optionen. In diesem Beispiel laden wir die Daten für Schlewig Holstein herunter, die derzeit etwa 32Mb groß sind.

Navigieren Sie zu &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein.html&lt;/nowiki&gt; und beachten Sie das Datum "Diese Datei wurde zuletzt geändert" (z.B. "2024-04-24T20:21:40Z"). Wir werden das später benötigen, wenn wir die Datenbank mit den nachfolgenden Änderungen der Menschen an OpenStreetMap aktualisieren wollen. Laden Sie es wie folgt herunter:
 &lt;code&gt;mkdir ~/data
 cd ~/data
 wget &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf&lt;/nowiki&gt;
 osmosis --read-pbf file=schleswig-holstein-latest.osm.pbf --bounding-box left=10.1141 right=10.3716 top=53.7136 bottom=53.6249 --write-pbf file=ahrensburg.pbf&lt;/code&gt;
 
Als nächstes müssen wir sicherstellen, dass der Benutzer "_renderd" auf das Stylesheet zugreifen kann. Um dies zu ermöglichen, benötigt er Zugriff auf den Ort, an dem Sie es heruntergeladen haben, und standardmäßig hat er keinen Zugriff auf Ihr Home-Verzeichnis. Wenn es sich in "src" unter Ihrem Benutzerkonto befindet, dann
 &lt;code&gt;chmod a+rx ~&lt;/code&gt;
wird funktionieren. Wenn Sie dies nicht tun möchten, können Sie es verschieben und die Verweise auf die Dateiorte in den nachfolgenden Befehlen ändern.

Der folgende Befehl wird die zuvor heruntergeladenen OpenStreetMap-Daten in die Datenbank einfügen. Dieser Schritt ist sehr intensiv in Bezug auf die Festplatten-I/O; der Import des gesamten Planeten kann je nach Hardware viele Stunden, Tage oder Wochen dauern. Für kleinere Extrakte ist die Importzeit entsprechend viel schneller, und Sie müssen möglicherweise mit verschiedenen -C-Werten experimentieren, um in den verfügbaren Speicher Ihres Rechners zu passen. Beachten Sie, dass der Benutzer "_renderd" für diesen Prozess verwendet wird.
 &lt;code&gt;sudo -u _renderd osm2pgsql -d gis --create --slim  -G --hstore --tag-transform-script ~/src/openstreetmap-carto/openstreetmap-carto.lua -C 2500 --number-processes 1 -S ~/src/openstreetmap-carto/openstreetmap-carto.style ~/data/ahrensburg.pbf&lt;/code&gt;

== Erstellen von Indizes ==
Seit der Version v5.3.0 müssen einige zusätzliche Indizes manuell angewendet werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f indexes.sql&lt;/code&gt;
Es sollte 16 Mal mit "CREATE INDEX" antworten.

== Datenbankfunktionen ==
In Version 5.9.0 von "OSM Carto" (veröffentlicht im Oktober 2024) müssen einige Funktionen manuell in die Datenbank geladen werden. Diese können jederzeit hinzugefügt / neu geladen werden mit:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f functions.sql&lt;/code&gt;

== Shapefile-Download ==
Obwohl die meisten Daten, die zur Erstellung der Karte verwendet werden, direkt aus der oben heruntergeladenen OpenStreetMap-Datendatei stammen, werden immer noch einige Shapefiles für Dinge wie Ländergrenzen bei niedriger Zoomstufe benötigt. Um diese herunterzuladen und zu indizieren, verwenden wir das gleiche Konto wie zuvor:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 mkdir data
 sudo chown _renderd data
 sudo -u _renderd scripts/get-external-data.py&lt;/code&gt;
Dieser Prozess beinhaltet einen erheblichen Download und kann einige Zeit in Anspruch nehmen - während er läuft, wird nicht viel auf dem Bildschirm angezeigt. Einige Daten gehen direkt in die Datenbank, und einige gehen in ein "data"-Verzeichnis unter "openstreetmap-carto". Wenn hier ein Problem auftritt, dann sind die Natural Earth Daten möglicherweise verschoben worden - schauen Sie sich dieses Problem und andere Probleme bei Natural Earth für weitere Details an. Wenn Sie den Download-Ort von Natural Earth ändern müssen, ist Ihre Kopie dieser Datei diejenige, die Sie bearbeiten sollten.

== Schriftarten ==
In der Version v5.6.0 und höher von Carto müssen Schriftarten manuell installiert werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 scripts/get-fonts.sh&lt;/code&gt;
Unser Testdatenbereich (Ahrensburg) wurde sowohl wegen seiner geringen Größe als auch wegen einiger Ortsnamen in dieser Region ausgewählt, die Namen mit nicht-lateinischen Zeichen enthalten.

== Einrichten Ihres Webservers ==

=== Konfigurieren von renderd ===
Die Konfigurationsdatei für "renderd" unter Ubuntu 24.04 ist "/etc/renderd.conf". Bearbeiten Sie diese mit einem Texteditor wie nano:
 &lt;code&gt;sudo nano /etc/renderd.conf&lt;/code&gt;
Ändern Sie die folgenden Zeilen, um sie an Ihre Umgebung anzupassen:
 &lt;code&gt;[s2o]
 URI=/hot/
 XML=/home/_renderd/src/openstreetmap-carto/mapnik.xml
 HOST=localhost
 TILESIZE=256
 MAXZOOM=20&lt;/code&gt;
Der Pfad zur XML-Datei "/home/accountname/src/openstreetmap-carto/mapnik.xml" muss auf den tatsächlichen Pfad auf Ihrem System geändert werden. Sie können auch "[s2o]" und "URI=/hot/" ändern, wenn Sie möchten. Wenn Sie mehr als einen Satz von Kacheln von einem Server rendern möchten, können Sie das tun - fügen Sie einfach einen weiteren Abschnitt wie "[s2o]" mit einem anderen Namen hinzu, der auf einen anderen Kartenstil verweist. Wenn Sie möchten, dass es sich auf eine andere Datenbank als die Standarddatenbank "gis" bezieht, können Sie das tun, aber das liegt außerhalb des Rahmens dieses Dokuments. Wenn Sie nur etwa 2Gb Speicher haben, sollten Sie auch "num_threads" auf 2 reduzieren. "URI=/hot/" wurde gewählt, damit die hier generierten Kacheln leichter anstelle der HOT-Kachel-Ebene auf OpenStreetMap.org verwendet werden können. Sie können hier etwas anderes verwenden, aber "/hot/" ist genauso gut wie alles andere.

Als dieser Leitfaden zum ersten Mal geschrieben wurde, war die von Ubuntu 24.04 bereitgestellte Version von Mapnik 3.1, und die Einstellung "plugins_dir" im Abschnitt "[mapnik]" der Datei war "/usr/lib/mapnik/3.1/input". Dieses "3.1" könnte sich in der Zukunft wieder ändern. Wenn beim Versuch, Kacheln zu rendern, ein Fehler auftritt, wie dieser:
 &lt;code&gt;An error occurred while loading the map layer 's2o': Could not create datasource for type: 'postgis' (no datasource plugin directories have been successfully registered)  encountered during parsing of layer 'landcover-low-zoom'&lt;/code&gt;
Dann schauen Sie in "/usr/lib/mapnik" und sehen Sie, welche Versionsverzeichnisse es gibt, und schauen Sie auch in "/usr/lib/mapnik/(version)/input", um sicherzustellen, dass dort eine Datei "postgis.input" existiert.

Jetzt, da wir "renderd" gesagt haben, wie es auf Kachelrendering-Anfragen reagieren soll, müssen wir dem Apache-Webserver sagen, dass er sie senden soll. Leider wurde die Konfiguration dafür aus den neuesten Versionen von mod_tile entfernt. Sie kann jedoch derzeit von hier installiert werden
 &lt;code&gt;cd /etc/apache2/conf-available/
 sudo wget &lt;nowiki&gt;https://raw.githubusercontent.com/openstreetmap/mod_tile/python-implementation/etc/apache2/renderd.conf&lt;/nowiki&gt;
 sudo a2enconf renderd
 sudo systemctl reload apache2&lt;/code&gt;

=== Reload Apache ===
 &lt;code&gt;sudo nano /usr/lib/systemd/system/renderd.service
 sudo systemctl daemon-reload
 sudo systemctl restart renderd
 sudo systemctl restart apache2&lt;/code&gt;

=== Apache Port ändern ===
 &lt;code&gt;sudo nano /etc/apache2/ports.conf&lt;/code&gt;
Ändern Sie den Port von 80 auf 8080
 &lt;code&gt;Listen 8080&lt;/code&gt;
Apache restarten
 &lt;code&gt;sudo systemctl restart apache2
 sudo apt-get install nginx
 sudo rm /etc/nginx/sites-enabled/default
 sudo systemctl stop nginx
 sudo snap install --classic certbot
 sudo ln -s /snap/bin/certbot /usr/bin/certbot
 sudo systemctl stop nginx
 sudo certbot certonly --standalone -d ahrensburg.city -d www.ahrensburg.city&lt;/code&gt;
 

== Neue Nutzer hinzufügen ==
 &lt;code&gt;sudo adduser thorsten
 sudo usermod -aG sudo thorsten
 exit&lt;/code&gt;
ssh thorsten@localhost
 &lt;code&gt;ssh thorsten@
 cd $HOME
 sudo -u postgres -i
 createuser thorsten
 createdb -E UTF8 -O thorsten thorsten
 psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO _renderd;" # Rechte setzen
 psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO _renderd;" # Rechte setzen
 psql -d thorsten -c "\password thorsten"
 exit # Ausloggen&lt;/code&gt;

=== Herunterladen der Daten ===
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf&lt;/nowiki&gt;
 osmosis --read-pbf file=schleswig-holstein-latest.osm.pbf --bounding-box left=10.1141 right=10.3716 top=53.7136 bottom=53.6249 --write-pbf file=ahrensburg.pbf
 
 osm2pgsql  -d thorsten --create  -G --hstore  ahrensburg.pbf&lt;/code&gt;</text>
      <sha1>oyix02yg6o7molp73tgirvomb6oo2l6</sha1>
    </revision>
    <revision>
      <id>79</id>
      <parentid>78</parentid>
      <timestamp>2025-06-14T03:04:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Apache Port ändern */</comment>
      <origin>79</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="14796" sha1="t3o7f0uqh9rcbpwk6hze8lcci51wn89" xml:space="preserve">
== Ubuntu 24.04 LTS Installation ==
Diese Seite beschreibt, wie man alle notwendige Software installiert, einrichtet und konfiguriert, um einen eigenen Kachelserver zu betreiben. Diese Schritt-für-Schritt-Anleitung wurde für Ubuntu Linux 24.04 (Noble Numbat) geschrieben und im April 2024 getestet.

== Softwareinstallation ==
Der OSM-Kachelserver-Stack ist eine Sammlung von Programmen und Bibliotheken, die zusammenarbeiten, um einen Kachelserver zu erstellen. Wie so oft bei OpenStreetMap gibt es viele Wege, dieses Ziel zu erreichen, und fast alle Komponenten haben Alternativen, die verschiedene spezifische Vor- und Nachteile haben. Dieses Tutorial beschreibt die gängigste Version, die der auf den Haupt-Kachelserven von OpenStreetMap.org ähnlich ist.

Er besteht aus 5 Hauptkomponenten: mod_tile, renderd, mapnik, osm2pgsql und einer PostgreSQL/PostGIS-Datenbank. Mod_tile ist ein Apache-Modul, das zwischengespeicherte Kacheln bereitstellt und entscheidet, welche Kacheln neu gerendert werden müssen - entweder weil sie noch nicht zwischengespeichert sind oder weil sie veraltet sind. Renderd bietet ein Prioritätswarteschlangensystem für verschiedene Arten von Anfragen, um die Last von Renderanfragen zu verwalten und zu glätten. Mapnik ist die Softwarebibliothek, die das eigentliche Rendern durchführt und von renderd verwendet wird.

Dank der Arbeit der Debian- und Ubuntu-Maintainer, die neuesten Versionen dieser Pakete in Ubuntu 24.04 zu integrieren, sind diese Anweisungen etwas kürzer als einige frühere Versionen.

Diese Anweisungen wurden geschrieben und gegen einen neu installierten Ubuntu 24.04 Server getestet. Wenn Sie bereits andere Versionen einiger Software installiert haben (vielleicht haben Sie von einer früheren Version aktualisiert, oder Sie haben einige PPAs zum Laden eingerichtet), dann müssen Sie möglicherweise einige Anpassungen vornehmen.

Um diese Komponenten zu erstellen, müssen zunächst eine Vielzahl von Abhängigkeiten installiert werden.

Dieser Leitfaden geht davon aus, dass Sie alles von einem Nicht-Root-Benutzer über "sudo" ausführen. Versuchen Sie nicht, alles unten als Root zu tun; es wird nicht funktionieren.

Aktualisieren Sie zunächst Ihre Paketliste und installieren Sie die erforderlichen Pakete:

== Nutzer erstellen bei Ubuntu 24.04 LTS ==
Um einen neuen Nutzer in Ubuntu 24.04 LTS zu erstellen, können Sie die folgenden Schritte ausführen:

# Öffnen Sie ein Terminalfenster.
# Führen Sie den folgenden Befehl aus, um einen neuen Nutzer zu erstellen:

 &lt;code&gt;sudo adduser --force-badname _renderd
 sudo usermod -aG sudo _renderd
 exit&lt;/code&gt;

=== Login als neuer Nutzer ===
Der gegebene Codeblock zeigt, wie man sich als ein bestimmter Nutzer in einem Linux-System einloggt. Der Befehl &lt;code&gt;ssh&lt;/code&gt; wird verwendet, um eine sichere Shell-Sitzung zu starten.
 &lt;code&gt;ssh _renderd@localhost&lt;/code&gt;
An diesem Punkt wurden einige neue Konten hinzugefügt. Sie können sie mit "tail /etc/passwd" sehen. "postgres" wird zur Verwaltung der Datenbanken verwendet, die wir zur Speicherung von Daten für das Rendering verwenden. "_renderd" wird für den Renderd-Daemon verwendet, und wir müssen sicherstellen, dass viele der unten aufgeführten Befehle als dieser Benutzer ausgeführt werden.

Jetzt müssen Sie eine PostGIS-Datenbank erstellen. Die Standardwerte verschiedener Programme gehen davon aus, dass die Datenbank "gis" heißt und wir werden in diesem Tutorial die gleiche Konvention verwenden, obwohl dies nicht notwendig ist. Beachten Sie, dass "_renderd" unten dem Benutzer entspricht, unter dem der Renderd-Daemon ausgeführt wird.
 &lt;code&gt;sudo -u postgres -i
 createuser _renderd
 createdb -E UTF8 -O _renderd gis
 psql -d gis -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d gis -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d gis -c "ALTER TABLE geometry_columns OWNER TO _renderd;" # Rechte setzen
 psql -d gis -c "ALTER TABLE spatial_ref_sys OWNER TO _renderd;" # Rechte setzen
 exit&lt;/code&gt;
(Das wird Sie aus dem Benutzer "postgres" herausbringen)

== Mapnik ==
Mapnik wurde oben installiert. Wir werden überprüfen, ob es korrekt installiert wurde, indem wir Folgendes tun:
 &lt;code&gt;python3
 &gt;&gt;&gt; import mapnik
 &gt;&gt;&gt;&lt;/code&gt;
Wenn Sie keine Fehlermeldung erhalten, ist Mapnik korrekt installiert. Drücken Sie "Ctrl-D", um Python zu verlassen.

== Konfiguration des Stylesheets ==
Jetzt, da alle notwendige Software installiert ist, müssen Sie ein Stylesheet herunterladen und konfigurieren.

Der Stil, den wir hier verwenden, ist der, der von der "Standard"-Karte auf der Website openstreetmap.org verwendet wird. Er wurde gewählt, weil er gut dokumentiert ist und überall auf der Welt funktionieren sollte (einschließlich an Orten mit nicht-lateinischen Ortsnamen). Es gibt jedoch ein paar Nachteile - es ist sehr viel ein Kompromiss, der global funktionieren soll, und es ist ziemlich kompliziert zu verstehen und zu modifizieren, falls Sie das tun müssen.

Die Heimat von "OpenStreetMap Carto" im Web ist &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/&lt;/nowiki&gt; und es hat seine eigenen Installationsanweisungen unter &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/blob/master/INSTALL.md&lt;/nowiki&gt; , obwohl wir hier alles abdecken, was getan werden muss.

Hier gehen wir davon aus, dass wir die Details des Stylesheets in einem Verzeichnis unter "src" im Home-Verzeichnis des jeweiligen Nicht-Root-Benutzerkontos speichern, das Sie verwenden; wir werden den Zugriff so ändern, dass der Benutzer "_renderd" darauf zugreifen kann.
 &lt;code&gt;mkdir ~/src
 cd ~/src
 git clone &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto&lt;/nowiki&gt;
 cd openstreetmap-carto
 git pull --all
 git switch --detach v5.9.0&lt;/code&gt;
Als nächstes installieren wir eine geeignete Version des "carto"-Compilers.
 &lt;code&gt;npm install -g carto
 carto -v&lt;/code&gt;
Das sollte mit einer Zahl antworten, die mindestens so hoch ist wie:
     &lt;code&gt;1.2.0&lt;/code&gt;
Dann konvertieren wir das Carto-Projekt in ein Format, das Mapnik verstehen kann:
 &lt;code&gt;carto project.mml &gt; mapnik.xml&lt;/code&gt;
Sie haben jetzt ein Mapnik XML-Stylesheet unter /home/IhrBenutzerkonto/src/openstreetmap-carto/mapnik.xml .

== Daten laden ==
Zunächst laden wir nur eine kleine Menge an Testdaten. Es sind andere Download-Standorte verfügbar, aber "download.geofabrik.de" bietet eine breite Palette an Optionen. In diesem Beispiel laden wir die Daten für Schlewig Holstein herunter, die derzeit etwa 32Mb groß sind.

Navigieren Sie zu &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein.html&lt;/nowiki&gt; und beachten Sie das Datum "Diese Datei wurde zuletzt geändert" (z.B. "2024-04-24T20:21:40Z"). Wir werden das später benötigen, wenn wir die Datenbank mit den nachfolgenden Änderungen der Menschen an OpenStreetMap aktualisieren wollen. Laden Sie es wie folgt herunter:
 &lt;code&gt;mkdir ~/data
 cd ~/data
 wget &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf&lt;/nowiki&gt;
 osmosis --read-pbf file=schleswig-holstein-latest.osm.pbf --bounding-box left=10.1141 right=10.3716 top=53.7136 bottom=53.6249 --write-pbf file=ahrensburg.pbf&lt;/code&gt;
 
Als nächstes müssen wir sicherstellen, dass der Benutzer "_renderd" auf das Stylesheet zugreifen kann. Um dies zu ermöglichen, benötigt er Zugriff auf den Ort, an dem Sie es heruntergeladen haben, und standardmäßig hat er keinen Zugriff auf Ihr Home-Verzeichnis. Wenn es sich in "src" unter Ihrem Benutzerkonto befindet, dann
 &lt;code&gt;chmod a+rx ~&lt;/code&gt;
wird funktionieren. Wenn Sie dies nicht tun möchten, können Sie es verschieben und die Verweise auf die Dateiorte in den nachfolgenden Befehlen ändern.

Der folgende Befehl wird die zuvor heruntergeladenen OpenStreetMap-Daten in die Datenbank einfügen. Dieser Schritt ist sehr intensiv in Bezug auf die Festplatten-I/O; der Import des gesamten Planeten kann je nach Hardware viele Stunden, Tage oder Wochen dauern. Für kleinere Extrakte ist die Importzeit entsprechend viel schneller, und Sie müssen möglicherweise mit verschiedenen -C-Werten experimentieren, um in den verfügbaren Speicher Ihres Rechners zu passen. Beachten Sie, dass der Benutzer "_renderd" für diesen Prozess verwendet wird.
 &lt;code&gt;sudo -u _renderd osm2pgsql -d gis --create --slim  -G --hstore --tag-transform-script ~/src/openstreetmap-carto/openstreetmap-carto.lua -C 2500 --number-processes 1 -S ~/src/openstreetmap-carto/openstreetmap-carto.style ~/data/ahrensburg.pbf&lt;/code&gt;

== Erstellen von Indizes ==
Seit der Version v5.3.0 müssen einige zusätzliche Indizes manuell angewendet werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f indexes.sql&lt;/code&gt;
Es sollte 16 Mal mit "CREATE INDEX" antworten.

== Datenbankfunktionen ==
In Version 5.9.0 von "OSM Carto" (veröffentlicht im Oktober 2024) müssen einige Funktionen manuell in die Datenbank geladen werden. Diese können jederzeit hinzugefügt / neu geladen werden mit:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f functions.sql&lt;/code&gt;

== Shapefile-Download ==
Obwohl die meisten Daten, die zur Erstellung der Karte verwendet werden, direkt aus der oben heruntergeladenen OpenStreetMap-Datendatei stammen, werden immer noch einige Shapefiles für Dinge wie Ländergrenzen bei niedriger Zoomstufe benötigt. Um diese herunterzuladen und zu indizieren, verwenden wir das gleiche Konto wie zuvor:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 mkdir data
 sudo chown _renderd data
 sudo -u _renderd scripts/get-external-data.py&lt;/code&gt;
Dieser Prozess beinhaltet einen erheblichen Download und kann einige Zeit in Anspruch nehmen - während er läuft, wird nicht viel auf dem Bildschirm angezeigt. Einige Daten gehen direkt in die Datenbank, und einige gehen in ein "data"-Verzeichnis unter "openstreetmap-carto". Wenn hier ein Problem auftritt, dann sind die Natural Earth Daten möglicherweise verschoben worden - schauen Sie sich dieses Problem und andere Probleme bei Natural Earth für weitere Details an. Wenn Sie den Download-Ort von Natural Earth ändern müssen, ist Ihre Kopie dieser Datei diejenige, die Sie bearbeiten sollten.

== Schriftarten ==
In der Version v5.6.0 und höher von Carto müssen Schriftarten manuell installiert werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 scripts/get-fonts.sh&lt;/code&gt;
Unser Testdatenbereich (Ahrensburg) wurde sowohl wegen seiner geringen Größe als auch wegen einiger Ortsnamen in dieser Region ausgewählt, die Namen mit nicht-lateinischen Zeichen enthalten.

== Einrichten Ihres Webservers ==

=== Konfigurieren von renderd ===
Die Konfigurationsdatei für "renderd" unter Ubuntu 24.04 ist "/etc/renderd.conf". Bearbeiten Sie diese mit einem Texteditor wie nano:
 &lt;code&gt;sudo nano /etc/renderd.conf&lt;/code&gt;
Ändern Sie die folgenden Zeilen, um sie an Ihre Umgebung anzupassen:
 &lt;code&gt;[s2o]
 URI=/hot/
 XML=/home/_renderd/src/openstreetmap-carto/mapnik.xml
 HOST=localhost
 TILESIZE=256
 MAXZOOM=20&lt;/code&gt;
Der Pfad zur XML-Datei "/home/accountname/src/openstreetmap-carto/mapnik.xml" muss auf den tatsächlichen Pfad auf Ihrem System geändert werden. Sie können auch "[s2o]" und "URI=/hot/" ändern, wenn Sie möchten. Wenn Sie mehr als einen Satz von Kacheln von einem Server rendern möchten, können Sie das tun - fügen Sie einfach einen weiteren Abschnitt wie "[s2o]" mit einem anderen Namen hinzu, der auf einen anderen Kartenstil verweist. Wenn Sie möchten, dass es sich auf eine andere Datenbank als die Standarddatenbank "gis" bezieht, können Sie das tun, aber das liegt außerhalb des Rahmens dieses Dokuments. Wenn Sie nur etwa 2Gb Speicher haben, sollten Sie auch "num_threads" auf 2 reduzieren. "URI=/hot/" wurde gewählt, damit die hier generierten Kacheln leichter anstelle der HOT-Kachel-Ebene auf OpenStreetMap.org verwendet werden können. Sie können hier etwas anderes verwenden, aber "/hot/" ist genauso gut wie alles andere.

Als dieser Leitfaden zum ersten Mal geschrieben wurde, war die von Ubuntu 24.04 bereitgestellte Version von Mapnik 3.1, und die Einstellung "plugins_dir" im Abschnitt "[mapnik]" der Datei war "/usr/lib/mapnik/3.1/input". Dieses "3.1" könnte sich in der Zukunft wieder ändern. Wenn beim Versuch, Kacheln zu rendern, ein Fehler auftritt, wie dieser:
 &lt;code&gt;An error occurred while loading the map layer 's2o': Could not create datasource for type: 'postgis' (no datasource plugin directories have been successfully registered)  encountered during parsing of layer 'landcover-low-zoom'&lt;/code&gt;
Dann schauen Sie in "/usr/lib/mapnik" und sehen Sie, welche Versionsverzeichnisse es gibt, und schauen Sie auch in "/usr/lib/mapnik/(version)/input", um sicherzustellen, dass dort eine Datei "postgis.input" existiert.

Jetzt, da wir "renderd" gesagt haben, wie es auf Kachelrendering-Anfragen reagieren soll, müssen wir dem Apache-Webserver sagen, dass er sie senden soll. Leider wurde die Konfiguration dafür aus den neuesten Versionen von mod_tile entfernt. Sie kann jedoch derzeit von hier installiert werden
 &lt;code&gt;cd /etc/apache2/conf-available/
 sudo wget &lt;nowiki&gt;https://raw.githubusercontent.com/openstreetmap/mod_tile/python-implementation/etc/apache2/renderd.conf&lt;/nowiki&gt;
 sudo a2enconf renderd
 sudo systemctl reload apache2&lt;/code&gt;

=== Reload Apache ===
 &lt;code&gt;sudo nano /usr/lib/systemd/system/renderd.service
 sudo systemctl daemon-reload
 sudo systemctl restart renderd
 sudo systemctl restart apache2&lt;/code&gt;

=== Apache Port ändern ===

 sudo apt-get install nginx
 sudo rm /etc/nginx/sites-enabled/default
 sudo systemctl stop nginx
 sudo snap install --classic certbot
 sudo ln -s /snap/bin/certbot /usr/bin/certbot
 sudo systemctl stop nginx
 sudo certbot certonly --standalone -d ahrensburg.city -d www.ahrensburg.city&lt;/code&gt;

== Neue Nutzer hinzufügen ==
 &lt;code&gt;sudo adduser thorsten
 sudo usermod -aG sudo thorsten
 exit&lt;/code&gt;
ssh thorsten@localhost
 &lt;code&gt;ssh thorsten@
 cd $HOME
 sudo -u postgres -i
 createuser thorsten
 createdb -E UTF8 -O thorsten thorsten
 psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO _renderd;" # Rechte setzen
 psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO _renderd;" # Rechte setzen
 psql -d thorsten -c "\password thorsten"
 exit # Ausloggen&lt;/code&gt;

=== Herunterladen der Daten ===
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf&lt;/nowiki&gt;
 osmosis --read-pbf file=schleswig-holstein-latest.osm.pbf --bounding-box left=10.1141 right=10.3716 top=53.7136 bottom=53.6249 --write-pbf file=ahrensburg.pbf
 
 osm2pgsql  -d thorsten --create  -G --hstore  ahrensburg.pbf&lt;/code&gt;</text>
      <sha1>t3o7f0uqh9rcbpwk6hze8lcci51wn89</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Software Installation</title>
    <ns>0</ns>
    <id>5</id>
    <revision>
      <id>80</id>
      <timestamp>2025-06-14T01:03:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „=== System aktualisieren und upgraden === Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:  # '''System aktualisieren'''  Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades für Pakete zu aktualisieren, die installiert werden müssen, und neue Pakete, die installiert werden können.    &lt;code&gt;sudo apt update    sudo apt upgrade&lt;/code&gt;“</comment>
      <origin>80</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="424" sha1="bn8wp5nrygxt7xo8fmol98vsjius3n1" xml:space="preserve">=== System aktualisieren und upgraden ===
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades für Pakete zu aktualisieren, die installiert werden müssen, und neue Pakete, die installiert werden können.
   &lt;code&gt;sudo apt update
   sudo apt upgrade&lt;/code&gt;</text>
      <sha1>bn8wp5nrygxt7xo8fmol98vsjius3n1</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Ubuntu Software Pakete Installieren</title>
    <ns>0</ns>
    <id>6</id>
    <revision>
      <id>81</id>
      <timestamp>2025-06-14T01:13:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „=== System aktualisieren und upgraden === Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:  # '''System aktualisieren'''  Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades für Pakete zu aktualisieren, die installiert werden müssen, und neue Pakete, die installiert werden können.    &lt;code&gt;sudo apt update    sudo apt upgrade&lt;/code&gt;“</comment>
      <origin>81</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="424" sha1="bn8wp5nrygxt7xo8fmol98vsjius3n1" xml:space="preserve">=== System aktualisieren und upgraden ===
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades für Pakete zu aktualisieren, die installiert werden müssen, und neue Pakete, die installiert werden können.
   &lt;code&gt;sudo apt update
   sudo apt upgrade&lt;/code&gt;</text>
      <sha1>bn8wp5nrygxt7xo8fmol98vsjius3n1</sha1>
    </revision>
    <revision>
      <id>82</id>
      <parentid>81</parentid>
      <timestamp>2025-06-14T01:14:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>82</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="683" sha1="7oabqv870ka5v5rojrbdur1gvoywyrb" xml:space="preserve">=== System aktualisieren und upgraden ===
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades für Pakete zu aktualisieren, die installiert werden müssen, und neue Pakete, die installiert werden können.
   &lt;code&gt;sudo apt update
   sudo apt upgrade&lt;/code&gt;


== Nodjs Installation ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22&lt;/code&gt;</text>
      <sha1>7oabqv870ka5v5rojrbdur1gvoywyrb</sha1>
    </revision>
    <revision>
      <id>83</id>
      <parentid>82</parentid>
      <timestamp>2025-06-14T01:17:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>83</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1029" sha1="5q3tud0idzkvdp8ipbg2fjzmrvchabe" xml:space="preserve">=== System aktualisieren und upgraden ===
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades für Pakete zu aktualisieren, die installiert werden müssen, und neue Pakete, die installiert werden können.
   &lt;code&gt;sudo apt update
   sudo apt upgrade&lt;/code&gt;

== Installation weitere Pakete ==
&lt;code&gt;sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd
&lt;/code&gt;
== Nodjs Installation ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22&lt;/code&gt;</text>
      <sha1>5q3tud0idzkvdp8ipbg2fjzmrvchabe</sha1>
    </revision>
    <revision>
      <id>84</id>
      <parentid>83</parentid>
      <timestamp>2025-06-14T02:03:11Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>84</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1632" sha1="a6nofymcl88xexg45bv83xdqw4w79wd" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;code&gt;
sudo apt update
sudo apt upgrade
&lt;/code&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;code&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd
&lt;/code&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;code&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/code&gt;

== .NET installieren ==
&lt;code&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/code&gt;

== Java installieren ==
&lt;code&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/code&gt;

== Python installieren ==
&lt;code&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/code&gt;
== PHP Installieren==
&lt;code&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/code&gt;</text>
      <sha1>a6nofymcl88xexg45bv83xdqw4w79wd</sha1>
    </revision>
    <revision>
      <id>85</id>
      <parentid>84</parentid>
      <timestamp>2025-06-14T02:07:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>85</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1617" sha1="g25u6sa0goq5vdf49jz95pbx1veoccr" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>g25u6sa0goq5vdf49jz95pbx1veoccr</sha1>
    </revision>
    <revision>
      <id>86</id>
      <parentid>85</parentid>
      <timestamp>2025-06-14T02:08:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* System aktualisieren und upgraden */</comment>
      <origin>86</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1618" sha1="aeujlyuq04y709uzxtv1thh7cn3g9kd" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>aeujlyuq04y709uzxtv1thh7cn3g9kd</sha1>
    </revision>
    <revision>
      <id>87</id>
      <parentid>86</parentid>
      <timestamp>2025-06-14T02:44:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* PHP Installieren */</comment>
      <origin>87</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1644" sha1="k2h5199yiwossova52ddo0ojpyt2dqh" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==</text>
      <sha1>k2h5199yiwossova52ddo0ojpyt2dqh</sha1>
    </revision>
    <revision>
      <id>88</id>
      <parentid>87</parentid>
      <timestamp>2025-06-14T02:49:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Composer Installieren */</comment>
      <origin>88</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2119" sha1="7fd9gi8q4di1n7oy37vilfyy5ewalkd" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>7fd9gi8q4di1n7oy37vilfyy5ewalkd</sha1>
    </revision>
    <revision>
      <id>89</id>
      <parentid>88</parentid>
      <timestamp>2025-06-14T03:05:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Weitere Pakete installieren */</comment>
      <origin>89</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2125" sha1="dyv1p3dlwgtrfwjtc0enzwttom7s52s" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>dyv1p3dlwgtrfwjtc0enzwttom7s52s</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Apache Port ändern</title>
    <ns>0</ns>
    <id>7</id>
    <revision>
      <id>90</id>
      <timestamp>2025-06-14T03:02:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „&lt;code&gt;sudo nano /etc/apache2/ports.conf&lt;/code&gt; Ändern Sie den Port von 80 auf 8080  &lt;code&gt;Listen 8080&lt;/code&gt; Apache restarten  &lt;code&gt;sudo systemctl restart apache2“</comment>
      <origin>90</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="164" sha1="gr15p2kx141yv2lfpir3ww6jvq5etiv" xml:space="preserve">&lt;code&gt;sudo nano /etc/apache2/ports.conf&lt;/code&gt;
Ändern Sie den Port von 80 auf 8080
 &lt;code&gt;Listen 8080&lt;/code&gt;
Apache restarten
 &lt;code&gt;sudo systemctl restart apache2</text>
      <sha1>gr15p2kx141yv2lfpir3ww6jvq5etiv</sha1>
    </revision>
  </page>
  <page>
    <title>Geschichte &amp; Allgemeines</title>
    <ns>0</ns>
    <id>8</id>
    <revision>
      <id>91</id>
      <timestamp>2025-06-15T03:23:24Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Geschichte der Stadt Ahrensburg“</comment>
      <origin>91</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="33" sha1="hxxwy5ufuwbm4tfidahgfkv16svvn1f" xml:space="preserve">* Geschichte der Stadt Ahrensburg</text>
      <sha1>hxxwy5ufuwbm4tfidahgfkv16svvn1f</sha1>
    </revision>
    <revision>
      <id>92</id>
      <parentid>91</parentid>
      <timestamp>2025-06-15T03:23:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>92</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="37" sha1="r3bpvdn9l6gcjty7h6zf4xc0bivbwwd" xml:space="preserve">* [[Geschichte der Stadt Ahrensburg]]</text>
      <sha1>r3bpvdn9l6gcjty7h6zf4xc0bivbwwd</sha1>
    </revision>
    <revision>
      <id>93</id>
      <parentid>92</parentid>
      <timestamp>2025-06-15T03:27:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>93</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="53" sha1="lbc101g0haoq65yxhzub4lym0pj17xk" xml:space="preserve">* [[Geschichte der Stadt Ahrensburg]]
* [[Geografie]]</text>
      <sha1>lbc101g0haoq65yxhzub4lym0pj17xk</sha1>
    </revision>
    <revision>
      <id>94</id>
      <parentid>93</parentid>
      <timestamp>2025-06-19T19:14:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>94</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="264" sha1="8sa5w99m3cbamqbhue0jmf9nma5oeat" xml:space="preserve">'''Ahrensburg''' ist eine Stadt im Kreis Stormarn in Schleswig-Holstein, Deutschland. Sie liegt nordöstlich von Hamburg und ist bekannt für ihr Schloss sowie ihre gute Anbindung an die Metropolregion Hamburg.
* [[Geschichte der Stadt Ahrensburg]]
* [[Geografie]]</text>
      <sha1>8sa5w99m3cbamqbhue0jmf9nma5oeat</sha1>
    </revision>
  </page>
  <page>
    <title>Geschichte der Stadt Ahrensburg</title>
    <ns>0</ns>
    <id>9</id>
    <revision>
      <id>95</id>
      <timestamp>2025-06-15T03:26:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ === Vorgeschichte === Das Ahrensburger Tunneltal ist ein eiszeitliches Trockental, das sich von Ahrensburg bis nach Großhansdorf erstreckt. Es entstand während der letzten Eiszeit, der Weichsel-Eiszeit, vor etwa 20.000 Jahren. Das Trockental ist etwa 10 Kilometer lang und bis zu 500 Meter breit. Es ist ein Zeugnis der letzten Eiszeit und ein wichtiges Naturdenkmal. Die Rentierjäger waren Menschen, die in der letzten Eiszeit in Europa lebten. Sie zogen…“</comment>
      <origin>95</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2353" sha1="enfgla2ekf1x0j6whndx6vit19dd95c" xml:space="preserve">
=== Vorgeschichte ===
Das Ahrensburger Tunneltal ist ein eiszeitliches Trockental, das sich von Ahrensburg bis nach Großhansdorf erstreckt. Es entstand während der letzten Eiszeit, der Weichsel-Eiszeit, vor etwa 20.000 Jahren. Das Trockental ist etwa 10 Kilometer lang und bis zu 500 Meter breit. Es ist ein Zeugnis der letzten Eiszeit und ein wichtiges Naturdenkmal. Die Rentierjäger waren Menschen, die in der letzten Eiszeit in Europa lebten. Sie zogen in kleinen Gruppen durch die Landschaft und lebten von der Jagd auf Rentiere und andere Tiere. Die Rentierjäger waren die ersten Menschen, die in das Ahrensburger Tunneltal kamen. Sie lebten vor etwa 12.000 Jahren in der Region und hinterließen zahlreiche Funde von Steinwerkzeugen und Knochen.

=== Mittelalter ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Woldenhorn.

=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>enfgla2ekf1x0j6whndx6vit19dd95c</sha1>
    </revision>
    <revision>
      <id>96</id>
      <parentid>95</parentid>
      <timestamp>2025-06-16T20:29:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>96</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2551" sha1="fnzdk5jqf3zww5fypp2vwutcbtrxdr1" xml:space="preserve">=== Vorgeschichte ===
Während der Eiszeit entstanden Dänemark und Schleswig-Holstein. Gletscher aus Skandinavien brachten Sand und Geröll mit sich. Die meisten Gletscher formten Schleifspuren und geschliffene Steine. 
Das Ahrensburger Tunneltal ist ein eiszeitliches Trockental, das sich von Ahrensburg bis nach Großhansdorf erstreckt. Es entstand während der letzten Eiszeit, der Weichsel-Eiszeit, vor etwa 20.000 Jahren. Das Trockental ist etwa 10 Kilometer lang und bis zu 500 Meter breit. Es ist ein Zeugnis der letzten Eiszeit und ein wichtiges Naturdenkmal. Die Rentierjäger waren Menschen, die in der letzten Eiszeit in Europa lebten. Sie zogen in kleinen Gruppen durch die Landschaft und lebten von der Jagd auf Rentiere und andere Tiere. Die Rentierjäger waren die ersten Menschen, die in das Ahrensburger Tunneltal kamen. Sie lebten vor etwa 12.000 Jahren in der Region und hinterließen zahlreiche Funde von Steinwerkzeugen und Knochen.

=== Mittelalter ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Woldenhorn.

=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>fnzdk5jqf3zww5fypp2vwutcbtrxdr1</sha1>
    </revision>
    <revision>
      <id>97</id>
      <parentid>96</parentid>
      <timestamp>2025-06-16T20:40:24Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>97</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2669" sha1="lgz7ok6g1xzj96gs1kvwbojpa933bh2" xml:space="preserve">=== Vorgeschichte ===
Während der Eiszeit entstanden Dänemark und Schleswig-Holstein. Gletscher aus Skandinavien brachten Sand und Geröll mit sich. Die meisten Gletscher hinterließen Schleifspuren und geschliffene Steine. 
Das Ahrensburger Tunneltal ist ein eiszeitliches Trockental, das sich von Ahrensburg bis nach Großhansdorf erstreckt. Es entstand während der letzten Eiszeit, der Weichsel-Eiszeit, vor etwa 20.000 Jahren. Das Trockental ist etwa 10 Kilometer lang und bis zu 500 Meter breit. Es ist ein Zeugnis der letzten Eiszeit und ein wichtiges Naturdenkmal. Die Rentierjäger waren Menschen, die in der letzten Eiszeit in Europa lebten. Sie zogen in kleinen Gruppen durch die Landschaft und lebten von der Jagd auf Rentiere und andere Tiere. Die Rentierjäger waren die ersten Menschen, die in das Ahrensburger Tunneltal kamen. Sie lebten vor etwa 12.000 Jahren in der Region und hinterließen zahlreiche Funde von Steinwerkzeugen und Knochen.
Langsam wurden Dörfer in der Umgebung von Ahrensburg gegründet und es wurde intensiv Landwirtschaft betrieben.
=== Mittelalter ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Woldenhorn.

=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>lgz7ok6g1xzj96gs1kvwbojpa933bh2</sha1>
    </revision>
    <revision>
      <id>98</id>
      <parentid>97</parentid>
      <timestamp>2025-06-16T21:30:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>98</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2771" sha1="nxhsig636mpmmppzhlo4mg47rzjy4um" xml:space="preserve">=== Vorgeschichte ===
Während der Eiszeit entstanden Dänemark und Schleswig-Holstein. Gletscher aus Skandinavien brachten Sand und Geröll mit sich. Die meisten Gletscher hinterließen Schleifspuren und geschliffene Steine. 
Das Ahrensburger Tunneltal ist ein eiszeitliches Trockental, das sich von Ahrensburg bis nach Großhansdorf erstreckt. Es entstand während der letzten Eiszeit, der Weichsel-Eiszeit, vor etwa 20.000 Jahren. Das Trockental ist etwa 10 Kilometer lang und bis zu 500 Meter breit. Es ist ein Zeugnis der letzten Eiszeit und ein wichtiges Naturdenkmal. Die Rentierjäger waren Menschen, die in der letzten Eiszeit in Europa lebten. Sie zogen in kleinen Gruppen durch die Landschaft und lebten von der Jagd auf Rentiere und andere Tiere. Die Rentierjäger waren die ersten Menschen, die in das Ahrensburger Tunneltal kamen. Sie lebten vor etwa 12.000 Jahren in der Region und hinterließen zahlreiche Funde von Steinwerkzeugen und Knochen.
Langsam wurden Dörfer in der Umgebung von Ahrensburg gegründet, und es wurde Ackerbau und Viehzucht betrieben, von Metallhandwerkern.

=== Mittelalter ===
1314 wurde das Dorf Ahrensburg erstmals als "Woldenborn" urkundlich erwähnt.
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Woldenhorn.

=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>nxhsig636mpmmppzhlo4mg47rzjy4um</sha1>
    </revision>
    <revision>
      <id>99</id>
      <parentid>98</parentid>
      <timestamp>2025-06-17T08:15:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>99</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3011" sha1="nr3hiz3agb6u1lotpxs3l06tbb0lgzd" xml:space="preserve">=== Vorgeschichte ===
====Steinzeit====
Während der Eiszeit formten Gletscher die Landschaft rund um Ahrensburg. Nach ihrem Rückzug entstanden Hügel, Seen und Moore.
Bereits am Ende der Eiszeit lebten Menschen in Ahrensburg. Sie waren von den Wanderungen großer Rentierherden abhängig.
Sie jagten Rentiere und sammelten Früchte, um ihren Lebensunterhalt zu sichern und Kleidung herzustellen. Sie stellten Steinwerkzeuge für die Jagd auf Rentierherden her. Sie wohnten in Holzgestellen, die mit Tierfellen überdeckt waren und sich leicht transportieren ließen.
In dieser Zeit gab es nur baumlose Gebiete mit Sträuchern. Holz war Mangelware.
Langsam verschwanden die Rentiere, und nach und nach entstanden dichte Wälder in der Region. Die Menschen mussten sich an die neue Umgebung anpassen. Sie waren noch Nomaden, wurden aber zu Waldjägern, Fischern und Sammlern. Die Menschen lebten in kleinen Gruppen.
Langsam wurden Tiere domestiziert und für verschiedene Zwecke gehalten. Nach und nach wurden die Menschen sesshaft. Sie rodeten langsam die Wälder und begannen, Getreide anzubauen.
Jetzt wurden sie langsam zu Bauern, bauten feste Häuser aus Lehm und Holz, die stabiler waren.
====Bronzezeit====
* noch im Aufbau
====Eisenzeit====
* noch im Aufbau
====Römische Kaiserzeit und Völkerwanderungszeit====
* noch im Aufbau
=== Mittelalter ===
1314 wurde das Dorf Ahrensburg erstmals als "Woldenborn" urkundlich erwähnt.
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Woldenhorn.

=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>nr3hiz3agb6u1lotpxs3l06tbb0lgzd</sha1>
    </revision>
    <revision>
      <id>100</id>
      <parentid>99</parentid>
      <timestamp>2025-06-17T08:43:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>100</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3011" sha1="pfbkv1vqo6umotb64xrgqf9e8vuuzlb" xml:space="preserve">=== Vorgeschichte ===
====Steinzeit====
Während der Eiszeit formten Gletscher die Landschaft rund um Ahrensburg. Nach ihrem Rückzug entstanden Hügel, Seen und Moore.
Bereits am Ende der Eiszeit lebten Menschen in Ahrensburg. Sie waren von den Wanderungen großer Rentierherden abhängig.
Sie jagten Rentiere und sammelten Früchte, um ihren Lebensunterhalt zu sichern und Kleidung herzustellen. Sie stellten Steinwerkzeuge für die Jagd auf Rentierherden her. Sie wohnten in Holzgestellen, die mit Tierfellen überdeckt waren und sich leicht transportieren ließen.
In dieser Zeit gab es nur baumlose Gebiete mit Sträuchern. Holz war Mangelware.
Langsam verschwanden die Rentiere, und nach und nach entstanden dichte Wälder in der Region. Die Menschen mussten sich an die neue Umgebung anpassen. Sie waren noch Nomaden, wurden aber zu Waldjägern, Fischern und Sammlern. Die Menschen lebten in kleinen Gruppen.
Langsam wurden Tiere domestiziert und für verschiedene Zwecke gehalten. Nach und nach wurden die Menschen sesshaft. Sie rodeten langsam die Wälder und begannen, Getreide anzubauen.
Jetzt wurden sie langsam zu Bauern, bauten feste Häuser aus Lehm und Holz, die stabiler waren.
====Bronzezeit====
* Noch im Aufbau
====Eisenzeit====
* noch im Aufbau
====Römische Kaiserzeit und Völkerwanderungszeit====
* noch im Aufbau
=== Mittelalter ===
1314 wurde das Dorf Ahrensburg erstmals als "Woldenborn" urkundlich erwähnt.
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Woldenhorn.

=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>pfbkv1vqo6umotb64xrgqf9e8vuuzlb</sha1>
    </revision>
    <revision>
      <id>101</id>
      <parentid>100</parentid>
      <timestamp>2025-06-17T09:10:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>101</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3096" sha1="trwy5fia4oo74pwina4beljym7919xk" xml:space="preserve">=== Vorgeschichte ===
====Steinzeit====
Während der Eiszeit formten Gletscher die Landschaft rund um Ahrensburg. Nach ihrem Rückzug entstanden Hügel, Seen und Moore.
Bereits am Ende der Eiszeit lebten Menschen in Ahrensburg. Sie waren von den Wanderungen großer Rentierherden abhängig.
Sie jagten Rentiere und sammelten Früchte, um ihren Lebensunterhalt zu sichern und Kleidung herzustellen. Sie stellten Steinwerkzeuge für die Jagd auf Rentierherden her. Sie wohnten in Holzgestellen, die mit Tierfellen überdeckt waren und sich leicht transportieren ließen.
In dieser Zeit gab es nur baumlose Gebiete mit Sträuchern. Holz war Mangelware.
Langsam verschwanden die Rentiere, und nach und nach entstanden dichte Wälder in der Region. Die Menschen mussten sich an die neue Umgebung anpassen. Sie waren noch Nomaden, wurden aber zu Waldjägern, Fischern und Sammlern. Die Menschen lebten in kleinen Gruppen.
Langsam wurden Tiere domestiziert und für verschiedene Zwecke gehalten. Nach und nach wurden die Menschen sesshaft. Sie rodeten langsam die Wälder und begannen, Getreide anzubauen.
Jetzt wurden sie langsam zu Bauern, bauten feste Häuser aus Lehm und Holz, die stabiler waren.
====Bronzezeit bis Völkerwanderungszeit=====
In der Bronzezeit bis zur Völkerwanderungszeit war das Gebiet um Ahrensburg nur dünn besiedelt. Grabhügel im Tunneltal und in den heutigen Stadtteilen belegen kleine Siedlungen.

=== Mittelalter ===
1314 wurde das Dorf Ahrensburg erstmals als "Woldenborn" urkundlich erwähnt.
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Woldenhorn.

=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>trwy5fia4oo74pwina4beljym7919xk</sha1>
    </revision>
    <revision>
      <id>102</id>
      <parentid>101</parentid>
      <timestamp>2025-06-17T13:29:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>102</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3019" sha1="bt9qx72y62db916d16t89huu3ypr0zh" xml:space="preserve">=== Vorgeschichte ===
====Steinzeit====
Während der Eiszeit formten Gletscher die Landschaft rund um Ahrensburg. Nach ihrem Rückzug entstanden Hügel, Seen und Moore.
Bereits am Ende der Eiszeit lebten Menschen in Ahrensburg. Sie waren von den Wanderungen großer Rentierherden abhängig.
Sie jagten Rentiere und sammelten Früchte, um ihren Lebensunterhalt zu sichern und Kleidung herzustellen. Sie stellten Steinwerkzeuge für die Jagd auf Rentierherden her. Sie wohnten in Holzgestellen, die mit Tierfellen überdeckt waren und sich leicht transportieren ließen.
In dieser Zeit gab es nur baumlose Gebiete mit Sträuchern. Holz war Mangelware.
Langsam verschwanden die Rentiere, und nach und nach entstanden dichte Wälder in der Region. Die Menschen mussten sich an die neue Umgebung anpassen. Sie waren noch Nomaden, wurden aber zu Waldjägern, Fischern und Sammlern. Die Menschen lebten in kleinen Gruppen.
Langsam wurden Tiere domestiziert und für verschiedene Zwecke gehalten. Nach und nach wurden die Menschen sesshaft. Sie rodeten langsam die Wälder und begannen, Getreide anzubauen.
Jetzt wurden sie langsam zu Bauern, bauten feste Häuser aus Lehm und Holz, die stabiler waren.
====Bronzezeit bis Völkerwanderungszeit=====
In der Bronzezeit bis zur Völkerwanderungszeit war das Gebiet um Ahrensburg nur dünn besiedelt. Grabhügel im Tunneltal und in den heutigen Stadtteilen belegen kleine Siedlungen.Wie sind Siedlung aufgebaut
=== Mittelalter ===
Im 11. Jahrhundert entstand das Dorf Woldenhorn am Rand des Auetals. In der Nähe wurde eine Grafenburg von Heinrich I. von Hamburg zur Sicherung des Fernwegs erbaut.
Später ging der Besitz an die Grafen von Holstein-Schauenburg über.



=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>bt9qx72y62db916d16t89huu3ypr0zh</sha1>
    </revision>
    <revision>
      <id>103</id>
      <parentid>102</parentid>
      <timestamp>2025-06-17T13:50:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>103</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3242" sha1="gvfzjtj152j7t2xiwxzd49ee5u8gyaw" xml:space="preserve">=== Vorgeschichte ===
====Steinzeit====
Während der Eiszeit formten Gletscher die Landschaft rund um Ahrensburg. Nach ihrem Rückzug entstanden Hügel, Seen und Moore.
Bereits am Ende der Eiszeit lebten Menschen in Ahrensburg. Sie waren von den Wanderungen großer Rentierherden abhängig.
Sie jagten Rentiere und sammelten Früchte, um ihren Lebensunterhalt zu sichern und Kleidung herzustellen. Sie stellten Steinwerkzeuge für die Jagd auf Rentierherden her. Sie wohnten in Holzgestellen, die mit Tierfellen überdeckt waren und sich leicht transportieren ließen.
In dieser Zeit gab es nur baumlose Gebiete mit Sträuchern. Holz war Mangelware.
Langsam verschwanden die Rentiere, und nach und nach entstanden dichte Wälder in der Region. Die Menschen mussten sich an die neue Umgebung anpassen. Sie waren noch Nomaden, wurden aber zu Waldjägern, Fischern und Sammlern. Die Menschen lebten in kleinen Gruppen.
Langsam wurden Tiere domestiziert und für verschiedene Zwecke gehalten. Nach und nach wurden die Menschen sesshaft. Sie rodeten langsam die Wälder und begannen, Getreide anzubauen.
Jetzt wurden sie langsam zu Bauern, bauten feste Häuser aus Lehm und Holz, die stabiler waren.
====Bronzezeit bis Völkerwanderungszeit=====
In der Bronzezeit bis zur Völkerwanderungszeit war das Gebiet um Ahrensburg nur dünn besiedelt. Grabhügel im Tunneltal und in den heutigen Stadtteilen belegen kleine Siedlungen.Wie sind Siedlung aufgebaut
=== Mittelalter ===
Im 11. Jahrhundert entstand das Dorf Woldenhorn am Rand des Auetals. In der Nähe wurde eine Grafenburg von Heinrich I. von Hamburg zur Sicherung des Fernwegs erbaut.
Später ging der Besitz an die Grafen von Holstein-Schauenburg über. Diese verlegten ihren Vogtssitz später nach Trittau.
Im Jahr 1330 übernahm das Zisterzienserkloster Reinfeld die Grafenburg und das Dorf Woldenhorn. Das Kloster prägte die Entwicklung der Region über mehrere Jahrhunderte.
=== Neuzeit ===
Mit der Säkularisation des Klosters Reinfeld im Jahr 1560 kam Woldenhorn in den Besitz des dänischen Königs. Der König belohnte den Feldherrn Daniel Rantzau. Dieser erhielt das Gut Woldenhorn und baute es zu einem Herrensitz aus. Er nannte das Gut Ahrensburg. Rantzau verarmte später. Das Gut wurde vom dänischen Kaufmann Heinrich Carl von Schimmelmann erworben. Später wurde es nach dem Dänischen Krieg an Preußen übergeben. Selbständige Landgemeinden entstanden im 19. Jahrhundert. Die Landgemeinden Ahrensburg, Woldenhorn und Hagen wurden 1872 zur Gemeinde Ahrensburg zusammengelegt. Im 19. Jahrhundert wurde die Eisenbahnlinie von Hamburg nach Lübeck gebaut. Die Bahnstrecke verläuft durch Ahrensburg. Die Eisenbahnlinie wurde 1851 eröffnet und war die erste Eisenbahnlinie in Schleswig-Holstein. Die Bahnstrecke war ein wichtiger Verkehrsweg und trug zur wirtschaftlichen Entwicklung der Region bei. Die Bevölkerungszahl der Gemeinde Ahrensburg stieg an. Viele Hamburger zogen nach Ahrensburg, um in der grünen Umgebung zu leben. Die Stadt wuchs und es entstanden neue Wohngebiete. Nach Kriegsende 1945 kamen viele Flüchtlinge und Vertriebene nach Ahrensburg. Die Stadt wuchs weiter und es entstanden neue Wohngebiete. Die Gemeinde Ahrensburg wurde 1948 zur Stadt erhoben.</text>
      <sha1>gvfzjtj152j7t2xiwxzd49ee5u8gyaw</sha1>
    </revision>
  </page>
  <page>
    <title>Geografie</title>
    <ns>0</ns>
    <id>10</id>
    <revision>
      <id>104</id>
      <timestamp>2025-06-15T03:28:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ Ahrensburg ist eine Stadt im Kreis Stormarn in Schleswig-Holstein. Sie liegt nordöstlich von Hamburg und hat etwa 34.000 Einwohner. Ahrensburg befindet sich bei 10°14'30" östlicher Länge und 53°40'30" nördlicher Breite.  Ahrensburg liegt etwa 20 km nordöstlich von Hamburg und etwa 30 km südwestlich von Lübeck. Die Stadt liegt am Rand des Hamburger Umlands und grenzt an die Gemeinden Ammersbek, Delingsdorf, Hammoor, Todendorf und Großhansdorf.…“</comment>
      <origin>104</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1753" sha1="4ceyppup9cv3r0uv7mdwjg8ye8tidzb" xml:space="preserve">
Ahrensburg ist eine Stadt im Kreis Stormarn in Schleswig-Holstein. Sie liegt nordöstlich von Hamburg und hat etwa 34.000 Einwohner. Ahrensburg befindet sich bei 10°14'30" östlicher Länge und 53°40'30" nördlicher Breite.

Ahrensburg liegt etwa 20 km nordöstlich von Hamburg und etwa 30 km südwestlich von Lübeck. Die Stadt liegt am Rand des Hamburger Umlands und grenzt an die Gemeinden Ammersbek, Delingsdorf, Hammoor, Todendorf und Großhansdorf.

=== Klima ===
Das Klima in Ahrensburg ist gemäßigt. Die durchschnittliche Jahrestemperatur beträgt 8,5 °C. Der wärmste Monat ist der Juli mit durchschnittlich 17,5 °C, der kälteste Monat ist der Januar mit durchschnittlich 0,5 °C.

== Stadteile ==
Ahrensburg besteht aus den Stadtteilen Ahrensburg, Ahrensfelde,Gewerbegebiet Nord,Gartenholz,Ahrensburger Redder,Waldgut Hagen,Siedlung Am Hagen und Wulfsdorf.

=== Landschaft ===
Ahrensburg liegt in der Landschaft der Südholsteinischen Geest . Diese Region ist geprägt von sanften Hügeln, Wäldern und landwirtschaftlich genutzten Flächen. Die Stadt befindet sich etwa 20 Kilometer nordöstlich von Hamburg und ist Teil der Metropolregion Hamburg.

==== Waldgebiete ====
Ahrensburg ist rund 18 % bewaldet. Die größten Waldgebiete sind:

* Forst Hagen: Ein großes Waldgebiet im Süden der Stadt, das sich ideal für Spaziergänge und Wanderungen eignet.
* Forst Beimoor: Ein weiteres großes Waldgebiet im Norden der Stadt, das ebenfalls viele Wanderwege bietet.

==== Gewässer ====

=== Naturschutzgebiete ===

* NSG Stellmoorer Tunneltal - NSG Heidkoppelmoor - NSG Ammersbek-Niederung - Höltigbaum

=== Parks und Grünanlagen ===

* Schloßpark Ahrensburg - Park Manhagen in Schmalenbek - Park am Haus der Natur - Aalfangpark
*</text>
      <sha1>4ceyppup9cv3r0uv7mdwjg8ye8tidzb</sha1>
    </revision>
  </page>
  <page>
    <title>Sehenswürdigkeiten &amp; Kultur</title>
    <ns>0</ns>
    <id>11</id>
    <revision>
      <id>105</id>
      <timestamp>2025-06-15T03:36:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Sehenswürdigkeiten * Musik und Theater * Regelmäßige Feste &amp; Veranstaltungen“</comment>
      <origin>105</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="81" sha1="57rct2r2piwhdtdpnd1gg9io1se201d" xml:space="preserve">* Sehenswürdigkeiten
* Musik und Theater
* Regelmäßige Feste &amp; Veranstaltungen</text>
      <sha1>57rct2r2piwhdtdpnd1gg9io1se201d</sha1>
    </revision>
    <revision>
      <id>106</id>
      <parentid>105</parentid>
      <timestamp>2025-06-16T10:03:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>106</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="85" sha1="ispwg2p65e41owcxnpfann6m3qz8uag" xml:space="preserve">* [[Sehenswürdigkeiten]]
* Musik und Theater
* Regelmäßige Feste &amp; Veranstaltungen</text>
      <sha1>ispwg2p65e41owcxnpfann6m3qz8uag</sha1>
    </revision>
    <revision>
      <id>107</id>
      <parentid>106</parentid>
      <timestamp>2025-06-19T19:21:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>107</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="382" sha1="8h3a5nb8mci1ou1p62aywtrjnn1cmi3" xml:space="preserve">Ahrensburg bietet eine Vielzahl an Sehenswürdigkeiten und kulturellen Angeboten. Besonders bekannt ist das Ahrensburger Schloss, das als Wahrzeichen der Stadt gilt. Darüber hinaus laden Museen, Theater und regelmäßige Veranstaltungen dazu ein, die kulturelle Vielfalt der Stadt zu entdecken.2
* [[Sehenswürdigkeiten]]
* Musik und Theater
* Regelmäßige Feste &amp; Veranstaltungen</text>
      <sha1>8h3a5nb8mci1ou1p62aywtrjnn1cmi3</sha1>
    </revision>
    <revision>
      <id>108</id>
      <parentid>107</parentid>
      <timestamp>2025-06-20T07:20:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>108</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="386" sha1="2hb4vdlf0mrh05ix4wy05exlo2ozqme" xml:space="preserve">Ahrensburg bietet eine Vielzahl an Sehenswürdigkeiten und kulturellen Angeboten. Besonders bekannt ist das Ahrensburger Schloss, das als Wahrzeichen der Stadt gilt. Darüber hinaus laden Museen, Theater und regelmäßige Veranstaltungen dazu ein, die kulturelle Vielfalt der Stadt zu entdecken.2
* [[Sehenswürdigkeiten]]
* [[Musik und Theater]]
* Regelmäßige Feste &amp; Veranstaltungen</text>
      <sha1>2hb4vdlf0mrh05ix4wy05exlo2ozqme</sha1>
    </revision>
    <revision>
      <id>109</id>
      <parentid>108</parentid>
      <timestamp>2025-06-23T21:34:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>109</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="385" sha1="dx4sc5rqdb0vongt481ypjq06eotoxk" xml:space="preserve">Ahrensburg bietet eine Vielzahl an Sehenswürdigkeiten und kulturellen Angeboten. Besonders bekannt ist das Ahrensburger Schloss, das als Wahrzeichen der Stadt gilt. Darüber hinaus laden Museen, Theater und regelmäßige Veranstaltungen dazu ein, die kulturelle Vielfalt der Stadt zu entdecken.
* [[Sehenswürdigkeiten]]
* [[Musik und Theater]]
* Regelmäßige Feste &amp; Veranstaltungen</text>
      <sha1>dx4sc5rqdb0vongt481ypjq06eotoxk</sha1>
    </revision>
    <revision>
      <id>110</id>
      <parentid>109</parentid>
      <timestamp>2025-06-24T17:37:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>110</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="389" sha1="i6xs9fxmvyyvrpv67kpcdyxzdlpmwrg" xml:space="preserve">Ahrensburg bietet eine Vielzahl an Sehenswürdigkeiten und kulturellen Angeboten. Besonders bekannt ist das Ahrensburger Schloss, das als Wahrzeichen der Stadt gilt. Darüber hinaus laden Museen, Theater und regelmäßige Veranstaltungen dazu ein, die kulturelle Vielfalt der Stadt zu entdecken.
* [[Sehenswürdigkeiten]]
* [[Musik und Theater]]
* [[Regelmäßige Feste &amp; Veranstaltungen]]</text>
      <sha1>i6xs9fxmvyyvrpv67kpcdyxzdlpmwrg</sha1>
    </revision>
  </page>
  <page>
    <title>Alltag &amp; Leben in Ahrensburg</title>
    <ns>0</ns>
    <id>12</id>
    <revision>
      <id>111</id>
      <timestamp>2025-06-15T03:40:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Die Stadtteile im Porträt * Vereinsleben * Wochenmarkt * Gastronomie-Führer * Einkaufen in Ahrensburg * Kirchen und religiöse Gemeinschaften. * Seniorentreff“</comment>
      <origin>111</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="162" sha1="9sp6str1mkrrg9a1jz5lqkwquo1fjx6" xml:space="preserve">* Die Stadtteile im Porträt
* Vereinsleben
* Wochenmarkt
* Gastronomie-Führer
* Einkaufen in Ahrensburg
* Kirchen und religiöse Gemeinschaften.
* Seniorentreff</text>
      <sha1>9sp6str1mkrrg9a1jz5lqkwquo1fjx6</sha1>
    </revision>
    <revision>
      <id>112</id>
      <parentid>111</parentid>
      <timestamp>2025-06-20T07:14:19Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>112</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="207" sha1="fpbp7wt6slqnhqljwb6ul1nc0mcw7ax" xml:space="preserve">* Die Stadtteile im Porträt
* Vereinsleben
* Wochenmarkt
* Gastronomie-Führer
* Einkaufen in Ahrensburg
* Kirchen und religiöse Gemeinschaften.
* Seniorentreff
* Gesundheit:
Unterseite: Familie &amp; Bildung:</text>
      <sha1>fpbp7wt6slqnhqljwb6ul1nc0mcw7ax</sha1>
    </revision>
    <revision>
      <id>113</id>
      <parentid>112</parentid>
      <timestamp>2025-06-20T07:14:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>113</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="197" sha1="i6l90nq224sid6fwdn4vucj2xu9q4kq" xml:space="preserve">* Die Stadtteile im Porträt
* Vereinsleben
* Wochenmarkt
* Gastronomie-Führer
* Einkaufen in Ahrensburg
* Kirchen und religiöse Gemeinschaften.
* Seniorentreff
* Gesundheit:
* Familie &amp; Bildung:</text>
      <sha1>i6l90nq224sid6fwdn4vucj2xu9q4kq</sha1>
    </revision>
    <revision>
      <id>114</id>
      <parentid>113</parentid>
      <timestamp>2025-06-26T12:01:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>114</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="201" sha1="r902lp3jexvzu7xiomqtq1wh1qbc26p" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* Vereinsleben
* Wochenmarkt
* Gastronomie-Führer
* Einkaufen in Ahrensburg
* Kirchen und religiöse Gemeinschaften.
* Seniorentreff
* Gesundheit:
* Familie &amp; Bildung:</text>
      <sha1>r902lp3jexvzu7xiomqtq1wh1qbc26p</sha1>
    </revision>
    <revision>
      <id>115</id>
      <parentid>114</parentid>
      <timestamp>2025-06-26T12:27:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>115</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="205" sha1="2f2ecbdd8owfmnbd2iiwk7n7xjdmull" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* [[Vereinsleben]]
* Wochenmarkt
* Gastronomie-Führer
* Einkaufen in Ahrensburg
* Kirchen und religiöse Gemeinschaften.
* Seniorentreff
* Gesundheit:
* Familie &amp; Bildung:</text>
      <sha1>2f2ecbdd8owfmnbd2iiwk7n7xjdmull</sha1>
    </revision>
    <revision>
      <id>116</id>
      <parentid>115</parentid>
      <timestamp>2025-06-26T18:18:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>116</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="209" sha1="5oiholzv9bjqpbn31xhu2pmv1fd6jys" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* [[Vereinsleben]]
* [[Wochenmarkt]]
* Gastronomie-Führer
* Einkaufen in Ahrensburg
* Kirchen und religiöse Gemeinschaften.
* Seniorentreff
* Gesundheit:
* Familie &amp; Bildung:</text>
      <sha1>5oiholzv9bjqpbn31xhu2pmv1fd6jys</sha1>
    </revision>
    <revision>
      <id>483</id>
      <parentid>116</parentid>
      <timestamp>2025-06-28T16:10:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>483</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="213" sha1="t8nwa4pqc9xvngggfeiocm8cyvfxhnu" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* [[Vereinsleben]]
* [[Wochenmarkt]]
* [[Gastronomie-Führer]]
* Einkaufen in Ahrensburg
* Kirchen und religiöse Gemeinschaften.
* Seniorentreff
* Gesundheit:
* Familie &amp; Bildung:</text>
      <sha1>t8nwa4pqc9xvngggfeiocm8cyvfxhnu</sha1>
    </revision>
    <revision>
      <id>489</id>
      <parentid>483</parentid>
      <timestamp>2025-06-28T17:31:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>489</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="217" sha1="9adcp2qfnsw2hklzcxe4pkb9fzsc2jg" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* [[Vereinsleben]]
* [[Wochenmarkt]]
* [[Gastronomie-Führer]]
* [[Einkaufen in Ahrensburg]]
* Kirchen und religiöse Gemeinschaften.
* Seniorentreff
* Gesundheit:
* Familie &amp; Bildung:</text>
      <sha1>9adcp2qfnsw2hklzcxe4pkb9fzsc2jg</sha1>
    </revision>
    <revision>
      <id>491</id>
      <parentid>489</parentid>
      <timestamp>2025-06-28T17:42:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>491</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="220" sha1="gcy8phx371yfgvzzg3u2uts0n2dpoli" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* [[Vereinsleben]]
* [[Wochenmarkt]]
* [[Gastronomie-Führer]]
* [[Einkaufen in Ahrensburg]]
* [[Kirchen und religiöse Gemeinschaften]]
* Seniorentreff
* Gesundheit:
* Familie &amp; Bildung:</text>
      <sha1>gcy8phx371yfgvzzg3u2uts0n2dpoli</sha1>
    </revision>
    <revision>
      <id>495</id>
      <parentid>491</parentid>
      <timestamp>2025-06-29T01:52:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>495</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="224" sha1="szr4z0jq24fb3inekroycsxtxc3q2eq" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* [[Vereinsleben]]
* [[Wochenmarkt]]
* [[Gastronomie-Führer]]
* [[Einkaufen in Ahrensburg]]
* [[Kirchen und religiöse Gemeinschaften]]
* [[Seniorentreff]]
* Gesundheit:
* Familie &amp; Bildung:</text>
      <sha1>szr4z0jq24fb3inekroycsxtxc3q2eq</sha1>
    </revision>
    <revision>
      <id>497</id>
      <parentid>495</parentid>
      <timestamp>2025-06-29T02:17:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>497</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="227" sha1="q7u2002ebi5fzbzn4whesji6s5ptqks" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* [[Vereinsleben]]
* [[Wochenmarkt]]
* [[Gastronomie-Führer]]
* [[Einkaufen in Ahrensburg]]
* [[Kirchen und religiöse Gemeinschaften]]
* [[Seniorentreff]]
* [[Gesundheit]]
* Familie &amp; Bildung:</text>
      <sha1>q7u2002ebi5fzbzn4whesji6s5ptqks</sha1>
    </revision>
    <revision>
      <id>499</id>
      <parentid>497</parentid>
      <timestamp>2025-06-29T03:43:11Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>499</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="230" sha1="ciia0xkecdv87gbs0ydu6w09ged3qwr" xml:space="preserve">* [[Die Stadtteile im Porträt]]
* [[Vereinsleben]]
* [[Wochenmarkt]]
* [[Gastronomie-Führer]]
* [[Einkaufen in Ahrensburg]]
* [[Kirchen und religiöse Gemeinschaften]]
* [[Seniorentreff]]
* [[Gesundheit]]
* [[Familie &amp; Bildung]]</text>
      <sha1>ciia0xkecdv87gbs0ydu6w09ged3qwr</sha1>
    </revision>
  </page>
  <page>
    <title>Natur &amp; Freizeit</title>
    <ns>0</ns>
    <id>13</id>
    <revision>
      <id>117</id>
      <timestamp>2025-06-15T03:45:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Naherholungsgebiete * Wander- und Radwege * Spielplätze * Sportstätten“</comment>
      <origin>117</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="74" sha1="6fnkoug9bdrqqy4v58cvksilj7io0ic" xml:space="preserve">* Naherholungsgebiete
* Wander- und Radwege
* Spielplätze
* Sportstätten</text>
      <sha1>6fnkoug9bdrqqy4v58cvksilj7io0ic</sha1>
    </revision>
    <revision>
      <id>118</id>
      <parentid>117</parentid>
      <timestamp>2025-06-20T07:15:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>118</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="100" sha1="d5ak6o9sbvdif0swy6pxpn3b4l6bg23" xml:space="preserve">* Naherholungsgebiete
* Wander- und Radwege
* Spielplätze
* Sportstätten
* Vereine
* Ausflugsziele</text>
      <sha1>d5ak6o9sbvdif0swy6pxpn3b4l6bg23</sha1>
    </revision>
    <revision>
      <id>484</id>
      <parentid>118</parentid>
      <timestamp>2025-06-28T16:11:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>484</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="90" sha1="3u39et16ct08qkw7anb6pmqf5uiqv2s" xml:space="preserve">* Naherholungsgebiete
* Wander- und Radwege
* Spielplätze
* Sportstätten
* Ausflugsziele</text>
      <sha1>3u39et16ct08qkw7anb6pmqf5uiqv2s</sha1>
    </revision>
    <revision>
      <id>502</id>
      <parentid>484</parentid>
      <timestamp>2025-06-29T09:33:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>502</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="94" sha1="rbvdv5amo9zbur0trw59vfecsci4r6n" xml:space="preserve">* [[Naherholungsgebiete]]
* Wander- und Radwege
* Spielplätze
* Sportstätten
* Ausflugsziele</text>
      <sha1>rbvdv5amo9zbur0trw59vfecsci4r6n</sha1>
    </revision>
    <revision>
      <id>504</id>
      <parentid>502</parentid>
      <timestamp>2025-06-29T09:48:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>504</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="98" sha1="ccv8x198a00p1t9o2iugg1qwzc6cdem" xml:space="preserve">* [[Naherholungsgebiete]]
* [[Wander- und Radwege]]
* Spielplätze
* Sportstätten
* Ausflugsziele</text>
      <sha1>ccv8x198a00p1t9o2iugg1qwzc6cdem</sha1>
    </revision>
    <revision>
      <id>506</id>
      <parentid>504</parentid>
      <timestamp>2025-06-29T16:06:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>506</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="94" sha1="rbvdv5amo9zbur0trw59vfecsci4r6n" xml:space="preserve">* [[Naherholungsgebiete]]
* Wander- und Radwege
* Spielplätze
* Sportstätten
* Ausflugsziele</text>
      <sha1>rbvdv5amo9zbur0trw59vfecsci4r6n</sha1>
    </revision>
    <revision>
      <id>529</id>
      <parentid>506</parentid>
      <timestamp>2025-06-30T20:23:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>529</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="98" sha1="ccv8x198a00p1t9o2iugg1qwzc6cdem" xml:space="preserve">* [[Naherholungsgebiete]]
* [[Wander- und Radwege]]
* Spielplätze
* Sportstätten
* Ausflugsziele</text>
      <sha1>ccv8x198a00p1t9o2iugg1qwzc6cdem</sha1>
    </revision>
  </page>
  <page>
    <title>Infrastruktur &amp; Wirtschaft</title>
    <ns>0</ns>
    <id>14</id>
    <revision>
      <id>119</id>
      <timestamp>2025-06-15T03:52:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Verkehrsanbindung * Bildung * Wichtige Unternehmen &amp; Arbeitgeber: * Gewerbegebiete * Stadtverwaltung * Freiwillige Feuerwehr Ahrensburg * Gesundheitswesen“</comment>
      <origin>119</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="156" sha1="e2r4urktpu83ppcicjies4550rmz4xg" xml:space="preserve">* Verkehrsanbindung
* Bildung
* Wichtige Unternehmen &amp; Arbeitgeber:
* Gewerbegebiete
* Stadtverwaltung
* Freiwillige Feuerwehr Ahrensburg
* Gesundheitswesen</text>
      <sha1>e2r4urktpu83ppcicjies4550rmz4xg</sha1>
    </revision>
    <revision>
      <id>500</id>
      <parentid>119</parentid>
      <timestamp>2025-06-29T03:44:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>500</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="146" sha1="2vq4ohrqixqbgwp1tsiezxmmift4mgp" xml:space="preserve">* Verkehrsanbindung
* Wichtige Unternehmen &amp; Arbeitgeber:
* Gewerbegebiete
* Stadtverwaltung
* Freiwillige Feuerwehr Ahrensburg
* Gesundheitswesen</text>
      <sha1>2vq4ohrqixqbgwp1tsiezxmmift4mgp</sha1>
    </revision>
    <revision>
      <id>545</id>
      <parentid>500</parentid>
      <timestamp>2025-07-01T15:21:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>545</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="150" sha1="6vwgrus2y6qwhvy5tzzvlx852ql80ym" xml:space="preserve">* [[Verkehrsanbindung]]
* Wichtige Unternehmen &amp; Arbeitgeber:
* Gewerbegebiete
* Stadtverwaltung
* Freiwillige Feuerwehr Ahrensburg
* Gesundheitswesen</text>
      <sha1>6vwgrus2y6qwhvy5tzzvlx852ql80ym</sha1>
    </revision>
    <revision>
      <id>547</id>
      <parentid>545</parentid>
      <timestamp>2025-07-01T15:36:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>547</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="153" sha1="o94f94op6tarjfbos2033wbdqfnl14s" xml:space="preserve">* [[Verkehrsanbindung]]
* [[Wichtige Unternehmen &amp; Arbeitgeber]]
* Gewerbegebiete
* Stadtverwaltung
* Freiwillige Feuerwehr Ahrensburg
* Gesundheitswesen</text>
      <sha1>o94f94op6tarjfbos2033wbdqfnl14s</sha1>
    </revision>
    <revision>
      <id>553</id>
      <parentid>547</parentid>
      <timestamp>2025-07-01T16:03:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>553</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="157" sha1="p5zhae95xlvt7esakghpvs8f4t8uipn" xml:space="preserve">* [[Verkehrsanbindung]]
* [[Wichtige Unternehmen &amp; Arbeitgeber]]
* [[Gewerbegebiete]]
* Stadtverwaltung
* Freiwillige Feuerwehr Ahrensburg
* Gesundheitswesen</text>
      <sha1>p5zhae95xlvt7esakghpvs8f4t8uipn</sha1>
    </revision>
    <revision>
      <id>560</id>
      <parentid>553</parentid>
      <timestamp>2025-07-01T17:05:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>560</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="161" sha1="24pnctnj794bbcnd1t437kqglz1usta" xml:space="preserve">* [[Verkehrsanbindung]]
* [[Wichtige Unternehmen &amp; Arbeitgeber]]
* [[Gewerbegebiete]]
* [[Stadtverwaltung]]
* Freiwillige Feuerwehr Ahrensburg
* Gesundheitswesen</text>
      <sha1>24pnctnj794bbcnd1t437kqglz1usta</sha1>
    </revision>
    <revision>
      <id>563</id>
      <parentid>560</parentid>
      <timestamp>2025-07-01T19:12:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>563</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="165" sha1="opvoxc7dihfcs5tiqn2wft27fabcztl" xml:space="preserve">* [[Verkehrsanbindung]]
* [[Wichtige Unternehmen &amp; Arbeitgeber]]
* [[Gewerbegebiete]]
* [[Stadtverwaltung]]
* [[Freiwillige Feuerwehr Ahrensburg]]
* Gesundheitswesen</text>
      <sha1>opvoxc7dihfcs5tiqn2wft27fabcztl</sha1>
    </revision>
    <revision>
      <id>567</id>
      <parentid>563</parentid>
      <timestamp>2025-07-01T20:34:09Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>567</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="146" sha1="k2wlsn22ju6lq43qpmof4iy2hudo6di" xml:space="preserve">* [[Verkehrsanbindung]]
* [[Wichtige Unternehmen &amp; Arbeitgeber]]
* [[Gewerbegebiete]]
* [[Stadtverwaltung]]
* [[Freiwillige Feuerwehr Ahrensburg]]</text>
      <sha1>k2wlsn22ju6lq43qpmof4iy2hudo6di</sha1>
    </revision>
  </page>
  <page>
    <title>Personen &amp; Persönlichkeiten</title>
    <ns>0</ns>
    <id>15</id>
    <revision>
      <id>120</id>
      <timestamp>2025-06-15T03:55:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Bürgermeister der Stadt Ahrensburg * Ehrenbürger * Bekannte Söhne und Töchter der Stadt“</comment>
      <origin>120</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="93" sha1="h9n08awgtpuhsh8aanc0v3ul87u6bes" xml:space="preserve">* Bürgermeister der Stadt Ahrensburg
* Ehrenbürger
* Bekannte Söhne und Töchter der Stadt</text>
      <sha1>h9n08awgtpuhsh8aanc0v3ul87u6bes</sha1>
    </revision>
    <revision>
      <id>121</id>
      <parentid>120</parentid>
      <timestamp>2025-06-15T03:55:57Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>121</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="118" sha1="sw6zk5d2otre0byrr7y8r3zm1co1ibf" xml:space="preserve">* Bürgermeister der Stadt Ahrensburg
* Ehrenbürger
* Bekannte Söhne und Töchter der Stadt
* Ahrensburger Originale</text>
      <sha1>sw6zk5d2otre0byrr7y8r3zm1co1ibf</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal Themen Vorschlag</title>
    <ns>0</ns>
    <id>16</id>
    <revision>
      <id>122</id>
      <timestamp>2025-06-15T05:08:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* '''Aktuelles''' ** ''Unterseite: Nachrichten:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Artikel&lt;/code&gt; chronologisch anzeigt. Filterbar nach &lt;code&gt;Themen-Kategorien&lt;/code&gt;. ** ''Unterseite: Veranstaltungskalender:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Veranstaltung&lt;/code&gt; als Kalender oder Liste anzeigt. Filterbar nach Datum und &lt;code&gt;Veranstaltungsart&lt;/code&gt;. * '''Leben &amp; Alltag''' ** ''Unterseite: Gastronomie:'' Eine View, die alle &lt;code&gt;Orte&lt;…“</comment>
      <origin>122</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1447" sha1="mc2imbtjprtecyznx0nebjcfsylvne1" xml:space="preserve">* '''Aktuelles'''
** ''Unterseite: Nachrichten:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Artikel&lt;/code&gt; chronologisch anzeigt. Filterbar nach &lt;code&gt;Themen-Kategorien&lt;/code&gt;.
** ''Unterseite: Veranstaltungskalender:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Veranstaltung&lt;/code&gt; als Kalender oder Liste anzeigt. Filterbar nach Datum und &lt;code&gt;Veranstaltungsart&lt;/code&gt;.
* '''Leben &amp; Alltag'''
** ''Unterseite: Gastronomie:'' Eine View, die alle &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Gastronomie" anzeigt.
** ''Unterseite: Einkaufen:'' Eine View, die alle &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Einzelhandel" anzeigt.
** ''Unterseite: Gesundheit:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Gesundheit" (Ärzte, Apotheken).
** ''Unterseite: Familie &amp; Bildung:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorien "Schule", "Kita" etc. und Artikel der Kategorie "Familie &amp; Soziales".
* '''Freizeit &amp; Kultur'''
** ''Unterseite: Vereine:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Verein" und Artikel der Kategorie "Sport &amp; Vereine".
** ''Unterseite: Sehenswürdigkeiten:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Sehenswürdigkeit".
** ''Unterseite: Ausflugsziele:'' Zeigt Artikel und Orte mit dem Tag "Ausflugsziel".
* '''Branchenbuch'''
** Eine leistungsstarke View-Seite, die alle &lt;code&gt;Orte&lt;/code&gt; anzeigt. Mit einer exponierten Filterleiste (Suche nach Name, Filter nach &lt;code&gt;Branchen / Orte-Art&lt;/code&gt;) und idealerweise einer Kartenansicht (z.B. mit dem Leaflet-Modul).</text>
      <sha1>mc2imbtjprtecyznx0nebjcfsylvne1</sha1>
    </revision>
    <revision>
      <id>123</id>
      <parentid>122</parentid>
      <timestamp>2025-06-15T05:10:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>123</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2262" sha1="jpyw9idkqxem3fno8a91aaw8g7uc40t" xml:space="preserve">* '''Aktuelles'''
** ''Unterseite: Nachrichten:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Artikel&lt;/code&gt; chronologisch anzeigt. Filterbar nach &lt;code&gt;Themen-Kategorien&lt;/code&gt;.
** ''Unterseite: Veranstaltungskalender:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Veranstaltung&lt;/code&gt; als Kalender oder Liste anzeigt. Filterbar nach Datum und &lt;code&gt;Veranstaltungsart&lt;/code&gt;.
* '''Leben &amp; Alltag'''
** ''Unterseite: Gastronomie:'' Eine View, die alle &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Gastronomie" anzeigt.
** ''Unterseite: Einkaufen:'' Eine View, die alle &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Einzelhandel" anzeigt.
** ''Unterseite: Gesundheit:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Gesundheit" (Ärzte, Apotheken).
** ''Unterseite: Familie &amp; Bildung:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorien "Schule", "Kita" etc. und Artikel der Kategorie "Familie &amp; Soziales".
* '''Freizeit &amp; Kultur'''
** ''Unterseite: Vereine:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Verein" und Artikel der Kategorie "Sport &amp; Vereine".
** ''Unterseite: Sehenswürdigkeiten:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Sehenswürdigkeit".
** ''Unterseite: Ausflugsziele:'' Zeigt Artikel und Orte mit dem Tag "Ausflugsziel".
* '''Branchenbuch'''
** Eine leistungsstarke View-Seite, die alle &lt;code&gt;Orte&lt;/code&gt; anzeigt. Mit einer exponierten Filterleiste (Suche nach Name, Filter nach &lt;code&gt;Branchen / Orte-Art&lt;/code&gt;) und idealerweise einer Kartenansicht (z.B. mit dem Leaflet-Modul).

=== Wichtige Drupal-Module für dieses Projekt ===

* '''Core-Module:''' Views, Taxonomy, Blocks, Menus, Media Library.
* '''Zusatz-Module (Contrib):'''
** '''&lt;code&gt;Pathauto&lt;/code&gt;''': Erstellt automatisch saubere URLs (z.B. &lt;code&gt;/aktuelles/mein-super-artikel&lt;/code&gt; statt &lt;code&gt;/node/123&lt;/code&gt;). Absolut essenziell für SEO.
** '''&lt;code&gt;Geolocation Field&lt;/code&gt;''' &amp; '''&lt;code&gt;Leaflet&lt;/code&gt;''': Um die Adressen der &lt;code&gt;Orte&lt;/code&gt; auf einer interaktiven Karte darzustellen.
** '''&lt;code&gt;Webform&lt;/code&gt;''': Für Kontaktformulare oder Formulare, mit denen Nutzer Veranstaltungen oder Orte vorschlagen können ("Event einreichen").
** '''&lt;code&gt;Admin Toolbar&lt;/code&gt;''': Verbessert das Admin-Menü für eine schnellere Verwaltung.
** '''&lt;code&gt;Simple XML Sitemap&lt;/code&gt;''': Erstellt eine Sitemap für Suchmaschinen.</text>
      <sha1>jpyw9idkqxem3fno8a91aaw8g7uc40t</sha1>
    </revision>
    <revision>
      <id>124</id>
      <parentid>123</parentid>
      <timestamp>2025-06-15T05:38:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>124</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2354" sha1="g53ujnj0jyd5lvm9oyi0fqsbb06o6hh" xml:space="preserve">* '''Aktuelles'''
** ''Unterseite: Nachrichten:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Artikel&lt;/code&gt; chronologisch anzeigt. Filterbar nach &lt;code&gt;Themen-Kategorien&lt;/code&gt;.
** ''Unterseite: Veranstaltungskalender:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Veranstaltung&lt;/code&gt; als Kalender oder Liste anzeigt. Filterbar nach Datum und &lt;code&gt;Veranstaltungsart&lt;/code&gt;.
* '''Leben &amp; Alltag'''
** ''Unterseite: Gastronomie:'' Eine View, die alle &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Gastronomie" anzeigt.
** ''Unterseite: Einkaufen:'' Eine View, die alle &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Einzelhandel" anzeigt.
** ''Unterseite: Gesundheit:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Gesundheit" (Ärzte, Apotheken).
** ''Unterseite: Familie &amp; Bildung:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorien "Schule", "Kita" etc. und Artikel der Kategorie "Familie &amp; Soziales".
* '''Freizeit &amp; Kultur'''
** ''Unterseite: Vereine:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Verein" und Artikel der Kategorie "Sport &amp; Vereine".
** ''Unterseite: Sehenswürdigkeiten:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Sehenswürdigkeit".
** ''Unterseite: Ausflugsziele:'' Zeigt Artikel und Orte mit dem Tag "Ausflugsziel".
* '''Branchenbuch'''
** Eine leistungsstarke View-Seite, die alle &lt;code&gt;Orte&lt;/code&gt; anzeigt. Mit einer exponierten Filterleiste (Suche nach Name, Filter nach &lt;code&gt;Branchen / Orte-Art&lt;/code&gt;) und idealerweise einer Kartenansicht (z.B. mit dem Leaflet-Modul).
* ÖPNV (Öffentlicher Personennahverkehr)
* Stadtwerke &amp; Versorgung
* Abfall &amp; Entsorgung:

=== Wichtige Drupal-Module für dieses Projekt ===

* '''Core-Module:''' Views, Taxonomy, Blocks, Menus, Media Library.
* '''Zusatz-Module (Contrib):'''
** '''&lt;code&gt;Pathauto&lt;/code&gt;''': Erstellt automatisch saubere URLs (z.B. &lt;code&gt;/aktuelles/mein-super-artikel&lt;/code&gt; statt &lt;code&gt;/node/123&lt;/code&gt;). Absolut essenziell für SEO.
** '''&lt;code&gt;Geolocation Field&lt;/code&gt;''' &amp; '''&lt;code&gt;Leaflet&lt;/code&gt;''': Um die Adressen der &lt;code&gt;Orte&lt;/code&gt; auf einer interaktiven Karte darzustellen.
** '''&lt;code&gt;Webform&lt;/code&gt;''': Für Kontaktformulare oder Formulare, mit denen Nutzer Veranstaltungen oder Orte vorschlagen können ("Event einreichen").
** '''&lt;code&gt;Admin Toolbar&lt;/code&gt;''': Verbessert das Admin-Menü für eine schnellere Verwaltung.
** '''&lt;code&gt;Simple XML Sitemap&lt;/code&gt;''': Erstellt eine Sitemap für Suchmaschinen.</text>
      <sha1>g53ujnj0jyd5lvm9oyi0fqsbb06o6hh</sha1>
    </revision>
    <revision>
      <id>125</id>
      <parentid>124</parentid>
      <timestamp>2025-06-20T09:40:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>125</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2372" sha1="no5lgulb5rqkxya9rb8nc7rt23jwjm3" xml:space="preserve">* '''Aktuelles'''
** ''Unterseite: Nachrichten:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Artikel&lt;/code&gt; chronologisch anzeigt. Filterbar nach &lt;code&gt;Themen-Kategorien&lt;/code&gt;.
** ''Unterseite: [[Server:Drupal/Veranstaltungskalender]]:'' Eine View, die alle Inhalte vom Typ &lt;code&gt;Veranstaltung&lt;/code&gt; als Kalender oder Liste anzeigt. Filterbar nach Datum und &lt;code&gt;Veranstaltungsart&lt;/code&gt;.
* '''Leben &amp; Alltag'''
** ''Unterseite: Gastronomie:'' Eine View, die alle &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Gastronomie" anzeigt.
** ''Unterseite: Einkaufen:'' Eine View, die alle &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Einzelhandel" anzeigt.
** ''Unterseite: Gesundheit:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Gesundheit" (Ärzte, Apotheken).
** ''Unterseite: Familie &amp; Bildung:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorien "Schule", "Kita" etc. und Artikel der Kategorie "Familie &amp; Soziales".
* '''Freizeit &amp; Kultur'''
** ''Unterseite: Vereine:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Verein" und Artikel der Kategorie "Sport &amp; Vereine".
** ''Unterseite: Sehenswürdigkeiten:'' Zeigt &lt;code&gt;Orte&lt;/code&gt; der Kategorie "Sehenswürdigkeit".
** ''Unterseite: Ausflugsziele:'' Zeigt Artikel und Orte mit dem Tag "Ausflugsziel".
* '''Branchenbuch'''
** Eine leistungsstarke View-Seite, die alle &lt;code&gt;Orte&lt;/code&gt; anzeigt. Mit einer exponierten Filterleiste (Suche nach Name, Filter nach &lt;code&gt;Branchen / Orte-Art&lt;/code&gt;) und idealerweise einer Kartenansicht (z.B. mit dem Leaflet-Modul).
* ÖPNV (Öffentlicher Personennahverkehr)
* Stadtwerke &amp; Versorgung
* Abfall &amp; Entsorgung:

=== Wichtige Drupal-Module für dieses Projekt ===

* '''Core-Module:''' Views, Taxonomy, Blocks, Menus, Media Library.
* '''Zusatz-Module (Contrib):'''
** '''&lt;code&gt;Pathauto&lt;/code&gt;''': Erstellt automatisch saubere URLs (z.B. &lt;code&gt;/aktuelles/mein-super-artikel&lt;/code&gt; statt &lt;code&gt;/node/123&lt;/code&gt;). Absolut essenziell für SEO.
** '''&lt;code&gt;Geolocation Field&lt;/code&gt;''' &amp; '''&lt;code&gt;Leaflet&lt;/code&gt;''': Um die Adressen der &lt;code&gt;Orte&lt;/code&gt; auf einer interaktiven Karte darzustellen.
** '''&lt;code&gt;Webform&lt;/code&gt;''': Für Kontaktformulare oder Formulare, mit denen Nutzer Veranstaltungen oder Orte vorschlagen können ("Event einreichen").
** '''&lt;code&gt;Admin Toolbar&lt;/code&gt;''': Verbessert das Admin-Menü für eine schnellere Verwaltung.
** '''&lt;code&gt;Simple XML Sitemap&lt;/code&gt;''': Erstellt eine Sitemap für Suchmaschinen.</text>
      <sha1>no5lgulb5rqkxya9rb8nc7rt23jwjm3</sha1>
    </revision>
  </page>
  <page>
    <title>Ahrensburg.city:Datenschutz</title>
    <ns>4</ns>
    <id>17</id>
    <revision>
      <id>126</id>
      <timestamp>2025-06-15T12:38:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Verantwortliche Stelle im Sinne der Datenschutzgesetze, insbesondere der EU-Datenschutzgrundverordnung (DSGVO), ist:  * Thorsten Klöhn * Gerhardstraße 2 * 22926 Ahrensburg * Telefon: 04102-2 17 40 07 * e-Mail: thorstenkloehn@gmail.com  &lt;span id="ihre-betroffenenrechte"&gt;&lt;/span&gt; == Ihre Betroffenenrechte ==  Unter den angegebenen Kontaktdaten unseres Datenschutzbeauftragten können Sie jederzeit folgende Rechte ausüben:  * Auskunft über Ihre bei uns ges…“</comment>
      <origin>126</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5074" sha1="9bzk3a7y9uynfn6xooeid5ogsi436pp" xml:space="preserve">Verantwortliche Stelle im Sinne der Datenschutzgesetze, insbesondere der EU-Datenschutzgrundverordnung (DSGVO), ist:

* Thorsten Klöhn
* Gerhardstraße 2
* 22926 Ahrensburg
* Telefon: 04102-2 17 40 07
* e-Mail: thorstenkloehn@gmail.com

&lt;span id="ihre-betroffenenrechte"&gt;&lt;/span&gt;
== Ihre Betroffenenrechte ==

Unter den angegebenen Kontaktdaten unseres Datenschutzbeauftragten können Sie jederzeit folgende Rechte ausüben:

* Auskunft über Ihre bei uns gespeicherten Daten und deren Verarbeitung (Art. 15 DSGVO),
* Berichtigung unrichtiger personenbezogener Daten (Art. 16 DSGVO),
* Löschung Ihrer bei uns gespeicherten Daten (Art. 17 DSGVO),
* Einschränkung der Datenverarbeitung, sofern wir Ihre Daten aufgrund gesetzlicher Pflichten noch nicht löschen dürfen (Art. 18 DSGVO),
* Widerspruch gegen die Verarbeitung Ihrer Daten bei uns (Art. 21 DSGVO) und
* Datenübertragbarkeit, sofern Sie in die Datenverarbeitung eingewilligt haben oder einen Vertrag mit uns abgeschlossen haben (Art. 20 DSGVO).

Sofern Sie uns eine Einwilligung erteilt haben, können Sie diese jederzeit mit Wirkung für die Zukunft widerrufen.

Sie können sich jederzeit mit einer Beschwerde an eine Aufsichtsbehörde wenden, z. B. an die zuständige Aufsichtsbehörde des Bundeslands Ihres Wohnsitzes oder an die für uns als verantwortliche Stelle zuständige Behörde.

Eine Liste der Aufsichtsbehörden (für den nichtöffentlichen Bereich) mit Anschrift finden Sie unter: .

&lt;span id="eingebettete-youtube-videos"&gt;&lt;/span&gt;
== Eingebettete YouTube-Videos ==

&lt;span id="art-und-zweck-der-verarbeitung"&gt;&lt;/span&gt;
=== Art und Zweck der Verarbeitung: ===

Auf einigen unserer Webseiten betten wir YouTube-Videos ein. Betreiber der entsprechenden Plugins ist die YouTube, LLC, 901 Cherry Ave., San Bruno, CA 94066, USA (nachfolgend „YouTube“). Wenn Sie eine Seite mit dem YouTube-Plugin besuchen, wird eine Verbindung zu Servern von YouTube hergestellt. Dabei wird YouTube mitgeteilt, welche Seiten Sie besuchen. Wenn Sie in Ihrem YouTube-Account eingeloggt sind, kann YouTube Ihr Surfverhalten Ihnen persönlich zuzuordnen. Dies verhindern Sie, indem Sie sich vorher aus Ihrem YouTube-Account ausloggen.

Wird ein YouTube-Video gestartet, setzt der Anbieter Cookies ein, die Hinweise über das Nutzerverhalten sammeln.

Weitere Informationen zu Zweck und Umfang der Datenerhebung und ihrer Verarbeitung durch YouTube erhalten Sie in den Datenschutzerklärungen des Anbieters, Dort erhalten Sie auch weitere Informationen zu Ihren diesbezüglichen Rechten und Einstellungsmöglichkeiten zum Schutze Ihrer Privatsphäre (). Google verarbeitet Ihre Daten in den USA und hat sich dem EU-US Privacy Shield unterworfen https://www.privacyshield.gov/EU-US-Framework

&lt;span id="rechtsgrundlage"&gt;&lt;/span&gt;
=== Rechtsgrundlage: ===

Rechtsgrundlage für die Einbindung von YouTube und dem damit verbundenen Datentransfer zu Google ist Ihre Einwilligung (Art. 6 Abs. 1 lit. a DSGVO).

&lt;span id="empfänger"&gt;&lt;/span&gt;
=== Empfänger: ===

Der Aufruf von YouTube löst automatisch eine Verbindung zu Google aus.

&lt;span id="speicherdauer-und-widerruf-der-einwilligung"&gt;&lt;/span&gt;
=== Speicherdauer und Widerruf der Einwilligung: ===

Wer das Speichern von Cookies für das Google-Ad-Programm deaktiviert hat, wird auch beim Anschauen von YouTube-Videos mit keinen solchen Cookies rechnen müssen. YouTube legt aber auch in anderen Cookies nicht-personenbezogene Nutzungsinformationen ab. Möchten Sie dies verhindern, so müssen Sie das Speichern von Cookies im Browser blockieren.

Weitere Informationen zum Datenschutz bei „YouTube“ finden Sie in der Datenschutzerklärung des Anbieters unter:

&lt;span id="drittlandtransfer"&gt;&lt;/span&gt;
=== Drittlandtransfer: ===

Google verarbeitet Ihre Daten in den USA und hat sich dem EU_US Privacy Shield unterworfen .

&lt;span id="bereitstellung-vorgeschrieben-oder-erforderlich"&gt;&lt;/span&gt;
=== Bereitstellung vorgeschrieben oder erforderlich: ===

Die Bereitstellung Ihrer personenbezogenen Daten erfolgt freiwillig, allein auf Basis Ihrer Einwilligung. Sofern Sie den Zugriff unterbinden, kann es hierdurch zu Funktionseinschränkungen auf der Website kommen.

&lt;span id="änderung-unserer-datenschutzbestimmungen"&gt;&lt;/span&gt;
== Änderung unserer Datenschutzbestimmungen ==

Wir behalten uns vor, diese Datenschutzerklärung anzupassen, damit sie stets den aktuellen rechtlichen Anforderungen entspricht oder um Änderungen unserer Leistungen in der Datenschutzerklärung umzusetzen, z.B. bei der Einführung neuer Services. Für Ihren erneuten Besuch gilt dann die neue Datenschutzerklärung.

&lt;span id="fragen-an-den-datenschutzbeauftragten"&gt;&lt;/span&gt;
== Fragen an den Datenschutzbeauftragten ==

Wenn Sie Fragen zum Datenschutz haben, schreiben Sie uns bitte eine E-Mail oder wenden Sie sich direkt an die für den Datenschutz verantwortliche Person in unserer Organisation:

''Die Datenschutzerklärung wurde mit dem'' [https://www.activemind.de/datenschutz/datenschutzhinweis-generator/ ''Datenschutzerklärungs-Generator der activeMind AG erstellt''] *(Version 2018-09-24).c</text>
      <sha1>9bzk3a7y9uynfn6xooeid5ogsi436pp</sha1>
    </revision>
  </page>
  <page>
    <title>Ahrensburg.city:Impressum</title>
    <ns>4</ns>
    <id>18</id>
    <revision>
      <id>127</id>
      <timestamp>2025-06-15T12:41:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Angaben gemäß § 5 TMG  * Thorsten Klöhn * Gerhardstraße 2 * 22926 Ahrensburg  &lt;span id="vertreten-durch"&gt;&lt;/span&gt; == Vertreten durch: ==  Thorsten Klöhn  &lt;span id="kontakt"&gt;&lt;/span&gt; == Kontakt: ==  * Telefon: 04102-2 17 40 07&lt;br /&gt;  * E-Mail: thorstenkloehn@gmail.com  &lt;span id="haftungsausschluss"&gt;&lt;/span&gt; == Haftungsausschluss: ==  &lt;span id="haftung-für-inhalte"&gt;&lt;/span&gt; === Haftung für Inhalte ===  Die Inhalte unserer Seiten wurden mit größter Sor…“</comment>
      <origin>127</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3757" sha1="6znqq26rxwf6p9wwazjb3vkwila13wf" xml:space="preserve">Angaben gemäß § 5 TMG

* Thorsten Klöhn
* Gerhardstraße 2
* 22926 Ahrensburg

&lt;span id="vertreten-durch"&gt;&lt;/span&gt;
== Vertreten durch: ==

Thorsten Klöhn

&lt;span id="kontakt"&gt;&lt;/span&gt;
== Kontakt: ==

* Telefon: 04102-2 17 40 07&lt;br /&gt;

* E-Mail: thorstenkloehn@gmail.com

&lt;span id="haftungsausschluss"&gt;&lt;/span&gt;
== Haftungsausschluss: ==

&lt;span id="haftung-für-inhalte"&gt;&lt;/span&gt;
=== Haftung für Inhalte ===

Die Inhalte unserer Seiten wurden mit größter Sorgfalt erstellt. Für die Richtigkeit, Vollständigkeit und Aktualität der Inhalte können wir jedoch keine Gewähr übernehmen. Als Diensteanbieter sind wir gemäß § 7 Abs.1 TMG für eigene Inhalte auf diesen Seiten nach den allgemeinen Gesetzen verantwortlich. Nach §§ 8 bis 10 TMG sind wir als Diensteanbieter jedoch nicht verpflichtet, übermittelte oder gespeicherte fremde Informationen zu überwachen oder nach Umständen zu forschen, die auf eine rechtswidrige Tätigkeit hinweisen. Verpflichtungen zur Entfernung oder Sperrung der Nutzung von Informationen nach den allgemeinen Gesetzen bleiben hiervon unberührt. Eine diesbezügliche Haftung ist jedoch erst ab dem Zeitpunkt der Kenntnis einer konkreten Rechtsverletzung möglich. Bei Bekanntwerden von entsprechenden Rechtsverletzungen werden wir diese Inhalte umgehend entfernen. ### Haftung für Links Unser Angebot enthält Links zu externen Webseiten Dritter, auf deren Inhalte wir keinen Einfluss haben. Deshalb können wir für diese fremden Inhalte auch keine Gewähr übernehmen. Für die Inhalte der verlinkten Seiten ist stets der jeweilige Anbieter oder Betreiber der Seiten verantwortlich. Die verlinkten Seiten wurden zum Zeitpunkt der Verlinkung auf mögliche Rechtsverstöße überprüft. Rechtswidrige Inhalte waren zum Zeitpunkt der Verlinkung nicht erkennbar. Eine permanente inhaltliche Kontrolle der verlinkten Seiten ist jedoch ohne konkrete Anhaltspunkte einer Rechtsverletzung nicht zumutbar. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Links umgehend entfernen.&lt;br /&gt;
===Urheberrecht===

Dieses Werk ist lizenziert unter einer [http://creativecommons.org/licenses/by/4.0/ Creative Commons Namensnennung 4.0 International Lizenz].Soweit die Inhalte auf dieser Seite nicht vom Betreiber erstellt wurden, werden die Urheberrechte Dritter beachtet. Insbesondere werden Inhalte Dritter als solche gekennzeichnet. Sollten Sie trotzdem auf eine Urheberrechtsverletzung aufmerksam werden, bitten wir um einen entsprechenden Hinweis. Bei Bekanntwerden von Rechtsverletzungen werden wir derartige Inhalte umgehend entfernen.

===Datenschutz=== 
Die Nutzung unserer Webseite ist in der Regel ohne Angabe personenbezogener Daten möglich. Soweit auf unseren Seiten personenbezogene Daten (beispielsweise Name, Anschrift oder eMail-Adressen) erhoben werden, erfolgt dies, soweit möglich, stets auf freiwilliger Basis. Diese Daten werden ohne Ihre ausdrückliche Zustimmung nicht an Dritte weitergegeben.&lt;br /&gt;
Wir weisen darauf hin, dass die Datenübertragung im Internet (z.B. bei der Kommunikation per E-Mail) Sicherheitslücken aufweisen kann. Ein lückenloser Schutz der Daten vor dem Zugriff durch Dritte ist nicht möglich. Der Nutzung von im Rahmen der Impressumspflicht veröffentlichten Kontaktdaten durch Dritte zur Übersendung von nicht ausdrücklich angeforderter Werbung und Informationsmaterialien wird hiermit ausdrücklich widersprochen. Die Betreiber der Seiten behalten sich ausdrücklich rechtliche Schritte im Falle der unverlangten Zusendung von Werbeinformationen, etwa durch Spam-Mails, vor.&lt;br /&gt;


Impressum vom [https://www.impressum-generator.de Impressum Generator] der [Kanzlei Hasselbach, Rechtsanwälte für Arbeitsrecht und Familienrecht](https://www.kanzlei-hasselbach</text>
      <sha1>6znqq26rxwf6p9wwazjb3vkwila13wf</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal</title>
    <ns>0</ns>
    <id>19</id>
    <revision>
      <id>128</id>
      <timestamp>2025-06-16T00:47:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „[[Server:Drupal/Installieren]]“</comment>
      <origin>128</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="30" sha1="dal7faxu9ujjhmzv1roh8vhkhmp7wre" xml:space="preserve">[[Server:Drupal/Installieren]]</text>
      <sha1>dal7faxu9ujjhmzv1roh8vhkhmp7wre</sha1>
    </revision>
    <revision>
      <id>129</id>
      <parentid>128</parentid>
      <timestamp>2025-06-19T21:57:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>129</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="68" sha1="neteyy7icy2ouem7s0r2s03murl8vky" xml:space="preserve">[[Server:Drupal/Installieren]]
[[Server;Drupal/Nginx-Konfiguration]]</text>
      <sha1>neteyy7icy2ouem7s0r2s03murl8vky</sha1>
    </revision>
    <revision>
      <id>130</id>
      <parentid>129</parentid>
      <timestamp>2025-06-19T21:58:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>130</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="72" sha1="fsd3dhjaauh1c88je9qg6l567bptw1z" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server;Drupal/Nginx-Konfiguration]]</text>
      <sha1>fsd3dhjaauh1c88je9qg6l567bptw1z</sha1>
    </revision>
    <revision>
      <id>131</id>
      <parentid>130</parentid>
      <timestamp>2025-06-19T22:05:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>131</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="115" sha1="pnevfox7t99240a3jd9pn9qtyftw0ze" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server;Drupal/Nginx-Konfiguration]]
* {{Server;Drupal/Berechtigungsproblemen]]</text>
      <sha1>pnevfox7t99240a3jd9pn9qtyftw0ze</sha1>
    </revision>
    <revision>
      <id>132</id>
      <parentid>131</parentid>
      <timestamp>2025-06-19T22:06:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>132</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="115" sha1="t0bp1z7h52ozbn7v7svxkmg97bbkxzb" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server;Drupal/Nginx-Konfiguration]]
* [[Server;Drupal/Berechtigungsproblemen]]</text>
      <sha1>t0bp1z7h52ozbn7v7svxkmg97bbkxzb</sha1>
    </revision>
    <revision>
      <id>133</id>
      <parentid>132</parentid>
      <timestamp>2025-06-19T22:29:10Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>133</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="141" sha1="0wdomdxk3v9j6moicf21dafqg2cyyq9" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server;Drupal/Nginx-Konfiguration]]
* [[Server;Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]</text>
      <sha1>0wdomdxk3v9j6moicf21dafqg2cyyq9</sha1>
    </revision>
    <revision>
      <id>134</id>
      <parentid>133</parentid>
      <timestamp>2025-06-19T22:35:24Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>134</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="173" sha1="oulgz98vp3k96jnivhmzuhug43yrj2b" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server;Drupal/Nginx-Konfiguration]]
* [[Server;Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]
* [[Drupal/Paket Installieren]]</text>
      <sha1>oulgz98vp3k96jnivhmzuhug43yrj2b</sha1>
    </revision>
    <revision>
      <id>135</id>
      <parentid>134</parentid>
      <timestamp>2025-06-20T18:50:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>135</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="184" sha1="9f6jx312ljmwd3pjf5q1uf9nj04bm3i" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server;Drupal/Nginx-Konfiguration]]
* [[Server;Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]
* [[Server:DrupalPaket Installieren]]
* [[</text>
      <sha1>9f6jx312ljmwd3pjf5q1uf9nj04bm3i</sha1>
    </revision>
    <revision>
      <id>136</id>
      <parentid>135</parentid>
      <timestamp>2025-06-20T18:55:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>136</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="184" sha1="7a1jgb62smuupfb9u43c443v7ikgvub" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server:Drupal/Nginx-Konfiguration]]
* [[Server:Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]
* [[Server:DrupalPaket Installieren]]
* [[</text>
      <sha1>7a1jgb62smuupfb9u43c443v7ikgvub</sha1>
    </revision>
    <revision>
      <id>137</id>
      <parentid>136</parentid>
      <timestamp>2025-06-20T19:02:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>137</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="217" sha1="3r5vqfa083z7ev0pg4ch8wy46o0i1r2" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server:Drupal/Nginx-Konfiguration]]
* [[Server:Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]
* [[Server:DrupalPaket Installieren]]
* [[Server:Drupal/Cookie-Richtlinie]]</text>
      <sha1>3r5vqfa083z7ev0pg4ch8wy46o0i1r2</sha1>
    </revision>
    <revision>
      <id>138</id>
      <parentid>137</parentid>
      <timestamp>2025-06-20T19:12:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>138</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="251" sha1="gf6q6qdtuo62cr5m95uoh5pqlt8svii" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server:Drupal/Nginx-Konfiguration]]
* [[Server:Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]
* [[Server:DrupalPaket Installieren]]
* [[Server:Drupal/Cookie-Richtlinie]]
* [[Server:Drupal/Inhalt Import]]</text>
      <sha1>gf6q6qdtuo62cr5m95uoh5pqlt8svii</sha1>
    </revision>
    <revision>
      <id>139</id>
      <parentid>138</parentid>
      <timestamp>2025-06-20T19:39:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>139</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="285" sha1="dm88ffxgen5ya9gghr5lahjl2x73nru" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server:Drupal/Nginx-Konfiguration]]
* [[Server:Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]
* [[Server:DrupalPaket Installieren]]
* [[Server:Drupal/Cookie-Richtlinie]]
* [[Server:Drupal/Inhalt Import]]
* [[Server:Drupal/Inhalt Export]]</text>
      <sha1>dm88ffxgen5ya9gghr5lahjl2x73nru</sha1>
    </revision>
    <revision>
      <id>140</id>
      <parentid>139</parentid>
      <timestamp>2025-06-20T19:48:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>140</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="372" sha1="fxvh07l4q1ilaws7vi70yrsn5qjy9n9" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server:Drupal/Nginx-Konfiguration]]
* [[Server:Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]
* [[Server:DrupalPaket Installieren]]
* [[Server:Drupal/Cookie-Richtlinie]]
* [[Server:Drupal/Inhalt Import]]
* [[Server:Drupal/Inhalt Export]]
* [[Server:Drupal/vollständige statische HTML-Kopie einer Drupal-Website zu erstellen</text>
      <sha1>fxvh07l4q1ilaws7vi70yrsn5qjy9n9</sha1>
    </revision>
    <revision>
      <id>141</id>
      <parentid>140</parentid>
      <timestamp>2025-06-20T19:48:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>141</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="374" sha1="h7rj2i6h5u8ibzhtidj2se4h1h16i4g" xml:space="preserve">* [[Server:Drupal/Installieren]]
* [[Server:Drupal/Nginx-Konfiguration]]
* [[Server:Drupal/Berechtigungsproblemen]]
* [[Server:Drupal/Drush]]
* [[Server:DrupalPaket Installieren]]
* [[Server:Drupal/Cookie-Richtlinie]]
* [[Server:Drupal/Inhalt Import]]
* [[Server:Drupal/Inhalt Export]]
* [[Server:Drupal/vollständige statische HTML-Kopie einer Drupal-Website zu erstellen]]</text>
      <sha1>h7rj2i6h5u8ibzhtidj2se4h1h16i4g</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/Installieren</title>
    <ns>0</ns>
    <id>20</id>
    <revision>
      <id>142</id>
      <timestamp>2025-06-16T00:47:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Anleitung: Drupal 11 Installation unter Ubuntu 24.04 =  == Vorbereitung ==  # '''Terminal öffnen:''' Starten Sie die Terminal-Anwendung. # '''Server-Anmeldung:''' #* Stellen Sie via SSH eine Verbindung zu Ihrem Server her: &lt;code&gt;ssh &lt;root@Beispiel.de&gt;&lt;/code&gt; #* Geben Sie Ihr Serverpasswort ein, wenn Sie dazu aufgefordert werden. # '''Optionale Datenbankbearbeitung:''' #* '''Vorhandene Drupal-Datenbank löschen:''' Führen Sie im Terminal folgende Befeh…“</comment>
      <origin>142</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3694" sha1="f1bjdbc3468i4nar0641qas5pgwszt7" xml:space="preserve">= Anleitung: Drupal 11 Installation unter Ubuntu 24.04 =

== Vorbereitung ==

# '''Terminal öffnen:''' Starten Sie die Terminal-Anwendung.
# '''Server-Anmeldung:'''
#* Stellen Sie via SSH eine Verbindung zu Ihrem Server her: &lt;code&gt;ssh &lt;root@Beispiel.de&gt;&lt;/code&gt;
#* Geben Sie Ihr Serverpasswort ein, wenn Sie dazu aufgefordert werden.
# '''Optionale Datenbankbearbeitung:'''
#* '''Vorhandene Drupal-Datenbank löschen:''' Führen Sie im Terminal folgende Befehle aus:
#* &lt;code&gt;sudo -u postgres -i&lt;/code&gt;
#* &lt;code&gt;psql&lt;/code&gt;
#* &lt;code&gt;GRANT ALL PRIVILEGES ON DATABASE drupal TO postgres;&lt;/code&gt;
#* &lt;code&gt;drop database drupal;&lt;/code&gt;
#* &lt;code&gt;\q&lt;/code&gt;

== Neue Datenbank erstellen ==
Führen Sie die nachstehenden Schritte im Terminal aus:

# '''Als Benutzer &lt;code&gt;postgres&lt;/code&gt; anmelden:'''
#* &lt;code&gt;sudo -u postgres -i&lt;/code&gt;
# '''Drupal-Datenbank erstellen:''' (UTF8-Kodierung, Eigentümer: thorsten)
#* &lt;code&gt;createdb -E UTF8 -O thorsten drupal&lt;/code&gt;
# '''PostGIS-Erweiterung hinzufügen:'''
#* &lt;code&gt;psql -d drupal -c "CREATE EXTENSION postgis;"&lt;/code&gt;
# '''hstore-Erweiterung hinzufügen:'''
#* &lt;code&gt;psql -d drupal -c "CREATE EXTENSION hstore;"&lt;/code&gt;
# '''pg_trgm-Erweiterung hinzufügen:'''
#* &lt;code&gt;psql -d drupal -c "CREATE EXTENSION pg_trgm;"&lt;/code&gt;
# '''Rechte für &lt;code&gt;geometry_columns&lt;/code&gt; setzen:'''
#* &lt;code&gt;psql -d drupal -c "ALTER TABLE geometry_columns OWNER TO thorsten;"&lt;/code&gt;
# '''Rechte für &lt;code&gt;spatial_ref_sys&lt;/code&gt; setzen:'''
#* &lt;code&gt;psql -d drupal -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;"&lt;/code&gt;
# '''Alle Rechte für die Datenbank &lt;code&gt;drupal&lt;/code&gt; an &lt;code&gt;thorsten&lt;/code&gt; vergeben:'''
#* &lt;code&gt;psql -d drupal -c "GRANT ALL PRIVILEGES ON DATABASE drupal TO thorsten"&lt;/code&gt;
# '''Abmelden:'''
#* &lt;code&gt;exit&lt;/code&gt;

== Installation benötigter PHP-Pakete ==

* &lt;code&gt;sudo apt update&lt;/code&gt;
* &lt;code&gt;sudo apt install nginx php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-opcache -y&lt;/code&gt;

== In Kurze Form ==
 sudo -u postgres -i
 psql
 GRANT ALL PRIVILEGES ON DATABASE drupal TO postgres;
 drop database drupal;
 \q
 sudo -u postgres -i
 createdb -E UTF8 -O thorsten drupal
 psql -d drupal -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d drupal -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d drupal -c "CREATE EXTENSION pg_trgm;"
 psql -d drupal -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
 psql -d drupal -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
 psql -d drupal -c "GRANT ALL PRIVILEGES ON DATABASE drupal TO thorsten;"
 exit
 sudo apt update
 sudo apt install nginx php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-opcache -y

== Composer installieren ==
Um Composer zu installieren, geben Sie bitte die folgende Zeile ein:
 php -r "copy('&lt;nowiki&gt;https://getcomposer.org/installer'&lt;/nowiki&gt;, 'composer-setup.php');"
 php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
 php composer-setup.php
 php -r "unlink('composer-setup.php');"
 sudo mv composer.phar /usr/local/bin/composer

== Drupal-Installation mit Composer ==
Um Drupal mithilfe von Composer zu installieren, führen Sie die nachfolgenden Schritte im Terminal aus:

# Navigieren Sie zum Verzeichnis `/var/www`: cd /var/www

Erstellen Sie ein neues Drupal-Projekt unter Verwendung der empfohlenen Projektvorlage:

composer create-project drupal/recommended-project drupal</text>
      <sha1>f1bjdbc3468i4nar0641qas5pgwszt7</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Mediawiki/Freigabeprozess</title>
    <ns>0</ns>
    <id>21</id>
    <revision>
      <id>143</id>
      <timestamp>2025-06-16T01:09:01Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung. * Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.  == Was ist Approved Revs? == Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßi…“</comment>
      <origin>143</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="629" sha1="1uahfayeha4wv44rsen8948b8qyvzmq" xml:space="preserve">* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung.
* Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.

== Was ist Approved Revs? ==
Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßig immer die genehmigte Version, während Bearbeitungen erst nach erneuter Freigabe sichtbar werden. Das hilft, die Qualität und Zuverlässigkeit von Inhalten zu sichern.</text>
      <sha1>1uahfayeha4wv44rsen8948b8qyvzmq</sha1>
    </revision>
    <revision>
      <id>144</id>
      <parentid>143</parentid>
      <timestamp>2025-06-16T01:13:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>144</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1462" sha1="4os8mhhpblzta0piadiir867mgb27xi" xml:space="preserve">* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung.
* Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.

== Was ist Approved Revs? ==
Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßig immer die genehmigte Version, während Bearbeitungen erst nach erneuter Freigabe sichtbar werden. Das hilft, die Qualität und Zuverlässigkeit von Inhalten zu sichern.Ins


Lade die Erweiterung herunter:

cd /var/www/stadtwiki

COMPOSER=composer.local.json composer require --no-update  mediawiki/approved-revs

composer update mediawiki/approved-revs --no-dev -o

Aktiviere die Erweiterung in deiner LocalSettings.php:

wfLoadExtension( 'ApprovedRevs' );

$wgGroupPermissions['sysop']['approverevisions'] = true;

&lt;nowiki&gt;#&lt;/nowiki&gt; Explizites Sperren für alle anderen (normalerweise nicht nötig, aber sehr deutlich)

$wgGroupPermissions['*']['approverevisions'] = false;      // Gilt für ALLE (auch unangemeldete)

$wgGroupPermissions['user']['approverevisions'] = false;   // Gilt für alle angemeldeten Benutzer

(Optional) Passe die Konfiguration nach Bedarf an, z.B.:

$wgApprovedRevsEnabledNamespaces = [ NS_MAIN ];

Führe das MediaWiki-Update-Skript aus:

php maintenance/update.php</text>
      <sha1>4os8mhhpblzta0piadiir867mgb27xi</sha1>
    </revision>
    <revision>
      <id>145</id>
      <parentid>144</parentid>
      <timestamp>2025-06-16T01:15:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>145</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1279" sha1="l8d19qjz5z6n6nyugileqjj73en1xpj" xml:space="preserve">* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung.
* Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.

== Was ist Approved Revs? ==
Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßig immer die genehmigte Version, während Bearbeitungen erst nach erneuter Freigabe sichtbar werden. Das hilft, die Qualität und Zuverlässigkeit von Inhalten zu sichern.Ins


Lade die Erweiterung herunter:
&lt;pre&gt;
cd /var/www/stadtwiki
COMPOSER=composer.local.json composer require --no-update  mediawiki/approved-revs
composer update mediawiki/approved-revs --no-dev -o
&lt;/pre&gt;
Aktiviere die Erweiterung in deiner LocalSettings.php:
&lt;pre&gt;
wfLoadExtension( 'ApprovedRevs' );
$wgGroupPermissions['sysop']['approverevisions'] = true;
$wgGroupPermissions['*']['approverevisions'] = false;      // Gilt für ALLE (auch unangemeldete)
$wgGroupPermissions['user']['approverevisions'] = false;   // Gilt für alle angemeldeten Benutzer
&lt;/pre&gt;

Führe das MediaWiki-Update-Skript aus:
&lt;pre&gt;
php maintenance/update.php
&lt;/pre&gt;</text>
      <sha1>l8d19qjz5z6n6nyugileqjj73en1xpj</sha1>
    </revision>
    <revision>
      <id>146</id>
      <parentid>145</parentid>
      <timestamp>2025-06-16T01:18:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>146</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1220" sha1="6cfbg35jpwjj9wtlryork6sww8y8hrp" xml:space="preserve">* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung.
* Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.

== Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßig immer die genehmigte Version, während Bearbeitungen erst nach erneuter Freigabe sichtbar werden. Das hilft, die Qualität und Zuverlässigkeit von Inhalten zu sichern. ==
&lt;pre&gt;
cd /var/www/stadtwiki
COMPOSER=composer.local.json composer require --no-update  mediawiki/approved-revs
composer update mediawiki/approved-revs --no-dev -o
&lt;/pre&gt;
Aktiviere die Erweiterung in deiner LocalSettings.php:
&lt;pre&gt;
wfLoadExtension( 'ApprovedRevs' );
$wgGroupPermissions['sysop']['approverevisions'] = true;
$wgGroupPermissions['*']['approverevisions'] = false;      // Gilt für ALLE (auch unangemeldete)
$wgGroupPermissions['user']['approverevisions'] = false;   // Gilt für alle angemeldeten Benutzer
&lt;/pre&gt;

Führe das MediaWiki-Update-Skript aus:
&lt;pre&gt;
php maintenance/update.php
&lt;/pre&gt;</text>
      <sha1>6cfbg35jpwjj9wtlryork6sww8y8hrp</sha1>
    </revision>
    <revision>
      <id>147</id>
      <parentid>146</parentid>
      <timestamp>2025-06-16T01:20:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>147</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1231" sha1="lb6d0doaemt97vngr96ofooqmw1yyjk" xml:space="preserve">* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung.
* Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.
==Approved Revs==
Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßig immer die genehmigte Version, während Bearbeitungen erst nach erneuter Freigabe sichtbar werden. Das hilft, die Qualität und Zuverlässigkeit von Inhalten zu sichern.
&lt;pre&gt;
cd /var/www/stadtwiki
COMPOSER=composer.local.json composer require --no-update  mediawiki/approved-revs
composer update mediawiki/approved-revs --no-dev -o
&lt;/pre&gt;
Aktiviere die Erweiterung in deiner LocalSettings.php:
&lt;pre&gt;
wfLoadExtension( 'ApprovedRevs' );
$wgGroupPermissions['sysop']['approverevisions'] = true;
$wgGroupPermissions['*']['approverevisions'] = false;      // Gilt für ALLE (auch unangemeldete)
$wgGroupPermissions['user']['approverevisions'] = false;   // Gilt für alle angemeldeten Benutzer
&lt;/pre&gt;

Führe das MediaWiki-Update-Skript aus:
&lt;pre&gt;
php maintenance/update.php
&lt;/pre&gt;</text>
      <sha1>lb6d0doaemt97vngr96ofooqmw1yyjk</sha1>
    </revision>
    <revision>
      <id>148</id>
      <parentid>147</parentid>
      <timestamp>2025-06-16T01:21:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Approved Revs */</comment>
      <origin>148</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1231" sha1="qit87lnpq0havt2i0k6s4le3i4k6afg" xml:space="preserve">* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung.
* Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.
==Approved Revs==
Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßig immer die genehmigte Version, während Bearbeitungen erst nach erneuter Freigabe sichtbar werden. Das hilft, die Qualität und Zuverlässigkeit von Inhalten zu sichern.
&lt;pre&gt;
cd /var/www/mediawiki
COMPOSER=composer.local.json composer require --no-update  mediawiki/approved-revs
composer update mediawiki/approved-revs --no-dev -o
&lt;/pre&gt;
Aktiviere die Erweiterung in deiner LocalSettings.php:
&lt;pre&gt;
wfLoadExtension( 'ApprovedRevs' );
$wgGroupPermissions['sysop']['approverevisions'] = true;
$wgGroupPermissions['*']['approverevisions'] = false;      // Gilt für ALLE (auch unangemeldete)
$wgGroupPermissions['user']['approverevisions'] = false;   // Gilt für alle angemeldeten Benutzer
&lt;/pre&gt;

Führe das MediaWiki-Update-Skript aus:
&lt;pre&gt;
php maintenance/update.php
&lt;/pre&gt;</text>
      <sha1>qit87lnpq0havt2i0k6s4le3i4k6afg</sha1>
    </revision>
    <revision>
      <id>149</id>
      <parentid>148</parentid>
      <timestamp>2025-06-16T01:49:30Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>149</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2215" sha1="rim1irviahi0mnquxmjpf56qfwt8wcl" xml:space="preserve">* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung.
* Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.
==Approved Revs==
Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßig immer die genehmigte Version, während Bearbeitungen erst nach erneuter Freigabe sichtbar werden. Das hilft, die Qualität und Zuverlässigkeit von Inhalten zu sichern.
&lt;pre&gt;
cd /var/www/mediawiki
COMPOSER=composer.local.json composer require --no-update  mediawiki/approved-revs
composer update mediawiki/approved-revs --no-dev -o
&lt;/pre&gt;
Aktiviere die Erweiterung in deiner LocalSettings.php:
&lt;pre&gt;
wfLoadExtension( 'ApprovedRevs' );
$wgGroupPermissions['sysop']['approverevisions'] = true;
$wgGroupPermissions['*']['approverevisions'] = false;      // Gilt für ALLE (auch unangemeldete)
$wgGroupPermissions['user']['approverevisions'] = false;   // Gilt für alle angemeldeten Benutzer


$wgGroupPermissions['sysop']['approverevisions'] = true;
# Explizites Sperren für alle anderen (normalerweise nicht nötig, aber sehr deu&gt;
$wgGroupPermissions['*']['approverevisions'] = false;      // Gilt für ALLE (au&gt;
$wgGroupPermissions['user']['approverevisions'] = false;  
$wgGroupPermissions['*']['viewlinktolatest'] = false;
$wgGroupPermissions['sysop']['viewlinktolatest'] = true;
$egApprovedRevsAutomaticApprovals = false;
$egApprovedRevsShowNotApprovedMessage  =  true ;
$egApprovedRevsBlankIfUnapproved = true;
# Allen Benutzern das Recht entziehen, die Versionsgeschichte zu sehen
$wgGroupPermissions['*']['read'] = true; // Stellt sicher, dass jeder lesen kann
$wgGroupPermissions['*']['history'] = false;
$wgGroupPermissions['user']['history'] = false;
$wgSpecialPageLockdown['Recentchanges'] = [ 'sysop' ];
# Nur Administratoren das Recht geben, die Versionsgeschichte zu sehen
$wgGroupPermissions['sysop']['history'] = true;
wfLoadExtension( 'ApprovedRevs' );



&lt;/pre&gt;

Führe das MediaWiki-Update-Skript aus:
&lt;pre&gt;
php maintenance/update.php
&lt;/pre&gt;</text>
      <sha1>rim1irviahi0mnquxmjpf56qfwt8wcl</sha1>
    </revision>
    <revision>
      <id>150</id>
      <parentid>149</parentid>
      <timestamp>2025-06-16T01:51:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>150</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1919" sha1="4urcbcqdf6c97ktdcxgi24j8dxwrzad" xml:space="preserve">* Approved Revs: Empfohlene Erweiterung zur Versionsfreigabe, ideal für Stadtwikis zur Qualitätssicherung.
* Page Approvals: Ermöglicht die gezielte Freigabe einzelner Seitenversionen, hilfreich für spezielle Stadtwiki-Inhalte.
==Approved Revs==
Approved Revs ist eine MediaWiki-Erweiterung, mit der Administratoren oder bestimmte Benutzer eine bestimmte Version einer Seite als „genehmigt“ markieren können. Besucher sehen standardmäßig immer die genehmigte Version, während Bearbeitungen erst nach erneuter Freigabe sichtbar werden. Das hilft, die Qualität und Zuverlässigkeit von Inhalten zu sichern.
&lt;pre&gt;
cd /var/www/mediawiki
COMPOSER=composer.local.json composer require --no-update  mediawiki/approved-revs
composer update mediawiki/approved-revs --no-dev -o
&lt;/pre&gt;
Aktiviere die Erweiterung in deiner LocalSettings.php:
&lt;pre&gt;
$wgGroupPermissions['sysop']['approverevisions'] = true;
# Explizites Sperren für alle anderen (normalerweise nicht nötig, aber sehr deu&gt;
$wgGroupPermissions['*']['approverevisions'] = false;      // Gilt für ALLE (au&gt;
$wgGroupPermissions['user']['approverevisions'] = false;  
$wgGroupPermissions['*']['viewlinktolatest'] = false;
$wgGroupPermissions['sysop']['viewlinktolatest'] = true;
$egApprovedRevsAutomaticApprovals = false;
$egApprovedRevsShowNotApprovedMessage  =  true ;
$egApprovedRevsBlankIfUnapproved = true;
# Allen Benutzern das Recht entziehen, die Versionsgeschichte zu sehen
$wgGroupPermissions['*']['read'] = true; // Stellt sicher, dass jeder lesen kann
$wgGroupPermissions['*']['history'] = false;
$wgGroupPermissions['user']['history'] = false;
$wgSpecialPageLockdown['Recentchanges'] = [ 'sysop' ];
# Nur Administratoren das Recht geben, die Versionsgeschichte zu sehen
$wgGroupPermissions['sysop']['history'] = true;
wfLoadExtension( 'ApprovedRevs' );



&lt;/pre&gt;

Führe das MediaWiki-Update-Skript aus:
&lt;pre&gt;
php maintenance/update.php
&lt;/pre&gt;</text>
      <sha1>4urcbcqdf6c97ktdcxgi24j8dxwrzad</sha1>
    </revision>
  </page>
  <page>
    <title>Sehenswürdigkeiten</title>
    <ns>0</ns>
    <id>22</id>
    <revision>
      <id>151</id>
      <timestamp>2025-06-16T10:18:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>151</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="396" sha1="8o1rufi1aexpjb4eaga8lb7vwbe9v5u" xml:space="preserve">== Sehenswürdigkeiten in Ahrensburg ==

Ahrensburg bietet zahlreiche Sehenswürdigkeiten:

* '''[[Schloss Ahrensburg]]''': Das weiße Renaissanceschloss ist das Wahrzeichen der Stadt und beherbergt ein Museum.
* '''[[Schlosskirche Ahrensburg]]''': Historische Kirche aus dem 15. Jahrhundert.
* '''[[Marstall Ahrensburg]]''': Ehemaliges Wirtschaftsgebäude des Schlosses, heute Veranstaltungsort.</text>
      <sha1>8o1rufi1aexpjb4eaga8lb7vwbe9v5u</sha1>
    </revision>
    <revision>
      <id>152</id>
      <parentid>151</parentid>
      <timestamp>2025-06-20T07:16:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>152</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="292" sha1="75fh1783pdu3a6csoux2j7u1oftqhmd" xml:space="preserve">== Sehenswürdigkeiten in Ahrensburg ==

Ahrensburg bietet zahlreiche Sehenswürdigkeiten:

* '''[[Schloss Ahrensburg]]''': Das weiße Renaissanceschloss ist das Wahrzeichen der Stadt und beherbergt ein Museum.
* '''[[Schlosskirche Ahrensburg]]''': Historische Kirche aus dem 15. Jahrhundert.</text>
      <sha1>75fh1783pdu3a6csoux2j7u1oftqhmd</sha1>
    </revision>
  </page>
  <page>
    <title>Schloss Ahrensburg</title>
    <ns>0</ns>
    <id>23</id>
    <revision>
      <id>153</id>
      <timestamp>2025-06-16T10:59:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>153</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="427" sha1="o7gk304x57ay5uiebno19jp8wzqbug7" xml:space="preserve">Das leuchtend weiße, von einem Wassergraben umgebene Schloss Ahrensburg liegt im südlichen Schleswig-Holstein, nordöstlich von Hamburg und nördlich des Stadtzentrums von Ahrensburg an der Lübecker Straße. Es ist in einen sehr schönen Park eingebettet.
Das kleine Schloss wird allgemein als Herrenhaus bezeichnet. Früher, in der Renaissancezeit bis zur Weimarer Zeit, lag es inmitten der Ländereien eines adligen Gutes.</text>
      <sha1>o7gk304x57ay5uiebno19jp8wzqbug7</sha1>
    </revision>
    <revision>
      <id>154</id>
      <parentid>153</parentid>
      <timestamp>2025-06-16T12:03:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>154</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="974" sha1="9p2ae1yxojunne3yeqwu3qrfb7psiza" xml:space="preserve">Das leuchtend weiße, von einem Wassergraben umgebene Schloss Ahrensburg liegt im südlichen Schleswig-Holstein, nordöstlich von Hamburg und nördlich des Stadtzentrums von Ahrensburg an der Lübecker Straße. Es ist in einen sehr schönen englischen Landschaftspark eingebettet.
Das kleine Schloss wird allgemein als Herrenhaus bezeichnet. Früher, in der Renaissancezeit bis zur Weimarer Zeit, lag es inmitten der Ländereien eines adligen Gutes.

Das Schloss ist eine bekannte Renaissance-Architektur Schleswig-Holsteins und ist der Öffentlichkeit zugänglich.
==Geschichte==
Im 15. Jahrhundert war der dänische König auch Herzog von Holstein. 1567 erwarb König Friedrich II. die Adelsgüter Woldenhorn, Ahrensburg und Rethwisch.
Der Statthalter in den Herzogtümern, Daniel Rantzau, wurde beauftragt, die alte Burg Ahrensburg abzureißen. Friedrich II. beauftragte ihn, an einer idyllischen Stelle am Fluss Hunnau im Hunnautal in Ahrensburg ein Herrenhaus zu bauen.</text>
      <sha1>9p2ae1yxojunne3yeqwu3qrfb7psiza</sha1>
    </revision>
    <revision>
      <id>155</id>
      <parentid>154</parentid>
      <timestamp>2025-06-16T13:11:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>155</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1674" sha1="meweoygjzyenwrx72mwnxnz8bmohr62" xml:space="preserve">Das leuchtend weiße, von einem Wassergraben umgebene Schloss Ahrensburg liegt im südlichen Schleswig-Holstein, nordöstlich von Hamburg und nördlich des Stadtzentrums von Ahrensburg an der Lübecker Straße. Es ist in einen sehr schönen englischen Landschaftspark eingebettet.
Das kleine Schloss wird allgemein als Herrenhaus bezeichnet. Früher, in der Renaissancezeit bis zur Weimarer Zeit, lag es inmitten der Ländereien eines adligen Gutes.

Das Schloss ist eine bekannte Renaissance-Architektur Schleswig-Holsteins und ist der Öffentlichkeit zugänglich.
==Geschichte==
Im 15. Jahrhundert war der dänische König auch Herzog von Holstein. 1567 erwarb König Friedrich II. die Adelsgüter Woldenhorn, Ahrensburg und Rethwisch.
Der Feldherr Daniel Rantzau in den Herzogtümern wurde beauftragt, die alte Burg Ahrensburg abzureißen. Friedrich II. beauftragte ihn und übertrug ihm das Rittergut als Dank für seine herausragenden militärischen Dienste. An einer idyllischen Stelle am Fluss Hunnau im Hunnautal in Ahrensburg sollte er ein Herrenhaus bauen.
Um 1587 wurde das Schloss gebaut, wobei Steine der alten Ahrenfelder Burg verwendet wurden. 
Leider starb Daniel Rantzau zwei Jahre später während eines Feldzugs bei der Belagerung der Festung Varberg in Schweden. Er war nicht verheiratet und hatte keine Kinder.
Das von Daniel Rantzau begonnene Herrenhaus wurde zwischen 1585 und 1595 fertiggestellt, aber er selbst hat es nie gesehen. Sein Bruder Peter Rantzau erbte das Herrenhaus.
Peter Rantzau zog mit seiner Frau in das Schloss Ahrensburg und starb vier Jahre später. Er hinterließ die Bedingung, dass seine Nachfahren sein soziales Werk erhalten.</text>
      <sha1>meweoygjzyenwrx72mwnxnz8bmohr62</sha1>
    </revision>
    <revision>
      <id>156</id>
      <parentid>155</parentid>
      <timestamp>2025-06-16T14:22:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>156</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2789" sha1="262wdt2nx90e4pbe3eztq16w1clu90i" xml:space="preserve">Das leuchtend weiße, von einem Wassergraben umgebene Schloss Ahrensburg liegt im südlichen Schleswig-Holstein, nordöstlich von Hamburg und nördlich des Stadtzentrums von Ahrensburg an der Lübecker Straße. Es ist in einen sehr schönen englischen Landschaftspark eingebettet.
Das kleine Schloss wird allgemein als Herrenhaus bezeichnet. Früher, in der Renaissancezeit bis zur Weimarer Zeit, lag es inmitten der Ländereien eines adligen Gutes.

Das Schloss ist eine bekannte Renaissance-Architektur Schleswig-Holsteins und ist der Öffentlichkeit zugänglich.
==Geschichte==
===Familie Rantzau Ära===
Im 15. Jahrhundert war der dänische König auch Herzog von Holstein. 1567 erwarb König Friedrich II. die Adelsgüter Woldenhorn, Ahrensburg und Rethwisch.
Der Feldherr Daniel Rantzau in den Herzogtümern wurde beauftragt, die alte Burg Ahrensburg abzureißen. Friedrich II. beauftragte ihn und übertrug ihm das Rittergut als Dank für seine herausragenden militärischen Dienste. An einer idyllischen Stelle am Fluss Hunnau im Hunnautal in Ahrensburg sollte er ein Herrenhaus bauen.
Um 1587 wurde das Schloss gebaut, wobei Steine der alten Ahrenfelder Burg verwendet wurden.
Leider starb Daniel Rantzau zwei Jahre später während eines Feldzugs bei der Belagerung der Festung Varberg in Schweden. Er war nicht verheiratet und hatte keine Kinder.
Das von Daniel Rantzau begonnene Herrenhaus wurde zwischen 1585 und 1595 fertiggestellt, aber er selbst hat es nie gesehen. Sein Bruder Peter Rantzau erbte das Herrenhaus.
Peter Rantzau zog mit seiner Frau in das Schloss Ahrensburg und starb vier Jahre später. Er hinterließ die Bedingung, dass seine Nachfahren sein soziales Werk erhalten.
Nach dem Dreißigjährigen Krieg zehrten die Kosten des Krieges an der Familie Rantzau, viele ihrer Güter wurden zerstört und gebrandschatzt, und der Wiederaufbau ihres Vermögens war schwierig. Sie konnten das alte Schloss Ahrensburg noch halten.
Die Familie Rantzau verschärfte die Regeln der Leibeigenschaft und ordnete mehr und längere Frondienste an. Es kam auch zu vielen Bauernaufständen. Noch etwa 100 Jahre konnten sie das Schloss halten, doch sie verarmten langsam immer mehr.
===Familie Schimmelmann===
Heinrich Carl von Schimmelmann war Kaufmann, Sklavenhändler und Berater des dänischen Königs. Er stieg zum reichsten Kaufmann Europas auf und wurde für seine Dienste am dänischen König zum Ritter geschlagen.
Er kaufte 1759 das Schloss Ahrensburg von der Familie Rantzau. Die Familie Schimmelmann prägte das wirtschaftliche und soziale Leben in Ahrensburg durch enge Verbindungen zum dänischen Königshof. Das Herrenhaus wurde zu einem barocken Schloss und später zu einem klassizistischen Meisterwerk umgebaut.
===Das Ende einer Ära und ein bleibendes Erbe===</text>
      <sha1>262wdt2nx90e4pbe3eztq16w1clu90i</sha1>
    </revision>
    <revision>
      <id>157</id>
      <parentid>156</parentid>
      <timestamp>2025-06-16T14:53:57Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>157</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3428" sha1="qdzxy03ctjrhtct9b3tr86wgjna23u2" xml:space="preserve">Das leuchtend weiße, von einem Wassergraben umgebene Schloss Ahrensburg liegt im südlichen Schleswig-Holstein, nordöstlich von Hamburg und nördlich des Stadtzentrums von Ahrensburg an der Lübecker Straße. Es ist in einen sehr schönen englischen Landschaftspark eingebettet.
Das kleine Schloss wird allgemein als Herrenhaus bezeichnet. Früher, in der Renaissancezeit bis zur Weimarer Zeit, lag es inmitten der Ländereien eines adligen Gutes.

Das Schloss ist eine bekannte Renaissance-Architektur Schleswig-Holsteins und ist der Öffentlichkeit zugänglich.
==Geschichte==
===Familie Rantzau Ära===
Im 15. Jahrhundert war der dänische König auch Herzog von Holstein. 1567 erwarb König Friedrich II. die Adelsgüter Woldenhorn, Ahrensburg und Rethwisch.
Der Feldherr Daniel Rantzau in den Herzogtümern wurde beauftragt, die alte Burg Ahrensburg abzureißen. Friedrich II. beauftragte ihn und übertrug ihm das Rittergut als Dank für seine herausragenden militärischen Dienste. An einer idyllischen Stelle am Fluss Hunnau im Hunnautal in Ahrensburg sollte er ein Herrenhaus bauen.
Um 1587 wurde das Schloss gebaut, wobei Steine der alten Ahrenfelder Burg verwendet wurden.
Leider starb Daniel Rantzau zwei Jahre später während eines Feldzugs bei der Belagerung der Festung Varberg in Schweden. Er war nicht verheiratet und hatte keine Kinder.
Das von Daniel Rantzau begonnene Herrenhaus wurde zwischen 1585 und 1595 fertiggestellt, aber er selbst hat es nie gesehen. Sein Bruder Peter Rantzau erbte das Herrenhaus.
Peter Rantzau zog mit seiner Frau in das Schloss Ahrensburg und starb vier Jahre später. Er hinterließ die Bedingung, dass seine Nachfahren sein soziales Werk erhalten.
Nach dem Dreißigjährigen Krieg zehrten die Kosten des Krieges an der Familie Rantzau, viele ihrer Güter wurden zerstört und gebrandschatzt, und der Wiederaufbau ihres Vermögens war schwierig. Sie konnten das alte Schloss Ahrensburg noch halten.
Die Familie Rantzau verschärfte die Regeln der Leibeigenschaft und ordnete mehr und längere Frondienste an. Es kam auch zu vielen Bauernaufständen. Noch etwa 100 Jahre konnten sie das Schloss halten, doch sie verarmten langsam immer mehr.
===Familie Schimmelmann===
Heinrich Carl von Schimmelmann war Kaufmann, Sklavenhändler und Berater des dänischen Königs. Er stieg zum reichsten Kaufmann Europas auf und wurde für seine Dienste am dänischen König zum Ritter geschlagen.
Er kaufte 1759 das Schloss Ahrensburg von der Familie Rantzau. Die Familie Schimmelmann prägte das wirtschaftliche und soziale Leben in Ahrensburg durch enge Verbindungen zum dänischen Königshof. Das Herrenhaus wurde zu einem barocken Schloss und später zu einem klassizistischen Meisterwerk umgebaut.
===Das Ende einer Ära und ein bleibendes Erbe===
Dem Schloss Ahrensburg drohte die Zwangsversteigerung, da die Familie Schimmelmann langsam verarmte und sich das Schloss nicht mehr leisten konnte. 1932 verkaufte sie es, und die Kreissparkasse Stormarn erwarb das Schloss Ahrensburg.
Der Verein Schloss Ahrensburg wurde gegründet und verwaltet das Schloss seitdem.
==Weblinks==
* [https://www.schloss-ahrensburg.de/ Offizielle Website]
* [https://de.wikipedia.org/wiki/Schloss_Ahrensburg Schloss Ahrensburg]
* [https://www.stormarnlexikon.de/schlossahrensburg_bau/ Schloss Ahrensburg]
* [https://www.hamburg-tourism.de/sehen-erleben/metropolregion/schloss-ahrensburg/ Schloss Ahrensburg]</text>
      <sha1>qdzxy03ctjrhtct9b3tr86wgjna23u2</sha1>
    </revision>
    <revision>
      <id>158</id>
      <parentid>157</parentid>
      <timestamp>2025-06-24T17:15:09Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>158</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4130" sha1="6inbjpf9gut3zvcbqvb44dplb6syhgk" xml:space="preserve">Das leuchtend weiße, von einem Wassergraben umgebene Schloss Ahrensburg liegt im südlichen Schleswig-Holstein, nordöstlich von Hamburg und nördlich des Stadtzentrums von Ahrensburg an der Lübecker Straße. Es ist in einen sehr schönen englischen Landschaftspark eingebettet.
Das kleine Schloss wird allgemein als Herrenhaus bezeichnet. Früher, in der Renaissancezeit bis zur Weimarer Zeit, lag es inmitten der Ländereien eines adligen Gutes.

Das Schloss ist eine bekannte Renaissance-Architektur Schleswig-Holsteins und ist der Öffentlichkeit zugänglich.
==Geschichte==
===Familie Rantzau Ära===
Im 15. Jahrhundert war der dänische König auch Herzog von Holstein. 1567 erwarb König Friedrich II. die Adelsgüter Woldenhorn, Ahrensburg und Rethwisch.
Der Feldherr Daniel Rantzau in den Herzogtümern wurde beauftragt, die alte Burg Ahrensburg abzureißen. Friedrich II. beauftragte ihn und übertrug ihm das Rittergut als Dank für seine herausragenden militärischen Dienste. An einer idyllischen Stelle am Fluss Hunnau im Hunnautal in Ahrensburg sollte er ein Herrenhaus bauen.
Um 1587 wurde das Schloss gebaut, wobei Steine der alten Ahrenfelder Burg verwendet wurden.
Leider starb Daniel Rantzau zwei Jahre später während eines Feldzugs bei der Belagerung der Festung Varberg in Schweden. Er war nicht verheiratet und hatte keine Kinder.
Das von Daniel Rantzau begonnene Herrenhaus wurde zwischen 1585 und 1595 fertiggestellt, aber er selbst hat es nie gesehen. Sein Bruder Peter Rantzau erbte das Herrenhaus.
Peter Rantzau zog mit seiner Frau in das Schloss Ahrensburg und starb vier Jahre später. Er hinterließ die Bedingung, dass seine Nachfahren sein soziales Werk erhalten.
Nach dem Dreißigjährigen Krieg zehrten die Kosten des Krieges an der Familie Rantzau, viele ihrer Güter wurden zerstört und gebrandschatzt, und der Wiederaufbau ihres Vermögens war schwierig. Sie konnten das alte Schloss Ahrensburg noch halten.
Die Familie Rantzau verschärfte die Regeln der Leibeigenschaft und ordnete mehr und längere Frondienste an. Es kam auch zu vielen Bauernaufständen. Noch etwa 100 Jahre konnten sie das Schloss halten, doch sie verarmten langsam immer mehr.
===Familie Schimmelmann===
Heinrich Carl von Schimmelmann war Kaufmann, Sklavenhändler und Berater des dänischen Königs. Er stieg zum reichsten Kaufmann Europas auf und wurde für seine Dienste am dänischen König zum Ritter geschlagen.
Er kaufte 1759 das Schloss Ahrensburg von der Familie Rantzau. Die Familie Schimmelmann prägte das wirtschaftliche und soziale Leben in Ahrensburg durch enge Verbindungen zum dänischen Königshof. Das Herrenhaus wurde zu einem barocken Schloss und später zu einem klassizistischen Meisterwerk umgebaut.
===Das Ende einer Ära und ein bleibendes Erbe===
Dem Schloss Ahrensburg drohte die Zwangsversteigerung, da die Familie Schimmelmann langsam verarmte und sich das Schloss nicht mehr leisten konnte. 1932 verkaufte sie es, und die Kreissparkasse Stormarn erwarb das Schloss Ahrensburg.
Der Verein Schloss Ahrensburg wurde gegründet und verwaltet das Schloss seitdem.
==Als kultureller Veranstaltungsort==
Das Schloss Ahrensburg eignet sich ideal für Lesungen, Konzerte, Ausstellungen sowie private Feiern und Hochzeiten im historischen Ambiente. Verschiedene Räume bieten unterschiedliche Nutzungsmöglichkeiten:

* '''Salon Louis-Seize (2. OG):''' Trauung, Lesung, kleiner Vortrag, ca. 14 Plätze
* '''Bibliothek (2. OG):''' Trauung, Lesung, ca. 18 Plätze
* '''Gartensaal (EG):''' Lesung, Konzert, Trauung, 28–35 Sitzplätze, zusätzlich ca. 15 Stehplätze (bis zu 60 Personen)
* '''Schlosskeller / Gewölbe:''' Stimmungsvolles Ambiente für Feiern, bis zu 80 Personen an runden Tischen
* '''Schlosspark (Open-Air-Bühne):''' Open-Air-Konzerte, Kino und Events


==Weblinks==
* [https://www.schloss-ahrensburg.de/ Offizielle Website]
* [https://de.wikipedia.org/wiki/Schloss_Ahrensburg Schloss Ahrensburg]
* [https://www.stormarnlexikon.de/schlossahrensburg_bau/ Schloss Ahrensburg]
* [https://www.hamburg-tourism.de/sehen-erleben/metropolregion/schloss-ahrensburg/ Schloss Ahrensburg]</text>
      <sha1>6inbjpf9gut3zvcbqvb44dplb6syhgk</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Nginx Einstellung</title>
    <ns>0</ns>
    <id>24</id>
    <revision>
      <id>159</id>
      <timestamp>2025-06-18T00:12:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>159</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6948" sha1="hzhof6a9zhv4jxsp2fyj2ebwplyvj1q" xml:space="preserve">==Erstellen Sie eine neue Konfigurationsdatei==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
&lt;pre&gt;
 sudo nano /etc/nginx/conf.d/start.conf
&lt;/pre&gt;
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei

&lt;pre&gt;
/**
 * NGINX-Konfigurationsdatei für mehrere virtuelle Hosts mit SSL-Unterstützung.
 *
 * Enthält folgende Server-Blöcke:
 *
 * 1. ahrensburg.city &amp; www.ahrensburg.city (Drupal):
 *    - Lauscht auf Port 443 mit SSL und HTTP/2.
 *    - Verwendet Let's Encrypt-Zertifikate.
 *    - Setzt Sicherheitsheader (X-Frame-Options, X-Content-Type-Options, X-XSS-Protection).
 *    - Aktiviert Gzip-Komprimierung für verschiedene Dateitypen.
 *    - Schützt sensible Verzeichnisse und Dateien (z.B. private Dateien, .php in /sites/files).
 *    - Leitet Anfragen über try_files an index.php weiter (Drupal-typisch).
 *    - Spezielle Behandlung für statische Assets (js, css, Bilder) mit Caching.
 *    - FastCGI-Konfiguration für PHP über php8.3-fpm.
 *
 * 2. wiki.ahrensburg.city (MediaWiki):
 *    - Lauscht auf Port 443 mit SSL und HTTP/2 (IPv4 &amp; IPv6).
 *    - Root-Verzeichnis: /var/www/mediawiki.
 *    - Alias für /karte-Verzeichnis mit Autoindex.
 *    - Reverse Proxy für /hot auf lokalen Dienst (Port 8080).
 *    - Standard-URL-Rewriting für MediaWiki.
 *    - FastCGI für PHP-Dateien.
 *    - Schutz vor Zugriff auf .ht*-Dateien.
 *
 * 3. alterwiki.ahrensburg.city:
 *    - Wie wiki.ahrensburg.city, aber Root: /var/www/alterwiki.
 *    - Gleiches URL-Rewriting und PHP-Handling.
 *    - Schutz vor .ht*-Dateien.
 *
 * 5. HTTP-zu-HTTPS-Redirect:
 *    - Leitet alle Anfragen auf Port 80 (IPv4 &amp; IPv6) für ahrensburg.city und www.ahrensburg.city per 301-Redirect auf HTTPS um.
 *
 * Hinweise:
 * - Alle Server verwenden die gleichen SSL-Zertifikate.
 * - PHP wird über Unix-Socket an php8.3-fpm weitergeleitet.
 * - Die Konfiguration ist für produktive Umgebungen optimiert (Sicherheit, Performance, Redirects).
 */

server {
    listen 443 ssl http2;
    server_name ahrensburg.city www.ahrensburg.city;

    root /var/www/drupal/web;
    index index.php index.html;

    ssl_certificate      /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Sicherheitsheader
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    # Gzip-Komprimierung
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt  { allow all; log_not_found off; access_log off; }

    location ~ \..*/.*\.php$ { return 403; }
    location ~ ^/sites/.*/private/ { return 403; }
    location ~ ^/sites/[^/]+/files/.*\.php$ { deny all; }
    location ~ (^|/)\. { return 403; }

    location / {
        try_files $uri /index.php?$query_string;
    }

    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

    location ~ '\.php$|^/update.php' {
        include fastcgi_params;
        fastcgi_split_path_info ^(.+?\.php)(/.*)?$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY "";
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_intercept_errors on;
    }

    location ~ ^/sites/.*/files/styles/ {
        try_files $uri @rewrite;
    }

    location ~ ^(/[a-z\-]+)?/system/files/ {
        try_files $uri /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        try_files $uri @rewrite;
        expires max;
        log_not_found off;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wiki.ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/mediawiki;
    index index.php index.html index.htm;
    location /karte {
    alias /var/www/karte;
    autoindex on;
}
location /hot {
    proxy_pass http://localhost:8080/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name alterwiki.ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/alterwiki;
    index index.php index.html index.htm;

 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name stadtwiki.ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/stadtwiki;
    index index.php index.html index.htm;

 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}

server {
    listen 80;
    listen [::]:80;
    server_name ahrensburg.city www.ahrensburg.city;
    return 301 https://$host$request_uri;
}

&lt;/pre&gt;

'''Hinweis:'''
* Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
&lt;pre&gt;
sudo nginx -t
sudo systemctl reload nginx
&lt;/pre&gt;
* Prüfen Sie mit &lt;code&gt;sudo nginx -t&lt;/code&gt; immer zuerst, ob die Konfiguration fehlerfrei ist.
* Weitere Informationen finden Sie in der offiziellen [https://nginx.org/de/docs/ Nginx-Dokumentation].</text>
      <sha1>hzhof6a9zhv4jxsp2fyj2ebwplyvj1q</sha1>
    </revision>
    <revision>
      <id>160</id>
      <parentid>159</parentid>
      <timestamp>2025-06-20T06:40:09Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>160</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2632" sha1="crmdcqyuspi6nfk9ib8mqj1vbrt0w0o" xml:space="preserve">==Erstellen Sie eine neue Konfigurationsdatei==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
&lt;pre&gt;
 sudo nano /etc/nginx/conf.d/start.conf
&lt;/pre&gt;
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei

&lt;pre&gt;
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wiki.ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/mediawiki;
    index index.php index.html index.htm;
    location /karte {
    alias /var/www/karte;
    autoindex on;
}
location /hot {
    proxy_pass http://localhost:8080/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name alterwiki.ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/alterwiki;
    index index.php index.html index.htm;

 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}

server {
    listen 80;
    listen [::]:80;
    server_name ahrensburg.city www.ahrensburg.city;
    return 301 https://$host$request_uri;
}

&lt;/pre&gt;

'''Hinweis:'''
* Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
&lt;pre&gt;
sudo nginx -t
sudo systemctl reload nginx
&lt;/pre&gt;
* Prüfen Sie mit &lt;code&gt;sudo nginx -t&lt;/code&gt; immer zuerst, ob die Konfiguration fehlerfrei ist.
* Weitere Informationen finden Sie in der offiziellen [https://nginx.org/de/docs/ Nginx-Dokumentation].</text>
      <sha1>crmdcqyuspi6nfk9ib8mqj1vbrt0w0o</sha1>
    </revision>
    <revision>
      <id>161</id>
      <parentid>160</parentid>
      <timestamp>2025-06-20T07:26:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>161</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6948" sha1="hzhof6a9zhv4jxsp2fyj2ebwplyvj1q" xml:space="preserve">==Erstellen Sie eine neue Konfigurationsdatei==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
&lt;pre&gt;
 sudo nano /etc/nginx/conf.d/start.conf
&lt;/pre&gt;
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei

&lt;pre&gt;
/**
 * NGINX-Konfigurationsdatei für mehrere virtuelle Hosts mit SSL-Unterstützung.
 *
 * Enthält folgende Server-Blöcke:
 *
 * 1. ahrensburg.city &amp; www.ahrensburg.city (Drupal):
 *    - Lauscht auf Port 443 mit SSL und HTTP/2.
 *    - Verwendet Let's Encrypt-Zertifikate.
 *    - Setzt Sicherheitsheader (X-Frame-Options, X-Content-Type-Options, X-XSS-Protection).
 *    - Aktiviert Gzip-Komprimierung für verschiedene Dateitypen.
 *    - Schützt sensible Verzeichnisse und Dateien (z.B. private Dateien, .php in /sites/files).
 *    - Leitet Anfragen über try_files an index.php weiter (Drupal-typisch).
 *    - Spezielle Behandlung für statische Assets (js, css, Bilder) mit Caching.
 *    - FastCGI-Konfiguration für PHP über php8.3-fpm.
 *
 * 2. wiki.ahrensburg.city (MediaWiki):
 *    - Lauscht auf Port 443 mit SSL und HTTP/2 (IPv4 &amp; IPv6).
 *    - Root-Verzeichnis: /var/www/mediawiki.
 *    - Alias für /karte-Verzeichnis mit Autoindex.
 *    - Reverse Proxy für /hot auf lokalen Dienst (Port 8080).
 *    - Standard-URL-Rewriting für MediaWiki.
 *    - FastCGI für PHP-Dateien.
 *    - Schutz vor Zugriff auf .ht*-Dateien.
 *
 * 3. alterwiki.ahrensburg.city:
 *    - Wie wiki.ahrensburg.city, aber Root: /var/www/alterwiki.
 *    - Gleiches URL-Rewriting und PHP-Handling.
 *    - Schutz vor .ht*-Dateien.
 *
 * 5. HTTP-zu-HTTPS-Redirect:
 *    - Leitet alle Anfragen auf Port 80 (IPv4 &amp; IPv6) für ahrensburg.city und www.ahrensburg.city per 301-Redirect auf HTTPS um.
 *
 * Hinweise:
 * - Alle Server verwenden die gleichen SSL-Zertifikate.
 * - PHP wird über Unix-Socket an php8.3-fpm weitergeleitet.
 * - Die Konfiguration ist für produktive Umgebungen optimiert (Sicherheit, Performance, Redirects).
 */

server {
    listen 443 ssl http2;
    server_name ahrensburg.city www.ahrensburg.city;

    root /var/www/drupal/web;
    index index.php index.html;

    ssl_certificate      /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Sicherheitsheader
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    # Gzip-Komprimierung
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt  { allow all; log_not_found off; access_log off; }

    location ~ \..*/.*\.php$ { return 403; }
    location ~ ^/sites/.*/private/ { return 403; }
    location ~ ^/sites/[^/]+/files/.*\.php$ { deny all; }
    location ~ (^|/)\. { return 403; }

    location / {
        try_files $uri /index.php?$query_string;
    }

    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=$1;
    }

    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

    location ~ '\.php$|^/update.php' {
        include fastcgi_params;
        fastcgi_split_path_info ^(.+?\.php)(/.*)?$;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY "";
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_intercept_errors on;
    }

    location ~ ^/sites/.*/files/styles/ {
        try_files $uri @rewrite;
    }

    location ~ ^(/[a-z\-]+)?/system/files/ {
        try_files $uri /index.php?$query_string;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        try_files $uri @rewrite;
        expires max;
        log_not_found off;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wiki.ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/mediawiki;
    index index.php index.html index.htm;
    location /karte {
    alias /var/www/karte;
    autoindex on;
}
location /hot {
    proxy_pass http://localhost:8080/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
}
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name alterwiki.ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/alterwiki;
    index index.php index.html index.htm;

 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name stadtwiki.ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/stadtwiki;
    index index.php index.html index.htm;

 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}

server {
    listen 80;
    listen [::]:80;
    server_name ahrensburg.city www.ahrensburg.city;
    return 301 https://$host$request_uri;
}

&lt;/pre&gt;

'''Hinweis:'''
* Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
&lt;pre&gt;
sudo nginx -t
sudo systemctl reload nginx
&lt;/pre&gt;
* Prüfen Sie mit &lt;code&gt;sudo nginx -t&lt;/code&gt; immer zuerst, ob die Konfiguration fehlerfrei ist.
* Weitere Informationen finden Sie in der offiziellen [https://nginx.org/de/docs/ Nginx-Dokumentation].</text>
      <sha1>hzhof6a9zhv4jxsp2fyj2ebwplyvj1q</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:SSL</title>
    <ns>0</ns>
    <id>25</id>
    <revision>
      <id>162</id>
      <timestamp>2025-06-18T00:30:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:  # &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren. # &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver. # &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standard-Konfiguration von Nginx, um Konflikte mit eigenen Einstellu…“</comment>
      <origin>162</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1181" sha1="4c0tkd485gr0gw73psy6zt2z8bzxxtg" xml:space="preserve">Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:

# &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren.
# &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver.
# &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standard-Konfiguration von Nginx, um Konflikte mit eigenen Einstellungen zu vermeiden.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt den laufenden Nginx-Dienst, damit Certbot später Zertifikate anfordern und konfigurieren kann.
# &lt;code&gt;sudo snap install --classic certbot&lt;/code&gt;  Installiert Certbot (das Tool zur Verwaltung von SSL-Zertifikaten von Let's Encrypt) über Snap.
# &lt;code&gt;sudo ln -s /snap/bin/certbot /usr/bin/certbot&lt;/code&gt;  Erstellt einen symbolischen Link, damit Certbot systemweit als Befehl verfügbar ist.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt Nginx erneut, um sicherzustellen, dass der Webserver für die Zertifikatsanfrage nicht läuft.

Diese Schritte bereiten das System darauf vor, SSL-Zertifikate mit Certbot für Nginx zu erstellen und zu verwalten.</text>
      <sha1>4c0tkd485gr0gw73psy6zt2z8bzxxtg</sha1>
    </revision>
    <revision>
      <id>163</id>
      <parentid>162</parentid>
      <timestamp>2025-06-18T00:32:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>163</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1419" sha1="nksts257uo48mpu1lc0yo439d45xfqn" xml:space="preserve">Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:

# &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren.
# &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver.
# &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standard-Konfiguration von Nginx, um Konflikte mit eigenen Einstellungen zu vermeiden.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt den laufenden Nginx-Dienst, damit Certbot später Zertifikate anfordern und konfigurieren kann.
# &lt;code&gt;sudo snap install --classic certbot&lt;/code&gt;  Installiert Certbot (das Tool zur Verwaltung von SSL-Zertifikaten von Let's Encrypt) über Snap.
# &lt;code&gt;sudo ln -s /snap/bin/certbot /usr/bin/certbot&lt;/code&gt;  Erstellt einen symbolischen Link, damit Certbot systemweit als Befehl verfügbar ist.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt Nginx erneut, um sicherzustellen, dass der Webserver für die Zertifikatsanfrage nicht läuft.

Diese Schritte bereiten das System darauf vor, SSL-Zertifikate mit Certbot für Nginx zu erstellen und zu verwalten.
&lt;pre&gt;
sudo apt install snapd
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
sudo systemctl stop nginx
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo systemctl stop nginx
&lt;/pre&gt;</text>
      <sha1>nksts257uo48mpu1lc0yo439d45xfqn</sha1>
    </revision>
    <revision>
      <id>164</id>
      <parentid>163</parentid>
      <timestamp>2025-06-18T00:59:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>164</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1674" sha1="hlgw3fz68mo8bjrl0t9kyazx7ltun8z" xml:space="preserve">Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:

# &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren.
# &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver.
# &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standard-Konfiguration von Nginx, um Konflikte mit eigenen Einstellungen zu vermeiden.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt den laufenden Nginx-Dienst, damit Certbot später Zertifikate anfordern und konfigurieren kann.
# &lt;code&gt;sudo snap install --classic certbot&lt;/code&gt;  Installiert Certbot (das Tool zur Verwaltung von SSL-Zertifikaten von Let's Encrypt) über Snap.
# &lt;code&gt;sudo ln -s /snap/bin/certbot /usr/bin/certbot&lt;/code&gt;  Erstellt einen symbolischen Link, damit Certbot systemweit als Befehl verfügbar ist.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt Nginx erneut, um sicherzustellen, dass der Webserver für die Zertifikatsanfrage nicht läuft.

Diese Schritte bereiten das System darauf vor, SSL-Zertifikate mit Certbot für Nginx zu erstellen und zu verwalten.
==Kurze Form==
&lt;pre&gt;
sudo apt install snapd
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
sudo systemctl stop nginx
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo systemctl stop nginx
&lt;/pre&gt;


&lt;pre&gt;

sudo certbot certonly --standalone -d ahrensburg.city www.ahrensburg.city
sudo certbot certonly --standalone -d doc.ahrensburg.city
sudo certbot certonly --standalone -d alterwiki.ahrensburg.city
sudo systemctl start nginx

&lt;/pre&gt;</text>
      <sha1>hlgw3fz68mo8bjrl0t9kyazx7ltun8z</sha1>
    </revision>
    <revision>
      <id>165</id>
      <parentid>164</parentid>
      <timestamp>2025-06-18T01:19:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>165</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1840" sha1="ngpqa4pt8bwlw4hpn9ku7q526zu2mta" xml:space="preserve">Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:

# &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren.
# &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver.
# &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standardkonfiguration von Nginx, um Konflikte mit eigenen Einstellungen zu vermeiden.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt den laufenden Nginx-Dienst, damit Certbot später Zertifikate anfordern und konfigurieren kann.
# &lt;code&gt;sudo snap install --classic certbot&lt;/code&gt;  Installiert Certbot (das Tool zur Verwaltung von SSL-Zertifikaten von Let's Encrypt) über Snap.
# &lt;code&gt;sudo ln -s /snap/bin/certbot /usr/bin/certbot&lt;/code&gt;  Erstellt einen symbolischen Link, damit Certbot systemweit als Befehl verfügbar ist.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt Nginx erneut, um sicherzustellen, dass der Webserver für die Zertifikatsanfrage nicht läuft.

Diese Schritte bereiten das System darauf vor, SSL-Zertifikate mit Certbot für Nginx zu erstellen und zu verwalten.

==Kurze Form==
&lt;pre&gt;
sudo apt install snapd
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
sudo systemctl stop nginx
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo systemctl stop nginx
&lt;/pre&gt;
Nach der Eingabe der obigen Befehle können Sie mit den folgenden Schritten fortfahren, um SSL-Zertifikate für Ihre Domains zu erstellen und Nginx wieder zu starten.
&lt;pre&gt;
sudo certbot certonly --standalone -d ahrensburg.city -d www.ahrensburg.city
sudo certbot certonly --standalone -d doc.ahrensburg.city
sudo certbot certonly --standalone -d alterwiki.ahrensburg.city
sudo systemctl start nginx
&lt;/pre&gt;</text>
      <sha1>ngpqa4pt8bwlw4hpn9ku7q526zu2mta</sha1>
    </revision>
    <revision>
      <id>166</id>
      <parentid>165</parentid>
      <timestamp>2025-06-20T06:42:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>166</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1782" sha1="bn1cv7n7shhys4wfredahwgdqj85u9l" xml:space="preserve">Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:

# &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren.
# &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver.
# &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standardkonfiguration von Nginx, um Konflikte mit eigenen Einstellungen zu vermeiden.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt den laufenden Nginx-Dienst, damit Certbot später Zertifikate anfordern und konfigurieren kann.
# &lt;code&gt;sudo snap install --classic certbot&lt;/code&gt;  Installiert Certbot (das Tool zur Verwaltung von SSL-Zertifikaten von Let's Encrypt) über Snap.
# &lt;code&gt;sudo ln -s /snap/bin/certbot /usr/bin/certbot&lt;/code&gt;  Erstellt einen symbolischen Link, damit Certbot systemweit als Befehl verfügbar ist.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt Nginx erneut, um sicherzustellen, dass der Webserver für die Zertifikatsanfrage nicht läuft.

Diese Schritte bereiten das System darauf vor, SSL-Zertifikate mit Certbot für Nginx zu erstellen und zu verwalten.

==Kurze Form==
&lt;pre&gt;
sudo apt install snapd
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
sudo systemctl stop nginx
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo systemctl stop nginx
&lt;/pre&gt;
Nach der Eingabe der obigen Befehle können Sie mit den folgenden Schritten fortfahren, um SSL-Zertifikate für Ihre Domains zu erstellen und Nginx wieder zu starten.
&lt;pre&gt;
sudo certbot certonly --standalone -d ahrensburg.city -d www.ahrensburg.city
sudo certbot certonly --standalone -d alterwiki.ahrensburg.city
sudo systemctl start nginx
&lt;/pre&gt;</text>
      <sha1>bn1cv7n7shhys4wfredahwgdqj85u9l</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Inhaltsverwaltung und Datenverwaltungssoftware für Websites</title>
    <ns>0</ns>
    <id>26</id>
    <revision>
      <id>167</id>
      <timestamp>2025-06-18T21:45:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Es gibt drei Ansätze zur Verwaltung von Website-Inhalten:  * '''Statische Website-Generatoren:''' Erstellen vorab gerenderte HTML-Dateien für schnelle und sichere Websites. * '''Content-Management-Systeme (CMS):''' Bieten eine benutzerfreundliche Oberfläche für die Inhaltserstellung und -verwaltung. * '''Web-Frameworks:''' Ermöglichen die Entwicklung maßgeschneiderter, dynamischer Websites mit voller Kontrolle über die Funktionalität.  Statische W…“</comment>
      <origin>167</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="9388" sha1="gh9pij357knyqlncmagc69tvbi9ymw7" xml:space="preserve">Es gibt drei Ansätze zur Verwaltung von Website-Inhalten:

* '''Statische Website-Generatoren:''' Erstellen vorab gerenderte HTML-Dateien für schnelle und sichere Websites.
* '''Content-Management-Systeme (CMS):''' Bieten eine benutzerfreundliche Oberfläche für die Inhaltserstellung und -verwaltung.
* '''Web-Frameworks:''' Ermöglichen die Entwicklung maßgeschneiderter, dynamischer Websites mit voller Kontrolle über die Funktionalität.

Statische Website-Generatoren sind Werzeuge, die aus Quellcode und Vorlagen HTML-Seiten erstellen. Besonders geeignet für die Sammlung, Verarbeitung und Veröffentlichung von Inhalten aus mehreren Git-Repositories als statische Website sind:

* '''Hugo:''' Bekannt für seine hohe Geschwindigkeit, ideal zur Generierung statischer Websites aus diversen Datenquellen.
* '''Eleventy (11ty):''' Bietet hohe Flexibilität und unterstützt verschiedene Templating-Sprachen, was die Verarbeitung von Inhalten aus unterschiedlichen Repositories vereinfacht.
* '''Sphinx:''' Basierend auf reStructuredText und optimal für technische Dokumentation geeignet. Es liefert hochwertige Ausgaben in Formaten wie HTML, PDF und EPub und ist besonders leistungsstark bei der Verwaltung umfangreicher und komplexer Dokumentationsprojekte.
* '''MkDocs:''' Ein benutzerfreundlicher, Markdown-basierter Generator zur Erstellung von Projektdokumentationen. Er zeichnet sich durch einfache Konfiguration und schnelle Einsatzbereitschaft aus.

'''Content-Management-Systeme (CMS)'''

Die Inhalte werden in einem Content-Management-System verwaltet und in einer Datenbank abgelegt. Beim Aufruf der Webseite werden diese Inhalte aus der Datenbank abgerufen und in Echtzeit gerendert, um auf der Website dargestellt zu werden.

'''Drupal: Ein umfassendes Content-Management-System (CMS)'''

Drupal ist ein leistungsstarkes und flexibles Open-Source-Content-Management-System (CMS) sowie ein Framework für die Erstellung komplexer und skalierbarer Websites und Webanwendungen. Es zeichnet sich durch seine Modularität, Erweiterbarkeit und eine große, aktive Entwickler-Community aus.

'''Schlüsselfunktionen und Merkmale:'''

* '''Modularer Aufbau:''' Drupal basiert auf einem Core-System, das durch Module erweitert wird. Dies ermöglicht eine hohe Anpassbarkeit an spezifische Anforderungen, ohne unnötige Funktionen zu laden.
* '''Taxonomie und Inhaltsstrukturen:''' Es bietet robuste Tools zur Klassifizierung von Inhalten (Taxonomie) und zur Erstellung komplexer Inhaltsstrukturen, was die Organisation und Verwaltung großer Mengen an Informationen erleichtert.
* '''Benutzer- und Rechteverwaltung:''' Eine granulare Benutzer- und Rechteverwaltung ermöglicht es, detaillierte Berechtigungen für verschiedene Benutzerrollen festzulegen.
* '''Mehrsprachigkeit:''' Drupal ist von Grund auf auf Mehrsprachigkeit ausgelegt und unterstützt die Erstellung und Verwaltung von Inhalten in verschiedenen Sprachen.
* '''Suchmaschinenoptimierung (SEO):''' Es bietet umfangreiche Funktionen und Module zur Verbesserung der Suchmaschinenfreundlichkeit von Websites.
* '''API-First Ansatz:''' Drupal wird zunehmend als "API-First" CMS entwickelt, was bedeutet, dass es Inhalte über APIs bereitstellen kann, um sie in Headless-Anwendungen, mobilen Apps oder anderen Systemen zu nutzen.
* '''Skalierbarkeit:''' Drupal ist für seine Fähigkeit bekannt, auch sehr große Websites mit hohem Traffic zu bewältigen.
* '''Sicherheit:''' Es legt großen Wert auf Sicherheit und wird regelmäßig auf Schwachstellen überprüft und aktualisiert.
* '''Community:''' Eine große und engagierte globale Community trägt kontinuierlich zur Entwicklung, Dokumentation und zum Support von Drupal bei.

'''Einsatzgebiete von Drupal:'''

Drupal ist aufgrund seiner Flexibilität und Skalierbarkeit für eine Vielzahl von Einsatzgebieten geeignet:

* '''Unternehmenswebsites:''' Große Unternehmenswebsites, die komplexe Inhalte, mehrere Sprachen und Integrationen mit anderen Geschäftssystemen erfordern.
* '''Regierungs- und Behördenwebsites:''' Websites für öffentliche Einrichtungen, die hohe Sicherheitsanforderungen, Barrierefreiheit und die Verwaltung großer Informationsmengen benötigen.
* '''Bildungseinrichtungen:''' Universitäten, Hochschulen und Schulen für die Erstellung von Campus-Portalen, Kursverwaltung und Informationsseiten.
* '''Non-Profit-Organisationen:''' Websites für NGOs und gemeinnützige Organisationen, um Spenden zu sammeln, Informationen bereitzustellen und Communities aufzubauen.
* '''Medien- und Nachrichtenportale:''' Große Nachrichten-Websites und Online-Magazine, die eine schnelle Veröffentlichung von Inhalten, Benutzerinteraktion und leistungsstarke Suchfunktionen benötigen.
* '''E-Commerce-Plattformen:''' Obwohl Drupal kein reines E-Commerce-System ist, kann es mit Modulen wie Drupal Commerce zu einer leistungsfähigen E-Commerce-Plattform erweitert werden.
* '''Community-Plattformen:''' Foren, soziale Netzwerke und Mitgliederbereiche, die eine aktive Benutzerbeteiligung und Interaktion fördern.
* '''Intranets und Extranets:''' Interne Kommunikationsplattformen für Unternehmen und Plattformen für die Zusammenarbeit mit externen Partnern.
* '''Webanwendungen und Portale:''' Als robustes Framework kann Drupal als Basis für die Entwicklung komplexer Webanwendungen und Portale dienen, die über reine Website-Funktionen hinausgehen.
* '''Headless CMS:''' Drupal kann auch als "Headless CMS" verwendet werden, bei dem es nur die Inhalte über APIs bereitstellt und das Frontend von einer anderen Technologie (z.B. React, Angular, Vue.js) gerendert wird. Dies ermöglicht eine maximale Flexibilität bei der Gestaltung des Benutzererlebnisses.

Zusammenfassend lässt sich sagen, dass Drupal eine ausgezeichnete Wahl für Projekte ist, die eine hohe Flexibilität, Skalierbarkeit, Sicherheit und Anpassbarkeit erfordern und bei denen die Verwaltung komplexer Inhaltsstrukturen und Benutzerrollen im Vordergrund steht.

== Webframeworks ==
Web-Frameworks sind Tools, die die Webentwicklung vereinfachen. Stellen Sie sich vor, Sie bauen ein Haus: Sie könnten jeden Ziegel, jeden Nagel und jedes Stück Holz selbst herstellen, oder Sie könnten vorgefertigte Wände, ein fertiges Dach und Elektrowerkzeuge verwenden. Web-Frameworks sind wie diese vorgefertigten Teile und Elektrowerkzeuge für den Bau von Websites.

Sie stellen vorgefertigte Komponenten und Strukturen für gängige Aufgaben der Webentwicklung bereit, wie zum Beispiel:

* '''Bearbeitung von Anfragen:''' Wenn Sie eine Website-Adresse in Ihren Browser eingeben, hilft das Framework bei der Bearbeitung dieser Anfrage.
* '''Verwaltung von Datenbanken:''' Wenn Ihre Website Informationen speichern muss (wie Benutzerprofile oder Produktdetails), erleichtert das Framework die Interaktion mit Datenbanken.
* '''Erstellung von Benutzeroberflächen:''' Frameworks enthalten oft Tools zum Erstellen der visuellen Teile einer Website, die Benutzer sehen und mit denen sie interagieren.
* '''Sicherheit:''' Sie können integrierte Funktionen zum Schutz Ihrer Website vor gängigen Sicherheitsbedrohungen bieten.

Einfacher ausgedrückt, übernehmen Web-Frameworks die sich wiederholende und komplexe zugrunde liegende Arbeit, sodass sich Entwickler stärker auf die einzigartigen Funktionen und das Design ihrer spezifischen Website konzentrieren können. Dies macht die Webentwicklung schneller, effizienter und oft sicherer.

* '''ASP.NET Core''' ist ein Open-Source, plattformübergreifendes Framework von Microsoft für die Entwicklung von modernen, cloudbasierten und internetverbundenen Anwendungen. Es ist eine Neuentwicklung des älteren ASP.NET und unterstützt Windows, macOS und Linux. ASP.NET Core ermöglicht die Erstellung von Web-APIs, Web-Apps (MVC), mobilen Backends und Echtzeitanwendungen (SignalR). Es ist für hohe Leistung optimiert, modular aufgebaut und fördert die Entwicklung nach modernen Software-Designprinzipien.

* '''Spring Boot''' ist ein Open-Source-Framework, das auf dem Spring Framework basiert und die schnelle und einfache Entwicklung von eigenständigen, produktionsreifen Spring-Anwendungen ermöglicht. Es minimiert die Notwendigkeit umfangreicher Konfigurationen (Convention over Configuration) und bietet vorgefertigte "Starter"-Abhängigkeiten, die die Einrichtung gängiger Funktionalitäten vereinfachen (z.B. Web, JPA, Security). Spring Boot integriert einen eingebetteten Server (Tomcat, Jetty oder Undertow), was die Bereitstellung von Anwendungen als ausführbare JAR-Dateien erheblich vereinfacht. Es wird hauptsächlich für die Entwicklung von Microservices und RESTful APIs in der Java-Welt eingesetzt.

'''Symfony''' ist ein High-Performance-PHP-Framework für Web-Anwendungen. Es ist bekannt für seine Stabilität, Flexibilität und Wiederverwendbarkeit durch die Verwendung von Komponenten. Symfony folgt dem Model-View-Controller (MVC)-Muster und bietet eine große Anzahl von Tools und Funktionen für die Entwicklung komplexer Webanwendungen, wie z.B. ein ORM (Doctrine), ein Template-Engine (Twig), ein Routing-System, ein Formular-Framework und ein Sicherheitssystem. Es ist sehr modular aufgebaut, was die Integration externer Bibliotheken und die Entwicklung wiederverwendbarer Bundles (Plugins) fördert. Symfony ist besonders beliebt für die Entwicklung von Unternehmensanwendungen und APIs.</text>
      <sha1>gh9pij357knyqlncmagc69tvbi9ymw7</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Office Paket mit KI</title>
    <ns>0</ns>
    <id>27</id>
    <revision>
      <id>168</id>
      <timestamp>2025-06-19T07:45:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>168</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3823" sha1="21b7kyvxdcrom6nt6ettnzox8g41swp" xml:space="preserve">== Bekannte Office-Pakete mit KI-Funktionen ==

Es gibt mehrere Office-Pakete, die KI-Funktionen integrieren, um die Produktivität zu steigern und Arbeitsabläufe zu erleichtern. Zu den bekanntesten gehören:

* '''Microsoft 365 (ehemals Office 365)''': Enthält KI-gestützte Funktionen wie Microsoft Copilot, eine intelligente Suche, automatische Übersetzungen, Designvorschläge in PowerPoint und mehr.
* '''Google Workspace''': Bietet KI-Features wie Smart Compose und Smart Reply in Gmail, automatische Zusammenfassungen in Google Docs sowie eine intelligente Terminplanung.

Diese und weitere Pakete entwickeln ihre KI-Funktionen stetig weiter, um Nutzern noch mehr Unterstützung im Arbeitsalltag zu bieten.

== Microsoft 365 (ehemals Office 365) mit KI ==

Microsoft 365 integriert zahlreiche KI-Funktionen, die darauf abzielen, die Produktivität zu steigern und Arbeitsprozesse zu vereinfachen. Zu den wichtigsten KI-gestützten Features gehören:

* '''Copilot''': Ein KI-Assistent, der in Anwendungen wie Word, Excel, PowerPoint, Outlook und Teams integriert ist. Copilot hilft beim Verfassen von Texten, dem Erstellen von Präsentationen, dem Analysieren von Daten und dem Automatisieren von Aufgaben.
* '''Intelligente Suche''': Die Suchfunktion nutzt KI, um relevante Inhalte, Dateien und Kontakte schneller zu finden.
* '''Designer und Editor''': KI-gestützte Vorschläge für Layouts, Designs und Textkorrekturen in PowerPoint und Word.
* '''Automatische Übersetzungen''': Dokumente und E-Mails können direkt in andere Sprachen übersetzt werden.
* '''Meeting-Zusammenfassungen''': In Microsoft Teams werden Besprechungen automatisch protokolliert und zusammengefasst.

=== Preise ===

Microsoft 365 wird als Abonnement angeboten. Die Preise variieren je nach Zielgruppe und Funktionsumfang.

=== Copilot mit Microsoft 365 ===

'''Microsoft Copilot''' ist ein KI-gestützter Assistent, der direkt in Microsoft 365 integriert ist. Mit Copilot können Nutzer in Word, Excel, PowerPoint, Outlook und Teams Aufgaben wie das Verfassen von Texten, das Erstellen von Präsentationen, die Analyse von Daten und die Automatisierung von Arbeitsabläufen effizienter erledigen. Copilot nutzt fortschrittliche KI-Modelle, um Vorschläge zu machen und Inhalte zu generieren.

* Copilot ist in bestimmten Microsoft 365-Plänen enthalten oder kann als Zusatzoption gebucht werden.
* Die Verfügbarkeit und der Preis von Copilot hängen vom jeweiligen Microsoft 365-Abonnement ab.

== Google Workspace ==

Google Workspace ist eine cloudbasierte Produktivitäts- und Kollaborationsplattform von Google, die verschiedene Anwendungen wie Gmail, Google Drive, Google Docs, Google Tabellen, Google Präsentationen, Google Meet und weitere Tools umfasst. Die Plattform richtet sich sowohl an Unternehmen als auch an Bildungseinrichtungen und Privatnutzer.

Zu den wichtigsten Funktionen von Google Workspace gehören:

* Gemeinsame Bearbeitung von Dokumenten in Echtzeit
* KI-gestützte Funktionen wie Smart Compose, automatische Zusammenfassungen und eine intelligente Terminplanung
* Integration mit anderen Google-Diensten und Apps von Drittanbietern
* Sichere Speicherung und Verwaltung von Dateien in der Cloud

=== Preise ===

Google Workspace wird als Abonnement mit verschiedenen Tarifen angeboten, die sich an unterschiedliche Unternehmensgrößen und Anforderungen richten. Die Preise für Geschäftskunden (Stand: 2024) lauten beispielsweise:

* '''Business Starter''': ab ca. 5,75 € pro Nutzer/Monat
* '''Business Standard''': ab ca. 11,50 € pro Nutzer/Monat
* '''Business Plus''': ab ca. 17,25 € pro Nutzer/Monat

Die genauen Preise und enthaltenen Funktionen können je nach Region und gewähltem Tarif variieren. Für Bildungseinrichtungen und gemeinnützige Organisationen gibt es spezielle Angebote.</text>
      <sha1>21b7kyvxdcrom6nt6ettnzox8g41swp</sha1>
    </revision>
  </page>
  <page>
    <title>Vergleich: Drupal und Mediawiki nutzen</title>
    <ns>0</ns>
    <id>28</id>
    <revision>
      <id>169</id>
      <timestamp>2025-06-19T08:17:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Vergleich: Drupal und Mediawiki nutzen== ==Drupal==  Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community. ===Vorteile=== * Hohe Flexibilität und Erweiterbarkeit durch Module und Themes * Aktive Community und umfangreiche Dokumentation * Leistungsstarke Benutzer- und Rechteverwaltung * Geeig…“</comment>
      <origin>169</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1817" sha1="fjqousyiepao339pgg0d9rqzw2l0o86" xml:space="preserve">==Vergleich: Drupal und Mediawiki nutzen==
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>fjqousyiepao339pgg0d9rqzw2l0o86</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Mehr Informationen zu Sprachmodellen und Deep Research im Internet</title>
    <ns>0</ns>
    <id>29</id>
    <revision>
      <id>170</id>
      <timestamp>2025-06-19T10:56:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>170</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4381" sha1="lijgu8te9rstuaoql4jgu77pbmaia0q" xml:space="preserve">== Mehr Informationen zu Sprachmodellen und Deep Research im Internet ==

Sprachmodelle sind KI-basierte Systeme, die natürliche Sprache verstehen und generieren können. Sie werden häufig für Recherchen, Textgenerierung und Datenanalysen im Internet eingesetzt.
=== Retrieval-Augmented Generation (RAG) ===
Retrieval-Augmented Generation (RAG) ist ein Ansatz, bei dem Sprachmodelle mit externen Wissensquellen kombiniert werden. Das Modell sucht zunächst relevante Informationen aus einer Datenbank oder dem Internet und nutzt diese, um präzisere und aktuellere Antworten zu generieren. Dadurch können Sprachmodelle auf Wissen zugreifen, das über ihre Trainingsdaten hinausgeht, und bessere Rechercheergebnisse liefern.
Die folgende Liste enthält bekannte KI-Sprachmodelle, die für Recherche und Textgenerierung eingesetzt werden. Die Namen sind korrekt, allerdings sind einige Begriffe allgemeiner gehalten oder bezeichnen Modellfamilien:

* **GPT-4o/GPT-4.1:** Verschiedene Versionen der GPT-4-Modelle von OpenAI, darunter GPT-4o (multimodal, 2024) und GPT-4.1 (interne Bezeichnung, nicht offiziell veröffentlicht).
* **Claude 3 Familie:** KI-Modelle von Anthropic, darunter Claude 3 Opus, Sonnet und Haiku.
* **Gemini:** KI-Modelle von Google (früher Bard), z. B. Gemini 1.5.
* **Llama:** Open-Source-Sprachmodelle von Meta, z. B. Llama 2 und Llama 3.
* **Mistral AI Modelle:** KI-Modelle von Mistral AI, z. B. Mistral 7B, Mixtral 8x7B.

=== Suchen in Echtzeit ===
Mit modernen Sprachmodellen ist es möglich, Informationen in Echtzeit zu suchen und relevante Ergebnisse schnell zu finden. Diese Modelle können große Datenmengen durchsuchen und die wichtigsten Inhalte extrahieren.
Moderne Sprachmodelle wie GPT-4, Bing Chat, Google Gemini, Claude und Mistral bieten die Grundfunktion, in Echtzeit im Internet nach Informationen zu suchen. Sie analysieren Anfragen, durchsuchen aktuelle Quellen und liefern relevante, aktuelle Antworten. Beispiele:

* **GPT-4:** Ein fortschrittliches Sprachmodell von OpenAI, das komplexe Anfragen versteht und präzise Antworten liefert. Mit Suchfunktionen kann es auf aktuelle Informationen zugreifen. Die Websuche erfolgt meist über Bing (Microsoft) oder eigene APIs, abhängig von der Plattform (z. B. ChatGPT Plus/Bing-Integration).
* **Bing Chat:** Ein KI-Chatbot von Microsoft, der Suchergebnisse aus dem Internet in Echtzeit integriert, um aktuelle und relevante Antworten zu geben. Die Suche erfolgt direkt über die Bing-Suchmaschine.
* **Google Gemini:** Ein KI-Modell von Google, das Informationen aus dem Web abruft und für die Beantwortung von Fragen nutzt. Die Suche erfolgt über die Google-Suchmaschine.
* **Claude:** Ein Sprachmodell von Anthropic, das in Echtzeit recherchieren und Informationen bereitstellen kann. Die Websuche nutzt verschiedene Suchanbieter, meist jedoch Bing oder eigene Recherche-APIs.
* **Mistral:** Ein Sprachmodell von Mistral AI, das effiziente Textgenerierung und Rechercheaufgaben unterstützt, inklusive der Suche nach aktuellen Informationen. Die genutzten Suchmaschinen können variieren, häufig werden APIs von Bing oder Google verwendet.


=== Deep Research ===
Deep Research bezeichnet die tiefergehende Analyse und Recherche im Internet, oft unterstützt durch KI und maschinelles Lernen. Sprachmodelle helfen dabei, komplexe Zusammenhänge zu erkennen und fundierte Informationen bereitzustellen.

Einige spezialisierte Tools und Funktionen für Deep Research sind:

* '''Perplexity AI:''' Eine KI-gestützte Antwort-Engine, die das Internet in Echtzeit durchsucht und direkte, zusammengefasste Antworten mit Quellenangaben liefert. Sie eignet sich besonders für die Recherche, da sie die Herkunft der Informationen transparent macht.
* '''Google Suche mit KI-Übersichten (SGE):''' Googles Integration von generativer KI in die Suchergebnisse. Bei komplexen Anfragen erstellt die KI eine Zusammenfassung aus verschiedenen Quellen direkt auf der Ergebnisseite, was eine schnelle und tiefere Einarbeitung in ein Thema ermöglicht.
* '''ChatGPT mit Websuche (OpenAI):''' Die Fähigkeit von ChatGPT (insbesondere in der Plus-Version), das Internet zu durchsuchen, um aktuelle Informationen zu finden. Nutzer können das Modell anweisen, spezifische Themen zu recherchieren, Quellen zu vergleichen und komplexe Berichte zu erstellen, was über eine einfache Suche hinausgeht.</text>
      <sha1>lijgu8te9rstuaoql4jgu77pbmaia0q</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Visual Studio Code mit KI</title>
    <ns>0</ns>
    <id>30</id>
    <revision>
      <id>171</id>
      <timestamp>2025-06-19T13:57:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>171</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="877" sha1="5l7cryc5kcvig5smcgitto3p1bisbem" xml:space="preserve">'''Visual Studio Code''' ist eine leistungsstarke, plattformübergreifende Code-Editor-Software, die durch eine Vielzahl von Erweiterungen (Extensions) ergänzt werden kann. Besonders hervorzuheben sind die KI-gestützten Tools, die Entwicklern helfen, effizienter zu arbeiten, Fehler zu minimieren und komplexe Aufgaben zu bewältigen.

Hier sind einige der bekanntesten KI-Tools für Visual Studio Code:

* '''GitHub Copilot''': Ein KI-gestützter Code-Assistent, der kontextbezogene Vorschläge in Echtzeit liefert. Copilot kann ganze Funktionen oder Algorithmen basierend auf Kommentaren oder bestehendem Code generieren und unterstützt eine Vielzahl von Programmiersprachen.
* '''AI Toolkit for Visual Studio Code''': Eine Sammlung von KI-Tools, die speziell für Visual Studio Code entwickelt wurde, um die Produktivität zu steigern und die Codequalität zu verbessern.</text>
      <sha1>5l7cryc5kcvig5smcgitto3p1bisbem</sha1>
    </revision>
  </page>
  <page>
    <title>Schlosskirche Ahrensburg</title>
    <ns>0</ns>
    <id>31</id>
    <revision>
      <id>172</id>
      <timestamp>2025-06-19T21:11:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>172</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1775" sha1="ei1o3idotpb8490c7rg0e8dhlgsm1iv" xml:space="preserve">'''Die denkmalgeschützte Schlosskapelle Ahrensburg''' befindet sich im Norden von Ahrensburg, Schleswig-Holstein, Deutschland, und ist eine evangelisch-lutherische Kirche direkt gegenüber dem Ahrensburger Schloss. Das Bauwerk im spätgotischen Backsteinstil gilt als herausragendes Beispiel historischer Architektur und verleiht dem Alten Marktplatz besonderen Glanz. Die Kirche zählt zu den ersten Kirchenneubauten nach der Reformationszeit. Ihre Adresse ist Am Alten Markt 7, 22926 Ahrensburg, Deutschland, und telefonisch ist sie unter +49 4102 52584 erreichbar.
Die Schlosskapelle diente zudem als Begräbnisstätte der Familie Rantzau.
== Geschichte ==
Die Schlosskapelle wurde von 1594 bis 1596 im Auftrag des Gutsherrn Peter Rantzau erbaut.  
Sie war das religiöse Zentrum des Dorfes Ahrensburg und spielte eine wichtige Rolle für das geistliche Leben der Gemeinde. Die Schlosskapelle wurde für Gottesdienste, Taufen, Trauungen und Beerdigungen genutzt und war eng mit den Aktivitäten des benachbarten Schlosses verbunden. Zudem diente sie als repräsentative Grablege der Familie Rantzau.  
Im Großen Nordischen Krieg (1700–1721) wurden die Innenräume der Kirche stark geplündert und zerstört, und das Grabmal wurde von schwedischen Truppen schwer beschädigt.  
Nach dem Krieg wurde die Schlosskapelle im prachtvollen Stil des Spätbarock wieder aufgebaut.  
Nach dem Kauf durch die Familie Schimmelmann im Jahr 1759 wurde die Kirche weiter umgebaut und erhielt ihr heutiges Aussehen.
== Architektur ==
Die Kirche weist Elemente der Renaissance-Architektur auf und ist besonders für ihre weiß getünchten Wände und das hölzerne Innenleben bekannt. Altar und Kanzel sind reich verziert und spiegeln die künstlerischen Stile der damaligen Zeit wider.</text>
      <sha1>ei1o3idotpb8490c7rg0e8dhlgsm1iv</sha1>
    </revision>
  </page>
  <page>
    <title>Server;Drupal/Nginx-Konfiguration</title>
    <ns>0</ns>
    <id>32</id>
    <revision>
      <id>173</id>
      <timestamp>2025-06-19T21:58:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ === Schritt 3: Nginx-Konfiguration ===  sudo apt-get install nginx  sudo rm /etc/nginx/sites-enabled/default  # Erstellen Sie eine neue Konfigurationsdatei:   sudo nano /etc/nginx/conf.d/drupal.conf  # Fügen Sie den folgenden Inhalt ein:   server {      listen 443 ssl http2;      server_name drupal.ahrensburg.city;        root /var/www/drupal/web;      index index.php index.html;        ssl_certificate      /etc/letsencrypt/live/drupal.ahrensburg.city/f…“</comment>
      <origin>173</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2304" sha1="46smdqergzzcl83i6vz3are3fw03pn4" xml:space="preserve">
=== Schritt 3: Nginx-Konfiguration ===
 sudo apt-get install nginx
 sudo rm /etc/nginx/sites-enabled/default

# Erstellen Sie eine neue Konfigurationsdatei:

 sudo nano /etc/nginx/conf.d/drupal.conf

# Fügen Sie den folgenden Inhalt ein:

 server {
     listen 443 ssl http2;
     server_name drupal.ahrensburg.city;
 
     root /var/www/drupal/web;
     index index.php index.html;
 
     ssl_certificate      /etc/letsencrypt/live/drupal.ahrensburg.city/fullchain.pem;
     ssl_certificate_key  /etc/letsencrypt/live/drupal.ahrensburg.city/privkey.pem;
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_ciphers HIGH:!aNULL:!MD5;
 
     # Sicherheitsheader
     add_header X-Frame-Options "SAMEORIGIN";
     add_header X-Content-Type-Options "nosniff";
     add_header X-XSS-Protection "1; mode=block";
 
     # Gzip-Komprimierung
     gzip on;
     gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
 
     location = /favicon.ico { log_not_found off; access_log off; }
     location = /robots.txt  { allow all; log_not_found off; access_log off; }
 
     location ~ \..*/.*\.php$ { return 403; }
     location ~ ^/sites/.*/private/ { return 403; }
     location ~ ^/sites/[^/]+/files/.*\.php$ { deny all; }
     location ~ (^|/)\. { return 403; }
 
     location / {
         try_files $uri /index.php?$query_string;
     }
 
     location @rewrite {
         rewrite ^/(.*)$ /index.php?q=$1;
     }
 
     location ~ /vendor/.*\.php$ {
         deny all;
         return 404;
     }
 
     location ~ '\.php$|^/update.php' {
         include fastcgi_params;
         fastcgi_split_path_info ^(.+?\.php)(/.*)?$;
         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
         fastcgi_param PATH_INFO $fastcgi_path_info;
         fastcgi_param HTTP_PROXY "";
         fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
         fastcgi_intercept_errors on;
     }
 
     location ~ ^/sites/.*/files/styles/ {
         try_files $uri @rewrite;
     }
 
     location ~ ^(/[a-z\-]+)?/system/files/ {
         try_files $uri /index.php?$query_string;
     }
 
     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
         try_files $uri @rewrite;
         expires max;
         log_not_found off;
     }
 }</text>
      <sha1>46smdqergzzcl83i6vz3are3fw03pn4</sha1>
    </revision>
  </page>
  <page>
    <title>Server;Drupal/Berechtigungsproblemen</title>
    <ns>0</ns>
    <id>33</id>
    <revision>
      <id>174</id>
      <timestamp>2025-06-19T22:22:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ Installation von Drupal beim Hosting-Anbieter: Anleitung zur Behebung von Berechtigungsproblemen  Wählen Sie zunächst Ihr Land und Ihre bevorzugte Sprache für die Drupal-Installation bei Ihrem Hosting-Anbieter aus. Bitte beachten Sie, dass inkorrekte Dateiberechtigungen während des Installationsprozesses zu Problemen führen können.  '''Fehlerbehebung bei Installationsfehlern aufgrund von Berechtigungsproblemen:'''  Sollte die Installation aufgrund…“</comment>
      <origin>174</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2224" sha1="bbw9dzm102yml3la5kccgoyhdmegb1g" xml:space="preserve">
Installation von Drupal beim Hosting-Anbieter: Anleitung zur Behebung von Berechtigungsproblemen

Wählen Sie zunächst Ihr Land und Ihre bevorzugte Sprache für die Drupal-Installation bei Ihrem Hosting-Anbieter aus. Bitte beachten Sie, dass inkorrekte Dateiberechtigungen während des Installationsprozesses zu Problemen führen können.

'''Fehlerbehebung bei Installationsfehlern aufgrund von Berechtigungsproblemen:'''

Sollte die Installation aufgrund unzureichender Berechtigungen fehlschlagen, befolgen Sie bitte die nachstehenden Schritte in der angegebenen Reihenfolge:

# '''Terminal öffnen und zum Drupal-Hauptverzeichnis navigieren:''' Öffnen Sie Ihr Terminal oder Ihre Kommandozeile. Verwenden Sie den Befehl `cd`, um zum Hauptverzeichnis Ihrer Drupal-Installation zu wechseln. Ein typischer Pfad könnte beispielsweise `/var/www/drupal` lauten.
# '''In das Unterverzeichnis `web/sites/default` wechseln:''' Navigieren Sie anschließend mit dem Befehl `cd /var/www/drupal/web/sites/default` in das Unterverzeichnis `web/sites/default`.
# '''Erforderliche Verzeichnisse erstellen:''' Erstellen Sie nun die beiden benötigten Verzeichnisse `files` und `files/translations` mithilfe der Befehle `mkdir files` und `mkdir files/translations`.
# '''Zugriffsrechte für das Verzeichnis `files` ändern:''' Ändern Sie rekursiv die Zugriffsrechte für das Verzeichnis `files` auf 777 mit dem Befehl `sudo chmod 777 -R files`. Dieser Schritt gewährleistet, dass Drupal Dateien in dieses Verzeichnis schreiben kann.
# '''Konfigurationsdatei kopieren und umbenennen:''' Kopieren Sie die Konfigurationsdatei `default.settings.php` und benennen Sie die Kopie in `settings.php` um. Verwenden Sie hierfür den Befehl `cp default.settings.php settings.php`.
# '''Dateiberechtigungen für `settings.php` ändern:''' Abschließend müssen Sie die Dateiberechtigungen für die Datei `settings.php` auf 666 ändern. Verwenden Sie hierzu den Befehl `sudo chmod 666 settings.php`.

'''Kurzanleitung für die Kommandozeile:'''
 cd /var/www/drupal/web/sites/default/
 mkdir files
 mkdir files/translations
 sudo chmod 777 -R files
 cp default.settings.php settings.php
 sudo chmod 666 settings.php
Website starten. Jetzt neu start</text>
      <sha1>bbw9dzm102yml3la5kccgoyhdmegb1g</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/Drush</title>
    <ns>0</ns>
    <id>34</id>
    <revision>
      <id>175</id>
      <timestamp>2025-06-19T22:34:19Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == Drush: Werkzeug für Drupal == Drush ist ein Kommandozeilenwerkzeug, das die Verwaltung und Entwicklung von Drupal-Websites erheblich erleichtert.  '''Vorteile von Drush'''  * Automatisierung wiederkehrender Aufgaben * Schnelle Installation und Aktualisierung von Modulen und Themes * Verwaltung von Konfigurationen und Datenbank-Updates * Leeren von Caches und Ausführen von Wartungsaufgaben * Integration in Skripte und CI/CD-Pipelines  '''Installation…“</comment>
      <origin>175</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="902" sha1="lb0x56l6d7zpf5uzwb4vbouu4qon03e" xml:space="preserve">
== Drush: Werkzeug für Drupal ==
Drush ist ein Kommandozeilenwerkzeug, das die Verwaltung und Entwicklung von Drupal-Websites erheblich erleichtert.

'''Vorteile von Drush'''

* Automatisierung wiederkehrender Aufgaben
* Schnelle Installation und Aktualisierung von Modulen und Themes
* Verwaltung von Konfigurationen und Datenbank-Updates
* Leeren von Caches und Ausführen von Wartungsaufgaben
* Integration in Skripte und CI/CD-Pipelines

'''Installation'''

'''Wichtiger Hinweis:''' Drush sollte unter Ubuntu nicht global installiert werden.

'''Installationsschritte:'''

# '''Terminal öffnen:''' Starten Sie die Kommandozeile.
# '''Zum Projektverzeichnis wechseln:''' Navigieren Sie in Ihr Drupal-Projektverzeichnis, z. B. nach `/var/www/drupal`.
# '''Drush installieren:''' Führen Sie den Befehl &lt;code&gt;composer require drush/drush&lt;/code&gt; aus.
# Führen Sie &lt;code&gt;composer install&lt;/code&gt; aus.</text>
      <sha1>lb0x56l6d7zpf5uzwb4vbouu4qon03e</sha1>
    </revision>
  </page>
  <page>
    <title>Drupal/Paket Installieren</title>
    <ns>0</ns>
    <id>35</id>
    <revision>
      <id>176</id>
      <timestamp>2025-06-19T22:40:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Folgende Pakete werden benötigt:  == Themen herunterladen == Für mein Projekt stellt das Bootstrap 5-Paket die optimale Lösung dar.  Um dieses zu installieren, starten wir das Terminalprogramm und führen folgenden Befehl aus:  composer require 'drupal/bootstrap:^5.0'  Dadurch wird das Theme heruntergeladen.  Module herunterladen  == Wir installieren die folgenden Module == '''EU Cookie Compliance'''  composer require 'drupal/eu\_cookie\_compliance:^1.…“</comment>
      <origin>176</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="752" sha1="ax4j9tehuqulo4a7h4a0cx644amnyun" xml:space="preserve">Folgende Pakete werden benötigt:

== Themen herunterladen ==
Für mein Projekt stellt das Bootstrap 5-Paket die optimale Lösung dar.

Um dieses zu installieren, starten wir das Terminalprogramm und führen folgenden Befehl aus:

composer require 'drupal/bootstrap:^5.0'

Dadurch wird das Theme heruntergeladen.

Module herunterladen

== Wir installieren die folgenden Module ==
'''EU Cookie Compliance'''

composer require 'drupal/eu\_cookie\_compliance:^1.26'

'''Markdown Easy'''

composer require 'drupal/markdown_easy:^1.0'

'''Pathauto''' Erzeugt automatisch suchmaschinenfreundliche URLs.

composer require 'drupal/pathauto:^1.13'

'''Metatag''' Ermöglicht das Hinzufügen von Metatags für bessere SEO.

composer require 'drupal/metatag:^2.1'</text>
      <sha1>ax4j9tehuqulo4a7h4a0cx644amnyun</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Backup</title>
    <ns>0</ns>
    <id>36</id>
    <revision>
      <id>177</id>
      <timestamp>2025-06-19T23:07:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>177</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="922" sha1="k6jm9oy00he6uvk4r4m0zbs89svb6vf" xml:space="preserve">==Server Backup Anbieter in Deutschland==

Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:

* Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung.
* Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise.
* Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.

== Git Backup erstellen nicht mit Nutzerdaten erstellen==
Es gibt verschiedene Anbieter, bei denen Sie Git-Repositories hosten können. Zu den bekanntesten gehören:

* GitHub – Weltweit größter Anbieter für Git-Repositories, bietet kostenlose und kostenpflichtige Pläne.
* GitLab – Open-Source-Lösung, kann selbst gehostet oder als Cloud-Service genutzt werden.
* Codeberg – Gemeinnütziger Anbieter aus Europa, legt Wert auf Datenschutz und Transparenz.</text>
      <sha1>k6jm9oy00he6uvk4r4m0zbs89svb6vf</sha1>
    </revision>
    <revision>
      <id>178</id>
      <parentid>177</parentid>
      <timestamp>2025-06-20T03:44:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>178</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="920" sha1="17rc6kdqz2lh2f7b91a0cylram3uuwc" xml:space="preserve">==Server Backup Anbieter in Deutschland==

Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:

* Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung.
* Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise.
* Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.

==Git-Backup erstellen, ohne Nutzerdaten zu verwenden==
Es gibt verschiedene Anbieter, bei denen Sie Git-Repositories hosten können. Zu den bekanntesten gehören:

* GitHub – Weltweit größter Anbieter für Git-Repositories, bietet kostenlose und kostenpflichtige Pläne.
* GitLab – Open-Source-Lösung, kann selbst gehostet oder als Cloud-Service genutzt werden.
* Codeberg – Gemeinnütziger Anbieter aus Europa, legt Wert auf Datenschutz und Transparenz.</text>
      <sha1>17rc6kdqz2lh2f7b91a0cylram3uuwc</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/Veranstaltungskalender</title>
    <ns>0</ns>
    <id>37</id>
    <revision>
      <id>179</id>
      <timestamp>2025-06-20T17:29:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>179</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2696" sha1="mvmf8yi12dtohqea6aazaiiqg0bhtzm" xml:space="preserve">== Veranstaltungskalender mit Drupal und dem Modul Full Calendar ==

Mit Drupal lässt sich ein leistungsfähiger Veranstaltungskalender erstellen. Das Modul '''Full Calendar''' integriert den populären JavaScript-Kalender ''FullCalendar'' in Drupal und ermöglicht eine ansprechende Darstellung von Terminen.

=== Voraussetzungen ===
* Drupal Core (empfohlen: aktuelle Version)
* Modul: [https://www.drupal.org/project/fullcalendar_view Full Calendar View]
* Modul: [https://www.drupal.org/project/views Views]
* Modul: [https://www.drupal.org/project/date Date]

=== Schritte zur Einrichtung ===
# Navigiere im Drupal-Backend zu ''Erweiterungen'' und installiere die Module '''Full Calendar View''', '''Views''' und '''Date'''. Aktiviere diese anschließend.
# Erstelle unter ''Struktur &gt; Inhaltstypen'' einen neuen Inhaltstyp, beispielsweise '''Veranstaltung'''.
# Ergänze den Inhaltstyp um folgende Felder: '''Titel''' (Textfeld), '''Startdatum''' und '''Enddatum''' (beide vom Typ ''Datum'').
# Gehe zu ''Struktur &gt; Ansichten'' und erstelle eine neue Ansicht vom Typ '''Full Calendar''', die Inhalte des Typs '''Veranstaltung''' verwendet.
# Konfiguriere die gewünschten Kalenderansichten (z.B. Tag, Woche, Monat) und passe Filter sowie Sortierung nach Bedarf an.
# Speichere die Ansicht und platziere sie als Seite oder Block, um den Kalender im Frontend sichtbar zu machen.
=== Beispiel: Ansicht für Veranstaltungen erstellen ===
# Gehe zu ''Struktur &gt; Ansichten'' und klicke auf ''Ansicht hinzufügen''.
# Gib der Ansicht einen Namen, z.B. '''Veranstaltungskalender'''.
# Wähle als anzuzeigenden Inhaltstyp '''Veranstaltung''' und als Anzeigeformat '''Full Calendar'''.
# Füge die Felder '''Titel''', '''Startdatum''' und '''Enddatum''' hinzu, falls diese nicht automatisch übernommen werden.
# Konfiguriere die Filterkriterien, z.B. ''Veröffentlicht'' ist ''Ja'', um nur sichtbare Veranstaltungen anzuzeigen.
# Passe die Einstellungen für die Kalenderanzeige nach Bedarf an (z.B. Standardansicht: Monat, verfügbare Ansichten: Woche, Tag).
# Speichere die Ansicht und teste die Kalenderdarstellung auf der zugewiesenen Seite.

=== Hinweise ===
* Über die Einstellungen der Ansicht kannst du weitere Filter (z.B. nach Kategorie) hinzufügen.
* Mit zusätzlichen Modulen wie ''Calendar iCal'' kannst du Export- und Importfunktionen für Termine bereitstellen.
=== Vorteile von Full Calendar ===
* Interaktive Kalenderansicht
* Drag &amp; Drop-Unterstützung (optional)
* Filter- und Suchfunktionen
* Responsive Design

Weitere Informationen findest du in der [https://www.drupal.org/docs/contributed-modules/fullcalendar-view offiziellen Dokumentation des Full Calendar View Moduls].</text>
      <sha1>mvmf8yi12dtohqea6aazaiiqg0bhtzm</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:DrupalPaket Installieren</title>
    <ns>0</ns>
    <id>38</id>
    <revision>
      <id>180</id>
      <timestamp>2025-06-20T18:53:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Folgende Pakete werden benötigt:  == Themen herunterladen == Für mein Projekt stellt das Bootstrap 5-Paket die optimale Lösung dar.  Um dieses zu installieren, starten wir das Terminalprogramm und führen folgenden Befehl aus:  composer require 'drupal/bootstrap:^5.0'  Dadurch wird das Theme heruntergeladen.  Module herunterladen  == Wir installieren die folgenden Module == '''EU Cookie Compliance'''  composer require 'drupal/eu\_cookie\_compliance:^1.…“</comment>
      <origin>180</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="752" sha1="ax4j9tehuqulo4a7h4a0cx644amnyun" xml:space="preserve">Folgende Pakete werden benötigt:

== Themen herunterladen ==
Für mein Projekt stellt das Bootstrap 5-Paket die optimale Lösung dar.

Um dieses zu installieren, starten wir das Terminalprogramm und führen folgenden Befehl aus:

composer require 'drupal/bootstrap:^5.0'

Dadurch wird das Theme heruntergeladen.

Module herunterladen

== Wir installieren die folgenden Module ==
'''EU Cookie Compliance'''

composer require 'drupal/eu\_cookie\_compliance:^1.26'

'''Markdown Easy'''

composer require 'drupal/markdown_easy:^1.0'

'''Pathauto''' Erzeugt automatisch suchmaschinenfreundliche URLs.

composer require 'drupal/pathauto:^1.13'

'''Metatag''' Ermöglicht das Hinzufügen von Metatags für bessere SEO.

composer require 'drupal/metatag:^2.1'</text>
      <sha1>ax4j9tehuqulo4a7h4a0cx644amnyun</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/Nginx-Konfiguration</title>
    <ns>0</ns>
    <id>39</id>
    <revision>
      <id>181</id>
      <timestamp>2025-06-20T18:56:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ === Schritt 3: Nginx-Konfiguration ===  sudo apt-get install nginx  sudo rm /etc/nginx/sites-enabled/default  # Erstellen Sie eine neue Konfigurationsdatei:   sudo nano /etc/nginx/conf.d/drupal.conf  # Fügen Sie den folgenden Inhalt ein:   server {      listen 443 ssl http2;      server_name drupal.ahrensburg.city;        root /var/www/drupal/web;      index index.php index.html;        ssl_certificate      /etc/letsencrypt/live/drupal.ahrensburg.city/f…“</comment>
      <origin>181</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2304" sha1="46smdqergzzcl83i6vz3are3fw03pn4" xml:space="preserve">
=== Schritt 3: Nginx-Konfiguration ===
 sudo apt-get install nginx
 sudo rm /etc/nginx/sites-enabled/default

# Erstellen Sie eine neue Konfigurationsdatei:

 sudo nano /etc/nginx/conf.d/drupal.conf

# Fügen Sie den folgenden Inhalt ein:

 server {
     listen 443 ssl http2;
     server_name drupal.ahrensburg.city;
 
     root /var/www/drupal/web;
     index index.php index.html;
 
     ssl_certificate      /etc/letsencrypt/live/drupal.ahrensburg.city/fullchain.pem;
     ssl_certificate_key  /etc/letsencrypt/live/drupal.ahrensburg.city/privkey.pem;
     ssl_protocols TLSv1.2 TLSv1.3;
     ssl_ciphers HIGH:!aNULL:!MD5;
 
     # Sicherheitsheader
     add_header X-Frame-Options "SAMEORIGIN";
     add_header X-Content-Type-Options "nosniff";
     add_header X-XSS-Protection "1; mode=block";
 
     # Gzip-Komprimierung
     gzip on;
     gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
 
     location = /favicon.ico { log_not_found off; access_log off; }
     location = /robots.txt  { allow all; log_not_found off; access_log off; }
 
     location ~ \..*/.*\.php$ { return 403; }
     location ~ ^/sites/.*/private/ { return 403; }
     location ~ ^/sites/[^/]+/files/.*\.php$ { deny all; }
     location ~ (^|/)\. { return 403; }
 
     location / {
         try_files $uri /index.php?$query_string;
     }
 
     location @rewrite {
         rewrite ^/(.*)$ /index.php?q=$1;
     }
 
     location ~ /vendor/.*\.php$ {
         deny all;
         return 404;
     }
 
     location ~ '\.php$|^/update.php' {
         include fastcgi_params;
         fastcgi_split_path_info ^(.+?\.php)(/.*)?$;
         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
         fastcgi_param PATH_INFO $fastcgi_path_info;
         fastcgi_param HTTP_PROXY "";
         fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
         fastcgi_intercept_errors on;
     }
 
     location ~ ^/sites/.*/files/styles/ {
         try_files $uri @rewrite;
     }
 
     location ~ ^(/[a-z\-]+)?/system/files/ {
         try_files $uri /index.php?$query_string;
     }
 
     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
         try_files $uri @rewrite;
         expires max;
         log_not_found off;
     }
 }</text>
      <sha1>46smdqergzzcl83i6vz3are3fw03pn4</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/Berechtigungsproblemen</title>
    <ns>0</ns>
    <id>40</id>
    <revision>
      <id>182</id>
      <timestamp>2025-06-20T18:58:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ Installation von Drupal beim Hosting-Anbieter: Anleitung zur Behebung von Berechtigungsproblemen  Wählen Sie zunächst Ihr Land und Ihre bevorzugte Sprache für die Drupal-Installation bei Ihrem Hosting-Anbieter aus. Bitte beachten Sie, dass inkorrekte Dateiberechtigungen während des Installationsprozesses zu Problemen führen können.  '''Fehlerbehebung bei Installationsfehlern aufgrund von Berechtigungsproblemen:'''  Sollte die Installation aufgrund…“</comment>
      <origin>182</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2221" sha1="dy1gc9nvli62ypf8tdzgx2u8dvn4nyc" xml:space="preserve">
Installation von Drupal beim Hosting-Anbieter: Anleitung zur Behebung von Berechtigungsproblemen

Wählen Sie zunächst Ihr Land und Ihre bevorzugte Sprache für die Drupal-Installation bei Ihrem Hosting-Anbieter aus. Bitte beachten Sie, dass inkorrekte Dateiberechtigungen während des Installationsprozesses zu Problemen führen können.

'''Fehlerbehebung bei Installationsfehlern aufgrund von Berechtigungsproblemen:'''

Sollte die Installation aufgrund unzureichender Berechtigungen fehlschlagen, befolgen Sie bitte die nachstehenden Schritte in der angegebenen Reihenfolge:

# '''Terminal öffnen und zum Drupal-Hauptverzeichnis navigieren:''' Öffnen Sie Ihr Terminal oder Ihre Kommandozeile. Verwenden Sie den Befehl `cd`, um zum Hauptverzeichnis Ihrer Drupal-Installation zu wechseln. Ein typischer Pfad könnte beispielsweise `/var/www/drupal` lauten.
# '''In das Unterverzeichnis `web/sites/default` wechseln:''' Navigieren Sie anschließend mit dem Befehl `cd /var/www/drupal/web/sites/default` in das Unterverzeichnis `web/sites/default`.
# '''Erforderliche Verzeichnisse erstellen:''' Erstellen Sie nun die beiden benötigten Verzeichnisse `files` und `files/translations` mithilfe der Befehle `mkdir files` und `mkdir files/translations`.
# '''Zugriffsrechte für das Verzeichnis `files` ändern:''' Ändern Sie rekursiv die Zugriffsrechte für das Verzeichnis `files` auf 777 mit dem Befehl `sudo chmod 777 -R files`. Dieser Schritt gewährleistet, dass Drupal Dateien in dieses Verzeichnis schreiben kann.
# '''Konfigurationsdatei kopieren und umbenennen:''' Kopieren Sie die Konfigurationsdatei `default.settings.php` und benennen Sie die Kopie in `settings.php` um. Verwenden Sie hierfür den Befehl `cp default.settings.php settings.php`.
# '''Dateiberechtigungen für `settings.php` ändern:''' Abschließend müssen Sie die Dateiberechtigungen für die Datei `settings.php` auf 666 ändern. Verwenden Sie hierzu den Befehl `sudo chmod 666 settings.php`.

'''Kurzanleitung für die Kommandozeile:'''
 cd /var/www/drupal/web/sites/default/
 mkdir files
 mkdir files/translations
 sudo chmod 777 -R files
 cp default.settings.php settings.php
 sudo chmod 666 settings.php
Website starten. Jetzt neu st</text>
      <sha1>dy1gc9nvli62ypf8tdzgx2u8dvn4nyc</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/Cookie-Richtlinie</title>
    <ns>0</ns>
    <id>41</id>
    <revision>
      <id>183</id>
      <timestamp>2025-06-20T19:02:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ '''So installieren Sie die Option "Markdown Easy" in Drupal:''' # '''Zum Drupal-Adminbereich gehen.''' # '''Im linken Menü auf "Erweitern" klicken.''' Eine neue Seite erscheint. # '''Auf der Seite nach unten scrollen.''' # '''Die Option "Markdown Easy" suchen.''' # '''"Markdown Easy" durch Klicken auf das Kästchen aktivieren (blaues Häkchen).''' # '''Zum Seitenende scrollen und auf "Installieren" klicken.'''  '''Inhalte erstellen:'''  # Im linken Men…“</comment>
      <origin>183</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2470" sha1="mm643c5rysixp82t9qk18lwb4wt1ac1" xml:space="preserve">
'''So installieren Sie die Option "Markdown Easy" in Drupal:'''
# '''Zum Drupal-Adminbereich gehen.'''
# '''Im linken Menü auf "Erweitern" klicken.''' Eine neue Seite erscheint.
# '''Auf der Seite nach unten scrollen.'''
# '''Die Option "Markdown Easy" suchen.'''
# '''"Markdown Easy" durch Klicken auf das Kästchen aktivieren (blaues Häkchen).'''
# '''Zum Seitenende scrollen und auf "Installieren" klicken.'''

'''Inhalte erstellen:'''

# Im linken Menü den Punkt '''„Inhalt“''' auswählen. Eine neue Seite wird geladen.
# Mit der Maus über die Schaltfläche '''„Inhalt hinzufügen“''' fahren und daraufklicken.
# Eine neue Webseite öffnet sich.

'''Anleitung zum Ausfüllen des Formulars:'''

# '''Titel:''' Tragen Sie exakt „Cookie-Bestimmungen“ ein.
# '''Inhalt:''' Verwenden Sie den nachfolgenden Text.
# '''Textformat:''' Stellen Sie sicher, dass das Format auf „Markdown“ eingestellt ist.
# '''Speichern:''' Klicken Sie abschließend auf die Schaltfläche „Speichern“.

 # Cookie-Richtlinie
 
 ## Was sind Cookies?
 
 Cookies sind kleine Textdateien, die von Ihrem Browser auf Ihrem Endgerät gespeichert werden, wenn Sie unsere Website besuchen. Sie dienen dazu, unser Angebot nutzerfreundlicher, effektiver und sicherer zu machen.
 
 ## Wie verwendet unsere Drupal-Website Cookies?
 
 Unsere Drupal-Website verwendet Cookies für folgende Zwecke:
 
 - **Notwendige Cookies:** Diese Cookies sind für den Betrieb der Website und grundlegende Funktionen erforderlich (z. B. Login, Session-Management).
 - **Funktionale Cookies:** Sie ermöglichen erweiterte Funktionen und Personalisierung, wie z. B. das Speichern von Spracheinstellungen.
 - **Drittanbieter-Cookies:** Beim Einbinden von externen Diensten (z. B. YouTube, Google Maps) können Cookies von Drittanbietern gesetzt werden.
 
 ## Cookie-Einstellungen verwalten
 
 Sie können Ihre Cookie-Einstellungen jederzeit in Ihrem Browser anpassen und bereits gespeicherte Cookies löschen. Bitte beachten Sie, dass bei der Deaktivierung von Cookies die Funktionalität unserer Website eingeschränkt sein kann.
 
 ## Rechtsgrundlage
 
 Die Verarbeitung personenbezogener Daten durch Cookies erfolgt auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO (Einwilligung) oder Art. 6 Abs. 1 lit. f DSGVO (berechtigtes Interesse).
 
 ## Weitere Informationen
 
 Weitere Informationen zum Datenschutz finden Sie in unserer [Datenschutzerklärung](#).
 
 ---
 
 *Letzte Aktualisierung: 01.06.2025*</text>
      <sha1>mm643c5rysixp82t9qk18lwb4wt1ac1</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/Inhalt Import</title>
    <ns>0</ns>
    <id>42</id>
    <revision>
      <id>184</id>
      <timestamp>2025-06-20T19:12:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Die Inhaltsmigration ist ein wichtiger Bestandteil der Drupal-Websiteentwicklung und ermöglicht die Integration von Daten aus unterschiedlichen Quellen in die Drupal-Datenbank. Dies ist nützlich für die Migration von Inhalten aus anderen Systemen, die Aktualisierung bestehender Inhalte oder die Einbindung externer Datenquellen. Drupal bietet hierfür verschiedene Module und Methoden, darunter Feeds, Content Import und Migrate.  '''Feeds in Drupal'''  E…“</comment>
      <origin>184</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2415" sha1="gq55t3m1hz8dpc0u7wpop0k6zpc9i2m" xml:space="preserve">Die Inhaltsmigration ist ein wichtiger Bestandteil der Drupal-Websiteentwicklung und ermöglicht die Integration von Daten aus unterschiedlichen Quellen in die Drupal-Datenbank. Dies ist nützlich für die Migration von Inhalten aus anderen Systemen, die Aktualisierung bestehender Inhalte oder die Einbindung externer Datenquellen. Drupal bietet hierfür verschiedene Module und Methoden, darunter Feeds, Content Import und Migrate.

'''Feeds in Drupal'''

Ein Feed in Drupal dient dem automatischen Import von Inhalten aus externen Quellen. Das Feeds-Modul erlaubt die Integration von Daten wie Artikeln, Nachrichten oder Benutzern aus verschiedenen Formaten (z. B. RSS, CSV) in eine Drupal-Website. Dies ist besonders praktisch für die regelmäßige Inhaltsaktualisierung oder Datenmigrationen. Die Installation und Konfiguration des Feeds-Moduls erfolgt über die Drupal-Modulseite. Nach der Aktivierung können Benutzer Feeds erstellen, konfigurieren und verwalten, um Inhalte effizient zu importieren und zu aktualisieren.

composer require 'drupal/feeds:^3.0'

'''Migrate-Modul für komplexe Migrationen'''

Das Migrate-Modul in Drupal ist ein fortschrittliches Werkzeug für komplexe Inhaltsmigrationen. Es unterstützt die Migration aus verschiedenen Quellen, einschließlich anderer Drupal-Websites, und bietet eine flexible API zur Anpassung des Migrationsprozesses. Das Migrate-Modul ermöglicht die Migration von Inhalten, Benutzern, Taxonomien und anderen Entitäten und erlaubt Entwicklern, benutzerdefinierte Migrationsskripte zu erstellen. Dies ist besonders bei größeren Projekten mit Bedarf an präziser Steuerung des Migrationsprozesses von Vorteil. Die Installation und Konfiguration erfolgt ebenfalls über die Drupal-Modulseite. Nach der Aktivierung können Migrationspläne erstellt werden, welche die zu migrierenden Datenquellen und -ziele definieren.

'''Zusammenfassung'''

Der Inhaltsimport in Drupal ist ein grundlegender Aspekt der Website-Entwicklung und ermöglicht die Integration und Aktualisierung von Daten aus verschiedenen Quellen. Module wie Feeds und Migrate erlauben es Benutzern, Inhalte effizient zu importieren und zu verwalten, was die Flexibilität und Funktionalität von Drupal erheblich erweitert. Die Wahl des geeigneten Moduls hängt von den spezifischen Projektanforderungen ab, wobei Feeds sich für einfachere und Migrate für komplexere Migrationen eignet.</text>
      <sha1>gq55t3m1hz8dpc0u7wpop0k6zpc9i2m</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/Inhalt Export</title>
    <ns>0</ns>
    <id>43</id>
    <revision>
      <id>185</id>
      <timestamp>2025-06-20T19:44:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == Für den allgemeinen Inhaltsexport (CSV, XML, JSON) ==  === Views Data Export Modul ===  == Für die Migration von Inhalten zwischen Drupal-Sites (insbesondere gleiche Drupal-Version) ==  === Single Content Sync Modul ===  === Entity Migrate Export (EME) Modul ===  === Backup and Migrate Modul ===  == Für den Konfigurationsexport (z.B. Inhaltstypen, Felder, Views) ==  === Core Configuration Management (CMI) ===  === Features Modul ===“</comment>
      <origin>185</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="443" sha1="du69jadejm9es5jhwti1r83hq63tkks" xml:space="preserve">
== Für den allgemeinen Inhaltsexport (CSV, XML, JSON) ==

=== Views Data Export Modul ===

== Für die Migration von Inhalten zwischen Drupal-Sites (insbesondere gleiche Drupal-Version) ==

=== Single Content Sync Modul ===

=== Entity Migrate Export (EME) Modul ===

=== Backup and Migrate Modul ===

== Für den Konfigurationsexport (z.B. Inhaltstypen, Felder, Views) ==

=== Core Configuration Management (CMI) ===

=== Features Modul ===</text>
      <sha1>du69jadejm9es5jhwti1r83hq63tkks</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Drupal/vollständige statische HTML-Kopie einer Drupal-Website zu erstellen</title>
    <ns>0</ns>
    <id>44</id>
    <revision>
      <id>186</id>
      <timestamp>2025-06-20T20:03:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == vollständige statische HTML-Kopie einer Drupal-Website zu erstellen ==  * Tome-Modul * Wget Static-Modul * Static Generator-Modul“</comment>
      <origin>186</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="134" sha1="glxe4md2iafztp6nqww7wo64m861alo" xml:space="preserve">
== vollständige statische HTML-Kopie einer Drupal-Website zu erstellen ==

* Tome-Modul
* Wget Static-Modul
* Static Generator-Modul</text>
      <sha1>glxe4md2iafztp6nqww7wo64m861alo</sha1>
    </revision>
  </page>
  <page>
    <title>Server Diskussion:Hauptseite</title>
    <ns>0</ns>
    <id>45</id>
    <revision>
      <id>187</id>
      <timestamp>2025-06-21T01:07:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „*  [[Asp Net Core Model Binding]]“</comment>
      <origin>187</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="33" sha1="c4ob63qmb41rmovzh4yvfzebdr9al31" xml:space="preserve">*  [[Asp Net Core Model Binding]]</text>
      <sha1>c4ob63qmb41rmovzh4yvfzebdr9al31</sha1>
    </revision>
    <revision>
      <id>188</id>
      <parentid>187</parentid>
      <timestamp>2025-06-21T01:08:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>188</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="38" sha1="28qc6nxra7h1gkbifj2stvvd2kus0th" xml:space="preserve">*  [[Kurs:Asp Net Core Model Binding]]</text>
      <sha1>28qc6nxra7h1gkbifj2stvvd2kus0th</sha1>
    </revision>
    <revision>
      <id>189</id>
      <parentid>188</parentid>
      <timestamp>2025-06-21T01:39:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>189</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="61" sha1="5kl3bgtfqkpguvx3y68k9b60o69emk6" xml:space="preserve">*  [[Kurs:Asp Net Core Model Binding]]
* [[Kurs:Razor Views]]</text>
      <sha1>5kl3bgtfqkpguvx3y68k9b60o69emk6</sha1>
    </revision>
  </page>
  <page>
    <title>Asp Net Core Model Binding</title>
    <ns>0</ns>
    <id>46</id>
    <revision>
      <id>190</id>
      <timestamp>2025-06-21T01:07:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Query String== &lt;pre&gt;  using Microsoft.AspNetCore.Mvc;  namespace start.{{c1::Controllers;}}  // Diese Klasse definiert einen Controller für die ASP.NET Core MVC-Anwendung. {{c1::public class HomeController : Controller}} {{c1::{}}     // Diese Methode wird aufgerufen, wenn die Route "/start" aufgerufen wird.     // Der optionale Parameter "name" kann über die URL als Query-Parameter übergeben werden (z. B. /start?name=Thorsten).     {{c1::[Route("sta…“</comment>
      <origin>190</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="20510" sha1="ehu67mio8754h682f7xdq9giaqdwnqx" xml:space="preserve">==Query String==
&lt;pre&gt;

using Microsoft.AspNetCore.Mvc;

namespace start.{{c1::Controllers;}}

// Diese Klasse definiert einen Controller für die ASP.NET Core MVC-Anwendung.
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Diese Methode wird aufgerufen, wenn die Route "/start" aufgerufen wird.
    // Der optionale Parameter "name" kann über die URL als Query-Parameter übergeben werden (z. B. /start?name=Thorsten).
    {{c1::[Route("start")]}}
    {{c1::public IActionResult Index(string? name)}} 
    {
        // Überprüft, ob der Parameter "name" nicht null ist.
        {{c1::if (name!=null){}}
            // Gibt den Wert von "name" als Antwort zurück.
            {{c1::return Content($"{name}");}}
        {{c1::} }}
        // Gibt den Standardinhalt keine Inhalt zurück, wenn "name" null ist.
        {{c1::return Content("Keine Inhalt");}}
    {{c1::} }} 
{{c1::} }}

&lt;/pre&gt;

==Route Data==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;

// Der HomeController erbt von der Basisklasse "Controller", die grundlegende Funktionen für MVC-Controller bereitstellt.
namespace start.{{c1::Controllers;}}

{{c1::public class HomeController : Controller}}
{

    // Die Route-Attributdeklaration definiert eine URL-Route für die Methode "Index".
    // Beispiel: Ein Aufruf von "http://localhost/start/100" würde diese Methode aufrufen,
    // wobei "100" als Parameter "id" übergeben wird.
    {{c1::[Route("/start/{id:int}")] }} // Die Route akzeptiert nur Ganzzahlen (int) als Parameter.
    {{c1::public IActionResult Index(int? id){}}
        // Gibt den Wert des Parameters "id" als Textinhalt zurück.
        // Wenn "id" null ist, wird "null" als String zurückgegeben.
        {{c1::return Content($"{id}");}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Die HomeController-Klasse erbt von der Controller-Basis-Klasse==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc; // Importiert den Namespace für ASP.NET Core MVC-Funktionen

namespace start.{{c1::Controllers;}} // Definiert den Namespace der Anwendung

// Die HomeController-Klasse erbt von der Controller-Basis-Klasse
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Die Route "/start" wird für diese Methode definiert
    // Beispiel: http://localhost/start?id=100  als Ganzahl
    {{c1::[Route("/start")]}} 
    {{c1::public IActionResult Index([FromQuery] int? id){}} // Nimmt eine optionale Abfrageparameter "id" aus der URL entgegen Ganzahl
        {{c1::return Content($"{id}");}} // Gibt den Wert von "id" als Textinhalt zurück
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Der HomeController stellt einen Endpunkt zur Verfügung, der eine ID aus der URL entgegennimmt==

&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;

namespace start.{{c1::Controllers;}}

// Der HomeController stellt einen Endpunkt zur Verfügung, der eine ID aus der URL entgegennimmt
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Diese Methode reagiert auf Aufrufe wie /start/123 und gibt die ID als Text zurück(Ganz Zahl)
    {{c1::[Route("/start/{id}")]}}
    {{c1::public IActionResult Index ([FromRoute] int id)}}
    {{c1::{}}
        // Gibt die übergebene ID als Inhalt der HTTP-Antwort zurück
        {{c1::return Content($"{id}");}}
    {{c1::} }}

{{c1::} }}

&lt;/pre&gt;
==Person.css==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;

namespace start.{{c1::Models;}}

// Diese Klasse repräsentiert eine Person.
{{c1::public class Person}}
{
// Holt den Wert für die Eigenschaft Id aus den Query-Parametern der HTTP-Anfrage.
    {{c1::[FromQuery]}}

     // Die eindeutige ID der Person (Ganzzahl).
    {{c1::public int? Id {get;set;}}}

    // Der Vorname der Person.
    {{c1::public string? Vorname {get;set;}}}

    // Gibt eine Zeichenkette zurück, die die Person anhand von Id und Vorname beschreibt.
    {{c1::public override string ToString()}}
    {{c1::{}}
        {{c1::return}} $"{Id}={Vorname}";
    {{c1::} }}
{{c1::} }}

&lt;/pre&gt;

==HomeController==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;
using start.Models;
namespace start.{{c1::Controllers;}}

// Dies ist der Controller für die Startseite.
{{c1::public class HomeController : Controller}}
{{c1::{}}

    // Diese Methode wird aufgerufen, wenn die Route "/start?id=1&amp;Vorname=Thorsten aufgerufen wird.
    // Sie nimmt ein Person-Objekt entgegen und gibt dessen Inhalt als Text zurück.
    {{c1::[Route("/start")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        {{c1::return Content($"{person}");}}
    {{c1::} }}

{{c1::} }}

&lt;/pre&gt;


==Person.cs==

&lt;pre&gt;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

// Die Klasse `Person` repräsentiert eine Person mit grundlegenden Eigenschaften wie Vorname, Nachname und Telefonnummer.
{{c1::public class Person}}
{
    // Die Eigenschaft `Vorname` ist erforderlich und darf nicht leer sein.
    {{c1::[Required]}}
    {{c1::public string? Vorname {get;set;} }}

    // Die Eigenschaft `Nachname` ist optional, kann aber bei Bedarf ebenfalls als erforderlich markiert werden.
    {{c1::public string? Nachname {get;set;} }}

    // Die Eigenschaft `Telefonnummer` ist optional. Es gibt keine Validierung für das Format der Telefonnummer.
    {{c1::public string? Telefonnummer {get;set;} }}

    // Überschreibt die `ToString`-Methode, um die Eigenschaften der Klasse als lesbaren String zurückzugeben.
       {{c1::public override string ToString()}}
    {{c1::{}}
        {{c1::return}} $"Vorname {Vorname} , Nachname: {Nachname}: Telefonummer: {Telefonnummer} ";
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==HomeController==
&lt;pre&gt;

using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}

namespace start.{{c1::Controllers;}}

// Der `HomeController` verwaltet die Routen und Aktionen für die Startseite der Anwendung.
{{c1::public class HomeController : Controller}}
{
    // Die Methode `Index` wird aufgerufen, wenn die Route "/Register" aufgerufen wird.
    // Sie erwartet ein `Person`-Objekt als Parameter, das automatisch durch Model Binding gefüllt wird.
    // Die Methode gibt die Eigenschaften des `Person`-Objekts als Textinhalt zurück.
    {{c1::[Route("Register")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Gibt die `ToString`-Darstellung des `Person`-Objekts als HTTP-Antwort zurück.
        {{c1::return Content($"{person}");}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;
==Der HomeController verarbeitet Anfragen an die Route "Register".==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Der HomeController verarbeitet Anfragen an die Route "Register".
// Die Methode Index nimmt ein Person-Objekt entgegen und prüft,
// ob das Model gültig ist. Bei ungültigem Model sollte eine Fehlerbehandlung erfolgen.
{{c1::public class HomeController : Controller}}
{

    {{c1::[Route("Register")]}}
    {{public IActionResult Index(Person person)}}
    {
        // Überprüft, ob das Model gültig ist
        {{c1::if (!ModelState.IsValid)}}
        {
            // Hier sollte die Fehlerbehandlung implementiert werden
        }
        // Weitere Verarbeitung, falls das Model gültig ist
    }

}
&lt;/pre&gt;
==Dies ist der HomeController, der von der ASP.NET Core Controller-Basis-Klasse erbt==
&lt;pre&gt;

using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Dies ist der HomeController, der von der ASP.NET Core Controller-Basis-Klasse erbt.
{{c1::public class HomeController : Controller}}
{

    // Diese Methode wird aufgerufen, wenn die Route "/Register" aufgerufen wird.
    // Sie erwartet ein Person-Objekt als Parameter.
    {{c1::[Route("Register")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüft, ob das übergebene Modell gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Falls das Modell ungültig ist, werden alle Fehlermeldungen aus dem ModelState gesammelt.
           {{c1::var errors=ModelState.Values}}
                {{c1::.SelectMany(v =&gt; v.Errors)}}
                {{c1::.Select(e =&gt; e.ErrorMessage)}}
                {{c1::.ToList();}}
            // Gibt die Fehlermeldungen als Text zurück, getrennt durch Semikolons.
            {{c1::return Content(string.Join("; ", errors));}}
        {{c1::} }}
        // Falls das Modell gültig ist, wird "Richtig" als Text zurückgegeben.
        {{c1::return Content("Richtig");}}
    {{c1::} }}

{{c1::} }}

&lt;/pre&gt;

==Person.cs==
&lt;pre&gt;
using System;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

/// Die Klasse Person repräsentiert eine Person mit Vor- und Nachnamen
{{c1::public class Person}}
{


    /// Gibt den Vornamen der Person zurück oder legt ihn fest.
    /// Das Attribut  stellt sicher, dass dieses Feld nicht leer bleibt.
    {{c1::[Required]}}
    {{c1::public string? Vorname {{c1::{get;set;} }}
    /// Gibt den Nachnamen der Person zurück oder legt ihn fest.
    /// Das Attribut stellt sicher, dass dieses Feld nicht leer bleibt.
    {{c1::[Required]}}
    {{c1::public string? Nachname {get;set;} }}

{{c1::} }}

&lt;/pre&gt;

==HomeController==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;
using start.Models;

namespace start.Controllers;

/// Der HomeController behandelt die Startseite der Anwendung.
public class HomeController : Controller
{
    
    /// Diese Methode empfängt ein Person-Objekt und gibt entweder die Namen aus
    /// oder bei ungültigem Model die Fehlermeldungen zurück.
    /// Url http://localhost?Vorname=ttt&amp;Nachname=rrr
    {{c1::[Route("/")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Fehler aus dem ModelState extrahieren und als BadRequest zurückgeben
            {{c1::var errors=ModelState.Values}}
            {{c1::.SelectMany(v=&gt;v.Errors)}}
            {{c1::.Select(e=&gt;e.ErrorMessage);}}
            {{c1::return BadRequest(errors);}}
        {{c1::} }}
        // Vor- und Nachname der Person als Text zurückgeben
        {{c1::return Content}}($"{person.Vorname} {person.Nachname}");
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;


==Person.cs==

&lt;pre&gt;

using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

// Die Klasse "Person" repräsentiert ein Modell für eine Person mit Vor- und Nachnamen.
{{c1::public class Person}}
{
    // Die Eigenschaft "Vorname" ist erforderlich und darf nicht null sein.
    // Der Anzeigename wird als "Vorname" definiert.
    {{c1::[Required(ErrorMessage = "{0} darf nicht leer sein.")]}}
    {{c1::[Display(Name = "Vorname")]}}
    {{c1::public string? Vorname {get;set;} }}

    // Die Eigenschaft "Nachname" ist ebenfalls erforderlich und darf nicht null sein.
    // Der Anzeigename wird als "Nachname" definiert.
    {{c1::[Required(ErrorMessage = "{0} darf nicht leer sein.")]}}
    {{c1::[Display(Name = "Nachname")]}}
    {{c1::public string? Nachname {get;set;} }}
{{c1::} }}

&lt;/pre&gt;


==HomeController==

&lt;pre&gt;
using System;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}

namespace start.{{c1::Controllers;}}

// Die HomeController-Klasse erbt von der Controller-Basis-Klasse und stellt Endpunkte für die Anwendung bereit.
{{c1::public class HomeController : Controller}}
{

    // Dieser Endpunkt wird über die Route "Register" aufgerufen. Beispiel: https://localhost/Register?Vorname=steffi&amp;Nachname=Timm
    {{c1::[Route("Register")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüft, ob das übermittelte Modell (Person) gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Falls das Modell ungültig ist, werden alle Validierungsfehler gesammelt.
            {{c1::var errors = ModelState.Values}}
                {{c1::.SelectMany(e =&gt; e.Errors)}}
                {{c1::.Select(v =&gt; v.ErrorMessage);}}

            // Gibt die Fehler als BadRequest-Antwort zurück.
           

            {{v1::return BadRequest(errors);}}
        {{c1::} }}

        // Falls das Modell gültig ist, wird der Nachname und Vorname der Person zurückgegeben.
        {{c1::return}} Json(person);
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;
==Person.cs==
&lt;pre&gt;
using System;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

// Die Klasse Person repräsentiert eine Person mit einer Eigenschaft "Vorname".
{{c1::public class Person}}
{{c1::{}}
    // Die Eigenschaft "Vorname" ist erforderlich und unterliegt bestimmten Validierungsregeln.

    //  Stellt sicher, dass die Eigenschaft "Vorname" nicht leer ist.
    // Eine benutzerdefinierte Fehlermeldung wird angezeigt, wenn die Validierung fehlschlägt.
    // Satz soll ausgaben '''Das Feld Vorname darf nicht leer sein''' 
    {{c1::[Required(ErrorMessage="Das Feld {0} darf nicht leer sein.")]}}

    // [Display]: Gibt an, wie die Eigenschaft "Vorname" in der Benutzeroberfläche angezeigt wird.
    {{c1::[Display(Name="Vorname")]}}

    //  Legt die maximale und minimale Länge für die Eigenschaft "Vorname" fest.
    // Die Länge muss zwischen 5 und 40 Zeichen liegen. Eine Fehlermeldung wird definiert.
    // Satz soll ausgaben '''Die Länge von Vornaame muss zwischen 5 und 40 Zeichen liegen
    {{c1::[StringLength(40,MinimumLength=5,ErrorMessage="Die Länge von {0} muss zwischen {2} und {1} Zeichen liegen.")]}}
    {{c1::public string? Vorname {get;set;} }}
{{c1::} }}

&lt;/pre&gt;

==HomeController==
&lt;pre&gt;

using System;
using System.ComponentModel.Design;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Der HomeController erbt von der Basisklasse Controller, die grundlegende Funktionen für MVC-Controller bereitstellt.
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Die Index-Methode ist mit der Route "/" verknüpft und wird aufgerufen, wenn die Basis-URL der Anwendung aufgerufen wird.
    {{c1::[Route("/")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüfung, ob das übergebene Modell (Person) gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Wenn das Modell ungültig ist, werden die Fehler aus dem ModelState extrahiert.
            {{c1::var errors=ModelState.Values}}
            {{c1::.SelectMany(e=&gt;e.Errors)}}
            {{c1::.Select(v=&gt;v.ErrorMessage);}}

            // Rückgabe eines BadRequest (HTTP 400) mit den Fehlern.
            {{c1::return BadRequest(errors);}}
        {{c1::} }}

        // Wenn das Modell gültig ist, wird es als JSON zurückgegeben.
        {{c1::return Json(person);}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Person==
&lt;pre&gt;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

// Die Klasse "Person" repräsentiert ein Modell mit einer Eigenschaft "Alter".
{{c1::public class Person}}
{{c1::{}}
    // "Alter" darf nicht leer sein. Eine Fehlermeldung wird angezeigt, 
    // wenn kein Wert angegeben wird.
    {{c1::[Required(ErrorMessage = "{0} darf nicht leer sein")]}}
    
    // Der Anzeigename für "Alter" wird auf "Alter" gesetzt, was z. B. 
    // in Formularen oder Fehlermeldungen verwendet wird.
    {{c1::[Display(Name="Alter")]}}
    
    // Der Wert von "Alter" muss zwischen 10 und 20 liegen. Andernfalls wird 
    // eine Fehlermeldung mit den entsprechenden Grenzwerten angezeigt.
    // Fehlermeldung: "Alter darf nur mindestens 10 bis 20 sein."
    {{c1::[Range(10, 20, ErrorMessage = "{0} darf nur mindestens {1} bis {2} sein")]}}
    {{c1::public int? Alter {get;set;} }}
{{c1::} }}
&lt;/pre&gt;

==HomeController==
&lt;pre&gt;

using System;
using System.ComponentModel.Design;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Der HomeController erbt von der Basisklasse Controller, die grundlegende Funktionen für MVC-Controller bereitstellt.
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Die Index-Methode ist mit der Route "/" verknüpft und wird aufgerufen, wenn die Basis-URL der Anwendung aufgerufen wird.
    {{c1::[Route("/")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüfung, ob das übergebene Modell (Person) gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Wenn das Modell ungültig ist, werden die Fehler aus dem ModelState extrahiert.
            {{c1::var errors=ModelState.Values}}
            {{c1::.SelectMany(e=&gt;e.Errors)}}
            {{c1::.Select(v=&gt;v.ErrorMessage);}}

            // Rückgabe eines BadRequest (HTTP 400) mit den Fehlern.
            {{c1::return BadRequest(errors);}}
        {{c1::} }}

        // Wenn das Modell gültig ist, wird es als JSON zurückgegeben.
        {{c1::return Json(person);}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Person.css==
&lt;pre&gt;

using System.ComponentModel.DataAnnotations;

namespace start.Models;

// Die Klasse Person repräsentiert ein Modell mit Validierungsregeln für die Eigenschaften Passwort und RePasswort.
public class Person
{c1::{}}
    // Die Eigenschaft Passwort ist erforderlich und muss zwischen 8 und 12 Zeichen lang sein.
    // Das Attribut  stellt sicher, dass das Feld nicht leer ist.
    // Das Attribut definiert den Anzeigenamen für die Eigenschaft.
    // Das Attribut  legt die minimale und maximale Länge der Zeichenfolge fest.
    //Fehler Meldung "Passwort darf nicht leer sein.
    {{c1::[Required(ErrorMessage="{0} darf nicht leer sein")}}
    {{c1::[Display(Name="Passwort")]}}
    //Fehler Meldung "Passwort: Die Länge muss zwischen 12 und 8 Zeichen liegen")]
    {{c1::[StringLength(12,MinimumLength=8,ErrorMessage ="{0}: Die Länge muss zwischen {2} und {1} Zeichen liegen")]}}
    {{c1::public string? Passwort{get; set;} }}

    // Die Eigenschaft RePasswort ist ebenfalls erforderlich und muss die gleichen Längenbeschränkungen wie Passwort erfüllen.
    // Zusätzlich wird mit dem Attribut  sichergestellt, dass RePasswort mit Passwort übereinstimmt.
   //Fehler Meldung ""RePasswort darf nicht leer sein."
    {{c1::[Required(ErrorMessage="{0} darf nicht leer sein")]}}
    {{c1::[Display(Name="RePasswort")]}}
    //Fehler Meldung "RePasswort: Die Länge muss zwischen 12 und 8 Zeichen liegen")]
    {{c1::[StringLength(12,MinimumLength=8,ErrorMessage="{0}: Die Länge muss zwischen {2} und {1} Zeichen liegen")]}}
    //Fehler Meldung "RePasswort stimmt nicht mit Passwort überein"
    {{c1::[Compare("Passwort",ErrorMessage="{0} stimmt nicht mit {1} überein")]}}
    {{c1::public string? RePasswort {get;set;} }}
{{c1::} }}

&lt;/pre&gt;

==HomeController==
&lt;pre&gt;
using System;
using System.ComponentModel.Design;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Der HomeController erbt von der Basisklasse Controller, die grundlegende Funktionen für MVC-Controller bereitstellt.
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Die Index-Methode ist mit der Route "/" verknüpft und wird aufgerufen, wenn die Basis-URL der Anwendung aufgerufen wird.
    {{c1::[Route("/")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüfung, ob das übergebene Modell (Person) gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Wenn das Modell ungültig ist, werden die Fehler aus dem ModelState extrahiert.
            {{c1::var errors=ModelState.Values}}
            {{c1::.SelectMany(e=&gt;e.Errors)}}
            {{c1::.Select(v=&gt;v.ErrorMessage);}}

            // Rückgabe eines BadRequest (HTTP 400) mit den Fehlern.
            {{c1::return BadRequest(errors);}}
        {{c1::} }}

        // Wenn das Modell gültig ist, wird es als JSON zurückgegeben.
        {{c1::return Json(person);}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Grundklasse für Start-Validierung==
&lt;pre&gt;
using System;
using System.ComponentModel.DataAnnotations;

namespace start.praxis;
// Grundklasse für Start-Validierung
// Diese Klasse kann erweitert werden, um spezifische Validierungslogik zu implementieren
// Grundsätzlich wird die Validierung in der abgeleiteten Klasse implementiert
{{c1::public class Start : ValidationAttribute}} // Automaazisch ersellt, um Validierung zu ermöglichen
{
    {{c1::protected override}} ValidationResult? IsValid(object? value, ValidationContext validationContext)
    {
        return base.IsValid(value, validationContext);
    }
}
&lt;/pre&gt;</text>
      <sha1>ehu67mio8754h682f7xdq9giaqdwnqx</sha1>
    </revision>
  </page>
  <page>
    <title>Server Diskussion:Asp Net Core Model Binding</title>
    <ns>0</ns>
    <id>47</id>
    <revision>
      <id>191</id>
      <timestamp>2025-06-21T01:09:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Query String== &lt;pre&gt;  using Microsoft.AspNetCore.Mvc;  namespace start.{{c1::Controllers;}}  // Diese Klasse definiert einen Controller für die ASP.NET Core MVC-Anwendung. {{c1::public class HomeController : Controller}} {{c1::{}}     // Diese Methode wird aufgerufen, wenn die Route "/start" aufgerufen wird.     // Der optionale Parameter "name" kann über die URL als Query-Parameter übergeben werden (z. B. /start?name=Thorsten).     {{c1::[Route("sta…“</comment>
      <origin>191</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="20510" sha1="ehu67mio8754h682f7xdq9giaqdwnqx" xml:space="preserve">==Query String==
&lt;pre&gt;

using Microsoft.AspNetCore.Mvc;

namespace start.{{c1::Controllers;}}

// Diese Klasse definiert einen Controller für die ASP.NET Core MVC-Anwendung.
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Diese Methode wird aufgerufen, wenn die Route "/start" aufgerufen wird.
    // Der optionale Parameter "name" kann über die URL als Query-Parameter übergeben werden (z. B. /start?name=Thorsten).
    {{c1::[Route("start")]}}
    {{c1::public IActionResult Index(string? name)}} 
    {
        // Überprüft, ob der Parameter "name" nicht null ist.
        {{c1::if (name!=null){}}
            // Gibt den Wert von "name" als Antwort zurück.
            {{c1::return Content($"{name}");}}
        {{c1::} }}
        // Gibt den Standardinhalt keine Inhalt zurück, wenn "name" null ist.
        {{c1::return Content("Keine Inhalt");}}
    {{c1::} }} 
{{c1::} }}

&lt;/pre&gt;

==Route Data==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;

// Der HomeController erbt von der Basisklasse "Controller", die grundlegende Funktionen für MVC-Controller bereitstellt.
namespace start.{{c1::Controllers;}}

{{c1::public class HomeController : Controller}}
{

    // Die Route-Attributdeklaration definiert eine URL-Route für die Methode "Index".
    // Beispiel: Ein Aufruf von "http://localhost/start/100" würde diese Methode aufrufen,
    // wobei "100" als Parameter "id" übergeben wird.
    {{c1::[Route("/start/{id:int}")] }} // Die Route akzeptiert nur Ganzzahlen (int) als Parameter.
    {{c1::public IActionResult Index(int? id){}}
        // Gibt den Wert des Parameters "id" als Textinhalt zurück.
        // Wenn "id" null ist, wird "null" als String zurückgegeben.
        {{c1::return Content($"{id}");}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Die HomeController-Klasse erbt von der Controller-Basis-Klasse==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc; // Importiert den Namespace für ASP.NET Core MVC-Funktionen

namespace start.{{c1::Controllers;}} // Definiert den Namespace der Anwendung

// Die HomeController-Klasse erbt von der Controller-Basis-Klasse
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Die Route "/start" wird für diese Methode definiert
    // Beispiel: http://localhost/start?id=100  als Ganzahl
    {{c1::[Route("/start")]}} 
    {{c1::public IActionResult Index([FromQuery] int? id){}} // Nimmt eine optionale Abfrageparameter "id" aus der URL entgegen Ganzahl
        {{c1::return Content($"{id}");}} // Gibt den Wert von "id" als Textinhalt zurück
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Der HomeController stellt einen Endpunkt zur Verfügung, der eine ID aus der URL entgegennimmt==

&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;

namespace start.{{c1::Controllers;}}

// Der HomeController stellt einen Endpunkt zur Verfügung, der eine ID aus der URL entgegennimmt
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Diese Methode reagiert auf Aufrufe wie /start/123 und gibt die ID als Text zurück(Ganz Zahl)
    {{c1::[Route("/start/{id}")]}}
    {{c1::public IActionResult Index ([FromRoute] int id)}}
    {{c1::{}}
        // Gibt die übergebene ID als Inhalt der HTTP-Antwort zurück
        {{c1::return Content($"{id}");}}
    {{c1::} }}

{{c1::} }}

&lt;/pre&gt;
==Person.css==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;

namespace start.{{c1::Models;}}

// Diese Klasse repräsentiert eine Person.
{{c1::public class Person}}
{
// Holt den Wert für die Eigenschaft Id aus den Query-Parametern der HTTP-Anfrage.
    {{c1::[FromQuery]}}

     // Die eindeutige ID der Person (Ganzzahl).
    {{c1::public int? Id {get;set;}}}

    // Der Vorname der Person.
    {{c1::public string? Vorname {get;set;}}}

    // Gibt eine Zeichenkette zurück, die die Person anhand von Id und Vorname beschreibt.
    {{c1::public override string ToString()}}
    {{c1::{}}
        {{c1::return}} $"{Id}={Vorname}";
    {{c1::} }}
{{c1::} }}

&lt;/pre&gt;

==HomeController==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;
using start.Models;
namespace start.{{c1::Controllers;}}

// Dies ist der Controller für die Startseite.
{{c1::public class HomeController : Controller}}
{{c1::{}}

    // Diese Methode wird aufgerufen, wenn die Route "/start?id=1&amp;Vorname=Thorsten aufgerufen wird.
    // Sie nimmt ein Person-Objekt entgegen und gibt dessen Inhalt als Text zurück.
    {{c1::[Route("/start")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        {{c1::return Content($"{person}");}}
    {{c1::} }}

{{c1::} }}

&lt;/pre&gt;


==Person.cs==

&lt;pre&gt;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

// Die Klasse `Person` repräsentiert eine Person mit grundlegenden Eigenschaften wie Vorname, Nachname und Telefonnummer.
{{c1::public class Person}}
{
    // Die Eigenschaft `Vorname` ist erforderlich und darf nicht leer sein.
    {{c1::[Required]}}
    {{c1::public string? Vorname {get;set;} }}

    // Die Eigenschaft `Nachname` ist optional, kann aber bei Bedarf ebenfalls als erforderlich markiert werden.
    {{c1::public string? Nachname {get;set;} }}

    // Die Eigenschaft `Telefonnummer` ist optional. Es gibt keine Validierung für das Format der Telefonnummer.
    {{c1::public string? Telefonnummer {get;set;} }}

    // Überschreibt die `ToString`-Methode, um die Eigenschaften der Klasse als lesbaren String zurückzugeben.
       {{c1::public override string ToString()}}
    {{c1::{}}
        {{c1::return}} $"Vorname {Vorname} , Nachname: {Nachname}: Telefonummer: {Telefonnummer} ";
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==HomeController==
&lt;pre&gt;

using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}

namespace start.{{c1::Controllers;}}

// Der `HomeController` verwaltet die Routen und Aktionen für die Startseite der Anwendung.
{{c1::public class HomeController : Controller}}
{
    // Die Methode `Index` wird aufgerufen, wenn die Route "/Register" aufgerufen wird.
    // Sie erwartet ein `Person`-Objekt als Parameter, das automatisch durch Model Binding gefüllt wird.
    // Die Methode gibt die Eigenschaften des `Person`-Objekts als Textinhalt zurück.
    {{c1::[Route("Register")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Gibt die `ToString`-Darstellung des `Person`-Objekts als HTTP-Antwort zurück.
        {{c1::return Content($"{person}");}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;
==Der HomeController verarbeitet Anfragen an die Route "Register".==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Der HomeController verarbeitet Anfragen an die Route "Register".
// Die Methode Index nimmt ein Person-Objekt entgegen und prüft,
// ob das Model gültig ist. Bei ungültigem Model sollte eine Fehlerbehandlung erfolgen.
{{c1::public class HomeController : Controller}}
{

    {{c1::[Route("Register")]}}
    {{public IActionResult Index(Person person)}}
    {
        // Überprüft, ob das Model gültig ist
        {{c1::if (!ModelState.IsValid)}}
        {
            // Hier sollte die Fehlerbehandlung implementiert werden
        }
        // Weitere Verarbeitung, falls das Model gültig ist
    }

}
&lt;/pre&gt;
==Dies ist der HomeController, der von der ASP.NET Core Controller-Basis-Klasse erbt==
&lt;pre&gt;

using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Dies ist der HomeController, der von der ASP.NET Core Controller-Basis-Klasse erbt.
{{c1::public class HomeController : Controller}}
{

    // Diese Methode wird aufgerufen, wenn die Route "/Register" aufgerufen wird.
    // Sie erwartet ein Person-Objekt als Parameter.
    {{c1::[Route("Register")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüft, ob das übergebene Modell gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Falls das Modell ungültig ist, werden alle Fehlermeldungen aus dem ModelState gesammelt.
           {{c1::var errors=ModelState.Values}}
                {{c1::.SelectMany(v =&gt; v.Errors)}}
                {{c1::.Select(e =&gt; e.ErrorMessage)}}
                {{c1::.ToList();}}
            // Gibt die Fehlermeldungen als Text zurück, getrennt durch Semikolons.
            {{c1::return Content(string.Join("; ", errors));}}
        {{c1::} }}
        // Falls das Modell gültig ist, wird "Richtig" als Text zurückgegeben.
        {{c1::return Content("Richtig");}}
    {{c1::} }}

{{c1::} }}

&lt;/pre&gt;

==Person.cs==
&lt;pre&gt;
using System;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

/// Die Klasse Person repräsentiert eine Person mit Vor- und Nachnamen
{{c1::public class Person}}
{


    /// Gibt den Vornamen der Person zurück oder legt ihn fest.
    /// Das Attribut  stellt sicher, dass dieses Feld nicht leer bleibt.
    {{c1::[Required]}}
    {{c1::public string? Vorname {{c1::{get;set;} }}
    /// Gibt den Nachnamen der Person zurück oder legt ihn fest.
    /// Das Attribut stellt sicher, dass dieses Feld nicht leer bleibt.
    {{c1::[Required]}}
    {{c1::public string? Nachname {get;set;} }}

{{c1::} }}

&lt;/pre&gt;

==HomeController==
&lt;pre&gt;
using Microsoft.AspNetCore.Mvc;
using start.Models;

namespace start.Controllers;

/// Der HomeController behandelt die Startseite der Anwendung.
public class HomeController : Controller
{
    
    /// Diese Methode empfängt ein Person-Objekt und gibt entweder die Namen aus
    /// oder bei ungültigem Model die Fehlermeldungen zurück.
    /// Url http://localhost?Vorname=ttt&amp;Nachname=rrr
    {{c1::[Route("/")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Fehler aus dem ModelState extrahieren und als BadRequest zurückgeben
            {{c1::var errors=ModelState.Values}}
            {{c1::.SelectMany(v=&gt;v.Errors)}}
            {{c1::.Select(e=&gt;e.ErrorMessage);}}
            {{c1::return BadRequest(errors);}}
        {{c1::} }}
        // Vor- und Nachname der Person als Text zurückgeben
        {{c1::return Content}}($"{person.Vorname} {person.Nachname}");
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;


==Person.cs==

&lt;pre&gt;

using System;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

// Die Klasse "Person" repräsentiert ein Modell für eine Person mit Vor- und Nachnamen.
{{c1::public class Person}}
{
    // Die Eigenschaft "Vorname" ist erforderlich und darf nicht null sein.
    // Der Anzeigename wird als "Vorname" definiert.
    {{c1::[Required(ErrorMessage = "{0} darf nicht leer sein.")]}}
    {{c1::[Display(Name = "Vorname")]}}
    {{c1::public string? Vorname {get;set;} }}

    // Die Eigenschaft "Nachname" ist ebenfalls erforderlich und darf nicht null sein.
    // Der Anzeigename wird als "Nachname" definiert.
    {{c1::[Required(ErrorMessage = "{0} darf nicht leer sein.")]}}
    {{c1::[Display(Name = "Nachname")]}}
    {{c1::public string? Nachname {get;set;} }}
{{c1::} }}

&lt;/pre&gt;


==HomeController==

&lt;pre&gt;
using System;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}

namespace start.{{c1::Controllers;}}

// Die HomeController-Klasse erbt von der Controller-Basis-Klasse und stellt Endpunkte für die Anwendung bereit.
{{c1::public class HomeController : Controller}}
{

    // Dieser Endpunkt wird über die Route "Register" aufgerufen. Beispiel: https://localhost/Register?Vorname=steffi&amp;Nachname=Timm
    {{c1::[Route("Register")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüft, ob das übermittelte Modell (Person) gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Falls das Modell ungültig ist, werden alle Validierungsfehler gesammelt.
            {{c1::var errors = ModelState.Values}}
                {{c1::.SelectMany(e =&gt; e.Errors)}}
                {{c1::.Select(v =&gt; v.ErrorMessage);}}

            // Gibt die Fehler als BadRequest-Antwort zurück.
           

            {{v1::return BadRequest(errors);}}
        {{c1::} }}

        // Falls das Modell gültig ist, wird der Nachname und Vorname der Person zurückgegeben.
        {{c1::return}} Json(person);
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;
==Person.cs==
&lt;pre&gt;
using System;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

// Die Klasse Person repräsentiert eine Person mit einer Eigenschaft "Vorname".
{{c1::public class Person}}
{{c1::{}}
    // Die Eigenschaft "Vorname" ist erforderlich und unterliegt bestimmten Validierungsregeln.

    //  Stellt sicher, dass die Eigenschaft "Vorname" nicht leer ist.
    // Eine benutzerdefinierte Fehlermeldung wird angezeigt, wenn die Validierung fehlschlägt.
    // Satz soll ausgaben '''Das Feld Vorname darf nicht leer sein''' 
    {{c1::[Required(ErrorMessage="Das Feld {0} darf nicht leer sein.")]}}

    // [Display]: Gibt an, wie die Eigenschaft "Vorname" in der Benutzeroberfläche angezeigt wird.
    {{c1::[Display(Name="Vorname")]}}

    //  Legt die maximale und minimale Länge für die Eigenschaft "Vorname" fest.
    // Die Länge muss zwischen 5 und 40 Zeichen liegen. Eine Fehlermeldung wird definiert.
    // Satz soll ausgaben '''Die Länge von Vornaame muss zwischen 5 und 40 Zeichen liegen
    {{c1::[StringLength(40,MinimumLength=5,ErrorMessage="Die Länge von {0} muss zwischen {2} und {1} Zeichen liegen.")]}}
    {{c1::public string? Vorname {get;set;} }}
{{c1::} }}

&lt;/pre&gt;

==HomeController==
&lt;pre&gt;

using System;
using System.ComponentModel.Design;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Der HomeController erbt von der Basisklasse Controller, die grundlegende Funktionen für MVC-Controller bereitstellt.
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Die Index-Methode ist mit der Route "/" verknüpft und wird aufgerufen, wenn die Basis-URL der Anwendung aufgerufen wird.
    {{c1::[Route("/")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüfung, ob das übergebene Modell (Person) gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Wenn das Modell ungültig ist, werden die Fehler aus dem ModelState extrahiert.
            {{c1::var errors=ModelState.Values}}
            {{c1::.SelectMany(e=&gt;e.Errors)}}
            {{c1::.Select(v=&gt;v.ErrorMessage);}}

            // Rückgabe eines BadRequest (HTTP 400) mit den Fehlern.
            {{c1::return BadRequest(errors);}}
        {{c1::} }}

        // Wenn das Modell gültig ist, wird es als JSON zurückgegeben.
        {{c1::return Json(person);}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Person==
&lt;pre&gt;
using System.ComponentModel.DataAnnotations;

namespace start.{{c1::Models;}}

// Die Klasse "Person" repräsentiert ein Modell mit einer Eigenschaft "Alter".
{{c1::public class Person}}
{{c1::{}}
    // "Alter" darf nicht leer sein. Eine Fehlermeldung wird angezeigt, 
    // wenn kein Wert angegeben wird.
    {{c1::[Required(ErrorMessage = "{0} darf nicht leer sein")]}}
    
    // Der Anzeigename für "Alter" wird auf "Alter" gesetzt, was z. B. 
    // in Formularen oder Fehlermeldungen verwendet wird.
    {{c1::[Display(Name="Alter")]}}
    
    // Der Wert von "Alter" muss zwischen 10 und 20 liegen. Andernfalls wird 
    // eine Fehlermeldung mit den entsprechenden Grenzwerten angezeigt.
    // Fehlermeldung: "Alter darf nur mindestens 10 bis 20 sein."
    {{c1::[Range(10, 20, ErrorMessage = "{0} darf nur mindestens {1} bis {2} sein")]}}
    {{c1::public int? Alter {get;set;} }}
{{c1::} }}
&lt;/pre&gt;

==HomeController==
&lt;pre&gt;

using System;
using System.ComponentModel.Design;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Der HomeController erbt von der Basisklasse Controller, die grundlegende Funktionen für MVC-Controller bereitstellt.
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Die Index-Methode ist mit der Route "/" verknüpft und wird aufgerufen, wenn die Basis-URL der Anwendung aufgerufen wird.
    {{c1::[Route("/")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüfung, ob das übergebene Modell (Person) gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Wenn das Modell ungültig ist, werden die Fehler aus dem ModelState extrahiert.
            {{c1::var errors=ModelState.Values}}
            {{c1::.SelectMany(e=&gt;e.Errors)}}
            {{c1::.Select(v=&gt;v.ErrorMessage);}}

            // Rückgabe eines BadRequest (HTTP 400) mit den Fehlern.
            {{c1::return BadRequest(errors);}}
        {{c1::} }}

        // Wenn das Modell gültig ist, wird es als JSON zurückgegeben.
        {{c1::return Json(person);}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Person.css==
&lt;pre&gt;

using System.ComponentModel.DataAnnotations;

namespace start.Models;

// Die Klasse Person repräsentiert ein Modell mit Validierungsregeln für die Eigenschaften Passwort und RePasswort.
public class Person
{c1::{}}
    // Die Eigenschaft Passwort ist erforderlich und muss zwischen 8 und 12 Zeichen lang sein.
    // Das Attribut  stellt sicher, dass das Feld nicht leer ist.
    // Das Attribut definiert den Anzeigenamen für die Eigenschaft.
    // Das Attribut  legt die minimale und maximale Länge der Zeichenfolge fest.
    //Fehler Meldung "Passwort darf nicht leer sein.
    {{c1::[Required(ErrorMessage="{0} darf nicht leer sein")}}
    {{c1::[Display(Name="Passwort")]}}
    //Fehler Meldung "Passwort: Die Länge muss zwischen 12 und 8 Zeichen liegen")]
    {{c1::[StringLength(12,MinimumLength=8,ErrorMessage ="{0}: Die Länge muss zwischen {2} und {1} Zeichen liegen")]}}
    {{c1::public string? Passwort{get; set;} }}

    // Die Eigenschaft RePasswort ist ebenfalls erforderlich und muss die gleichen Längenbeschränkungen wie Passwort erfüllen.
    // Zusätzlich wird mit dem Attribut  sichergestellt, dass RePasswort mit Passwort übereinstimmt.
   //Fehler Meldung ""RePasswort darf nicht leer sein."
    {{c1::[Required(ErrorMessage="{0} darf nicht leer sein")]}}
    {{c1::[Display(Name="RePasswort")]}}
    //Fehler Meldung "RePasswort: Die Länge muss zwischen 12 und 8 Zeichen liegen")]
    {{c1::[StringLength(12,MinimumLength=8,ErrorMessage="{0}: Die Länge muss zwischen {2} und {1} Zeichen liegen")]}}
    //Fehler Meldung "RePasswort stimmt nicht mit Passwort überein"
    {{c1::[Compare("Passwort",ErrorMessage="{0} stimmt nicht mit {1} überein")]}}
    {{c1::public string? RePasswort {get;set;} }}
{{c1::} }}

&lt;/pre&gt;

==HomeController==
&lt;pre&gt;
using System;
using System.ComponentModel.Design;
using Microsoft.AspNetCore.Mvc;
using start.{{c1::Models;}}
namespace start.{{c1::Controllers;}}

// Der HomeController erbt von der Basisklasse Controller, die grundlegende Funktionen für MVC-Controller bereitstellt.
{{c1::public class HomeController : Controller}}
{{c1::{}}
    // Die Index-Methode ist mit der Route "/" verknüpft und wird aufgerufen, wenn die Basis-URL der Anwendung aufgerufen wird.
    {{c1::[Route("/")]}}
    {{c1::public IActionResult Index(Person person)}}
    {{c1::{}}
        // Überprüfung, ob das übergebene Modell (Person) gültig ist.
        {{c1::if (!ModelState.IsValid)}}
        {{c1::{}}
            // Wenn das Modell ungültig ist, werden die Fehler aus dem ModelState extrahiert.
            {{c1::var errors=ModelState.Values}}
            {{c1::.SelectMany(e=&gt;e.Errors)}}
            {{c1::.Select(v=&gt;v.ErrorMessage);}}

            // Rückgabe eines BadRequest (HTTP 400) mit den Fehlern.
            {{c1::return BadRequest(errors);}}
        {{c1::} }}

        // Wenn das Modell gültig ist, wird es als JSON zurückgegeben.
        {{c1::return Json(person);}}
    {{c1::} }}
{{c1::} }}
&lt;/pre&gt;

==Grundklasse für Start-Validierung==
&lt;pre&gt;
using System;
using System.ComponentModel.DataAnnotations;

namespace start.praxis;
// Grundklasse für Start-Validierung
// Diese Klasse kann erweitert werden, um spezifische Validierungslogik zu implementieren
// Grundsätzlich wird die Validierung in der abgeleiteten Klasse implementiert
{{c1::public class Start : ValidationAttribute}} // Automaazisch ersellt, um Validierung zu ermöglichen
{
    {{c1::protected override}} ValidationResult? IsValid(object? value, ValidationContext validationContext)
    {
        return base.IsValid(value, validationContext);
    }
}
&lt;/pre&gt;</text>
      <sha1>ehu67mio8754h682f7xdq9giaqdwnqx</sha1>
    </revision>
  </page>
  <page>
    <title>Server Diskussion:Razor Views</title>
    <ns>0</ns>
    <id>48</id>
    <revision>
      <id>192</id>
      <timestamp>2025-06-21T01:48:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>192</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="906" sha1="hnvs5qwi1bknwhapu8ga8yoesfbtxb6" xml:space="preserve">== Razor Views erstellen – Spickzettel ==

=== 1. Neue Razor View anlegen ===
# Im ''Views''-Ordner des Controllers eine neue Datei mit der Endung &lt;code&gt;.cshtml&lt;/code&gt; erstellen.
# Beispiel: &lt;code&gt;Views/Home/Index.cshtml&lt;/code&gt;

=== 2. Razor Syntax Grundlagen ===
* C#-Code einbinden: &lt;code&gt;@{ /* C#-Code */ }&lt;/code&gt;
* Variable ausgeben: &lt;code&gt;@variableName&lt;/code&gt;
* HTML und C# mischen: 
    ```html
    &lt;h1&gt;@Model.Title&lt;/h1&gt;
    ```

=== 3. Model an eine View übergeben ===
* Im Controller:
    ```csharp
    return View(myModel);
    ```
* In der View:
    ```csharp
    @model Namespace.ModelType
    ```

=== 4. Schleifen und Bedingungen ===
* Schleife:
    ```csharp
    @foreach(var item in Model.Items) {
            &lt;li&gt;@item.Name&lt;/li&gt;
    }
    ```
* Bedingung:
    ```csharp
    @if(Model.IsActive) {
            &lt;span&gt;Aktiv&lt;/span&gt;
    }
    ```

=== 5. Teilansichten (Partials) einbinden ===</text>
      <sha1>hnvs5qwi1bknwhapu8ga8yoesfbtxb6</sha1>
    </revision>
    <revision>
      <id>193</id>
      <parentid>192</parentid>
      <timestamp>2025-06-21T02:18:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>193</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2349" sha1="kzyr0pj6fviyhuz12c22oz5d1rf4hca" xml:space="preserve">== Razor Views erstellen – Spickzettel ==

=== 1. Neue Razor View anlegen ===
# Im ''Views''-Ordner des Controllers eine neue Datei mit der Endung &lt;code&gt;.cshtml&lt;/code&gt; erstellen.
# Beispiel: &lt;code&gt;Views/Home/Index.cshtml&lt;/code&gt;

=== 2. Razor Syntax Grundlagen ===
* C#-Code einbinden: &lt;code&gt;@{ /* C#-Code */ }&lt;/code&gt;
* Variable ausgeben: &lt;code&gt;@variableName&lt;/code&gt;
* HTML und C# mischen: 
    ```html
    &lt;h1&gt;@Model.Title&lt;/h1&gt;
    ```

=== 3. Model an eine View übergeben ===
* Im Controller:
    ```csharp
    return View(myModel);
    ```
* In der View:
    ```csharp
    @model Namespace.ModelType
    ```

=== 4. Schleifen und Bedingungen ===
* Schleife:
    ```csharp
    @foreach(var item in Model.Items) {
            &lt;li&gt;@item.Name&lt;/li&gt;
    }
    ```
* Bedingung:
    ```csharp
    @if(Model.IsActive) {
            &lt;span&gt;Aktiv&lt;/span&gt;
    }
    ```

=== 5. Teilansichten (Partials) einbinden ===
* Einbinden einer Partial View:
    ```csharp
    @Html.Partial("PartialViewName")
    @await Html.PartialAsync("PartialViewName")
    @await Html.RenderPartialAsync("PartialViewName")
    ```
* Mit Model:
    ```csharp
    @Html.Partial("PartialViewName", model)
    ```

=== 6. Layouts verwenden ===
* Layout festlegen:
    ```csharp
    @{
        Layout = "_Layout";
    }
    ```
* Bereich für Content:
    ```csharp
    @RenderBody()
    ```
* Sektionen:
    ```csharp
    @RenderSection("SectionName", required: false)
    ```

=== 7. ViewData, ViewBag und TempData ===
* ViewData:
    ```csharp
    ViewData["Key"] = "Wert";
    @ViewData["Key"]
    ```
* ViewBag:
    ```csharp
    ViewBag.Key = "Wert";
    @ViewBag.Key
    ```
* TempData:
    ```csharp
    TempData["Key"] = "Wert";
    @TempData["Key"]
    ```

=== 8. Kommentare ===
* Razor-Kommentar:
    ```csharp
    @* Dies ist ein Razor-Kommentar *@
    ```
* HTML-Kommentar:
    ```html
    &lt;!-- Dies ist ein HTML-Kommentar --&gt;
    ```

=== 9. Weitere Razor-Befehle ===
* Abschnitt deklarieren:
    ```csharp
    @section Scripts {
        &lt;script src="..."&gt;&lt;/script&gt;
    }
    ```
* HTML-Helfer:
    ```csharp
    @Html.ActionLink("Linktext", "Action", "Controller")
    @Html.TextBoxFor(model =&gt; model.Name)
    @Html.DisplayFor(model =&gt; model.Name)
    @Html.EditorFor(model =&gt; model.Name)
    ```
* Raw HTML ausgeben:
    ```csharp
    @Html.Raw("&lt;b&gt;Fett&lt;/b&gt;")
    ```</text>
      <sha1>kzyr0pj6fviyhuz12c22oz5d1rf4hca</sha1>
    </revision>
    <revision>
      <id>194</id>
      <parentid>193</parentid>
      <timestamp>2025-06-21T06:26:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>194</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7781" sha1="lya2i1jqzj4794xim7vkia9320m38za" xml:space="preserve">Absolut\! Hier ist eine Umformulierung des von Ihnen bereitgestellten technischen Texts in eine strukturierte und verständliche Kursbeschreibung. Der Inhalt wurde neu geordnet und in einem didaktischen Format aufbereitet, das sich ideal für Lernende eignet.

-----

### **Kurs: Professionelle Webentwicklung mit ASP.NET Core MVC**

Willkommen zu diesem Kurs über das Model-View-Controller (MVC) Architekturmuster in ASP.NET Core\! Hier lernen Sie, wie Sie saubere, wartbare und skalierbare Webanwendungen entwickeln, indem Sie die Logik Ihrer Anwendung klar strukturieren.

-----

#### **Lektion 1: Das Fundament – Das MVC-Architekturmuster**

Das Herzstück moderner Webanwendungen ist eine saubere Architektur. Das Model-View-Controller (MVC) Muster ist ein bewährter Ansatz, der den Code in drei logische Hauptkomponenten unterteilt.

**Ziele und Vorteile:**

  * **Klare Trennung der Verantwortlichkeiten (Separation of Concerns):** Jede Komponente hat genau eine Aufgabe. Das macht den Code verständlicher und Fehler leichter auffindbar.
  * **Parallele Entwicklung:** Teams können gleichzeitig am Datenmodell, der Benutzeroberfläche und der Anwendungslogik arbeiten.
  * **Einfacheres Testen:** Jede Komponente kann isoliert getestet werden (Unit-Testing), was die Qualität Ihrer Software enorm steigert.
  * **Wartbarkeit:** Änderungen in einer Komponente (z. B. im Design der View) haben minimale bis keine Auswirkungen auf die anderen Komponenten.

Das wichtigste Prinzip ist die Unabhängigkeit des **Models**. Es kennt weder die View noch den Controller und kann daher völlig eigenständig entwickelt und getestet werden.

-----

#### **Lektion 2: Die drei Hauptakteure und ihre Rollen**

Um das MVC-Muster zu verstehen, müssen wir die Verantwortlichkeiten der einzelnen Komponenten kennen. Stellen Sie sich den Ablauf einer Anfrage vor:

1.  **Der Controller: Der Dirigent**

      * Empfängt die HTTP-Anfrage des Benutzers (z. B. das Aufrufen einer URL).
      * Er ist der Koordinator: Er ruft das Geschäftsmodell auf, um Daten abzufragen oder zu bearbeiten.
      * Anschließend wählt er die passende **View** aus, um die Daten darzustellen.

2.  **Das Geschäftsmodell (Model): Das Gehirn**

      * Enthält die gesamte Geschäftslogik und die Daten Ihrer Anwendung.
      * Führt Operationen aus, wie z. B. das Lesen und Schreiben von Daten in einer Datenbank.
      * Es ist die "Quelle der Wahrheit" und gibt die verarbeiteten Daten an den Controller zurück. Es hat keinerlei Kenntnis von der Benutzeroberfläche.

3.  **Die View: Das Gesicht**

      * Ist für die reine Darstellung der Daten verantwortlich (HTML-Code).
      * Sie empfängt die vom Controller vorbereiteten Daten und stellt sie dar.
      * Die View selbst enthält keine Geschäftslogik. Sie sollte nur Code enthalten, der für die Präsentation notwendig ist.

**Der Datenfluss im Überblick:**
Anfrage → **Controller** → Ruft **Model** auf → Model liefert Daten zurück → **Controller** übergibt Daten an **View** → View wird gerendert und als Antwort an den Benutzer gesendet.

-----

#### **Lektion 3: Dynamische Ansichten mit der Razor View Engine**

Eine View ist mehr als nur statisches HTML. Mit der Razor View Engine können wir C\#-Code direkt in unsere `.cshtml`-Dateien einbetten, um dynamische Inhalte zu erzeugen.

  * Das `@`-Zeichen leitet Razor-Syntax ein.
  * Razor ermöglicht es uns, Daten aus unserem Modell direkt im HTML auszugeben und Logik für die Darstellung zu implementieren.

**Wichtige Razor-Konstrukte:**

  * **Ausdrücke (`@Model.Username`):** Geben den Wert einer Variable oder Eigenschaft aus.
  * **Codeblöcke (`@{ ... }`):** Führen eine oder mehrere Zeilen C\#-Code aus.
  * **Kontrollstrukturen:** Sie können bekannte C\#-Strukturen wie `if-else`, `switch`, `foreach` und `for` verwenden, um die Darstellung zu steuern.
  * **Lokale Funktionen:** Sie können kleine Hilfsfunktionen direkt in Ihrer View definieren.

**Wichtig:** Die Logik in einer View sollte sich ausschließlich auf die **Präsentation** beschränken\! Komplexe Berechnungen gehören in das Model oder den Controller.

-----

#### **Lektion 4: Daten vom Controller an die View übergeben**

Doch wie gelangen die Daten vom Controller in die View? Dafür gibt es mehrere Mechanismen. Wir beginnen mit zwei einfachen, aber "schwach typisierten" Ansätzen.

##### **1. ViewData**

`ViewData` ist ein Wörterbuch-Objekt (`Dictionary&lt;string, object&gt;`), in dem Sie Daten unter einem bestimmten Schlüssel ablegen können.

  * **Im Controller:** `ViewData["Titel"] = "Produktliste";`
  * **In der View:** `&lt;h1&gt;@ViewData["Titel"]&lt;/h1&gt;`

Da die Werte als `object` gespeichert werden, müssen Sie sie bei komplexeren Datentypen oft umwandeln (casten), was fehleranfällig sein kann.
`@(ViewData["Produkt"] as Produkt).Name`

##### **2. ViewBag**

`ViewBag` ist ein dynamisches Objekt, das im Hintergrund `ViewData` verwendet, aber eine einfachere Syntax bietet.

  * **Im Controller:** `ViewBag.Titel = "Produktliste";`
  * **In der View:** `&lt;h1&gt;@ViewBag.Titel&lt;/h1&gt;`

**Vorteile von `ViewBag`:**

  * Einfachere, sauberere Syntax (`ViewBag.Eigenschaft`).
  * Kein explizites Umwandeln (Casting) notwendig.

**Nachteil beider Ansätze:** Es gibt keine Überprüfung zur Kompilierzeit. Ein Tippfehler im Schlüssel (`ViewData["Titl"]`) oder im Eigenschaftsnamen (`ViewBag.Titl`) wird erst zur Laufzeit als Fehler bemerkt.

-----

#### **Lokalektion 5: Der Königsweg – Stark typisierte Views**

Für robuste und wartbare Anwendungen ist die Verwendung von **stark typisierten Views** der empfohlene Standard. Eine stark typisierte View ist fest an eine bestimmte Modellklasse gebunden.

**Und so funktioniert's:**

1.  **Im Controller:** Sie erstellen eine Instanz Ihres Modells und übergeben diese direkt an die `View()`-Methode.

    ```csharp
    public IActionResult Details(int id)
    {
        Produkt meinProdukt = _db.Produkte.Find(id);
        return View(meinProdukt); // Übergabe des gesamten Objekts
    }
    ```

2.  **In der View:** Sie deklarieren mit der `@model`-Direktive, welchen Datentyp die View erwartet.

    ```csharp
    @model Projekt.Modelle.Produkt

    &lt;h1&gt;@Model.Name&lt;/h1&gt;
    &lt;p&gt;Preis: @Model.Preis.ToString("c")&lt;/p&gt;
    &lt;p&gt;Beschreibung: @Model.Beschreibung&lt;/p&gt; 
    ```

**Die unschlagbaren Vorteile:**

  * **IntelliSense:** Der Editor kennt Ihr Modell und schlägt Ihnen die verfügbaren Eigenschaften vor.
  * **Kompilierzeit-Sicherheit:** Tippfehler bei Eigenschaftsnamen (`@Model.Naem`) führen zu einem Kompilierfehler und werden sofort entdeckt.
  * **Klarheit:** Es ist sofort ersichtlich, welche Daten diese View für ihre Darstellung benötigt.

-----

#### **Lektion 6: Code organisieren und wiederverwenden**

Für größere Projekte sind Struktur und Wiederverwendbarkeit entscheidend.

##### **ViewImports.cshtml**

Diese spezielle Datei im `Views`-Ordner ist der perfekte Ort, um Namespaces zu importieren (`@using Projekt.Modelle`) oder Tag Helper zu registrieren, die in vielen Views benötigt werden. Der Inhalt von `ViewImports.cshtml` wird automatisch auf alle Views im selben Ordner und in Unterordnern angewendet.

##### **Geteilte Views (Shared Views)**

Views, die von mehreren Controllern verwendet werden (z. B. Layout-Dateien, Navigationsleisten, Fehlerseiten), sollten im Ordner `/Views/Shared` abgelegt werden. Wenn ein Controller eine View anfordert, sucht das Framework zuerst im spezifischen Ordner des Controllers (`/Views/ControllerName`) und danach im `/Views/Shared`-Ordner.

##### **Die View-Auflösung**

Zusammenfassend sucht ASP.NET Core eine View `MeineView` für den `HomeController` in dieser Reihenfolge:

1.  `/Views/Home/MeineView.cshtml`
2.  `/Views/Shared/MeineView.cshtml`</text>
      <sha1>lya2i1jqzj4794xim7vkia9320m38za</sha1>
    </revision>
    <revision>
      <id>195</id>
      <parentid>194</parentid>
      <timestamp>2025-06-21T06:27:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>195</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8439" sha1="lakjbsb5rf9rxdpr06fyx2wyfgnjnai" xml:space="preserve">Absolut\! Hier ist eine Umformulierung des von Ihnen bereitgestellten technischen Texts in eine strukturierte und verständliche Kursbeschreibung. Der Inhalt wurde neu geordnet und in einem didaktischen Format aufbereitet, das sich ideal für Lernende eignet.

&lt;nowiki&gt;-----&lt;/nowiki&gt;

&lt;nowiki&gt;###&lt;/nowiki&gt; **Kurs: Professionelle Webentwicklung mit ASP.NET Core MVC**

Willkommen zu diesem Kurs über das Model-View-Controller (MVC) Architekturmuster in ASP.NET Core\! Hier lernen Sie, wie Sie saubere, wartbare und skalierbare Webanwendungen entwickeln, indem Sie die Logik Ihrer Anwendung klar strukturieren.

&lt;nowiki&gt;-----&lt;/nowiki&gt;

&lt;nowiki&gt;####&lt;/nowiki&gt; **Lektion 1: Das Fundament – Das MVC-Architekturmuster**

Das Herzstück moderner Webanwendungen ist eine saubere Architektur. Das Model-View-Controller (MVC) Muster ist ein bewährter Ansatz, der den Code in drei logische Hauptkomponenten unterteilt.

&lt;nowiki&gt;**&lt;/nowiki&gt;Ziele und Vorteile:**

  * **Klare Trennung der Verantwortlichkeiten (Separation of Concerns):** Jede Komponente hat genau eine Aufgabe. Das macht den Code verständlicher und Fehler leichter auffindbar.

  * **Parallele Entwicklung:** Teams können gleichzeitig am Datenmodell, der Benutzeroberfläche und der Anwendungslogik arbeiten.

  * **Einfacheres Testen:** Jede Komponente kann isoliert getestet werden (Unit-Testing), was die Qualität Ihrer Software enorm steigert.

  * **Wartbarkeit:** Änderungen in einer Komponente (z. B. im Design der View) haben minimale bis keine Auswirkungen auf die anderen Komponenten.

Das wichtigste Prinzip ist die Unabhängigkeit des **Models**. Es kennt weder die View noch den Controller und kann daher völlig eigenständig entwickelt und getestet werden.

&lt;nowiki&gt;-----&lt;/nowiki&gt;

&lt;nowiki&gt;####&lt;/nowiki&gt; **Lektion 2: Die drei Hauptakteure und ihre Rollen**

Um das MVC-Muster zu verstehen, müssen wir die Verantwortlichkeiten der einzelnen Komponenten kennen. Stellen Sie sich den Ablauf einer Anfrage vor:

1.  **Der Controller: Der Dirigent**

      * Empfängt die HTTP-Anfrage des Benutzers (z. B. das Aufrufen einer URL).

      * Er ist der Koordinator: Er ruft das Geschäftsmodell auf, um Daten abzufragen oder zu bearbeiten.

      * Anschließend wählt er die passende **View** aus, um die Daten darzustellen.

2.  **Das Geschäftsmodell (Model): Das Gehirn**

      * Enthält die gesamte Geschäftslogik und die Daten Ihrer Anwendung.

      * Führt Operationen aus, wie z. B. das Lesen und Schreiben von Daten in einer Datenbank.

      * Es ist die "Quelle der Wahrheit" und gibt die verarbeiteten Daten an den Controller zurück. Es hat keinerlei Kenntnis von der Benutzeroberfläche.

3.  **Die View: Das Gesicht**

      * Ist für die reine Darstellung der Daten verantwortlich (HTML-Code).

      * Sie empfängt die vom Controller vorbereiteten Daten und stellt sie dar.

      * Die View selbst enthält keine Geschäftslogik. Sie sollte nur Code enthalten, der für die Präsentation notwendig ist.

&lt;nowiki&gt;**&lt;/nowiki&gt;Der Datenfluss im Überblick:**

Anfrage → **Controller** → Ruft **Model** auf → Model liefert Daten zurück → **Controller** übergibt Daten an **View** → View wird gerendert und als Antwort an den Benutzer gesendet.

&lt;nowiki&gt;-----&lt;/nowiki&gt;

&lt;nowiki&gt;####&lt;/nowiki&gt; **Lektion 3: Dynamische Ansichten mit der Razor View Engine**

Eine View ist mehr als nur statisches HTML. Mit der Razor View Engine können wir C\#-Code direkt in unsere `.cshtml`-Dateien einbetten, um dynamische Inhalte zu erzeugen.

  * Das `@`-Zeichen leitet Razor-Syntax ein.

  * Razor ermöglicht es uns, Daten aus unserem Modell direkt im HTML auszugeben und Logik für die Darstellung zu implementieren.

&lt;nowiki&gt;**&lt;/nowiki&gt;Wichtige Razor-Konstrukte:**

  * **Ausdrücke (`@Model.Username`):** Geben den Wert einer Variable oder Eigenschaft aus.

  * **Codeblöcke (`@{ ... }`):** Führen eine oder mehrere Zeilen C\#-Code aus.

  * **Kontrollstrukturen:** Sie können bekannte C\#-Strukturen wie `if-else`, `switch`, `foreach` und `for` verwenden, um die Darstellung zu steuern.

  * **Lokale Funktionen:** Sie können kleine Hilfsfunktionen direkt in Ihrer View definieren.

&lt;nowiki&gt;**&lt;/nowiki&gt;Wichtig:** Die Logik in einer View sollte sich ausschließlich auf die **Präsentation** beschränken\! Komplexe Berechnungen gehören in das Model oder den Controller.

&lt;nowiki&gt;-----&lt;/nowiki&gt;

&lt;nowiki&gt;####&lt;/nowiki&gt; **Lektion 4: Daten vom Controller an die View übergeben**

Doch wie gelangen die Daten vom Controller in die View? Dafür gibt es mehrere Mechanismen. Wir beginnen mit zwei einfachen, aber "schwach typisierten" Ansätzen.

&lt;nowiki&gt;#####&lt;/nowiki&gt; **1. ViewData**

`ViewData` ist ein Wörterbuch-Objekt (`Dictionary&lt;string, object&gt;`), in dem Sie Daten unter einem bestimmten Schlüssel ablegen können.

  * **Im Controller:** `ViewData["Titel"] = "Produktliste";`

  * **In der View:** `&lt;nowiki&gt;&lt;h1&gt;@ViewData["Titel"]&lt;/h1&gt;&lt;/nowiki&gt;`

Da die Werte als `object` gespeichert werden, müssen Sie sie bei komplexeren Datentypen oft umwandeln (casten), was fehleranfällig sein kann.

`@(ViewData["Produkt"] as Produkt).Name`

&lt;nowiki&gt;#####&lt;/nowiki&gt; **2. ViewBag**

`ViewBag` ist ein dynamisches Objekt, das im Hintergrund `ViewData` verwendet, aber eine einfachere Syntax bietet.

  * **Im Controller:** `ViewBag.Titel = "Produktliste";`

  * **In der View:** `&lt;nowiki&gt;&lt;h1&gt;@ViewBag.Titel&lt;/h1&gt;&lt;/nowiki&gt;`

&lt;nowiki&gt;**&lt;/nowiki&gt;Vorteile von `ViewBag`:**

  * Einfachere, sauberere Syntax (`ViewBag.Eigenschaft`).

  * Kein explizites Umwandeln (Casting) notwendig.

&lt;nowiki&gt;**&lt;/nowiki&gt;Nachteil beider Ansätze:** Es gibt keine Überprüfung zur Kompilierzeit. Ein Tippfehler im Schlüssel (`ViewData["Titl"]`) oder im Eigenschaftsnamen (`ViewBag.Titl`) wird erst zur Laufzeit als Fehler bemerkt.

&lt;nowiki&gt;-----&lt;/nowiki&gt;

&lt;nowiki&gt;####&lt;/nowiki&gt; **Lokalektion 5: Der Königsweg – Stark typisierte Views**

Für robuste und wartbare Anwendungen ist die Verwendung von **stark typisierten Views** der empfohlene Standard. Eine stark typisierte View ist fest an eine bestimmte Modellklasse gebunden.

&lt;nowiki&gt;**&lt;/nowiki&gt;Und so funktioniert's:**

1.  **Im Controller:** Sie erstellen eine Instanz Ihres Modells und übergeben diese direkt an die `View()`-Methode.

    ```csharp

    public IActionResult Details(int id)

    {

        Produkt meinProdukt = _db.Produkte.Find(id);

        return View(meinProdukt); // Übergabe des gesamten Objekts

    }

    ```

2.  **In der View:** Sie deklarieren mit der `@model`-Direktive, welchen Datentyp die View erwartet.

    ```csharp

    @model Projekt.Modelle.Produkt

    &lt;nowiki&gt;&lt;h1&gt;@Model.Name&lt;/h1&gt;&lt;/nowiki&gt;

    &lt;nowiki&gt;&lt;p&gt;Preis: @Model.Preis.ToString("c")&lt;/p&gt;&lt;/nowiki&gt;

    &lt;nowiki&gt;&lt;p&gt;Beschreibung: @Model.Beschreibung&lt;/p&gt;&lt;/nowiki&gt; 

    ```

&lt;nowiki&gt;**&lt;/nowiki&gt;Die unschlagbaren Vorteile:**

  * **IntelliSense:** Der Editor kennt Ihr Modell und schlägt Ihnen die verfügbaren Eigenschaften vor.

  * **Kompilierzeit-Sicherheit:** Tippfehler bei Eigenschaftsnamen (`@Model.Naem`) führen zu einem Kompilierfehler und werden sofort entdeckt.

  * **Klarheit:** Es ist sofort ersichtlich, welche Daten diese View für ihre Darstellung benötigt.

&lt;nowiki&gt;-----&lt;/nowiki&gt;

&lt;nowiki&gt;####&lt;/nowiki&gt; **Lektion 6: Code organisieren und wiederverwenden**

Für größere Projekte sind Struktur und Wiederverwendbarkeit entscheidend.

&lt;nowiki&gt;#####&lt;/nowiki&gt; **ViewImports.cshtml**

Diese spezielle Datei im `Views`-Ordner ist der perfekte Ort, um Namespaces zu importieren (`@using Projekt.Modelle`) oder Tag Helper zu registrieren, die in vielen Views benötigt werden. Der Inhalt von `ViewImports.cshtml` wird automatisch auf alle Views im selben Ordner und in Unterordnern angewendet.

&lt;nowiki&gt;#####&lt;/nowiki&gt; **Geteilte Views (Shared Views)**

Views, die von mehreren Controllern verwendet werden (z. B. Layout-Dateien, Navigationsleisten, Fehlerseiten), sollten im Ordner `/Views/Shared` abgelegt werden. Wenn ein Controller eine View anfordert, sucht das Framework zuerst im spezifischen Ordner des Controllers (`/Views/ControllerName`) und danach im `/Views/Shared`-Ordner.

&lt;nowiki&gt;#####&lt;/nowiki&gt; **Die View-Auflösung**

Zusammenfassend sucht ASP.NET Core eine View `MeineView` für den `HomeController` in dieser Reihenfolge:

1.  `/Views/Home/MeineView.cshtml`

2.  `/Views/Shared/MeineView.cshtml`</text>
      <sha1>lakjbsb5rf9rxdpr06fyx2wyfgnjnai</sha1>
    </revision>
    <revision>
      <id>196</id>
      <parentid>195</parentid>
      <timestamp>2025-06-21T06:35:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>196</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8049" sha1="ldf4kvsllqcxa30xj1haufvyysetoyr" xml:space="preserve">Absolut! Hier ist die Umwandlung des bereitgestellten Markdown-Inhalts in MediaWiki-Syntax:

-----

= '''Kurs: Professionelle Webentwicklung mit ASP.NET Core MVC''' =

Willkommen zu diesem Kurs über das Model-View-Controller (MVC) Architekturmuster in ASP.NET Core! Hier lernen Sie, wie Sie saubere, wartbare und skalierbare Webanwendungen entwickeln, indem Sie die Logik Ihrer Anwendung klar strukturieren.

-----

== '''Lektion 1: Das Fundament – Das MVC-Architekturmuster''' ==

Das Herzstück moderner Webanwendungen ist eine saubere Architektur. Das Model-View-Controller (MVC) Muster ist ein bewährter Ansatz, der den Code in drei logische Hauptkomponenten unterteilt.

'''Ziele und Vorteile:'''
* '''Klare Trennung der Verantwortlichkeiten (Separation of Concerns):''' Jede Komponente hat genau eine Aufgabe. Das macht den Code verständlicher und Fehler leichter auffindbar.
* '''Parallele Entwicklung:''' Teams können gleichzeitig am Datenmodell, der Benutzeroberfläche und der Anwendungslogik arbeiten.
* '''Einfacheres Testen:''' Jede Komponente kann isoliert getestet werden (Unit-Testing), was die Qualität Ihrer Software enorm steigert.
* '''Wartbarkeit:''' Änderungen in einer Komponente (z. B. im Design der View) haben minimale bis keine Auswirkungen auf die anderen Komponenten.

Das wichtigste Prinzip ist die Unabhängigkeit des '''Models'''. Es kennt weder die View noch den Controller und kann daher völlig eigenständig entwickelt und getestet werden.

-----

== '''Lektion 2: Die drei Hauptakteure und ihre Rollen''' ==

Um das MVC-Muster zu verstehen, müssen wir die Verantwortlichkeiten der einzelnen Komponenten kennen. Stellen Sie sich den Ablauf einer Anfrage vor:

# '''Der Controller: Der Dirigent'''
#* Empfängt die HTTP-Anfrage des Benutzers (z. B. das Aufrufen einer URL).
#* Er ist der Koordinator: Er ruft das Geschäftsmodell auf, um Daten abzufragen oder zu bearbeiten.
#* Anschließend wählt er die passende '''View''' aus, um die Daten darzustellen.

# '''Das Geschäftsmodell (Model): Das Gehirn'''
#* Enthält die gesamte Geschäftslogik und die Daten Ihrer Anwendung.
#* Führt Operationen aus, wie z. B. das Lesen und Schreiben von Daten in einer Datenbank.
#* Es ist die "Quelle der Wahrheit" und gibt die verarbeiteten Daten an den Controller zurück. Es hat keinerlei Kenntnis von der Benutzeroberfläche.

# '''Die View: Das Gesicht'''
#* Ist für die reine Darstellung der Daten verantwortlich (HTML-Code).
#* Sie empfängt die vom Controller vorbereiteten Daten und stellt sie dar.
#* Die View selbst enthält keine Geschäftslogik. Sie sollte nur Code enthalten, der für die Präsentation notwendig ist.

'''Der Datenfluss im Überblick:'''  
Anfrage → '''Controller''' → Ruft '''Model''' auf → Model liefert Daten zurück → '''Controller''' übergibt Daten an '''View''' → View wird gerendert und als Antwort an den Benutzer gesendet.

-----

== '''Lektion 3: Dynamische Ansichten mit der Razor View Engine''' ==

Eine View ist mehr als nur statisches HTML. Mit der Razor View Engine können wir C#-Code direkt in unsere &lt;code&gt;.cshtml&lt;/code&gt;-Dateien einbetten, um dynamische Inhalte zu erzeugen.

* Das &lt;code&gt;@&lt;/code&gt;-Zeichen leitet Razor-Syntax ein.
* Razor ermöglicht es uns, Daten aus unserem Modell direkt im HTML auszugeben und Logik für die Darstellung zu implementieren.

'''Wichtige Razor-Konstrukte:'''
* '''Ausdrücke (&lt;code&gt;@Model.Username&lt;/code&gt;):''' Geben den Wert einer Variable oder Eigenschaft aus.
* '''Codeblöcke (&lt;code&gt;@{ ... }&lt;/code&gt;):''' Führen eine oder mehrere Zeilen C#-Code aus.
* '''Kontrollstrukturen:''' Sie können bekannte C#-Strukturen wie &lt;code&gt;if-else&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt; und &lt;code&gt;for&lt;/code&gt; verwenden, um die Darstellung zu steuern.
* '''Lokale Funktionen:''' Sie können kleine Hilfsfunktionen direkt in Ihrer View definieren.

'''Wichtig:''' Die Logik in einer View sollte sich ausschließlich auf die '''Präsentation''' beschränken! Komplexe Berechnungen gehören in das Model oder den Controller.

-----

== '''Lektion 4: Daten vom Controller an die View übergeben''' ==

Doch wie gelangen die Daten vom Controller in die View? Dafür gibt es mehrere Mechanismen. Wir beginnen mit zwei einfachen, aber "schwach typisierten" Ansätzen.

=== '''1. ViewData''' ===

&lt;code&gt;ViewData&lt;/code&gt; ist ein Wörterbuch-Objekt (&lt;code&gt;Dictionary&amp;lt;string, object&amp;gt;&lt;/code&gt;), in dem Sie Daten unter einem bestimmten Schlüssel ablegen können.

* '''Im Controller:''' &lt;code&gt;ViewData["Titel"] = "Produktliste";&lt;/code&gt;
* '''In der View:''' &lt;code&gt;&amp;lt;h1&amp;gt;@ViewData["Titel"]&amp;lt;/h1&amp;gt;&lt;/code&gt;

Da die Werte als &lt;code&gt;object&lt;/code&gt; gespeichert werden, müssen Sie sie bei komplexeren Datentypen oft umwandeln (casten), was fehleranfällig sein kann.  
&lt;code&gt;@(ViewData["Produkt"] as Produkt).Name&lt;/code&gt;

=== '''2. ViewBag''' ===

&lt;code&gt;ViewBag&lt;/code&gt; ist ein dynamisches Objekt, das im Hintergrund &lt;code&gt;ViewData&lt;/code&gt; verwendet, aber eine einfachere Syntax bietet.

* '''Im Controller:''' &lt;code&gt;ViewBag.Titel = "Produktliste";&lt;/code&gt;
* '''In der View:''' &lt;code&gt;&amp;lt;h1&amp;gt;@ViewBag.Titel&amp;lt;/h1&amp;gt;&lt;/code&gt;

'''Vorteile von &lt;code&gt;ViewBag&lt;/code&gt;:'''
* Einfachere, sauberere Syntax (&lt;code&gt;ViewBag.Eigenschaft&lt;/code&gt;).
* Kein explizites Umwandeln (Casting) notwendig.

'''Nachteil beider Ansätze:''' Es gibt keine Überprüfung zur Kompilierzeit. Ein Tippfehler im Schlüssel (&lt;code&gt;ViewData["Titl"]&lt;/code&gt;) oder im Eigenschaftsnamen (&lt;code&gt;ViewBag.Titl&lt;/code&gt;) wird erst zur Laufzeit als Fehler bemerkt.

-----

== '''Lektion 5: Der Königsweg – Stark typisierte Views''' ==

Für robuste und wartbare Anwendungen ist die Verwendung von '''stark typisierten Views''' der empfohlene Standard. Eine stark typisierte View ist fest an eine bestimmte Modellklasse gebunden.

'''Und so funktioniert's:'''

# '''Im Controller:''' Sie erstellen eine Instanz Ihres Modells und übergeben diese direkt an die &lt;code&gt;View()&lt;/code&gt;-Methode.
&lt;syntaxhighlight lang="csharp"&gt;
public IActionResult Details(int id)
{
    Produkt meinProdukt = _db.Produkte.Find(id);
    return View(meinProdukt); // Übergabe des gesamten Objekts
}
&lt;/syntaxhighlight&gt;

# '''In der View:''' Sie deklarieren mit der &lt;code&gt;@model&lt;/code&gt;-Direktive, welchen Datentyp die View erwartet.
&lt;syntaxhighlight lang="csharp"&gt;
@model Projekt.Modelle.Produkt

&lt;h1&gt;@Model.Name&lt;/h1&gt;
&lt;p&gt;Preis: @Model.Preis.ToString("c")&lt;/p&gt;
&lt;p&gt;Beschreibung: @Model.Beschreibung&lt;/p&gt;
&lt;/syntaxhighlight&gt;

'''Die unschlagbaren Vorteile:'''
* '''IntelliSense:''' Der Editor kennt Ihr Modell und schlägt Ihnen die verfügbaren Eigenschaften vor.
* '''Kompilierzeit-Sicherheit:''' Tippfehler bei Eigenschaftsnamen (&lt;code&gt;@Model.Naem&lt;/code&gt;) führen zu einem Kompilierfehler und werden sofort entdeckt.
* '''Klarheit:''' Es ist sofort ersichtlich, welche Daten diese View für ihre Darstellung benötigt.

-----

== '''Lektion 6: Code organisieren und wiederverwenden''' ==

Für größere Projekte sind Struktur und Wiederverwendbarkeit entscheidend.

=== '''ViewImports.cshtml''' ===

Diese spezielle Datei im &lt;code&gt;Views&lt;/code&gt;-Ordner ist der perfekte Ort, um Namespaces zu importieren (&lt;code&gt;@using Projekt.Modelle&lt;/code&gt;) oder Tag Helper zu registrieren, die in vielen Views benötigt werden. Der Inhalt von &lt;code&gt;ViewImports.cshtml&lt;/code&gt; wird automatisch auf alle Views im selben Ordner und in Unterordnern angewendet.

=== '''Geteilte Views (Shared Views)''' ===

Views, die von mehreren Controllern verwendet werden (z. B. Layout-Dateien, Navigationsleisten, Fehlerseiten), sollten im Ordner &lt;code&gt;/Views/Shared&lt;/code&gt; abgelegt werden. Wenn ein Controller eine View anfordert, sucht das Framework zuerst im spezifischen Ordner des Controllers (&lt;code&gt;/Views/ControllerName&lt;/code&gt;) und danach im &lt;code&gt;/Views/Shared&lt;/code&gt;-Ordner.

=== '''Die View-Auflösung''' ===

Zusammenfassend sucht ASP.NET Core eine View &lt;code&gt;MeineView&lt;/code&gt; für den &lt;code&gt;HomeController&lt;/code&gt; in dieser Reihenfolge:
# &lt;code&gt;/Views/Home/MeineView.cshtml&lt;/code&gt;
# &lt;code&gt;/Views/Shared/MeineView.cshtml&lt;/code&gt;</text>
      <sha1>ldf4kvsllqcxa30xj1haufvyysetoyr</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Hauptseite</title>
    <ns>0</ns>
    <id>49</id>
    <revision>
      <id>197</id>
      <timestamp>2025-06-22T18:10:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Test“</comment>
      <origin>197</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6" sha1="2ysnf4t7ane4z0f5n6t5ajet0yfpu48" xml:space="preserve">* Test</text>
      <sha1>2ysnf4t7ane4z0f5n6t5ajet0yfpu48</sha1>
    </revision>
    <revision>
      <id>198</id>
      <parentid>197</parentid>
      <timestamp>2025-06-23T08:18:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>198</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="16" sha1="f5hbodr4nae5siappy0qij2p98f9gxd" xml:space="preserve">* [[Kurse:HTTP]]</text>
      <sha1>f5hbodr4nae5siappy0qij2p98f9gxd</sha1>
    </revision>
    <revision>
      <id>199</id>
      <parentid>198</parentid>
      <timestamp>2025-06-23T08:30:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>199</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="39" sha1="c6yqpg7pl2dlz9w48pehhxhwo2m1q3n" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]</text>
      <sha1>c6yqpg7pl2dlz9w48pehhxhwo2m1q3n</sha1>
    </revision>
    <revision>
      <id>200</id>
      <parentid>199</parentid>
      <timestamp>2025-06-23T08:56:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>200</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="59" sha1="mo9fngp93ti5uvhnaebcsbpwg6njls3" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]</text>
      <sha1>mo9fngp93ti5uvhnaebcsbpwg6njls3</sha1>
    </revision>
    <revision>
      <id>201</id>
      <parentid>200</parentid>
      <timestamp>2025-06-23T09:15:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>201</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="83" sha1="27o5eu05sz0rtcfoowsjbdav7mbwevv" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]</text>
      <sha1>27o5eu05sz0rtcfoowsjbdav7mbwevv</sha1>
    </revision>
    <revision>
      <id>202</id>
      <parentid>201</parentid>
      <timestamp>2025-06-23T09:33:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>202</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="106" sha1="tklqtmf556p7sk7butys5dlw618541s" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controller
* [[Kurse:Model Binding]]</text>
      <sha1>tklqtmf556p7sk7butys5dlw618541s</sha1>
    </revision>
    <revision>
      <id>203</id>
      <parentid>202</parentid>
      <timestamp>2025-06-23T09:34:11Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>203</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="108" sha1="rwwzz54cwl3hpkam1x3nknp9n0ic4pu" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controller]]
* [[Kurse:Model Binding]]</text>
      <sha1>rwwzz54cwl3hpkam1x3nknp9n0ic4pu</sha1>
    </revision>
    <revision>
      <id>204</id>
      <parentid>203</parentid>
      <timestamp>2025-06-23T09:34:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>204</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="109" sha1="f22in4im8yxgk6bgl27gs369m9skym3" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]</text>
      <sha1>f22in4im8yxgk6bgl27gs369m9skym3</sha1>
    </revision>
    <revision>
      <id>205</id>
      <parentid>204</parentid>
      <timestamp>2025-06-23T10:19:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>205</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="133" sha1="7uscenoye2kzn6tli0527xozaa62b5o" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>7uscenoye2kzn6tli0527xozaa62b5o</sha1>
    </revision>
    <revision>
      <id>206</id>
      <parentid>205</parentid>
      <timestamp>2025-06-23T19:28:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>206</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="164" sha1="cf5ja05i0s5tcsgflaye6zb0qmvf0ea" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>cf5ja05i0s5tcsgflaye6zb0qmvf0ea</sha1>
    </revision>
    <revision>
      <id>207</id>
      <parentid>206</parentid>
      <timestamp>2025-06-23T20:51:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>207</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="204" sha1="ja6gg7x09te6wtfeph23h5339egx42l" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>ja6gg7x09te6wtfeph23h5339egx42l</sha1>
    </revision>
    <revision>
      <id>208</id>
      <parentid>207</parentid>
      <timestamp>2025-06-24T02:32:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>208</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="241" sha1="32o0c76v2nxotaqxzgt3j1qm542ue8r" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurs:Täglich Routing Übungen]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>32o0c76v2nxotaqxzgt3j1qm542ue8r</sha1>
    </revision>
    <revision>
      <id>209</id>
      <parentid>208</parentid>
      <timestamp>2025-06-24T03:39:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>209</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="282" sha1="nf6dk3fvvqdt3dfv5l74ofmzye9df3p" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurs:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurs:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>nf6dk3fvvqdt3dfv5l74ofmzye9df3p</sha1>
    </revision>
    <revision>
      <id>210</id>
      <parentid>209</parentid>
      <timestamp>2025-06-24T04:14:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>210</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="324" sha1="t5segcy5kw5l842vankg0g21h6om7rq" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurs:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurs:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [Kurs:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]]</text>
      <sha1>t5segcy5kw5l842vankg0g21h6om7rq</sha1>
    </revision>
    <revision>
      <id>211</id>
      <parentid>210</parentid>
      <timestamp>2025-06-24T04:14:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>211</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="325" sha1="b2oa6jqyl5nkizxdz3fma9evy5mgnp6" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurs:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurs:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurs:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]]</text>
      <sha1>b2oa6jqyl5nkizxdz3fma9evy5mgnp6</sha1>
    </revision>
    <revision>
      <id>212</id>
      <parentid>211</parentid>
      <timestamp>2025-06-24T04:40:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>212</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="328" sha1="76g39v5o1xwdaoctq6aqlxsyl1l1vqx" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]]</text>
      <sha1>76g39v5o1xwdaoctq6aqlxsyl1l1vqx</sha1>
    </revision>
    <revision>
      <id>213</id>
      <parentid>212</parentid>
      <timestamp>2025-06-24T04:57:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>213</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="361" sha1="inmafcx01xj6eu6guyuuj1gvk3e2o2c" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]</text>
      <sha1>inmafcx01xj6eu6guyuuj1gvk3e2o2c</sha1>
    </revision>
    <revision>
      <id>214</id>
      <parentid>213</parentid>
      <timestamp>2025-06-25T10:41:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>214</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="389" sha1="bxvmssdxph23kt89pa9nxrkm57ffiri" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Grud Operatoren]]</text>
      <sha1>bxvmssdxph23kt89pa9nxrkm57ffiri</sha1>
    </revision>
    <revision>
      <id>215</id>
      <parentid>214</parentid>
      <timestamp>2025-06-25T11:39:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>215</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="426" sha1="12gv93in7h9zlgs8g5a0dicwy5gh4zg" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Grud Operatoren]]
* [[Kurse:Identity &amp; Authorization]]</text>
      <sha1>12gv93in7h9zlgs8g5a0dicwy5gh4zg</sha1>
    </revision>
    <revision>
      <id>216</id>
      <parentid>215</parentid>
      <timestamp>2025-06-25T11:58:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>216</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="460" sha1="k7yxy8vorcv0pota1m1sypv0a9hzr0k" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Grud Operatoren]]
* [[Kurse:Identity &amp; Authorization]]
* [[Kurse:Entity Framework Core]]</text>
      <sha1>k7yxy8vorcv0pota1m1sypv0a9hzr0k</sha1>
    </revision>
    <revision>
      <id>217</id>
      <parentid>216</parentid>
      <timestamp>2025-06-25T13:38:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>217</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="389" sha1="bxvmssdxph23kt89pa9nxrkm57ffiri" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Grud Operatoren]]</text>
      <sha1>bxvmssdxph23kt89pa9nxrkm57ffiri</sha1>
    </revision>
    <revision>
      <id>218</id>
      <parentid>217</parentid>
      <timestamp>2025-06-25T13:39:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>218</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="361" sha1="inmafcx01xj6eu6guyuuj1gvk3e2o2c" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]</text>
      <sha1>inmafcx01xj6eu6guyuuj1gvk3e2o2c</sha1>
    </revision>
    <revision>
      <id>219</id>
      <parentid>218</parentid>
      <timestamp>2025-06-25T14:27:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>219</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="385" sha1="8xaty9d2run77pe86xpgn5qb4gzncen" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Laout Views]]</text>
      <sha1>8xaty9d2run77pe86xpgn5qb4gzncen</sha1>
    </revision>
    <revision>
      <id>220</id>
      <parentid>219</parentid>
      <timestamp>2025-06-25T14:31:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>220</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="386" sha1="qqfatk3lxfq0wiueuffxw4cqkwofu60" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]]</text>
      <sha1>qqfatk3lxfq0wiueuffxw4cqkwofu60</sha1>
    </revision>
    <revision>
      <id>221</id>
      <parentid>220</parentid>
      <timestamp>2025-06-25T14:40:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>221</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="429" sha1="0zkg2dlc9yinqfiwjvrtwoaau9senzd" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]</text>
      <sha1>0zkg2dlc9yinqfiwjvrtwoaau9senzd</sha1>
    </revision>
    <revision>
      <id>222</id>
      <parentid>221</parentid>
      <timestamp>2025-06-27T12:53:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>222</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="455" sha1="hcvbot7fesz375fc68a8n4iyd6e8lhi" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]</text>
      <sha1>hcvbot7fesz375fc68a8n4iyd6e8lhi</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Haupseite</title>
    <ns>0</ns>
    <id>50</id>
    <revision>
      <id>223</id>
      <timestamp>2025-06-22T18:53:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Server==“</comment>
      <origin>223</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10" sha1="se409shl57omlhfvbsdhchiyb8onn7t" xml:space="preserve">==Server==</text>
      <sha1>se409shl57omlhfvbsdhchiyb8onn7t</sha1>
    </revision>
    <revision>
      <id>224</id>
      <parentid>223</parentid>
      <timestamp>2025-06-22T19:39:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>224</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="30" sha1="qgnoewztnqmsxwhilshp0dociizqv72" xml:space="preserve">==Server==
* [[Server:Mieten]]</text>
      <sha1>qgnoewztnqmsxwhilshp0dociizqv72</sha1>
    </revision>
    <revision>
      <id>225</id>
      <parentid>224</parentid>
      <timestamp>2025-06-22T21:03:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>225</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="49" sha1="o0r1to9dztux26zf2hheprfcr97gpdu" xml:space="preserve">==Server==
* [[Server:Mieten]
* [[Server:Backup]]</text>
      <sha1>o0r1to9dztux26zf2hheprfcr97gpdu</sha1>
    </revision>
    <revision>
      <id>226</id>
      <parentid>225</parentid>
      <timestamp>2025-06-22T21:04:24Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>226</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="50" sha1="rqxzq66fqbbhksogfgqutolovtxvzxm" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]</text>
      <sha1>rqxzq66fqbbhksogfgqutolovtxvzxm</sha1>
    </revision>
    <revision>
      <id>227</id>
      <parentid>226</parentid>
      <timestamp>2025-06-22T21:28:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>227</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="76" sha1="gefzf8wfp1737pmexnm7bu1nl94h4aq" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Asp Net Core]]</text>
      <sha1>gefzf8wfp1737pmexnm7bu1nl94h4aq</sha1>
    </revision>
    <revision>
      <id>228</id>
      <parentid>227</parentid>
      <timestamp>2025-06-26T13:18:09Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>228</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="118" sha1="qz5aqmkoeiq8z8no776cspuz6hzqx26" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]
* [[Ubuntu Software Pakete Installieren]]
* [[Server:Asp Net Core]]</text>
      <sha1>qz5aqmkoeiq8z8no776cspuz6hzqx26</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Hauptseite</title>
    <ns>0</ns>
    <id>51</id>
    <redirect title="Server:Hauptseite" />
    <revision>
      <id>229</id>
      <timestamp>2025-06-22T19:35:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Thorsten verschob die Seite [[Ns3000:Hauptseite]] nach [[Server:Hauptseite]]</comment>
      <origin>229</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="36" sha1="kfpx0pqtmay410e6d8qoq8udznhcpm7" xml:space="preserve">#WEITERLEITUNG [[Server:Hauptseite]]</text>
      <sha1>kfpx0pqtmay410e6d8qoq8udznhcpm7</sha1>
    </revision>
  </page>
  <page>
    <title>Ns3000:Mieten</title>
    <ns>0</ns>
    <id>52</id>
    <redirect title="Server:Ns3000:Mieten" />
    <revision>
      <id>230</id>
      <timestamp>2025-06-22T19:37:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Thorsten verschob die Seite [[Ns3000:Mieten]] nach [[Server:Ns3000:Mieten]]</comment>
      <origin>230</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="39" sha1="onyywsakx4rocufhn505gmeh60dic7c" xml:space="preserve">#WEITERLEITUNG [[Server:Ns3000:Mieten]]</text>
      <sha1>onyywsakx4rocufhn505gmeh60dic7c</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Mieten</title>
    <ns>0</ns>
    <id>53</id>
    <revision>
      <id>231</id>
      <timestamp>2025-06-22T19:49:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==KVM Server Mieten== KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung…“</comment>
      <origin>231</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7912" sha1="h87lgi653cwqkzc5txo8vunxj7j3e83" xml:space="preserve">==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>h87lgi653cwqkzc5txo8vunxj7j3e83</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Backup</title>
    <ns>0</ns>
    <id>54</id>
    <revision>
      <id>232</id>
      <timestamp>2025-06-22T21:10:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Server Backup Anbieter in Deutschland==  Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:  * Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung. * Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise. * Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.  ==G…“</comment>
      <origin>232</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="920" sha1="17rc6kdqz2lh2f7b91a0cylram3uuwc" xml:space="preserve">==Server Backup Anbieter in Deutschland==

Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:

* Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung.
* Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise.
* Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.

==Git-Backup erstellen, ohne Nutzerdaten zu verwenden==
Es gibt verschiedene Anbieter, bei denen Sie Git-Repositories hosten können. Zu den bekanntesten gehören:

* GitHub – Weltweit größter Anbieter für Git-Repositories, bietet kostenlose und kostenpflichtige Pläne.
* GitLab – Open-Source-Lösung, kann selbst gehostet oder als Cloud-Service genutzt werden.
* Codeberg – Gemeinnütziger Anbieter aus Europa, legt Wert auf Datenschutz und Transparenz.</text>
      <sha1>17rc6kdqz2lh2f7b91a0cylram3uuwc</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Asp Net Core</title>
    <ns>0</ns>
    <id>55</id>
    <revision>
      <id>233</id>
      <timestamp>2025-06-22T22:24:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>233</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="862" sha1="nhdtyvt0y91sufx3txzf7opysdfjr4t" xml:space="preserve">== ASP.NET Core 9 Runtime auf Ubuntu 24.04 Server installieren ==

Folgen Sie diesen Schritten, um das ASP.NET Core 9 Runtime auf einem Ubuntu 24.04 Server zu installieren:

=== 1. Microsoft-Paketrepository hinzufügen ===
Öffnen Sie ein Terminal und führen Sie folgende Befehle aus:

=== 2. ASP.NET Core Runtime installieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt-get install aspnetcore-runtime-9.0
&lt;/syntaxhighlight&gt;

=== 3. Installation überprüfen ===
&lt;syntaxhighlight lang="bash"&gt;
dotnet --list-runtimes
&lt;/syntaxhighlight&gt;
Sie sollten nun die ASP.NET Core 9 Runtime in der Liste sehen.

'''Hinweis:''' Ersetzen Sie ggf. die Versionsnummer, falls eine neuere Version verfügbar ist.

== Siehe auch ==
* [https://learn.microsoft.com/de-de/aspnet/core/?view=aspnetcore-9.0 Microsoft-Dokumentation zu ASP.NET Core]
* [[Server:Dotnet installieren Ubuntu]]</text>
      <sha1>nhdtyvt0y91sufx3txzf7opysdfjr4t</sha1>
    </revision>
    <revision>
      <id>234</id>
      <parentid>233</parentid>
      <timestamp>2025-06-22T23:05:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>234</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="892" sha1="7yy1gi1d9ryjm1194e1wcxqjaaq1kmm" xml:space="preserve">== ASP.NET Core 9 Runtime auf Ubuntu 24.04 Server installieren ==

Folgen Sie diesen Schritten, um das ASP.NET Core 9 Runtime auf einem Ubuntu 24.04 Server zu installieren:

=== 1. Microsoft-Paketrepository hinzufügen ===
Öffnen Sie ein Terminal und führen Sie folgende Befehle aus:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt-get update &amp;&amp; \
  sudo apt-get install -y aspnetcore-runtime-8.0
&lt;/syntaxhighlight&gt;

=== 2. ASP.NET Core Runtime installieren ===

=== 3. Installation überprüfen ===
&lt;syntaxhighlight lang="bash"&gt;
dotnet --list-runtimes
&lt;/syntaxhighlight&gt;
Sie sollten nun die ASP.NET Core 9 Runtime in der Liste sehen.

'''Hinweis:''' Ersetzen Sie ggf. die Versionsnummer, falls eine neuere Version verfügbar ist.

== Siehe auch ==
* [https://learn.microsoft.com/de-de/aspnet/core/?view=aspnetcore-8.0 Microsoft-Dokumentation zu ASP.NET Core]
* [[Server:Dotnet installieren Ubuntu]]</text>
      <sha1>7yy1gi1d9ryjm1194e1wcxqjaaq1kmm</sha1>
    </revision>
    <revision>
      <id>235</id>
      <parentid>234</parentid>
      <timestamp>2025-06-22T23:27:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>235</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1606" sha1="3ycnbz67ja3ixxrw3gze79swhv8424e" xml:space="preserve">== ASP.NET Core 8 Runtime auf Ubuntu 24.04 Server installieren ==
Folgen Sie dieser Anleitung, um das ASP.NET Core 8 Runtime auf einem Ubuntu 24.04 Server zu installieren.
=== 1. Microsoft-Paketrepository hinzufügen ===
Öffnen Sie ein Terminal und führen Sie folgende Befehle aus:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt-get update &amp;&amp; \
  sudo apt-get install -y aspnetcore-runtime-8.0
&lt;/syntaxhighlight&gt;

== ASP.NET Core 9 Runtime auf Ubuntu 24.04 Server installieren ==

Folgen Sie dieser Anleitung, um das ASP.NET Core 9 Runtime auf einem Ubuntu 24.04 Server zu installieren.

=== 1. Microsoft-Paketrepository hinzufügen ===
Öffnen Sie ein Terminal und führen Sie folgende Befehle aus:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
&lt;/syntaxhighlight&gt;

=== 2. ASP.NET Core Runtime installieren ===
Installieren Sie das ASP.NET Core Runtime-Paket:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/syntaxhighlight&gt;

=== 3. Installation überprüfen ===
Prüfen Sie, ob die Runtime korrekt installiert wurde:
&lt;syntaxhighlight lang="bash"&gt;
dotnet --list-runtimes
&lt;/syntaxhighlight&gt;
Sie sollten nun die ASP.NET Core 9 Runtime in der Liste sehen.

'''Hinweis:''' Ersetzen Sie ggf. die Versionsnummer, falls eine neuere Version verfügbar ist.

== Siehe auch ==
* [https://learn.microsoft.com/de-de/aspnet/core/?view=aspnetcore-8.0 Microsoft-Dokumentation zu ASP.NET Core]
* [https://learn.microsoft.com/de-de/aspnet/core/?view=aspnetcore-9.0 Microsoft-Dokumentation zu ASP.NET Core]</text>
      <sha1>3ycnbz67ja3ixxrw3gze79swhv8424e</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:HTTP</title>
    <ns>0</ns>
    <id>56</id>
    <revision>
      <id>236</id>
      <timestamp>2025-06-23T08:18:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* = Einführung in HTTP =  HTTP ist ein Anwendungsprotokoll, das einen Regelsatz für das Senden von Anfragen vom Browser zum Server und das Senden von Antworten vom Server zum Browser definiert. Ursprünglich von Tim Berners-Lee entwickelt, wurde es später von der IETF (Internet Engineering Task Force) und dem W3C (World Wide Web Consortium) standardisiert.  == HTTP-Antwort ==  === Antwort-Startzeile === Enthält die HTTP-Version, den Statuscode und die…“</comment>
      <origin>236</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4655" sha1="eln2x35vix5gw1rctc1xxkmy7szurdx" xml:space="preserve">* = Einführung in HTTP =

HTTP ist ein Anwendungsprotokoll, das einen Regelsatz für das Senden von Anfragen vom Browser zum Server und das Senden von Antworten vom Server zum Browser definiert.
Ursprünglich von Tim Berners-Lee entwickelt, wurde es später von der IETF (Internet Engineering Task Force) und dem W3C (World Wide Web Consortium) standardisiert.

== HTTP-Antwort ==

=== Antwort-Startzeile ===
Enthält die HTTP-Version, den Statuscode und die Statusbeschreibung.
* '''HTTP-Version:''' 1/1 | 2 | 3
* '''Statuscode:''' 101 | 200 | 302 | 400 | 401 | 404 | 500
* '''Statusbeschreibung:''' Switching Protocols | OK | Found | Bad Request | Unauthorized | Not Found | Internal Server Error

=== HTTP-Antwort-Statuscodes ===
{| class="wikitable"
| '''1xx''' || '''Informationell'''
|-
| 101 || Switching Protocols
|-
| '''2xx''' || '''Erfolg'''
|-
| 200 || OK
|-
| '''3xx''' || '''Umleitung'''
|-
| 302 || Found
|-
| 304 || Not Modified
|-
| '''4xx''' || '''Client-Fehler'''
|-
| 400 || Bad Request
|-
| 401 || Unauthorized
|-
| 404 || Not Found
|-
| '''5xx''' || '''Server-Fehler'''
|-
| 500 || Internal Server Error
|}

=== HTTP-Antwort-Header ===
; Date
: Datum und Uhrzeit der Antwort. z.B.: &lt;nowiki&gt;Tue, 15 Nov 1994 08:12:31 GMT&lt;/nowiki&gt;

; Server
: Name des Servers. z.B.: &lt;nowiki&gt;Server=Kestrel&lt;/nowiki&gt;

; Content-Type
: MIME-Typ des Antwort-Hauptteils (Body). z.B.: &lt;nowiki&gt;text/plain, text/html, application/json, application/xml&lt;/nowiki&gt; etc.

; Content-Length
: Länge (in Bytes) des Antwort-Hauptteils (Body). z.B.: &lt;nowiki&gt;100&lt;/nowiki&gt;

; Cache-Control
: Gibt die Anzahl der Sekunden an, die die Antwort im Browser zwischengespeichert (gecacht) werden kann. z.B.: &lt;nowiki&gt;max-age=60&lt;/nowiki&gt;

; Set-Cookie
: Enthält Cookies, die an den Browser gesendet werden sollen. z.B.: &lt;nowiki&gt;x=10&lt;/nowiki&gt;

; Access-Control-Allow-Origin
: Wird verwendet, um CORS (Cross-Origin Resource Sharing) zu aktivieren. z.B.: &lt;nowiki&gt;Access-Control-Allow-Origin: http://www.example.com&lt;/nowiki&gt;

; Location
: Enthält die URL, zu der umgeleitet werden soll. z.B.: &lt;nowiki&gt;http://www.example-redirect.com&lt;/nowiki&gt;

[https://developer.mozilla.org/de/docs/Web/HTTP/Headers Weiterführende Lektüre]

== HTTP-Anfrage ==

=== HTTP-Anfrage-Header ===
; Accept
: Repräsentiert den MIME-Typ des Antwortinhalts, den der Client akzeptiert. z.B.: &lt;nowiki&gt;text/html&lt;/nowiki&gt;

; Accept-Language
: Repräsentiert die natürliche Sprache des Antwortinhalts, die der Client akzeptiert. z.B.: &lt;nowiki&gt;en-US&lt;/nowiki&gt;

; Content-Type
: MIME-Typ des Anfrage-Hauptteils (Body). z.B.: &lt;nowiki&gt;text/x-www-form-urlencoded, application/json, application/xml, multipart/form-data&lt;/nowiki&gt;

; Content-Length
: Länge (in Bytes) des Anfrage-Hauptteils (Body). z.B.: &lt;nowiki&gt;100&lt;/nowiki&gt;

; Date
: Datum und Uhrzeit der Anfrage. z.B.: &lt;nowiki&gt;Tue, 15 Nov 1994 08:12:31 GMT&lt;/nowiki&gt;

; Host
: Domainname des Servers. z.B.: &lt;nowiki&gt;www.example.com&lt;/nowiki&gt;

; User-Agent
: Details zum Browser (Client). z.B.: &lt;nowiki&gt;Mozilla/5.0 Firefox/12.0&lt;/nowiki&gt;

; Cookie
: Enthält Cookies, die an den Server gesendet werden sollen. z.B.: &lt;nowiki&gt;x=100&lt;/nowiki&gt;

[https://developer.mozilla.org/de/docs/Web/HTTP/Headers Weiterführende Lektüre]

=== HTTP-Anfragemethoden ===
; GET
: Anfragen zum Abrufen von Informationen (Seite, Entitätsobjekt oder eine statische Datei).

; POST
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen wird es in die Datenbank eingefügt.

; PUT
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen werden damit alle Eigenschaften (vollständiges Update) in der Datenbank aktualisiert.

; PATCH
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen werden damit einige Eigenschaften (Teil-Update) in der Datenbank aktualisiert.

; DELETE
: Fordert das Löschen einer Entität in der Datenbank an.

=== HTTP GET vs. POST ===

==== GET ====
* Wird verwendet, um Daten vom Server abzurufen.
* Parameter befinden sich in der Anfrage-URL (nur als Query-String).
* Es kann nur eine begrenzte Anzahl von Zeichen an den Server gesendet werden. Max: 2048 Zeichen.
* Wird hauptsächlich als Standardmethode für Anfragen zum Abrufen von Seiten, statischen Dateien usw. verwendet.
* Kann von Browsern / Suchmaschinen zwischengespeichert (gecacht) werden.

==== POST ====
* Wird verwendet, um Daten auf dem Server einzufügen.
* Parameter befinden sich im Anfrage-Hauptteil (Body) (als Query-String, JSON, XML oder Formulardaten).
* Es können unbegrenzt viele Daten an den Server gesendet werden.
* Wird hauptsächlich für Formularübermittlungen / XHR-Aufrufe verwendet.
* Kann nicht von Browsern / Suchmaschinen zwischengespeichert (gecacht) werden.</text>
      <sha1>eln2x35vix5gw1rctc1xxkmy7szurdx</sha1>
    </revision>
    <revision>
      <id>237</id>
      <parentid>236</parentid>
      <timestamp>2025-06-23T08:20:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>237</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4653" sha1="l318yw025k9zftsdwiyytnu8ia5g59t" xml:space="preserve">= Einführung in HTTP =

HTTP ist ein Anwendungsprotokoll, das einen Regelsatz für das Senden von Anfragen vom Browser zum Server und das Senden von Antworten vom Server zum Browser definiert.
Ursprünglich von Tim Berners-Lee entwickelt, wurde es später von der IETF (Internet Engineering Task Force) und dem W3C (World Wide Web Consortium) standardisiert.

== HTTP-Antwort ==

=== Antwort-Startzeile ===
Enthält die HTTP-Version, den Statuscode und die Statusbeschreibung.
* '''HTTP-Version:''' 1/1 | 2 | 3
* '''Statuscode:''' 101 | 200 | 302 | 400 | 401 | 404 | 500
* '''Statusbeschreibung:''' Switching Protocols | OK | Found | Bad Request | Unauthorized | Not Found | Internal Server Error

=== HTTP-Antwort-Statuscodes ===
{| class="wikitable"
| '''1xx''' || '''Informationell'''
|-
| 101 || Switching Protocols
|-
| '''2xx''' || '''Erfolg'''
|-
| 200 || OK
|-
| '''3xx''' || '''Umleitung'''
|-
| 302 || Found
|-
| 304 || Not Modified
|-
| '''4xx''' || '''Client-Fehler'''
|-
| 400 || Bad Request
|-
| 401 || Unauthorized
|-
| 404 || Not Found
|-
| '''5xx''' || '''Server-Fehler'''
|-
| 500 || Internal Server Error
|}

=== HTTP-Antwort-Header ===
; Date
: Datum und Uhrzeit der Antwort. z.B.: &lt;nowiki&gt;Tue, 15 Nov 1994 08:12:31 GMT&lt;/nowiki&gt;

; Server
: Name des Servers. z.B.: &lt;nowiki&gt;Server=Kestrel&lt;/nowiki&gt;

; Content-Type
: MIME-Typ des Antwort-Hauptteils (Body). z.B.: &lt;nowiki&gt;text/plain, text/html, application/json, application/xml&lt;/nowiki&gt; etc.

; Content-Length
: Länge (in Bytes) des Antwort-Hauptteils (Body). z.B.: &lt;nowiki&gt;100&lt;/nowiki&gt;

; Cache-Control
: Gibt die Anzahl der Sekunden an, die die Antwort im Browser zwischengespeichert (gecacht) werden kann. z.B.: &lt;nowiki&gt;max-age=60&lt;/nowiki&gt;

; Set-Cookie
: Enthält Cookies, die an den Browser gesendet werden sollen. z.B.: &lt;nowiki&gt;x=10&lt;/nowiki&gt;

; Access-Control-Allow-Origin
: Wird verwendet, um CORS (Cross-Origin Resource Sharing) zu aktivieren. z.B.: &lt;nowiki&gt;Access-Control-Allow-Origin: http://www.example.com&lt;/nowiki&gt;

; Location
: Enthält die URL, zu der umgeleitet werden soll. z.B.: &lt;nowiki&gt;http://www.example-redirect.com&lt;/nowiki&gt;

[https://developer.mozilla.org/de/docs/Web/HTTP/Headers Weiterführende Lektüre]

== HTTP-Anfrage ==

=== HTTP-Anfrage-Header ===
; Accept
: Repräsentiert den MIME-Typ des Antwortinhalts, den der Client akzeptiert. z.B.: &lt;nowiki&gt;text/html&lt;/nowiki&gt;

; Accept-Language
: Repräsentiert die natürliche Sprache des Antwortinhalts, die der Client akzeptiert. z.B.: &lt;nowiki&gt;en-US&lt;/nowiki&gt;

; Content-Type
: MIME-Typ des Anfrage-Hauptteils (Body). z.B.: &lt;nowiki&gt;text/x-www-form-urlencoded, application/json, application/xml, multipart/form-data&lt;/nowiki&gt;

; Content-Length
: Länge (in Bytes) des Anfrage-Hauptteils (Body). z.B.: &lt;nowiki&gt;100&lt;/nowiki&gt;

; Date
: Datum und Uhrzeit der Anfrage. z.B.: &lt;nowiki&gt;Tue, 15 Nov 1994 08:12:31 GMT&lt;/nowiki&gt;

; Host
: Domainname des Servers. z.B.: &lt;nowiki&gt;www.example.com&lt;/nowiki&gt;

; User-Agent
: Details zum Browser (Client). z.B.: &lt;nowiki&gt;Mozilla/5.0 Firefox/12.0&lt;/nowiki&gt;

; Cookie
: Enthält Cookies, die an den Server gesendet werden sollen. z.B.: &lt;nowiki&gt;x=100&lt;/nowiki&gt;

[https://developer.mozilla.org/de/docs/Web/HTTP/Headers Weiterführende Lektüre]

=== HTTP-Anfragemethoden ===
; GET
: Anfragen zum Abrufen von Informationen (Seite, Entitätsobjekt oder eine statische Datei).

; POST
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen wird es in die Datenbank eingefügt.

; PUT
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen werden damit alle Eigenschaften (vollständiges Update) in der Datenbank aktualisiert.

; PATCH
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen werden damit einige Eigenschaften (Teil-Update) in der Datenbank aktualisiert.

; DELETE
: Fordert das Löschen einer Entität in der Datenbank an.

=== HTTP GET vs. POST ===

==== GET ====
* Wird verwendet, um Daten vom Server abzurufen.
* Parameter befinden sich in der Anfrage-URL (nur als Query-String).
* Es kann nur eine begrenzte Anzahl von Zeichen an den Server gesendet werden. Max: 2048 Zeichen.
* Wird hauptsächlich als Standardmethode für Anfragen zum Abrufen von Seiten, statischen Dateien usw. verwendet.
* Kann von Browsern / Suchmaschinen zwischengespeichert (gecacht) werden.

==== POST ====
* Wird verwendet, um Daten auf dem Server einzufügen.
* Parameter befinden sich im Anfrage-Hauptteil (Body) (als Query-String, JSON, XML oder Formulardaten).
* Es können unbegrenzt viele Daten an den Server gesendet werden.
* Wird hauptsächlich für Formularübermittlungen / XHR-Aufrufe verwendet.
* Kann nicht von Browsern / Suchmaschinen zwischengespeichert (gecacht) werden.</text>
      <sha1>l318yw025k9zftsdwiyytnu8ia5g59t</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Middleware</title>
    <ns>0</ns>
    <id>57</id>
    <revision>
      <id>238</id>
      <timestamp>2025-06-23T08:34:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Einführung in Middleware == Middleware ist eine Komponente, die in die Anwendungs-Pipeline eingebunden wird, um Anfragen (Requests) und Antworten (Responses) zu verarbeiten. Middlewares werden nacheinander verkettet und in der gleichen Reihenfolge ausgeführt, in der sie hinzugefügt werden.  Middleware kann ein Request-Delegate (anonyme Methode oder Lambda-Ausdruck) oder eine Klasse sein.  === Middleware - Run === Die Erweiterungsmethode namens '''Ru…“</comment>
      <origin>238</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4447" sha1="byusd5o3m8kcxo6n8ty1xtzyukgpbis" xml:space="preserve">== Einführung in Middleware ==
Middleware ist eine Komponente, die in die Anwendungs-Pipeline eingebunden wird, um Anfragen (Requests) und Antworten (Responses) zu verarbeiten.
Middlewares werden nacheinander verkettet und in der gleichen Reihenfolge ausgeführt, in der sie hinzugefügt werden.

Middleware kann ein Request-Delegate (anonyme Methode oder Lambda-Ausdruck) oder eine Klasse sein.

=== Middleware - Run ===
Die Erweiterungsmethode namens '''Run''' wird verwendet, um eine abschließende (terminating) / kurzschließende (short-circuiting) Middleware auszuführen, die die Anfrage nicht an die nächste Middleware weiterleitet.

&amp;lt;source lang="csharp"&gt;
app.Run( );
app.Run(async (HttpContext context) =&gt;
{
// Code
});
&amp;lt;/source&gt;

=== Middleware-Kette ===
==== app.Use( ) ====
Die Erweiterungsmethode namens '''Use''' wird verwendet, um eine nicht-abschließende Middleware auszuführen, die die Anfrage an die nächste Middleware weiterleiten kann oder auch nicht.

&amp;lt;source lang="csharp"&gt;
app.Use(async (HttpContext context, RequestDelegate next) =&gt;
{
// Logik davor
await next(context);
// Logik danach
});
&amp;lt;/source&gt;

=== Middleware-Klasse ===
Eine Middleware-Klasse wird verwendet, um die Middleware-Logik von einem Lambda-Ausdruck in eine separate / wiederverwendbare Klasse auszulagern.

&amp;lt;source lang="csharp"&gt;
class MiddlewareClassName : IMiddleware
{
public async Task InvokeAsync(HttpContext context, RequestDelegate next)
{
// Logik davor
await next(context);
// Logik danach
}
}

// Registrierung in der Pipeline
app.UseMiddleware&amp;lt;MiddlewareClassName&gt;();

&amp;lt;/source&gt;

=== Middleware-Erweiterungen ===
Eine Middleware-Erweiterungsmethode wird verwendet, um die Middleware mit einem einzigen Methodenaufruf aufzurufen.

'''Middleware-Klasse:'''

&amp;lt;source lang="csharp"&gt;
class MiddlewareClassName : IMiddleware
{
public async Task InvokeAsync(HttpContext context, RequestDelegate next)
{
// Logik davor
await next(context);
// Logik danach
}
}
&amp;lt;/source&gt;

'''Erweiterungsmethode:'''

&amp;lt;source lang="csharp"&gt;
static class ClassNameExtensions
{
public static IApplicationBuilder ExtensionMethodName(this IApplicationBuilder app)
{
return app.UseMiddleware&amp;lt;MiddlewareClassName&gt;();
}
}

// Aufruf in der Pipeline
app.ExtensionMethodName();

&amp;lt;/source&gt;

=== Konventionelle Middleware ===
Eine konventionelle Middleware folgt einem Muster (Konstruktor mit einem '''RequestDelegate''' und eine '''InvokeAsync'''-Methode), anstatt die '''IMiddleware'''-Schnittstelle explizit zu implementieren.

&amp;lt;source lang="csharp"&gt;
class MiddlewareClassName
{
private readonly RequestDelegate _next;

public MiddlewareClassName(RequestDelegate next)
{
_next = next;
}

public async Task InvokeAsync(HttpContext context)
{
// Logik davor
await _next(context);
// Logik danach
}
}

&amp;lt;/source&gt;

'''Erweiterungsmethode zur Registrierung:'''

&amp;lt;source lang="csharp"&gt;
static class ClassNameExtensions
{
public static IApplicationBuilder ExtensionMethodName(this IApplicationBuilder app)
{
return app.UseMiddleware&amp;lt;MiddlewareClassName&gt;();
}
}

// Aufruf in der Pipeline
app.ExtensionMethodName();

&amp;lt;/source&gt;

== Die richtige Reihenfolge der Middleware ==
Die Reihenfolge, in der Middleware-Komponenten zur Pipeline hinzugefügt werden, ist entscheidend, da sie die Verarbeitung von Anfragen und Antworten beeinflusst.

&amp;lt;source lang="csharp"&gt;
// Ausnahmebehandlung zuerst
app.UseExceptionHandler("/Error");

// Erzwingt HTTPS
app.UseHsts();
app.UseHttpsRedirection();

// Stellt statische Dateien bereit (z.B. HTML, CSS, Bilder)
app.UseStaticFiles();

// Routing-Entscheidungen
app.UseRouting();

// CORS-Richtlinien anwenden
app.UseCors();

// Authentifizierung des Benutzers
app.UseAuthentication();

// Autorisierung des Zugriffs auf Ressourcen
app.UseAuthorization();

// Sitzungszustand verwalten
app.UseSession();

// Endpunkte für Controller mappen
app.MapControllers();

// Fügen Sie hier Ihre benutzerdefinierten Middlewares hinzu

// Eine abschließende Middleware am Ende
app.Run();

&amp;lt;/source&gt;

=== Middleware - UseWhen ===
Die Erweiterungsmethode namens '''UseWhen''' wird verwendet, um einen Zweig der Middleware-Pipeline nur dann auszuführen, wenn die angegebene Bedingung wahr ist.

&amp;lt;source lang="csharp"&gt;
app.UseWhen(
context =&gt; { return boolescher_Wert; }, // Bedingung
appBuilder =&gt;
{
// Fügen Sie hier Ihre Middlewares für diesen Zweig hinzu
appBuilder.Use(...);
}
);
&amp;lt;/source&gt;</text>
      <sha1>byusd5o3m8kcxo6n8ty1xtzyukgpbis</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Routing</title>
    <ns>0</ns>
    <id>58</id>
    <revision>
      <id>239</id>
      <timestamp>2025-06-23T09:02:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „'''Einführung in Routing''' Routing ist ein Prozess, bei dem eingehende HTTP-Anfragen durch Überprüfung der HTTP-Methode und der URL abgeglichen und dann entsprechende Endpunkte aufgerufen werden.  == Routing - UseRouting und UseEndPoints == === UseRouting( ) ===  &amp;lt;pre&gt; app.UseRouting(); &amp;lt;/pre&gt;  Aktiviert das Routing und wählt einen passenden Endpunkt basierend auf dem URL-Pfad und der HTTP-Methode aus.  === UseEndPoints( ) ===  &amp;lt;pre&gt; app.Use…“</comment>
      <origin>239</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6250" sha1="be9dleif29gebmfvv3eqs5a20txy1lx" xml:space="preserve">'''Einführung in Routing'''
Routing ist ein Prozess, bei dem eingehende HTTP-Anfragen durch Überprüfung der HTTP-Methode und der URL abgeglichen und dann entsprechende Endpunkte aufgerufen werden.

== Routing - UseRouting und UseEndPoints ==
=== UseRouting( ) ===

&amp;lt;pre&gt;
app.UseRouting();
&amp;lt;/pre&gt;

Aktiviert das Routing und wählt einen passenden Endpunkt basierend auf dem URL-Pfad und der HTTP-Methode aus.

=== UseEndPoints( ) ===

&amp;lt;pre&gt;
app.UseEndPoints(endpoints =&gt;
{
endpoints.Map(…);
endpoints.MapGet(…);
endpoints.MapPost(…);
);
&amp;lt;/pre&gt;

Führt den passenden Endpunkt aus, der von der obigen Methode UseRouting() ausgewählt wurde.

== Map, MapGet, MapPost ==
=== endpoints.Map( ) ===

&amp;lt;pre&gt;
endpoints.Map("path", async (HttpContext context) =&gt;
{
//code
});
&amp;lt;/pre&gt;

Führt den Endpunkt aus, wenn der URL-Pfad einer HTTP-Anfrage mit dem angegebenen Pfad beginnt.

=== endpoints.MapGet( ) ===

&amp;lt;pre&gt;
endpoints.MapGet("path", async (HttpContext context) =&gt;
{
//code
});
&amp;lt;/pre&gt;

Führt den Endpunkt aus, wenn der URL-Pfad einer HTTP-GET-Anfrage mit dem angegebenen Pfad beginnt.

=== endpoints.MapPost( ) ===

&amp;lt;pre&gt;
endpoints.MapPost("path", async (HttpContext context) =&gt;
{
//code
});
&amp;lt;/pre&gt;

Führt den Endpunkt aus, wenn der URL-Pfad einer HTTP-POST-Anfrage mit dem angegebenen Pfad beginnt.

== GetEndpoint( ) ==

&amp;lt;pre&gt;
context.GetEndpoint();
&amp;lt;/pre&gt;

Gibt eine Instanz des Typs Microsoft.AspNetCore.Http.Endpoint zurück, die einen Endpunkt darstellt.
Diese Instanz enthält zwei wichtige Eigenschaften: DisplayName, RequestDelegate.

== Routenparameter ==

&amp;lt;pre&gt;
"{parameter}"
&amp;lt;/pre&gt;

Ein Routenparameter kann mit jedem beliebigen Wert übereinstimmen.

== Standard-Routenparameter ==

&amp;lt;pre&gt;
"{parameter=default_value}"
&amp;lt;/pre&gt;

Ein Routenparameter mit einem Standardwert passt auf jeden beliebigen Wert.
Er passt auch auf einen leeren Wert. In diesem Fall wird der Standardwert für den Parameter verwendet.

== Optionale Routenparameter ==

&amp;lt;pre&gt;
"{parameter?}"
&amp;lt;/pre&gt;

"?" kennzeichnet einen optionalen Parameter.
Das bedeutet, er passt sowohl auf einen Wert als auch auf einen leeren Wert.

== Routen-Constraints ==
=== Routenparameter mit Constraint: ===

&amp;lt;pre&gt;
"{parameter:constraint}"
&amp;lt;/pre&gt;

Ein Routenparameter, der eine Beschränkung (Constraint) hat, kann mit einem Wert übereinstimmen, der die angegebene Beschränkung erfüllt.

=== Mehrere Constraints ===

&amp;lt;pre&gt;
"{parameter:constraint1:constraint2}"
&amp;lt;/pre&gt;

Ein Routenparameter kann mehr als eine Beschränkung haben, die durch einen Doppelpunkt ( : ) getrennt sind.

'''int'''
Passt auf jede ganze Zahl.
Bsp: {id:int} passt auf 123456789, -123456789

'''bool'''
Passt auf true oder false. Groß- und Kleinschreibung wird nicht beachtet.
Bsp: {active:bool} passt auf true, false, TRUE, FALSE

'''datetime'''
Passt auf einen gültigen DateTime-Wert in den Formaten "yyyy-MM-dd hh:mm:ss tt" und "MM/dd/yyyy hh:mm:ss tt".
Bsp: {id:datetime} passt auf 2030-01-01%2011:59%20pm
Hinweis: '%20' entspricht einem Leerzeichen.

'''decimal'''
Passt auf einen gültigen Dezimalwert.
Bsp: {price:decimal} passt auf 49.99, -1, 0.01

'''long'''
Passt auf einen gültigen Long-Wert.
Bsp: {id:long} passt auf 123456789, -123456789

'''guid'''
Passt auf einen gültigen Guid-Wert (Globally Unique Identifier - Eine hexadezimale Zahl, die universell eindeutig ist).
Bsp: {id:guid} passt auf 123E4567-E89B-12D3-A456-426652340000

'''minlength(wert)'''
Passt auf eine Zeichenkette, die mindestens die angegebene Anzahl von Zeichen hat.
Bsp: {username:minlength(4)} passt auf John, Allen, William

'''maxlength(wert)'''
Passt auf eine Zeichenkette, die höchstens die angegebene Anzahl von Zeichen hat.
Bsp: {username:maxlength(7)} passt auf John, Allen, William

'''length(min,max)'''
Passt auf eine Zeichenkette, deren Zeichenanzahl zwischen der angegebenen minimalen und maximalen Länge liegt (beide Zahlen einschließlich).
Bsp: {username:length(4, 7)} passt auf John, Allen, William

'''length(wert)'''
Passt auf eine Zeichenkette, die genau die angegebene Anzahl von Zeichen hat.
Bsp: {tin:length(9)} passt auf 987654321

'''min(wert)'''
Passt auf einen ganzzahligen Wert, der größer oder gleich dem angegebenen Wert ist.
Bsp: {age:min(18)} passt auf 18, 19, 100

'''max(wert)'''
Passt auf einen ganzzahligen Wert, der kleiner oder gleich dem angegebenen Wert ist.
Bsp: {age:max(100)} passt auf -1, 1, 18, 100

'''range(min,max)'''
Passt auf einen ganzzahligen Wert zwischen den angegebenen Minimal- und Maximalwerten (beide Zahlen einschließlich).
Bsp: {age:range(18,100)} passt auf 18, 19, 99, 100

'''alpha'''
Passt auf eine Zeichenkette, die nur Alphabete (A-Z) und (a-z) enthält.
Bsp: {username:alpha} passt auf rick, william

'''regex(ausdruck)'''
Passt auf eine Zeichenkette, die mit dem angegebenen regulären Ausdruck übereinstimmt.
Bsp 1: {age:regex(^[0-9]{2}$)} passt auf jede zweistellige Zahl, wie 10, 11, 98, 99
Bsp 2: {age:regex(^\\d{3}-\\d{3}$)} passt auf jede dreistellige Zahl, gefolgt von einem Bindestrich und dann einer dreistelligen Zahl, wie 123-456

== Benutzerdefinierte Routen-Constraint-Klassen ==
=== Benutzerdefinierte Routen-Constraint-Klasse ===

&amp;lt;pre&gt;
public class KlassenName : IRouteConstraint
{
public bool Match(HttpContext? HttpContext, IRouter? route, string routeKey, RouteValueDictionary values, RouteDirection routeDirection)
{
//gibt true oder false zurück
}
}
&amp;lt;/pre&gt;

&amp;lt;pre&gt;
builder.Services.AddRouting(options =&gt;
{
options.ConstraintMap.Add("name", typeof(KlassenName));
}); //Hinzufügen des benutzerdefinierten Constraints zum Routing
&amp;lt;/pre&gt;

== Reihenfolge der Endpunktauswahl ==
Oben hat die höchste Priorität (wird zuerst ausgewertet).

URL-Vorlage mit mehr Segmenten.
Bsp: "a/b/c/d" hat eine höhere Priorität als "a/b/c".

URL-Vorlage mit literalen Text hat eine höhere Priorität als ein Parametersegment.
Bsp: "a/b" hat eine höhere Priorität als "a/{parameter}".

URL-Vorlage, die ein Parametersegment mit Constraints hat, hat eine höhere Priorität als ein Parametersegment ohne Constraints.
Bsp: "a/b:int" hat eine höhere Priorität als "a/b".

Catch-all-Parameter (**).
Bsp: "a/{b}" hat eine höhere Priorität als "a/**".

== WebRoot ==</text>
      <sha1>be9dleif29gebmfvv3eqs5a20txy1lx</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Controllers</title>
    <ns>0</ns>
    <id>59</id>
    <revision>
      <id>240</id>
      <timestamp>2025-06-23T09:19:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Absolut! Hier ist die deutsche Übersetzung des Textes, formatiert in MediaWiki-Syntax.  = Einführung in Controller = Ein Controller ist eine Klasse, die verwendet wird, um eine Reihe von Aktionen (oder Aktionsmethoden) zu gruppieren. Aktionsmethoden führen eine bestimmte Operation aus, wenn eine Anfrage empfangen wird, und geben das Ergebnis (Antwort) zurück.  == Controller erstellen == Controller sollten eines oder beides erfüllen:  Der Klassenname…“</comment>
      <origin>240</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7728" sha1="j5h49xd4xt4ui5v1nuh0hun36s492fw" xml:space="preserve">Absolut! Hier ist die deutsche Übersetzung des Textes, formatiert in MediaWiki-Syntax.

= Einführung in Controller =
Ein Controller ist eine Klasse, die verwendet wird, um eine Reihe von Aktionen (oder Aktionsmethoden) zu gruppieren.
Aktionsmethoden führen eine bestimmte Operation aus, wenn eine Anfrage empfangen wird, und geben das Ergebnis (Antwort) zurück.

== Controller erstellen ==
Controller sollten eines oder beides erfüllen:

Der Klassenname sollte mit "Controller" enden. Bsp: &amp;lt;code&gt;HomeController&amp;lt;/code&gt;
Das &amp;lt;code&gt;[Controller]&amp;lt;/code&gt;-Attribut wird auf die Klasse selbst oder auf ihre Basisklasse angewendet.
&amp;lt;source lang="csharp"&gt;
[Controller]
class KlassenNameController
{
// Aktionsmethoden hier
}
&amp;lt;/source&gt;

'''Optional:'''

Ist eine öffentliche (&amp;lt;code&gt;public&amp;lt;/code&gt;) Klasse.
Erbt von &amp;lt;code&gt;Microsoft.AspNetCore.Mvc.Controller&amp;lt;/code&gt;.
== 'Routing' in Controllern aktivieren ==
'''AddControllers( )'''

&amp;lt;source lang="csharp"&gt;
builder.Services.AddControllers();
&amp;lt;/source&gt;
Fügt alle Controller als Dienste zur &amp;lt;code&gt;IServiceCollection&amp;lt;/code&gt; hinzu.
So kann auf sie zugegriffen werden, wenn ein bestimmter Endpunkt sie benötigt.

'''MapControllers()'''

&amp;lt;source lang="csharp"&gt;
app.MapControllers();
&amp;lt;/source&gt;
Fügt alle Aktionsmethoden als Endpunkte hinzu.
Dadurch entfällt die Notwendigkeit, die &amp;lt;code&gt;UseEndPoints()&amp;lt;/code&gt;-Methode zu verwenden, um Aktionsmethoden als Endpunkte hinzuzufügen.

== Verantwortlichkeiten von Controllern ==

'''Anfragen lesen''' ** Extrahieren von Datenwerten aus der Anfrage, wie z.B. Query-String-Parameter, Anfragekörper (Request Body), Anfrage-Cookies, Anfrage-Header usw.
'''Modelle aufrufen''' ** Aufrufen von Geschäftslogik-Methoden. Geschäftsoperationen sind in der Regel als 'Dienste' (Services) verfügbar.
'''Validierung''' ** Validieren eingehender Anfragedetails (Query-String-Parameter, Anfragekörper, Anfrage-Cookies, Anfrage-Header usw.)
'''Antwort vorbereiten''' ** Auswählen, welche Art von Antwort an den Client gesendet werden soll, und Vorbereiten der Antwort (Aktionsergebnis).
=== ContentResult ===
Ein &amp;lt;code&gt;ContentResult&amp;lt;/code&gt; kann jeden Antworttyp repräsentieren, basierend auf dem angegebenen MIME-Typ.
Der MIME-Typ repräsentiert den Typ des Inhalts, wie z.B. &amp;lt;code&gt;text/plain&amp;lt;/code&gt;, &amp;lt;code&gt;text/html&amp;lt;/code&gt;, &amp;lt;code&gt;application/json&amp;lt;/code&gt;, &amp;lt;code&gt;application/xml&amp;lt;/code&gt;, &amp;lt;code&gt;application/pdf&amp;lt;/code&gt; usw.

&amp;lt;source lang="csharp"&gt;
return new ContentResult() { Content = "Inhalt", ContentType = "Inhaltstyp" };
// [oder]
return Content("Inhalt", "Inhaltstyp");
&amp;lt;/source&gt;

=== JsonResult ===
Ein &amp;lt;code&gt;JsonResult&amp;lt;/code&gt; kann ein Objekt im JavaScript Object Notation (JSON)-Format repräsentieren.
Bsp: &amp;lt;code&gt;{ "firstName": "James", "lastName": "Smith", "age": 25 }&amp;lt;/code&gt;

&amp;lt;source lang="csharp"&gt;
return new JsonResult(ihr_objekt);
// [oder]
return Json(ihr_objekt);
&amp;lt;/source&gt;

== Dateiergebnisse (File Results) ==
Ein Dateiergebnis sendet den Inhalt einer Datei als Antwort.
Bsp: PDF-Datei, TXT-Datei, EXE-Datei, ZIP-Datei usw.

=== VirtualFileResult ===

&amp;lt;source lang="csharp"&gt;
return new VirtualFileResult("relativer/dateipfad", "inhaltstyp");
//oder
return File("relativer/dateipfad", "inhaltstyp");
&amp;lt;/source&gt;
Repräsentiert eine Datei innerhalb des WebRoot-Ordners (standardmäßig 'wwwroot').
Wird verwendet, wenn sich die Datei im WebRoot-Ordner befindet.

=== PhysicalFileResult ===
Repräsentiert eine Datei, die nicht notwendigerweise Teil des Projektordners ist.
Wird verwendet, wenn sich die Datei außerhalb des WebRoot-Ordners befindet.

&amp;lt;source lang="csharp"&gt;
return new PhysicalFileResult("absoluter/dateipfad", "inhaltstyp");
//oder
return PhysicalFile("absoluter/dateipfad", "inhaltstyp");
&amp;lt;/source&gt;

=== FileContentResult ===
Repräsentiert eine Datei aus einem &amp;lt;code&gt;byte[]&amp;lt;/code&gt;.
Wird verwendet, wenn ein Teil der Datei oder ein &amp;lt;code&gt;byte[]&amp;lt;/code&gt; aus einer anderen Datenquelle als Antwort gesendet werden muss.

&amp;lt;source lang="csharp"&gt;
return new FileContentResult(byte_array, "inhaltstyp");
//oder
return File(byte_array, "inhaltstyp");
&amp;lt;/source&gt;

== IActionResult ==
Es ist die übergeordnete Schnittstelle (Interface) für alle Aktionsergebnis-Klassen wie &amp;lt;code&gt;ContentResult&amp;lt;/code&gt;, &amp;lt;code&gt;JsonResult&amp;lt;/code&gt;, &amp;lt;code&gt;RedirectResult&amp;lt;/code&gt;, &amp;lt;code&gt;StatusCodeResult&amp;lt;/code&gt;, &amp;lt;code&gt;ViewResult&amp;lt;/code&gt; usw.
Indem der Rückgabetyp als &amp;lt;code&gt;IActionResult&amp;lt;/code&gt; angegeben wird, können Sie jeden der Untertypen von &amp;lt;code&gt;IActionResult&amp;lt;/code&gt; zurückgeben.

== Statuscode-Ergebnisse (Status Code Results) ==
Ein Statuscode-Ergebnis sendet eine leere Antwort mit dem angegebenen Statuscode.
Bsp: 200, 400, 401, 404, 500 usw.

=== StatusCodeResult ===
Repräsentiert eine Antwort mit dem angegebenen Statuscode.
Wird verwendet, wenn Sie einen bestimmten HTTP-Statuscode als Antwort senden möchten.

&amp;lt;source lang="csharp"&gt;
return new StatusCodeResult(status_code);
//oder
return StatusCode(status_code);
&amp;lt;/source&gt;

=== UnauthorizedResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '401 Unauthorized'.
Wird verwendet, wenn der Benutzer nicht autorisiert (nicht angemeldet) ist.

&amp;lt;source lang="csharp"&gt;
return new UnauthorizedResult();
//oder
return Unauthorized();
&amp;lt;/source&gt;

=== BadRequestResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '400 Bad Request'.
Wird verwendet, wenn die Anfragewerte ungültig sind (Validierungsfehler).

&amp;lt;source lang="csharp"&gt;
return new BadRequestResult();
//oder
return BadRequest();
&amp;lt;/source&gt;

=== NotFoundResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '404 Not Found'.
Wird verwendet, wenn die angeforderten Informationen auf dem Server nicht verfügbar sind.

&amp;lt;source lang="csharp"&gt;
return new NotFoundResult();
//oder
return NotFound();
&amp;lt;/source&gt;

== Umleitungsergebnisse (Redirect Results) ==
Ein Umleitungsergebnis sendet entweder eine HTTP 302- oder 301-Antwort an den Browser, um auf eine bestimmte Aktion oder URL umzuleiten.
Bsp: Umleitung von 'action1' zu 'action2'.

=== RedirectToActionResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer anderen Aktionsmethode, basierend auf dem Aktionsnamen und dem Controllernamen.

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new RedirectToActionResult("action", "controller", new { route_values });
//oder
return RedirectToAction("action", "controller", new { route_values });
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new RedirectToActionResult("action", "controller", new { route_values }, true);
//oder
return RedirectToActionPermanent("action", "controller", new { route_values });
&amp;lt;/source&gt;

=== LocalRedirectResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer anderen lokalen URL.

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new LocalRedirectResult("url");
//oder
return LocalRedirect("url");
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new LocalRedirectResult("url", true);
//oder
return LocalRedirectPermanent("url");
&amp;lt;/source&gt;

=== RedirectResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer beliebigen anderen URL (entweder innerhalb derselben Webanwendung oder einer anderen Webanwendung).

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new RedirectResult("url");
//oder
return Redirect("url");
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new RedirectResult("url", true);
//oder
return RedirectPermanent("url");
&amp;lt;/source&gt;</text>
      <sha1>j5h49xd4xt4ui5v1nuh0hun36s492fw</sha1>
    </revision>
    <revision>
      <id>241</id>
      <parentid>240</parentid>
      <timestamp>2025-06-23T09:27:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>241</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7639" sha1="58vuk5n91oe7ta41b7g2wp5x37svybf" xml:space="preserve">= Einführung in Controller =
Ein Controller ist eine Klasse, die verwendet wird, um eine Reihe von Aktionen (oder Aktionsmethoden) zu gruppieren.
Aktionsmethoden führen eine bestimmte Operation aus, wenn eine Anfrage empfangen wird, und geben das Ergebnis (Antwort) zurück.

== Controller erstellen ==
Controller sollten eines oder beides erfüllen:

Der Klassenname sollte mit "Controller" enden. Bsp: &amp;lt;code&gt;HomeController&amp;lt;/code&gt;
Das &amp;lt;code&gt;[Controller]&amp;lt;/code&gt;-Attribut wird auf die Klasse selbst oder auf ihre Basisklasse angewendet.
&amp;lt;source lang="csharp"&gt;
[Controller]
class KlassenNameController
{
// Aktionsmethoden hier
}
&amp;lt;/source&gt;

'''Optional:'''

Ist eine öffentliche (&amp;lt;code&gt;public&amp;lt;/code&gt;) Klasse.
Erbt von &amp;lt;code&gt;Microsoft.AspNetCore.Mvc.Controller&amp;lt;/code&gt;.
== 'Routing' in Controllern aktivieren ==
'''AddControllers( )'''

&amp;lt;source lang="csharp"&gt;
builder.Services.AddControllers();
&amp;lt;/source&gt;
Fügt alle Controller als Dienste zur &amp;lt;code&gt;IServiceCollection&amp;lt;/code&gt; hinzu.
So kann auf sie zugegriffen werden, wenn ein bestimmter Endpunkt sie benötigt.

'''MapControllers()'''

&amp;lt;source lang="csharp"&gt;
app.MapControllers();
&amp;lt;/source&gt;
Fügt alle Aktionsmethoden als Endpunkte hinzu.
Dadurch entfällt die Notwendigkeit, die &amp;lt;code&gt;UseEndPoints()&amp;lt;/code&gt;-Methode zu verwenden, um Aktionsmethoden als Endpunkte hinzuzufügen.

== Verantwortlichkeiten von Controllern ==

'''Anfragen lesen''' ** Extrahieren von Datenwerten aus der Anfrage, wie z.B. Query-String-Parameter, Anfragekörper (Request Body), Anfrage-Cookies, Anfrage-Header usw.
'''Modelle aufrufen''' ** Aufrufen von Geschäftslogik-Methoden. Geschäftsoperationen sind in der Regel als 'Dienste' (Services) verfügbar.
'''Validierung''' ** Validieren eingehender Anfragedetails (Query-String-Parameter, Anfragekörper, Anfrage-Cookies, Anfrage-Header usw.)
'''Antwort vorbereiten''' ** Auswählen, welche Art von Antwort an den Client gesendet werden soll, und Vorbereiten der Antwort (Aktionsergebnis).
=== ContentResult ===
Ein &amp;lt;code&gt;ContentResult&amp;lt;/code&gt; kann jeden Antworttyp repräsentieren, basierend auf dem angegebenen MIME-Typ.
Der MIME-Typ repräsentiert den Typ des Inhalts, wie z.B. &amp;lt;code&gt;text/plain&amp;lt;/code&gt;, &amp;lt;code&gt;text/html&amp;lt;/code&gt;, &amp;lt;code&gt;application/json&amp;lt;/code&gt;, &amp;lt;code&gt;application/xml&amp;lt;/code&gt;, &amp;lt;code&gt;application/pdf&amp;lt;/code&gt; usw.

&amp;lt;source lang="csharp"&gt;
return new ContentResult() { Content = "Inhalt", ContentType = "Inhaltstyp" };
// [oder]
return Content("Inhalt", "Inhaltstyp");
&amp;lt;/source&gt;

=== JsonResult ===
Ein &amp;lt;code&gt;JsonResult&amp;lt;/code&gt; kann ein Objekt im JavaScript Object Notation (JSON)-Format repräsentieren.
Bsp: &amp;lt;code&gt;{ "firstName": "James", "lastName": "Smith", "age": 25 }&amp;lt;/code&gt;

&amp;lt;source lang="csharp"&gt;
return new JsonResult(ihr_objekt);
// [oder]
return Json(ihr_objekt);
&amp;lt;/source&gt;

== Dateiergebnisse (File Results) ==
Ein Dateiergebnis sendet den Inhalt einer Datei als Antwort.
Bsp: PDF-Datei, TXT-Datei, EXE-Datei, ZIP-Datei usw.

=== VirtualFileResult ===

&amp;lt;source lang="csharp"&gt;
return new VirtualFileResult("relativer/dateipfad", "inhaltstyp");
//oder
return File("relativer/dateipfad", "inhaltstyp");
&amp;lt;/source&gt;
Repräsentiert eine Datei innerhalb des WebRoot-Ordners (standardmäßig 'wwwroot').
Wird verwendet, wenn sich die Datei im WebRoot-Ordner befindet.

=== PhysicalFileResult ===
Repräsentiert eine Datei, die nicht notwendigerweise Teil des Projektordners ist.
Wird verwendet, wenn sich die Datei außerhalb des WebRoot-Ordners befindet.

&amp;lt;source lang="csharp"&gt;
return new PhysicalFileResult("absoluter/dateipfad", "inhaltstyp");
//oder
return PhysicalFile("absoluter/dateipfad", "inhaltstyp");
&amp;lt;/source&gt;

=== FileContentResult ===
Repräsentiert eine Datei aus einem &amp;lt;code&gt;byte[]&amp;lt;/code&gt;.
Wird verwendet, wenn ein Teil der Datei oder ein &amp;lt;code&gt;byte[]&amp;lt;/code&gt; aus einer anderen Datenquelle als Antwort gesendet werden muss.

&amp;lt;source lang="csharp"&gt;
return new FileContentResult(byte_array, "inhaltstyp");
//oder
return File(byte_array, "inhaltstyp");
&amp;lt;/source&gt;

== IActionResult ==
Es ist die übergeordnete Schnittstelle (Interface) für alle Aktionsergebnis-Klassen wie &amp;lt;code&gt;ContentResult&amp;lt;/code&gt;, &amp;lt;code&gt;JsonResult&amp;lt;/code&gt;, &amp;lt;code&gt;RedirectResult&amp;lt;/code&gt;, &amp;lt;code&gt;StatusCodeResult&amp;lt;/code&gt;, &amp;lt;code&gt;ViewResult&amp;lt;/code&gt; usw.
Indem der Rückgabetyp als &amp;lt;code&gt;IActionResult&amp;lt;/code&gt; angegeben wird, können Sie jeden der Untertypen von &amp;lt;code&gt;IActionResult&amp;lt;/code&gt; zurückgeben.

== Statuscode-Ergebnisse (Status Code Results) ==
Ein Statuscode-Ergebnis sendet eine leere Antwort mit dem angegebenen Statuscode.
Bsp: 200, 400, 401, 404, 500 usw.

=== StatusCodeResult ===
Repräsentiert eine Antwort mit dem angegebenen Statuscode.
Wird verwendet, wenn Sie einen bestimmten HTTP-Statuscode als Antwort senden möchten.

&amp;lt;source lang="csharp"&gt;
return new StatusCodeResult(status_code);
//oder
return StatusCode(status_code);
&amp;lt;/source&gt;

=== UnauthorizedResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '401 Unauthorized'.
Wird verwendet, wenn der Benutzer nicht autorisiert (nicht angemeldet) ist.

&amp;lt;source lang="csharp"&gt;
return new UnauthorizedResult();
//oder
return Unauthorized();
&amp;lt;/source&gt;

=== BadRequestResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '400 Bad Request'.
Wird verwendet, wenn die Anfragewerte ungültig sind (Validierungsfehler).

&amp;lt;source lang="csharp"&gt;
return new BadRequestResult();
//oder
return BadRequest();
&amp;lt;/source&gt;

=== NotFoundResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '404 Not Found'.
Wird verwendet, wenn die angeforderten Informationen auf dem Server nicht verfügbar sind.

&amp;lt;source lang="csharp"&gt;
return new NotFoundResult();
//oder
return NotFound();
&amp;lt;/source&gt;

== Umleitungsergebnisse (Redirect Results) ==
Ein Umleitungsergebnis sendet entweder eine HTTP 302- oder 301-Antwort an den Browser, um auf eine bestimmte Aktion oder URL umzuleiten.
Bsp: Umleitung von 'action1' zu 'action2'.

=== RedirectToActionResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer anderen Aktionsmethode, basierend auf dem Aktionsnamen und dem Controllernamen.

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new RedirectToActionResult("action", "controller", new { route_values });
//oder
return RedirectToAction("action", "controller", new { route_values });
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new RedirectToActionResult("action", "controller", new { route_values }, true);
//oder
return RedirectToActionPermanent("action", "controller", new { route_values });
&amp;lt;/source&gt;

=== LocalRedirectResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer anderen lokalen URL.

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new LocalRedirectResult("url");
//oder
return LocalRedirect("url");
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new LocalRedirectResult("url", true);
//oder
return LocalRedirectPermanent("url");
&amp;lt;/source&gt;

=== RedirectResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer beliebigen anderen URL (entweder innerhalb derselben Webanwendung oder einer anderen Webanwendung).

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new RedirectResult("url");
//oder
return Redirect("url");
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new RedirectResult("url", true);
//oder
return RedirectPermanent("url");
&amp;lt;/source&gt;</text>
      <sha1>58vuk5n91oe7ta41b7g2wp5x37svybf</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Model Binding</title>
    <ns>0</ns>
    <id>60</id>
    <revision>
      <id>242</id>
      <timestamp>2025-06-23T09:39:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Model Binding == '''Model Binding''' ist eine Funktion von ASP.NET Core, die Werte aus HTTP-Anfragen liest und sie als Argumente an die Aktionsmethode übergibt.  === QueryString vs. RouteData === ==== [FromQuery] und [FromRoute] ====  '''[FromQuery]''' &lt;syntaxhighlight lang="csharp"&gt; // liest den Wert nur aus dem Query-String public IActionResult ActionMethodName( [FromQuery] type parameter) { } &lt;/syntaxhighlight&gt;  '''[FromRoute]''' &lt;syntaxhighlight l…“</comment>
      <origin>242</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8559" sha1="n5v8ja3onk8votdzuvwav8aghxwade0" xml:space="preserve">== Model Binding ==
'''Model Binding''' ist eine Funktion von ASP.NET Core, die Werte aus HTTP-Anfragen liest und sie als Argumente an die Aktionsmethode übergibt.

=== QueryString vs. RouteData ===
==== [FromQuery] und [FromRoute] ====

'''[FromQuery]'''
&lt;syntaxhighlight lang="csharp"&gt;
// liest den Wert nur aus dem Query-String
public IActionResult ActionMethodName( [FromQuery] type parameter)
{
}
&lt;/syntaxhighlight&gt;

'''[FromRoute]'''
&lt;syntaxhighlight lang="csharp"&gt;
// liest den Wert nur aus den Routenparametern
public IActionResult ActionMethodName( [FromRoute] type parameter)
{
}
&lt;/syntaxhighlight&gt;

=== Modelle ===
Ein '''Modell''' ist eine Klasse, die die Struktur von Daten (als Eigenschaften) darstellt, die Sie von der Anfrage empfangen und/oder an die Antwort senden möchten.
Auch bekannt als '''POCO''' (Plain Old CLR Objects).

==== Modell ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName
{
  public type PropertyName { get; set; }
}
&lt;/syntaxhighlight&gt;

=== form-urlencoded und form-data ===
==== form-urlencoded (Standard) ====
'''Request-Header'''
&lt;pre&gt;
Content-Type: application/x-www-form-urlencoded
&lt;/pre&gt;

'''Request-Body'''
&lt;pre&gt;
param1=value1&amp;param2=value2
&lt;/pre&gt;

==== form-data ====
'''Request-Header'''
&lt;pre&gt;
Content-Type: multipart/form-data
&lt;/pre&gt;

'''Request-Body'''
&lt;pre&gt;
--------------------------d74496d66958873e
Content-Disposition: form-data; name="param1"
value1
--------------------------d74496d66958873e
Content-Disposition: form-data; name="param2"
value2
&lt;/pre&gt;

=== Modellvalidierung ===
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName
{
  [Attribute] // wendet eine Validierungsregel auf diese Eigenschaft an
  public type PropertyName { get; set; }
}
&lt;/syntaxhighlight&gt;

==== ModelState ====
* '''IsValid''': Gibt an, ob mindestens ein Validierungsfehler vorliegt oder nicht (&lt;code&gt;true&lt;/code&gt; oder &lt;code&gt;false&lt;/code&gt;).
* '''Values''': Enthält den Wert jeder Modelleigenschaft mit der entsprechenden "Errors"-Eigenschaft, die eine Liste der Validierungsfehler dieser Modelleigenschaft enthält.
* '''ErrorCount''': Gibt die Anzahl der Fehler zurück.

==== Validierungsattribute ====
; [Required(ErrorMessage = "Wert")]
: Gibt an, dass der Eigenschaftswert erforderlich ist (darf nicht leer oder null sein).

; [StringLength(int maximumLength, MinimumLength = Wert, ErrorMessage = "Wert")]
: Gibt die minimale und maximale Länge (Anzahl der Zeichen) an, die in der Zeichenfolge zulässig ist.

; [Range(int minimum, int maximum, ErrorMessage = "Wert")]
: Gibt den minimal und maximal zulässigen numerischen Wert an.

; [RegularExpression(string pattern, ErrorMessage = "Wert")]
: Gibt das gültige Muster (regulärer Ausdruck) an.

; [EmailAddress(ErrorMessage = "Wert")]
: Gibt an, dass der Wert eine gültige E-Mail-Adresse sein muss.

; [Phone(ErrorMessage = "Wert")]
: Gibt an, dass der Wert eine gültige Telefonnummer sein muss. Bsp.: &lt;code&gt;(999)-999-9999&lt;/code&gt; oder &lt;code&gt;9876543210&lt;/code&gt;

; [Compare(string otherProperty, ErrorMessage = "Wert")]
: Gibt an, dass die Werte der aktuellen Eigenschaft und einer anderen Eigenschaft übereinstimmen müssen.

; [Url(ErrorMessage = "Wert")]
: Gibt an, dass der Wert eine gültige URL (Website-Adresse) sein muss. Bsp.: &lt;code&gt;http://www.example.com&lt;/code&gt;

; [ValidateNever]
: Gibt an, dass die Eigenschaft nicht validiert werden soll (schließt die Eigenschaft von der Modellvalidierung aus).

=== Benutzerdefinierte Validierungen ===
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName : ValidationAttribute
{
  public override ValidationResult? IsValid(object? value, ValidationContext validationContext)
  {
    // return ValidationResult.Success;
    // [oder] return new ValidationResult("Fehlermeldung");
  }
}
&lt;/syntaxhighlight&gt;

* '''ValidationAttribute''': Basisklasse für alle Validierungsattribute wie &lt;code&gt;RequiredAttribute&lt;/code&gt;, &lt;code&gt;RegularExpressionAttribute&lt;/code&gt;, &lt;code&gt;RangeAttribute&lt;/code&gt;, &lt;code&gt;StringLengthAttribute&lt;/code&gt;, &lt;code&gt;CompareAttribute&lt;/code&gt; usw. Stellt Eigenschaften wie &lt;code&gt;ErrorMessage&lt;/code&gt; &amp; Methoden wie &lt;code&gt;Validate()&lt;/code&gt;, &lt;code&gt;IsValid()&lt;/code&gt; etc. bereit.

* '''ValidationContext''': Dient als Parameter für die &lt;code&gt;IsValid()&lt;/code&gt;-Methode von benutzerdefinierten Validierungsattribut-Klassen. Stellt Eigenschaften wie &lt;code&gt;ObjectType&lt;/code&gt;, &lt;code&gt;ObjectInstance&lt;/code&gt; bereit.

==== Benutzerdefinierte Validierungen mit mehreren Eigenschaften ====
==== IValidatableObject ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName : IValidatableObject
{
  // Modelleigenschaften hier
 
  public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)
  {
    if (Bedingung)
    {
      yield return new ValidationResult("Fehlermeldung");
    }
  }
}
&lt;/syntaxhighlight&gt;

* '''IValidatableObject''': Basis-Interface für Modellklassen mit Validierung. Stellt eine Methode namens &lt;code&gt;Validate()&lt;/code&gt; zur Verfügung, um Validierungslogik auf Klassenebene zu definieren. Die &lt;code&gt;Validate()&lt;/code&gt;-Methode wird ausgeführt, nachdem alle Validierungen auf Eigenschaftsebene ausgeführt wurden; sie wird jedoch nicht ausgeführt, wenn mindestens eine Validierung auf Eigenschaftsebene einen Fehler ergibt.

* '''ValidationContext''': Dient als Parameter für die &lt;code&gt;Validate()&lt;/code&gt;-Methode von Modellklassen, die &lt;code&gt;IValidatableObject&lt;/code&gt; implementieren. Stellt Eigenschaften wie &lt;code&gt;ObjectType&lt;/code&gt;, &lt;code&gt;ObjectInstance&lt;/code&gt; bereit.

=== [Bind] und [BindNever] ===
==== [Bind] ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassNameController
{
  public IActionResult ActionMethodName( [Bind(nameof(ClassName.PropertyName), nameof(ClassName.PropertyName) )]  ClassName parameterName)
  {
  }
}
&lt;/syntaxhighlight&gt;
Das '''[Bind]'''-Attribut gibt an, dass nur die angegebenen Eigenschaften in die Modellbindung einbezogen werden sollen. Verhindert Over-Posting (das Senden von Werten an unerwartete Eigenschaften), insbesondere in "Create"-Szenarien.

==== [BindNever] ====
&lt;syntaxhighlight lang="csharp"&gt;
class ModelClassName
{
  [BindNever]
  public type PropertyName { get; set; }
}
&lt;/syntaxhighlight&gt;
Das '''[BindNever]'''-Attribut gibt an, dass die angegebene Eigenschaft NICHT in die Modellbindung einbezogen werden soll. Nützlich, wenn Sie weniger Eigenschaften von der Modellbindung ausschließen müssen.

=== [FromBody] ===
&lt;syntaxhighlight lang="csharp"&gt;
// ermöglicht es den Input-Formattern, Daten nur aus dem Request-Body (als JSON, XML oder benutzerdefiniert) zu lesen
public IActionResult ActionMethodName( [FromBody] type parameter)
{
}
&lt;/syntaxhighlight&gt;

=== Input-Formatter ===

=== Benutzerdefinierte Model-Binder ===
==== Benutzerdefinierter Model-Binder ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName : IModelBinder
{
  public Task BindModelAsync(ModelBindingContext bindingContext)
  {
    // liest den Wert aus der Anfrage
    bindingContext.ValueProvider.GetValue("FirstName");
 
    // gibt das Modellobjekt zurück, nachdem die Daten aus der Anfrage gelesen wurden
    bindingContext.Result = ModelBindingResult.Success(your_object);
  }
}
&lt;/syntaxhighlight&gt;

* '''IModelBinder''': Basis-Interface für alle benutzerdefinierten Model-Binder. Stellt eine Methode namens &lt;code&gt;BindModelAsync&lt;/code&gt; zur Verfügung, um die Logik für das Binden (Lesen) von Daten aus der Anfrage und das Erstellen eines Modellobjekts zu definieren, das als Parameter in der Aktionsmethode empfangen wird.

* '''ModelBindingContext''': Dient als Parameter für die &lt;code&gt;BindModelAsync()&lt;/code&gt;-Methode von benutzerdefinierten Model-Binder-Klassen. Stellt Eigenschaften wie &lt;code&gt;HttpContext&lt;/code&gt;, &lt;code&gt;ModelState&lt;/code&gt;, &lt;code&gt;ValueProvider&lt;/code&gt;, &lt;code&gt;Result&lt;/code&gt; etc. bereit.

==== Benutzerdefinierte Model-Binder-Provider ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName : IModelBinderProvider
{
  public IModelBinder GetBinder(ModelBinderProviderContext providerContext)
  {
    // gibt den Typ der aufzurufenden benutzerdefinierten Model-Binder-Klasse zurück
    return new BinderTypeModelBinder(typeof(YourModelBinderClassName));
  }
}
&lt;/syntaxhighlight&gt;

* '''IModelBinderProvider''': Basis-Interface für alle benutzerdefinierten Model-Binder-Provider. Stellt eine Methode namens &lt;code&gt;GetBinder&lt;/code&gt; zur Verfügung, um den Typ der benutzerdefinierten Model-Binder-Klasse zurückzugeben.

* '''ModelBinderProviderContext''': Dient als Parameter für die &lt;code&gt;GetBinder()&lt;/code&gt;-Methode von benutzerdefinierten Model-Binder-Provider-Klassen. Stellt Eigenschaften wie &lt;code&gt;BindingInfo&lt;/code&gt;, &lt;code&gt;Services&lt;/code&gt; etc. bereit.</text>
      <sha1>n5v8ja3onk8votdzuvwav8aghxwade0</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Razor Views</title>
    <ns>0</ns>
    <id>61</id>
    <revision>
      <id>243</id>
      <timestamp>2025-06-23T10:20:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ -----  = '''Kurs: Professionelle Webentwicklung mit ASP.NET Core MVC''' =  Willkommen zu diesem Kurs über das Model-View-Controller (MVC) Architekturmuster in ASP.NET Core! Hier lernen Sie, wie Sie saubere, wartbare und skalierbare Webanwendungen entwickeln, indem Sie die Logik Ihrer Anwendung klar strukturieren.  -----  == '''Lektion 1: Das Fundament – Das MVC-Architekturmuster''' ==  Das Herzstück moderner Webanwendungen ist eine saubere Architektu…“</comment>
      <origin>243</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7957" sha1="j3e06d2obhz8n8g5mzuahyw5q27yvxh" xml:space="preserve">
-----

= '''Kurs: Professionelle Webentwicklung mit ASP.NET Core MVC''' =

Willkommen zu diesem Kurs über das Model-View-Controller (MVC) Architekturmuster in ASP.NET Core! Hier lernen Sie, wie Sie saubere, wartbare und skalierbare Webanwendungen entwickeln, indem Sie die Logik Ihrer Anwendung klar strukturieren.

-----

== '''Lektion 1: Das Fundament – Das MVC-Architekturmuster''' ==

Das Herzstück moderner Webanwendungen ist eine saubere Architektur. Das Model-View-Controller (MVC) Muster ist ein bewährter Ansatz, der den Code in drei logische Hauptkomponenten unterteilt.

'''Ziele und Vorteile:'''
* '''Klare Trennung der Verantwortlichkeiten (Separation of Concerns):''' Jede Komponente hat genau eine Aufgabe. Das macht den Code verständlicher und Fehler leichter auffindbar.
* '''Parallele Entwicklung:''' Teams können gleichzeitig am Datenmodell, der Benutzeroberfläche und der Anwendungslogik arbeiten.
* '''Einfacheres Testen:''' Jede Komponente kann isoliert getestet werden (Unit-Testing), was die Qualität Ihrer Software enorm steigert.
* '''Wartbarkeit:''' Änderungen in einer Komponente (z. B. im Design der View) haben minimale bis keine Auswirkungen auf die anderen Komponenten.

Das wichtigste Prinzip ist die Unabhängigkeit des '''Models'''. Es kennt weder die View noch den Controller und kann daher völlig eigenständig entwickelt und getestet werden.

-----

== '''Lektion 2: Die drei Hauptakteure und ihre Rollen''' ==

Um das MVC-Muster zu verstehen, müssen wir die Verantwortlichkeiten der einzelnen Komponenten kennen. Stellen Sie sich den Ablauf einer Anfrage vor:

# '''Der Controller: Der Dirigent'''
#* Empfängt die HTTP-Anfrage des Benutzers (z. B. das Aufrufen einer URL).
#* Er ist der Koordinator: Er ruft das Geschäftsmodell auf, um Daten abzufragen oder zu bearbeiten.
#* Anschließend wählt er die passende '''View''' aus, um die Daten darzustellen.

# '''Das Geschäftsmodell (Model): Das Gehirn'''
#* Enthält die gesamte Geschäftslogik und die Daten Ihrer Anwendung.
#* Führt Operationen aus, wie z. B. das Lesen und Schreiben von Daten in einer Datenbank.
#* Es ist die "Quelle der Wahrheit" und gibt die verarbeiteten Daten an den Controller zurück. Es hat keinerlei Kenntnis von der Benutzeroberfläche.

# '''Die View: Das Gesicht'''
#* Ist für die reine Darstellung der Daten verantwortlich (HTML-Code).
#* Sie empfängt die vom Controller vorbereiteten Daten und stellt sie dar.
#* Die View selbst enthält keine Geschäftslogik. Sie sollte nur Code enthalten, der für die Präsentation notwendig ist.

'''Der Datenfluss im Überblick:'''  
Anfrage → '''Controller''' → Ruft '''Model''' auf → Model liefert Daten zurück → '''Controller''' übergibt Daten an '''View''' → View wird gerendert und als Antwort an den Benutzer gesendet.

-----

== '''Lektion 3: Dynamische Ansichten mit der Razor View Engine''' ==

Eine View ist mehr als nur statisches HTML. Mit der Razor View Engine können wir C#-Code direkt in unsere &lt;code&gt;.cshtml&lt;/code&gt;-Dateien einbetten, um dynamische Inhalte zu erzeugen.

* Das &lt;code&gt;@&lt;/code&gt;-Zeichen leitet Razor-Syntax ein.
* Razor ermöglicht es uns, Daten aus unserem Modell direkt im HTML auszugeben und Logik für die Darstellung zu implementieren.

'''Wichtige Razor-Konstrukte:'''
* '''Ausdrücke (&lt;code&gt;@Model.Username&lt;/code&gt;):''' Geben den Wert einer Variable oder Eigenschaft aus.
* '''Codeblöcke (&lt;code&gt;@{ ... }&lt;/code&gt;):''' Führen eine oder mehrere Zeilen C#-Code aus.
* '''Kontrollstrukturen:''' Sie können bekannte C#-Strukturen wie &lt;code&gt;if-else&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt; und &lt;code&gt;for&lt;/code&gt; verwenden, um die Darstellung zu steuern.
* '''Lokale Funktionen:''' Sie können kleine Hilfsfunktionen direkt in Ihrer View definieren.

'''Wichtig:''' Die Logik in einer View sollte sich ausschließlich auf die '''Präsentation''' beschränken! Komplexe Berechnungen gehören in das Model oder den Controller.

-----

== '''Lektion 4: Daten vom Controller an die View übergeben''' ==

Doch wie gelangen die Daten vom Controller in die View? Dafür gibt es mehrere Mechanismen. Wir beginnen mit zwei einfachen, aber "schwach typisierten" Ansätzen.

=== '''1. ViewData''' ===

&lt;code&gt;ViewData&lt;/code&gt; ist ein Wörterbuch-Objekt (&lt;code&gt;Dictionary&amp;lt;string, object&amp;gt;&lt;/code&gt;), in dem Sie Daten unter einem bestimmten Schlüssel ablegen können.

* '''Im Controller:''' &lt;code&gt;ViewData["Titel"] = "Produktliste";&lt;/code&gt;
* '''In der View:''' &lt;code&gt;&amp;lt;h1&amp;gt;@ViewData["Titel"]&amp;lt;/h1&amp;gt;&lt;/code&gt;

Da die Werte als &lt;code&gt;object&lt;/code&gt; gespeichert werden, müssen Sie sie bei komplexeren Datentypen oft umwandeln (casten), was fehleranfällig sein kann.  
&lt;code&gt;@(ViewData["Produkt"] as Produkt).Name&lt;/code&gt;

=== '''2. ViewBag''' ===

&lt;code&gt;ViewBag&lt;/code&gt; ist ein dynamisches Objekt, das im Hintergrund &lt;code&gt;ViewData&lt;/code&gt; verwendet, aber eine einfachere Syntax bietet.

* '''Im Controller:''' &lt;code&gt;ViewBag.Titel = "Produktliste";&lt;/code&gt;
* '''In der View:''' &lt;code&gt;&amp;lt;h1&amp;gt;@ViewBag.Titel&amp;lt;/h1&amp;gt;&lt;/code&gt;

'''Vorteile von &lt;code&gt;ViewBag&lt;/code&gt;:'''
* Einfachere, sauberere Syntax (&lt;code&gt;ViewBag.Eigenschaft&lt;/code&gt;).
* Kein explizites Umwandeln (Casting) notwendig.

'''Nachteil beider Ansätze:''' Es gibt keine Überprüfung zur Kompilierzeit. Ein Tippfehler im Schlüssel (&lt;code&gt;ViewData["Titl"]&lt;/code&gt;) oder im Eigenschaftsnamen (&lt;code&gt;ViewBag.Titl&lt;/code&gt;) wird erst zur Laufzeit als Fehler bemerkt.

-----

== '''Lektion 5: Der Königsweg – Stark typisierte Views''' ==

Für robuste und wartbare Anwendungen ist die Verwendung von '''stark typisierten Views''' der empfohlene Standard. Eine stark typisierte View ist fest an eine bestimmte Modellklasse gebunden.

'''Und so funktioniert's:'''

# '''Im Controller:''' Sie erstellen eine Instanz Ihres Modells und übergeben diese direkt an die &lt;code&gt;View()&lt;/code&gt;-Methode.
&lt;syntaxhighlight lang="csharp"&gt;
public IActionResult Details(int id)
{
    Produkt meinProdukt = _db.Produkte.Find(id);
    return View(meinProdukt); // Übergabe des gesamten Objekts
}
&lt;/syntaxhighlight&gt;

# '''In der View:''' Sie deklarieren mit der &lt;code&gt;@model&lt;/code&gt;-Direktive, welchen Datentyp die View erwartet.
&lt;syntaxhighlight lang="csharp"&gt;
@model Projekt.Modelle.Produkt

&lt;h1&gt;@Model.Name&lt;/h1&gt;
&lt;p&gt;Preis: @Model.Preis.ToString("c")&lt;/p&gt;
&lt;p&gt;Beschreibung: @Model.Beschreibung&lt;/p&gt;
&lt;/syntaxhighlight&gt;

'''Die unschlagbaren Vorteile:'''
* '''IntelliSense:''' Der Editor kennt Ihr Modell und schlägt Ihnen die verfügbaren Eigenschaften vor.
* '''Kompilierzeit-Sicherheit:''' Tippfehler bei Eigenschaftsnamen (&lt;code&gt;@Model.Naem&lt;/code&gt;) führen zu einem Kompilierfehler und werden sofort entdeckt.
* '''Klarheit:''' Es ist sofort ersichtlich, welche Daten diese View für ihre Darstellung benötigt.

-----

== '''Lektion 6: Code organisieren und wiederverwenden''' ==

Für größere Projekte sind Struktur und Wiederverwendbarkeit entscheidend.

=== '''ViewImports.cshtml''' ===

Diese spezielle Datei im &lt;code&gt;Views&lt;/code&gt;-Ordner ist der perfekte Ort, um Namespaces zu importieren (&lt;code&gt;@using Projekt.Modelle&lt;/code&gt;) oder Tag Helper zu registrieren, die in vielen Views benötigt werden. Der Inhalt von &lt;code&gt;ViewImports.cshtml&lt;/code&gt; wird automatisch auf alle Views im selben Ordner und in Unterordnern angewendet.

=== '''Geteilte Views (Shared Views)''' ===

Views, die von mehreren Controllern verwendet werden (z. B. Layout-Dateien, Navigationsleisten, Fehlerseiten), sollten im Ordner &lt;code&gt;/Views/Shared&lt;/code&gt; abgelegt werden. Wenn ein Controller eine View anfordert, sucht das Framework zuerst im spezifischen Ordner des Controllers (&lt;code&gt;/Views/ControllerName&lt;/code&gt;) und danach im &lt;code&gt;/Views/Shared&lt;/code&gt;-Ordner.

=== '''Die View-Auflösung''' ===

Zusammenfassend sucht ASP.NET Core eine View &lt;code&gt;MeineView&lt;/code&gt; für den &lt;code&gt;HomeController&lt;/code&gt; in dieser Reihenfolge:
# &lt;code&gt;/Views/Home/MeineView.cshtml&lt;/code&gt;
# &lt;code&gt;/Views/Shared/MeineView.cshtml&lt;/code&gt;</text>
      <sha1>j3e06d2obhz8n8g5mzuahyw5q27yvxh</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:HTTP Code Übungen</title>
    <ns>0</ns>
    <id>62</id>
    <revision>
      <id>244</id>
      <timestamp>2025-06-23T19:29:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Übungen zu HTTP-Protokoll und ASP.NET Core ==  === Übung 1: HTTP-Antwort beobachten im Browser === # Öffne deine Beispiel-Webseite in Chrome oder Firefox. # Aktiviere die Entwickler-Tools und wechsle zum Netzwerk-Tab (siehe §19.6 in LaunchCode) :contentReference[oaicite:1]{index=1}. # Lade die Seite neu und identifiziere: : * Eine GET‑Anfrage für das HTML-Dokument : * Eine GET‑Anfrage für eine CSS-Datei : * Eine GET‑Anfrage für ein Bild #…“</comment>
      <origin>244</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2914" sha1="eooowtc0pkx5v6lz5tz3yvhix2lo4n1" xml:space="preserve">== Übungen zu HTTP-Protokoll und ASP.NET Core ==

=== Übung 1: HTTP-Antwort beobachten im Browser ===
# Öffne deine Beispiel-Webseite in Chrome oder Firefox.
# Aktiviere die Entwickler-Tools und wechsle zum Netzwerk-Tab (siehe §19.6 in LaunchCode) :contentReference[oaicite:1]{index=1}.
# Lade die Seite neu und identifiziere:
: * Eine GET‑Anfrage für das HTML-Dokument
: * Eine GET‑Anfrage für eine CSS-Datei
: * Eine GET‑Anfrage für ein Bild
# Notiere für jede Anfrage:
: * Statuscode, z. B. 200 oder 404
: * Content-Type und Größe (Bytes)
# Experimentiere:
: * Ändere im HTML die URL einer CSS-Datei auf einen falschen Namen
: * Lade die Seite erneut und erkläre, wie sich das Verhalten ändert :contentReference[oaicite:2]{index=2}

=== Übung 2: HTTP‑Response‑Analyse ===
Analysiere diese Beispiel-Antwort:

&lt;pre&gt;
HTTP/1.1 404 Not Found
Date: Sat, 21 Jun 2025 20:38:53 +0000
Server: Apache/2.2.3 (CentOS)
Content-Length: 67365
Keep-Alive: timeout=37, max=95
Connection: Keep-alive
Content-Type: text/html
&lt;/pre&gt;

Beantworte:
# Welche HTTP-Version wird verwendet?
# Wurde der Inhalt erfolgreich gesendet?
# Wie groß ist das Dokument?
# Ist die Verbindung persistent?
# Welcher Medientyp wird zurückgesendet?
# Welche Server-Software und Version?
# Ändert sich der ETag bei neuen Ressourcenversionen?
(Lösungsvorlage siehe UMass-Quelle) :contentReference[oaicite:3]{index=3}

=== Übung 3: Minimal-HTTP‑Server mit ASP.NET Core ===
Erstelle eine minimalistische ASP.NET Core‑App (ohne MVC oder Razor), die:
* Auf GET-Anfragen an `/` antwortet mit: `Hello, World!`
* Angabe:
&lt;pre&gt;
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

app.Run(async context =&gt; {
    context.Response.Headers["Content-Type"] = "text/plain";
    await context.Response.WriteAsync("Hello, World!");
});

app.Run();
&lt;/pre&gt;

=== Übung 4: Antwort-Header anpassen ===
Erweitere Übung 3 so, dass:
* Ein eigener Header `X‑Powered‑By` mit Wert `MyServer` gesetzt wird.
* Der Content-Type auf `text/html` geändert wird und das HTML `&lt;h1&gt;Hallo Welt!&lt;/h1&gt;` zurückgeliefert wird.

=== Übung 5: HTTP‑Statuscodes dynamisch setzen ===
Erstelle eine Route `/status`, die anhand eines Query‑Parameters `code` den Status festlegt:

* Beispielaufruf: `/status?code=201`
* Dein Code:
&lt;pre&gt;
var code = int.Parse(context.Request.Query["code"]);
context.Response.StatusCode = code;
await context.Response.WriteAsync($"Status: {code}");
&lt;/pre&gt;

Teste mit verschiedenen Codes wie 200, 400, 404, 500.

=== Übung 6: GET‑Parameter auslesen ===
Baue eine Route `/hello`, die einen Query‑Parameter `name` erwartet:

* Beispiel: `/hello?name=Alice`
* Antwort: `&lt;p&gt;Hello, Alice!&lt;/p&gt;`
* Beispiel-Code:
&lt;pre&gt;
if (context.Request.Path == "/hello" &amp;&amp; context.Request.Method == "GET") {
  var name = context.Request.Query["name"];
  await context.Response.WriteAsync($"&lt;p&gt;Hello, {name}!&lt;/p&gt;");
}</text>
      <sha1>eooowtc0pkx5v6lz5tz3yvhix2lo4n1</sha1>
    </revision>
    <revision>
      <id>245</id>
      <parentid>244</parentid>
      <timestamp>2025-06-23T19:38:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>245</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5731" sha1="nto0det86hxyvdjb9lwbprrqolkdb78" xml:space="preserve">= HTTP-Protokoll (Hypertext Transfer Protocol) =

== Überblick ==
* HTTP ist ein zustandsloses Protokoll zur Übertragung von Hypertext (z. B. HTML) im Internet.
* Client-Server-Modell: Der Client (z. B. Browser) sendet Anfragen, der Server antwortet.
* Jede Anfrage ist unabhängig von vorherigen (stateless).

== Anfragemodell ==
* '''Client Request''': Der Client sendet eine HTTP-Anfrage.
* '''Server Response''': Der Server verarbeitet die Anfrage und antwortet mit Ressourcen oder Fehlermeldungen.

== HTTP-Server ==
'''Definition''': Software, die HTTP-Anfragen verarbeitet und Antworten liefert.

'''Beispiele''':
* Apache HTTP Server
* Nginx
* Microsoft IIS
* Kestrel (ASP.NET Core)

'''Kestrel''':
* Cross-Platform Webserver in ASP.NET Core
* Leichtgewichtig und leistungsfähig

== Ablauf von Anfrage und Antwort mit Kestrel ==
# Client sendet Anfrage
# Kestrel empfängt und leitet sie an Middleware weiter
# Middleware verarbeitet Anfrage
# Anwendung erzeugt Antwort
# Kestrel sendet Antwort zurück an den Client

== Browser &amp; HTTP ==
* Browser fordern HTML, CSS, JS, Bilder über HTTP an
* Klick auf Link → HTTP-Request → Server → Response → Darstellung im Browser

== HTTP-Anfragen in Chrome Dev Tools beobachten ==
* Öffnen: F12 oder Ctrl+Shift+I (Cmd+Option+I auf Mac)
* Reiter „Network“ → Details zu:
** Headers
** Response
** Timing

== Aufbau einer HTTP-Antwort ==
'''Format''':
 HTTP/1.1 200 OK
 Content-Type: text/html
 Content-Length: 137

 &lt;html&gt;
 &lt;body&gt;
 &lt;h1&gt;Hello, World!&lt;/h1&gt;
 &lt;/body&gt;
 &lt;/html&gt;

'''Wichtige Header''':
* Content-Type: Typ der Ressource (z. B. text/html)
* Content-Length: Größe der Antwort
* Server: Infos zum Server
* Set-Cookie: Setzt Cookies im Client
* Cache-Control: Caching-Strategie

== Kestrel Standard-Header ==
* Content-Type: z. B. text/html, application/json
* Server: „Kestrel“
* Date: Zeitstempel der Antwort

== HTTP-Statuscodes ==
=== Kategorien ===
* '''1xx''': Information
* '''2xx''': Erfolg
* '''3xx''': Weiterleitung
* '''4xx''': Clientfehler
* '''5xx''': Serverfehler

=== Gängige Codes ===
* 200 OK
* 201 Created
* 204 No Content
* 400 Bad Request
* 401 Unauthorized
* 403 Forbidden
* 404 Not Found
* 500 Internal Server Error
* 503 Service Unavailable

== ASP.NET Core Codebeispiele ==
=== Beispiel 1: Antwort-Header setzen ===
&lt;syntaxhighlight lang="csharp"&gt;
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

app.Run(async (HttpContext context) =&gt;
{
    context.Response.Headers["MyKey"] = "my value";
    context.Response.Headers["Server"] = "My server";
    context.Response.Headers["Content-Type"] = "text/html";
    await context.Response.WriteAsync("&lt;h1&gt;Hello&lt;/h1&gt;");
    await context.Response.WriteAsync("&lt;h2&gt;World&lt;/h2&gt;");
});

app.Run();
&lt;/syntaxhighlight&gt;

=== Beispiel 2: Statuscode setzen ===
&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (HttpContext context) =&gt;
{
    context.Response.StatusCode = 200;
    await context.Response.WriteAsync("Hello");
    await context.Response.WriteAsync(" World");
});
&lt;/syntaxhighlight&gt;

== HTTP-Request-Aufbau ==
* '''Startzeile''': Methode, URI, HTTP-Version
* '''Header''': z. B. User-Agent, Accept, Authorization
* '''Leerzeile'''
* '''Body (optional)''': z. B. JSON, Formulardaten

=== Beispiel: GET-Anfrage ===
 GET /products?category=electronics&amp;brand=apple HTTP/1.1
 Host: example.com

=== Beispiel: POST-Anfrage ===
 POST /login HTTP/1.1
 Host: example.com
 Content-Type: application/x-www-form-urlencoded

 username=john&amp;password=secret

== Query Strings ==
* Parameter in URL übergeben
* Beispiel: 
 https://example.com/products?category=electronics&amp;brand=apple

== Zugriff auf Request-Details in ASP.NET Core ==
=== Beispiel: Pfad und Methode auslesen ===
&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (HttpContext context) =&gt;
{
    string path = context.Request.Path;
    string method = context.Request.Method;
    context.Response.Headers["Content-type"] = "text/html";
    await context.Response.WriteAsync($"&lt;p&gt;{path}&lt;/p&gt;");
    await context.Response.WriteAsync($"&lt;p&gt;{method}&lt;/p&gt;");
});
&lt;/syntaxhighlight&gt;

=== Beispiel: Query-Parameter auslesen ===
&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (HttpContext context) =&gt;
{
    if (context.Request.Method == "GET" &amp;&amp;
        context.Request.Query.ContainsKey("id"))
    {
        string id = context.Request.Query["id"];
        await context.Response.WriteAsync($"&lt;p&gt;ID: {id}&lt;/p&gt;");
    }
});
&lt;/syntaxhighlight&gt;

=== Beispiel: User-Agent anzeigen ===
&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (HttpContext context) =&gt;
{
    if (context.Request.Headers.ContainsKey("User-Agent"))
    {
        string agent = context.Request.Headers["User-Agent"];
        await context.Response.WriteAsync($"&lt;p&gt;{agent}&lt;/p&gt;");
    }
});
&lt;/syntaxhighlight&gt;

== HTTP-Methoden ==
* '''GET''': Daten abfragen, sichtbar in URL, cachebar, sicher
* '''POST''': Daten senden (z. B. Formulare), im Body, nicht idempotent

== GET vs POST ==
'''GET''':
* Daten in URL
* cachebar, idempotent
* nicht für sensible Daten

'''POST''':
* Daten im Body
* sicherer für Passwörter
* nicht idempotent

== Tool: Postman ==
'''Verwendung''':
* HTTP-Requests (GET, POST, usw.) erstellen
* Header &amp; Body anpassen
* Antwort inspizieren: Statuscode, Header, Body

'''Ablauf''':
# Öffnen → Neue Anfrage
# Methode + URL eingeben (z. B. https://localhost:7070/api/products)
# Optional: Header / Body hinzufügen
# "Send" klicken → Antwort wird unten angezeigt

== Zusammenfassung ==
* HTTP = Grundlage der Webkommunikation
* Zustandslos, Anfrage-Antwort-Modell
* Statuscodes geben Antwortstatus an
* ASP.NET Core erlaubt präzise Steuerung von Anfragen &amp; Antworten
* Tools wie Postman helfen beim Testen von APIs</text>
      <sha1>nto0det86hxyvdjb9lwbprrqolkdb78</sha1>
    </revision>
    <revision>
      <id>246</id>
      <parentid>245</parentid>
      <timestamp>2025-06-23T21:19:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>246</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2188" sha1="okyw21m7o2x8dazjl4cl678n1z2n6yb" xml:space="preserve">== HTTP Spickzettel (MediaWiki) ==

=== HTTP-Protokoll – Übersicht ===
* HTTP (Hypertext Transfer Protocol) ist ein zustandsloses Protokoll ...
...

=== Übung: Statuscode und Header setzen ===
&lt;pre&gt;
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

app.Run(async (HttpContext context) =&gt;
{
    context.Response.StatusCode = 200;
    context.Response.Headers["Content-Type"] = "text/html";
    await context.Response.WriteAsync("&amp;lt;h1&amp;gt;Übung erfolgreich&amp;lt;/h1&amp;gt;");
});

app.Run();
&lt;/pre&gt;
'''Ziel:''' Einen eigenen HTTP-Header setzen und eine HTML-Antwort senden.

=== Übung: Abfrage von Query-Parametern ===
&lt;pre&gt;
app.Run(async (HttpContext context) =&gt;
{
    if (context.Request.Method == "GET" &amp;&amp; context.Request.Query.ContainsKey("name"))
    {
        string name = context.Request.Query["name"];
        await context.Response.WriteAsync($"&amp;lt;p&amp;gt;Hallo {name}!&amp;lt;/p&amp;gt;");
    }
    else
    {
        await context.Response.WriteAsync("&amp;lt;p&amp;gt;Bitte gib einen Namen per Query an (z.B. ?name=Max)&amp;lt;/p&amp;gt;");
    }
});
&lt;/pre&gt;
'''Ziel:''' Umgang mit Query-Strings (z. B. ?name=Max) trainieren.

=== Übung: User-Agent anzeigen ===
&lt;pre&gt;
app.Run(async (HttpContext context) =&gt;
{
    string agent = context.Request.Headers["User-Agent"];
    await context.Response.WriteAsync($"&amp;lt;p&amp;gt;Dein Browser: {agent}&amp;lt;/p&amp;gt;");
});
&lt;/pre&gt;
'''Ziel:''' HTTP-Header auslesen und anzeigen.

=== Übung: HTTP-Request analysieren ===
&lt;pre&gt;
app.Run(async (HttpContext context) =&gt;
{
    var path = context.Request.Path;
    var method = context.Request.Method;
    await context.Response.WriteAsync($"&amp;lt;p&amp;gt;Pfad: {path}&amp;lt;/p&amp;gt;");
    await context.Response.WriteAsync($"&amp;lt;p&amp;gt;Methode: {method}&amp;lt;/p&amp;gt;");
});
&lt;/pre&gt;
'''Ziel:''' Grundlagen zu Methode und Pfad aus Requests üben.

=== Übung: GET vs. POST Test mit Postman ===
'''Anleitung:'''
# Starte deine ASP.NET Core App lokal.
# Öffne Postman.
# Sende GET- und POST-Anfragen an http://localhost:7070 mit passenden Inhalten.
# Beobachte Verhalten bei:
  * GET mit Query
  * POST mit Body (JSON oder Form-Daten)

'''Ziel:''' Unterschiede zwischen GET- und POST-Anfragen erfahren und testen.</text>
      <sha1>okyw21m7o2x8dazjl4cl678n1z2n6yb</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Tägich Middleware Übungen</title>
    <ns>0</ns>
    <id>63</id>
    <revision>
      <id>247</id>
      <timestamp>2025-06-23T20:52:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Übungen: Middleware in ASP.NET Core =  == Übung 1: Middleware-Kette nachvollziehen == '''Ziel:''' Verstehe die Reihenfolge und das Verhalten von Middleware-Komponenten.  === Aufgabe === Gegeben sei folgender Code:  &lt;syntaxhighlight lang="csharp"&gt; app.Use(async (context, next) =&gt; {     await context.Response.WriteAsync("1. Middleware beginnt\n");     await next(context);     await context.Response.WriteAsync("1. Middleware endet\n"); });  app.Use(async…“</comment>
      <origin>247</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3662" sha1="3e0xxwa9ftwmi66p4ng96ywjmuajppt" xml:space="preserve">= Übungen: Middleware in ASP.NET Core =

== Übung 1: Middleware-Kette nachvollziehen ==
'''Ziel:''' Verstehe die Reihenfolge und das Verhalten von Middleware-Komponenten.

=== Aufgabe ===
Gegeben sei folgender Code:

&lt;syntaxhighlight lang="csharp"&gt;
app.Use(async (context, next) =&gt; {
    await context.Response.WriteAsync("1. Middleware beginnt\n");
    await next(context);
    await context.Response.WriteAsync("1. Middleware endet\n");
});

app.Use(async (context, next) =&gt; {
    await context.Response.WriteAsync("2. Middleware beginnt\n");
    await next(context);
    await context.Response.WriteAsync("2. Middleware endet\n");
});

app.Run(async (context) =&gt; {
    await context.Response.WriteAsync("Terminal Middleware\n");
});
&lt;/syntaxhighlight&gt;

=== Fragen ===
# In welcher Reihenfolge werden die Ausgaben im Browser angezeigt?
# Was passiert, wenn `next(context)` in einer der Middleware-Komponenten weggelassen wird?

== Übung 2: Unterschied zwischen app.Use und app.Run ==
'''Ziel:''' Verstehe den Unterschied zwischen app.Use und app.Run.

=== Aufgabe ===
Ändere folgenden Code so, dass beide app.Run-Aufrufe tatsächlich ausgeführt werden:

&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (context) =&gt; {
    await context.Response.WriteAsync("Run 1\n");
});

app.Run(async (context) =&gt; {
    await context.Response.WriteAsync("Run 2\n");
});
&lt;/syntaxhighlight&gt;

=== Hinweis ===
Diskutiere: Warum funktioniert das so nicht? Wie müsste man stattdessen app.Use verwenden?

== Übung 3: Eigene Middleware schreiben (konventionell) ==
'''Ziel:''' Eigene Middleware als Klasse schreiben.

=== Aufgabe ===
Erstelle eine Middleware-Klasse, die überprüft, ob ein Query-Parameter namens ''user'' existiert. Wenn ja, gib „Hello, {user}“ zurück. Falls nicht, rufe die nächste Middleware auf.

=== Schritte ===
# Erstelle eine Klasse `GreetingMiddleware` mit einem Konstruktor für `RequestDelegate`.
# Implementiere eine `Invoke`-Methode.
# Erstelle eine Erweiterungsmethode zur Registrierung.
# Binde die Middleware im Pipeline-Setup ein.

== Übung 4: UseWhen einsetzen ==
'''Ziel:''' Conditional Middleware mit UseWhen.

=== Aufgabe ===
Verwende `UseWhen`, um nur dann Logging-Middleware zu aktivieren, wenn die URL ein bestimmtes Query-Flag enthält (z.B. `?debug=true`).

=== Beispielcode-Gerüst ===
&lt;syntaxhighlight lang="csharp"&gt;
app.UseWhen(
    context =&gt; context.Request.Query.ContainsKey("debug"),
    app =&gt; {
        app.Use(async (context, next) =&gt; {
            Console.WriteLine("Debug aktiviert");
            await next();
        });
    });
&lt;/syntaxhighlight&gt;

== Übung 5: Reihenfolge der Middleware reflektieren ==
'''Ziel:''' Die Bedeutung der Middleware-Reihenfolge verstehen.

=== Aufgabe ===
Ordne folgende Middleware-Komponenten in die logische, empfohlene Reihenfolge:

# UseStaticFiles
# UseRouting
# UseAuthorization
# UseHttpsRedirection
# UseAuthentication
# UseDeveloperExceptionPage

=== Bonus-Frage ===
Warum ist `UseExceptionHandler`/`UseDeveloperExceptionPage` ganz vorne in der Reihenfolge wichtig?

== Bonus-Übung: Short-Circuiting verstehen ==
'''Ziel:''' Verhalten bei Abbruch der Pipeline (short-circuit) analysieren.

=== Aufgabe ===
Füge eine Middleware hinzu, die bei einem bestimmten Pfad (z. B. `/blocked`) die Anfrage sofort beantwortet mit "Zugriff verweigert", ohne den weiteren Verlauf der Pipeline aufzurufen.

&lt;syntaxhighlight lang="csharp"&gt;
app.Use(async (context, next) =&gt; {
    if (context.Request.Path == "/blocked")
    {
        await context.Response.WriteAsync("Zugriff verweigert");
        return; // Pipeline wird hier abgebrochen
    }

    await next();
});
&lt;/syntaxhighlight&gt;</text>
      <sha1>3e0xxwa9ftwmi66p4ng96ywjmuajppt</sha1>
    </revision>
  </page>
  <page>
    <title>Musik und Theater</title>
    <ns>0</ns>
    <id>64</id>
    <revision>
      <id>248</id>
      <timestamp>2025-06-23T21:54:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Alfred-Rust-Saal * Eduard-Söring-Saal * Kulturzentrum Marstall Ahrensburg * Kulturbühne Kultavida * Schloss Ahrensburg (Schloss &amp; Schlosspark)“</comment>
      <origin>248</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="146" sha1="mq5d8ywvkb948gwxg666wx3wij429iy" xml:space="preserve">* Alfred-Rust-Saal
* Eduard-Söring-Saal
* Kulturzentrum Marstall Ahrensburg
* Kulturbühne Kultavida
* Schloss Ahrensburg (Schloss &amp; Schlosspark)</text>
      <sha1>mq5d8ywvkb948gwxg666wx3wij429iy</sha1>
    </revision>
    <revision>
      <id>249</id>
      <parentid>248</parentid>
      <timestamp>2025-06-23T21:56:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>249</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="150" sha1="owz6sjti2vj3lf66ntgs4xlewrd2tjp" xml:space="preserve">* [[Alfred-Rust-Saal]]
* Eduard-Söring-Saal
* Kulturzentrum Marstall Ahrensburg
* Kulturbühne Kultavida
* Schloss Ahrensburg (Schloss &amp; Schlosspark)</text>
      <sha1>owz6sjti2vj3lf66ntgs4xlewrd2tjp</sha1>
    </revision>
    <revision>
      <id>250</id>
      <parentid>249</parentid>
      <timestamp>2025-06-23T22:23:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>250</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="154" sha1="h97z9z23af18zu9xzusn73nbtv7ltfx" xml:space="preserve">* [[Alfred-Rust-Saal]]
* [[Eduard-Söring-Saal]]
* Kulturzentrum Marstall Ahrensburg
* Kulturbühne Kultavida
* Schloss Ahrensburg (Schloss &amp; Schlosspark)</text>
      <sha1>h97z9z23af18zu9xzusn73nbtv7ltfx</sha1>
    </revision>
    <revision>
      <id>251</id>
      <parentid>250</parentid>
      <timestamp>2025-06-23T23:19:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>251</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="158" sha1="c9jrc19sbp9wupzg0enae4muazzbyca" xml:space="preserve">* [[Alfred-Rust-Saal]]
* [[Eduard-Söring-Saal]]
* [[Kulturzentrum Marstall Ahrensburg]]
* Kulturbühne Kultavida
* Schloss Ahrensburg (Schloss &amp; Schlosspark)</text>
      <sha1>c9jrc19sbp9wupzg0enae4muazzbyca</sha1>
    </revision>
    <revision>
      <id>252</id>
      <parentid>251</parentid>
      <timestamp>2025-06-24T02:17:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>252</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="162" sha1="l2fwvp0m8wf9lx61pziabvdlbz1hp2k" xml:space="preserve">* [[Alfred-Rust-Saal]]
* [[Eduard-Söring-Saal]]
* [[Kulturzentrum Marstall Ahrensburg]]
* [[Kulturbühne Kultavida]]
* Schloss Ahrensburg (Schloss &amp; Schlosspark)</text>
      <sha1>l2fwvp0m8wf9lx61pziabvdlbz1hp2k</sha1>
    </revision>
    <revision>
      <id>253</id>
      <parentid>252</parentid>
      <timestamp>2025-06-24T17:01:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>253</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="166" sha1="c07hjvvqqqhrjtllyby636o9i4fxayj" xml:space="preserve">* [[Alfred-Rust-Saal]]
* [[Eduard-Söring-Saal]]
* [[Kulturzentrum Marstall Ahrensburg]]
* [[Kulturbühne Kultavida]]
* [[Schloss Ahrensburg]] (Schloss &amp; Schlosspark)</text>
      <sha1>c07hjvvqqqhrjtllyby636o9i4fxayj</sha1>
    </revision>
  </page>
  <page>
    <title>Alfred-Rust-Saal</title>
    <ns>0</ns>
    <id>65</id>
    <revision>
      <id>254</id>
      <timestamp>2025-06-23T22:15:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>254</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="360" sha1="1o09rrw86nfzgulmxcvd0emrup40sr4" xml:space="preserve">Der Alfred-Rust-Saal befindet sich in der Adresse Wulfsdorfer Weg 71, 22926 Ahrensburg.
Er ist ein zentraler Ort für Theater, Musik, Events und Vorträge. Der Saal hat 462 Plätze. Die Gesamtfläche beträgt 441m².
==Weblink==
* https://www.ahrensburg.de/Bildung-Kultur/Kulturelle-Einrichtungen/Alfred-Rust-Saal/
* https://theater-und-musik-in-ahrensburg.de/</text>
      <sha1>1o09rrw86nfzgulmxcvd0emrup40sr4</sha1>
    </revision>
  </page>
  <page>
    <title>Eduard-Söring-Saal</title>
    <ns>0</ns>
    <id>66</id>
    <revision>
      <id>255</id>
      <timestamp>2025-06-23T22:41:24Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>255</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="955" sha1="ku6rcr2ce2147ehvittma3tqy6cpcbx" xml:space="preserve">Der Eduard-Söring-Saal befindet sich in Ahrensburg. Die Adresse lautet: Waldstraße 14, 22926 Ahrensburg, Deutschland.

== Veranstaltungsthemen ==

* '''Klassische Konzerte &amp; Kammermusik''': Aufführungen klassischer Musikwerke, Solo- und Ensemblekonzerte, Kammermusikabende mit renommierten und aufstrebenden Künstlern.
* '''Internationale Programmatiken''': Veranstaltungen mit internationalen Künstlern und Ensembles, Austauschprogramme sowie thematische Konzertreihen mit globalem Bezug.
* '''Jugend- &amp; Nachwuchsförderung''': Konzerte und Projekte zur Förderung junger Talente, Wettbewerbe, Workshops und Auftrittsmöglichkeiten für Nachwuchsmusiker.
* '''Akkordeon- &amp; Spezialensembles''': Konzerte mit Akkordeonorchestern, Spezialensembles und innovativen Musikformaten, die seltene Instrumente oder besondere Musikrichtungen präsentieren.
==Webink==
* https://www.ahrensburg.de/Bildung-Kultur/Kulturelle-Einrichtungen/Eduard-S%C3%B6ring-Saal/</text>
      <sha1>ku6rcr2ce2147ehvittma3tqy6cpcbx</sha1>
    </revision>
  </page>
  <page>
    <title>Kulturzentrum Marstall Ahrensburg</title>
    <ns>0</ns>
    <id>67</id>
    <revision>
      <id>256</id>
      <timestamp>2025-06-24T02:10:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>256</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="695" sha1="e9octijnieqpk8z768upgmvxt1hwdcs" xml:space="preserve">Das Kulturzentrum Marstall Ahrensburg befindet sich in der Lübecker Straße 8, 22926 Ahrensburg, in der Nähe des Schlosses Ahrensburg. Mo–Fr, 09:00–13:00 Uhr (Vereinssitz).
* In der Reithalle (Hauptsaal) gibt es eine große Bühne für 280–300 Personen.
* Das Foyer bietet Platz für ca. 40–50 Personen und ist ideal für Stehempfänge oder kleine Ausstellungen.
* Remise (ehemalige Kutschenhalle): kleinere Veranstaltungsfläche für Ausstellungen, Theater, Lesungen oder Workshops.
* Galerie im Marstall: Hier befindet sich eine Galerie für zeitgenössische Kunst, die seit 2000 von der Sparkassen-Kulturstiftung betrieben wird.

==Weblink==
*  https://www.marstall‑ahrensburg.de/</text>
      <sha1>e9octijnieqpk8z768upgmvxt1hwdcs</sha1>
    </revision>
    <revision>
      <id>257</id>
      <parentid>256</parentid>
      <timestamp>2025-06-24T02:13:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>257</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="689" sha1="7pg7e8bdbpfbrs94ipsgl2yu815w21l" xml:space="preserve">Das Kulturzentrum Marstall Ahrensburg befindet sich in der Lübecker Straße 8, 22926 Ahrensburg, in der Nähe des Schlosses Ahrensburg. Mo–Fr, 09:00–13:00 Uhr (Vereinssitz).
* In der Reithalle (Hauptsaal) gibt es eine große Bühne für 280–300 Personen.
* Das Foyer bietet Platz für ca. 40–50 Personen und ist ideal für Stehempfänge oder kleine Ausstellungen.
* Remise (ehemalige Kutschenhalle): kleinere Veranstaltungsfläche für Ausstellungen, Theater, Lesungen oder Workshops.
* Galerie im Marstall: Hier befindet sich eine Galerie für zeitgenössische Kunst, die seit 2000 von der Sparkassen-Kulturstiftung betrieben wird.

==Weblink==
*  https://marstall-ahrensburg.de/</text>
      <sha1>7pg7e8bdbpfbrs94ipsgl2yu815w21l</sha1>
    </revision>
  </page>
  <page>
    <title>Kurs:Täglich Routing Übungen</title>
    <ns>0</ns>
    <id>68</id>
    <revision>
      <id>258</id>
      <timestamp>2025-06-24T02:43:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Moderne MapGet-Syntax (.NET 6+) ==  &lt;syntaxhighlight lang="csharp"&gt; // Minimal-API: Endpunkte direkt am app-Objekt definieren var builder = WebApplication.CreateBuilder(args); var app = builder.Build();  // GET-Endpoint für /hello app.MapGet("/hello", () =&gt; "Hallo Welt!");  // GET-Endpoint mit Parameter app.MapGet("/user/{name}", (string name) =&gt; $"Hallo, {name}!");  // GET-Endpoint mit mehreren Parametern app.MapGet("/add/{a:int}/{b:int}", (int a, in…“</comment>
      <origin>258</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1516" sha1="07whomf5tgo8k3lafngz8t15h2r6783" xml:space="preserve">== Moderne MapGet-Syntax (.NET 6+) ==

&lt;syntaxhighlight lang="csharp"&gt;
// Minimal-API: Endpunkte direkt am app-Objekt definieren
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

// GET-Endpoint für /hello
app.MapGet("/hello", () =&gt; "Hallo Welt!");

// GET-Endpoint mit Parameter
app.MapGet("/user/{name}", (string name) =&gt; $"Hallo, {name}!");

// GET-Endpoint mit mehreren Parametern
app.MapGet("/add/{a:int}/{b:int}", (int a, int b) =&gt; $"Summe: {a + b}");

// POST-Endpoint (als Vergleich)
app.MapPost("/echo", async (HttpContext ctx) =&gt;
{
    using var reader = new StreamReader(ctx.Request.Body);
    var body = await reader.ReadToEndAsync();
    return Results.Text($"Empfangen: {body}");
});

app.Run();
&lt;/syntaxhighlight&gt;

'''Kommentar''':  
* Kein explizites &lt;code&gt;UseRouting&lt;/code&gt; und &lt;code&gt;UseEndpoints&lt;/code&gt; nötig!
* Routen-Parameter werden direkt als Methodenparameter übergeben (z.B. &lt;code&gt;(string name)&lt;/code&gt;).
* Typen (int, string, etc.) dienen als Constraints.
* Für komplexe Logik kann auch ein Lambda mit &lt;code&gt;HttpContext&lt;/code&gt; verwendet werden.

'''Übung''':  
1. Schreibe einen neuen Endpoint &lt;code&gt;/greet/{vorname}/{nachname}&lt;/code&gt;, der &lt;code&gt;Hallo, Vorname Nachname!&lt;/code&gt; zurückgibt.
2. Ergänze einen Endpoint, der das aktuelle Datum unter &lt;code&gt;/now&lt;/code&gt; ausgibt.

----

= Vorteile der modernen Form =
* Kürzer, lesbarer, weniger Boilerplate.
* Ideal für kleine APIs und Lernprojekte.
* Alle Constraints, Parameter etc. funktionieren wie gewohnt.</text>
      <sha1>07whomf5tgo8k3lafngz8t15h2r6783</sha1>
    </revision>
  </page>
  <page>
    <title>Kurs:Täglich Controllers Übungen</title>
    <ns>0</ns>
    <id>69</id>
    <revision>
      <id>259</id>
      <timestamp>2025-06-24T04:07:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC: Controller &amp; Action Methods – Code-Spickzettel =  == 1. Einfacher Controller mit Action Methods == &lt;syntaxhighlight lang="csharp"&gt; // HomeController.cs namespace MyApp.Controllers {     [Controller]     public class HomeController : Controller     {         [Route("home")]         [Route("/")]         public string Index()         {             return "Hello from Index";         }          [Route("about")]         public string About…“</comment>
      <origin>259</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3798" sha1="cwlwjy2kb05glmdhnl79p8t97ugveih" xml:space="preserve">= ASP.NET Core MVC: Controller &amp; Action Methods – Code-Spickzettel =

== 1. Einfacher Controller mit Action Methods ==
&lt;syntaxhighlight lang="csharp"&gt;
// HomeController.cs
namespace MyApp.Controllers
{
    [Controller]
    public class HomeController : Controller
    {
        [Route("home")]
        [Route("/")]
        public string Index()
        {
            return "Hello from Index";
        }

        [Route("about")]
        public string About()
        {
            return "Hello from About";
        }

        [Route("contact-us/{mobile:regex(^\\d{10}$)}")]
        public string Contact(string mobile)
        {
            return $"Contact: {mobile}";
        }
    }
}
&lt;/syntaxhighlight&gt;

== 2. ContentResult: Rohdaten zurückgeben ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("rawtext")]
public ContentResult RawText()
{
    return Content("Nur Text!", "text/plain");
}

[Route("html")]
public ContentResult HtmlExample()
{
    return Content("&lt;h2&gt;Hallo als HTML&lt;/h2&gt;", "text/html");
}
&lt;/syntaxhighlight&gt;

== 3. JsonResult: JSON zurückgeben ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("person")]
public JsonResult Person()
{
    var person = new { Id = 1, Name = "Anna", Age = 23 };
    return Json(person); // Content-Type: application/json
}
&lt;/syntaxhighlight&gt;

== 4. File Results: Dateien bereitstellen ==
&lt;syntaxhighlight lang="csharp"&gt;
// Aus wwwroot (z.B. /wwwroot/sample.pdf)
[Route("file-download")]
public VirtualFileResult Download1()
{
    return File("/sample.pdf", "application/pdf");
}

// Von Festplatte (Vorsicht bei Pfaden!)
[Route("file-download2")]
public PhysicalFileResult Download2()
{
    return PhysicalFile(@"c:\files\sample.pdf", "application/pdf");
}

// Aus Speicher (byte[])
[Route("file-download3")]
public FileContentResult Download3()
{
    byte[] data = System.IO.File.ReadAllBytes(@"c:\files\sample.pdf");
    return File(data, "application/pdf");
}
&lt;/syntaxhighlight&gt;

== 5. IActionResult: Verschiedene Rückgaben möglich ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("validate")]
public IActionResult Validate(int bookid = 0)
{
    if (bookid &lt;= 0)
        return BadRequest("Book id ungültig");
    if (bookid &gt; 1000)
        return NotFound("Book id zu groß");
    return File("/sample.pdf", "application/pdf");
}
&lt;/syntaxhighlight&gt;

== 6. Status Code Results ==
&lt;syntaxhighlight lang="csharp"&gt;
// 400 Bad Request
return BadRequest("Fehlerhafte Anfrage!");

// 404 Not Found
return NotFound("Nicht gefunden!");

// 401 Unauthorized
return Unauthorized();

// Beliebiger Code
return StatusCode(418, "Ich bin eine Teekanne"); // RFC Joke ;-)
&lt;/syntaxhighlight&gt;

== 7. Redirects ==
&lt;syntaxhighlight lang="csharp"&gt;
// Zu einer URL
return Redirect("/home");

// Zu einer Action im gleichen Controller
return RedirectToAction("About");

// Zu einer Action in anderem Controller
return RedirectToAction("Details", "Books", new { id = 42 });

// Nur lokal (Schutz gegen Open Redirects)
return LocalRedirect("/safe-page");

// Permanent
return RedirectPermanent("/neue-seite");
&lt;/syntaxhighlight&gt;

== 8. Übungen ==
* Schreibe einen Controller namens `ProductController` mit Action Methods:
** `List()` → gibt einen Text "Alle Produkte" zurück
** `Details(int id)` → gibt JSON zurück: { "id": id, "name": "Produktname" }
** `DownloadManual()` → gibt eine Datei aus wwwroot zurück
* Baue Routing mit [Route] Attributen ein.
* Füge eine Action hinzu, die einen 404-Status zurückgibt, falls die id &gt; 100 ist.

== 9. Wichtige Interview-Stichworte ==
* Controller: Endet immer auf *Controller*
* Action-Methoden: public, beliebiger Name
* Rückgabewerte: ContentResult, JsonResult, FileResult, IActionResult, RedirectResult usw.
* Attribute Routing: [Route], [HttpGet], [HttpPost], ...
* Statuscodes: 200, 400, 401, 404 etc. per Helper-Methoden</text>
      <sha1>cwlwjy2kb05glmdhnl79p8t97ugveih</sha1>
    </revision>
  </page>
  <page>
    <title>Kurs:Täglich Model Binding Übungen</title>
    <ns>0</ns>
    <id>70</id>
    <revision>
      <id>260</id>
      <timestamp>2025-06-24T04:23:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Model Binding &amp; Validation – ASP.NET Core MVC (Spickzettel) =  == Standard-Model-Binding (Query, Route, Form) ==  &lt;syntaxhighlight lang="csharp"&gt; // Route mit optionalen Parametern (aus Query oder Route gebunden) [Route("buchladen/{buchid?}/{eingeloggt?}")] public IActionResult Index(int? buchid, bool? eingeloggt) {     return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}", "text/plain"); }  // Route mit festem (required) Parameter (aus Route…“</comment>
      <origin>260</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5909" sha1="ajmqa1hzrm2ax7jopx4d279z7v6mffg" xml:space="preserve">= Model Binding &amp; Validation – ASP.NET Core MVC (Spickzettel) =

== Standard-Model-Binding (Query, Route, Form) ==

&lt;syntaxhighlight lang="csharp"&gt;
// Route mit optionalen Parametern (aus Query oder Route gebunden)
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index(int? buchid, bool? eingeloggt)
{
    return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}", "text/plain");
}

// Route mit festem (required) Parameter (aus Route gebunden)
[Route("shop/buecher/{id}")]
public IActionResult Buch()
{
    int id = Convert.ToInt32(Request.RouteValues["id"]);
    return Content($"&lt;h1&gt;Buch-Shop {id}&lt;/h1&gt;", "text/html");
}
&lt;/syntaxhighlight&gt;

== [FromQuery] und [FromRoute] verwenden ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index([FromQuery] int? buchid, [FromRoute] bool? eingeloggt)
{
    // Explizites Binding: buchid nur aus Query, eingeloggt nur aus Route
    return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}");
}
&lt;/syntaxhighlight&gt;

== Model Binding mit Modelklassen ==

&lt;syntaxhighlight lang="csharp"&gt;
// Modelklasse
public class Buch
{
    public int? BuchId { get; set; }
    public string? Autor { get; set; }
    public override string ToString() =&gt; $"Buch: {BuchId}, Autor: {Autor}";
}

// Controller
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index([FromQuery] int? buchid, [FromRoute] bool? eingeloggt, Buch buch)
{
    return Content($"Buch-ID: {buchid}, Buch: {buch}", "text/plain");
}
&lt;/syntaxhighlight&gt;

== Model Validation mit DataAnnotations ==

&lt;syntaxhighlight lang="csharp"&gt;
using System.ComponentModel.DataAnnotations;

public class Person
{
    [Required(ErrorMessage = "{0} darf nicht leer sein")]
    public string? Name { get; set; }

    [EmailAddress]
    public string? Email { get; set; }

    [Compare("Passwort", ErrorMessage = "Passwörter stimmen nicht überein")]
    public string? PasswortBestätigung { get; set; }
}

// Controller
public IActionResult Erstellen(Person person)
{
    if (!ModelState.IsValid)
        return View(person);
    // Speicherung etc.
}
&lt;/syntaxhighlight&gt;

== Custom Validation Attribute Beispiel ==

&lt;syntaxhighlight lang="csharp"&gt;
// Validator: ToDate &gt;= FromDate
public class DatumsbereichValidatorAttribute : ValidationAttribute
{
    public string VonProperty { get; }
    public DatumsbereichValidatorAttribute(string vonProperty) =&gt; VonProperty = vonProperty;
    protected override ValidationResult? IsValid(object? value, ValidationContext context)
    {
        if (value is DateTime toDate)
        {
            var fromProp = context.ObjectType.GetProperty(VonProperty);
            if (fromProp?.GetValue(context.ObjectInstance) is DateTime fromDate &amp;&amp; fromDate &gt; toDate)
                return new ValidationResult(ErrorMessage, new[] { VonProperty, context.MemberName! });
        }
        return ValidationResult.Success;
    }
}
&lt;/syntaxhighlight&gt;

== Model-Level Validation mit IValidatableObject ==

&lt;syntaxhighlight lang="csharp"&gt;
public class Person : IValidatableObject
{
    public DateTime? Geburtsdatum { get; set; }
    public int? Alter { get; set; }

    public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext context)
    {
        if (!Geburtsdatum.HasValue &amp;&amp; !Alter.HasValue)
            yield return new ValidationResult("Geburtsdatum ODER Alter muss angegeben werden", new[] { nameof(Alter) });
    }
}
&lt;/syntaxhighlight&gt;

== [Bind] und [BindNever] Attribute ==

&lt;syntaxhighlight lang="csharp"&gt;
// Nur bestimmte Felder binden
[HttpPost]
public IActionResult Erstellen([Bind("Titel", "Beschreibung")] Produkt produkt) { ... }

// Niemals aus Request binden
public class Produkt
{
    [BindNever]
    public DateTime ErstelltAm { get; set; }
}
&lt;/syntaxhighlight&gt;

== [FromBody]: JSON/XML Body-Parameter binden ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("registrieren")]
public IActionResult Index([FromBody] Person person)
{
    if (!ModelState.IsValid) { ... }
    return Content($"{person}");
}
&lt;/syntaxhighlight&gt;

== Collection Binding (Listen/Arrays binden) ==

&lt;syntaxhighlight lang="csharp"&gt;
public class Person
{
    public List&lt;string?&gt; Interessen { get; set; } = new();
}

// JSON: { "Name": "Anna", "Interessen": ["Musik", "Lesen", "Coding"] }
public IActionResult Index(Person person)
{
    return Content($"Person: {person.Name}, Interessen: {string.Join(",", person.Interessen)}");
}
&lt;/syntaxhighlight&gt;

== [FromHeader]: Parameter aus HTTP-Header ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("registrieren")]
public IActionResult Index(Person person, [FromHeader(Name = "User-Agent")] string userAgent)
{
    return Content($"{person}, {userAgent}");
}
&lt;/syntaxhighlight&gt;

== Input Formatters registrieren (z.B. XML) ==

&lt;syntaxhighlight lang="csharp"&gt;
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddControllers().AddXmlSerializerFormatters();
&lt;/syntaxhighlight&gt;

== Custom Model Binder registrieren ==

&lt;syntaxhighlight lang="csharp"&gt;
// Custom Binder implementieren
public class PersonModelBinder : IModelBinder { ... }

// BinderProvider registrieren (Startup/Program.cs)
builder.Services.AddControllers(options =&gt; {
    options.ModelBinderProviders.Insert(0, new PersonBinderProvider());
});
&lt;/syntaxhighlight&gt;

----

= Übungen / Mini-Aufgaben =

* Schreibe eine Controller-Methode, die einen Parameter aus der Query und einen aus der Route bindet.
* Erstelle ein Model mit mindestens drei Properties und validiere sie mit DataAnnotations.
* Schreibe ein Custom ValidationAttribute, das prüft, ob ein Datum in der Zukunft liegt.
* Nutze [FromBody], um ein komplettes Model aus JSON im Request-Body zu binden.
* Verwende [BindNever], um eine Eigenschaft vor Overposting zu schützen.
* Binde eine Liste von Strings im Model und fülle sie über ein Array im Request.
* Hole den User-Agent per [FromHeader] und gib ihn in der Response aus.</text>
      <sha1>ajmqa1hzrm2ax7jopx4d279z7v6mffg</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Routing Übungen</title>
    <ns>0</ns>
    <id>71</id>
    <revision>
      <id>261</id>
      <timestamp>2025-06-24T04:41:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Moderne MapGet-Syntax (.NET 6+) ==  &lt;syntaxhighlight lang="csharp"&gt; // Minimal-API: Endpunkte direkt am app-Objekt definieren var builder = WebApplication.CreateBuilder(args); var app = builder.Build();  // GET-Endpoint für /hello app.MapGet("/hello", () =&gt; "Hallo Welt!");  // GET-Endpoint mit Parameter app.MapGet("/user/{name}", (string name) =&gt; $"Hallo, {name}!");  // GET-Endpoint mit mehreren Parametern app.MapGet("/add/{a:int}/{b:int}", (int a, in…“</comment>
      <origin>261</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1516" sha1="07whomf5tgo8k3lafngz8t15h2r6783" xml:space="preserve">== Moderne MapGet-Syntax (.NET 6+) ==

&lt;syntaxhighlight lang="csharp"&gt;
// Minimal-API: Endpunkte direkt am app-Objekt definieren
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

// GET-Endpoint für /hello
app.MapGet("/hello", () =&gt; "Hallo Welt!");

// GET-Endpoint mit Parameter
app.MapGet("/user/{name}", (string name) =&gt; $"Hallo, {name}!");

// GET-Endpoint mit mehreren Parametern
app.MapGet("/add/{a:int}/{b:int}", (int a, int b) =&gt; $"Summe: {a + b}");

// POST-Endpoint (als Vergleich)
app.MapPost("/echo", async (HttpContext ctx) =&gt;
{
    using var reader = new StreamReader(ctx.Request.Body);
    var body = await reader.ReadToEndAsync();
    return Results.Text($"Empfangen: {body}");
});

app.Run();
&lt;/syntaxhighlight&gt;

'''Kommentar''':  
* Kein explizites &lt;code&gt;UseRouting&lt;/code&gt; und &lt;code&gt;UseEndpoints&lt;/code&gt; nötig!
* Routen-Parameter werden direkt als Methodenparameter übergeben (z.B. &lt;code&gt;(string name)&lt;/code&gt;).
* Typen (int, string, etc.) dienen als Constraints.
* Für komplexe Logik kann auch ein Lambda mit &lt;code&gt;HttpContext&lt;/code&gt; verwendet werden.

'''Übung''':  
1. Schreibe einen neuen Endpoint &lt;code&gt;/greet/{vorname}/{nachname}&lt;/code&gt;, der &lt;code&gt;Hallo, Vorname Nachname!&lt;/code&gt; zurückgibt.
2. Ergänze einen Endpoint, der das aktuelle Datum unter &lt;code&gt;/now&lt;/code&gt; ausgibt.

----

= Vorteile der modernen Form =
* Kürzer, lesbarer, weniger Boilerplate.
* Ideal für kleine APIs und Lernprojekte.
* Alle Constraints, Parameter etc. funktionieren wie gewohnt.</text>
      <sha1>07whomf5tgo8k3lafngz8t15h2r6783</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Controllers Übungen</title>
    <ns>0</ns>
    <id>72</id>
    <revision>
      <id>262</id>
      <timestamp>2025-06-24T04:43:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC: Controller &amp; Action Methods – Code-Spickzettel =  == 1. Einfacher Controller mit Action Methods == &lt;syntaxhighlight lang="csharp"&gt; // HomeController.cs namespace MyApp.Controllers {     [Controller]     public class HomeController : Controller     {         [Route("home")]         [Route("/")]         public string Index()         {             return "Hello from Index";         }          [Route("about")]         public string About…“</comment>
      <origin>262</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3798" sha1="cwlwjy2kb05glmdhnl79p8t97ugveih" xml:space="preserve">= ASP.NET Core MVC: Controller &amp; Action Methods – Code-Spickzettel =

== 1. Einfacher Controller mit Action Methods ==
&lt;syntaxhighlight lang="csharp"&gt;
// HomeController.cs
namespace MyApp.Controllers
{
    [Controller]
    public class HomeController : Controller
    {
        [Route("home")]
        [Route("/")]
        public string Index()
        {
            return "Hello from Index";
        }

        [Route("about")]
        public string About()
        {
            return "Hello from About";
        }

        [Route("contact-us/{mobile:regex(^\\d{10}$)}")]
        public string Contact(string mobile)
        {
            return $"Contact: {mobile}";
        }
    }
}
&lt;/syntaxhighlight&gt;

== 2. ContentResult: Rohdaten zurückgeben ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("rawtext")]
public ContentResult RawText()
{
    return Content("Nur Text!", "text/plain");
}

[Route("html")]
public ContentResult HtmlExample()
{
    return Content("&lt;h2&gt;Hallo als HTML&lt;/h2&gt;", "text/html");
}
&lt;/syntaxhighlight&gt;

== 3. JsonResult: JSON zurückgeben ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("person")]
public JsonResult Person()
{
    var person = new { Id = 1, Name = "Anna", Age = 23 };
    return Json(person); // Content-Type: application/json
}
&lt;/syntaxhighlight&gt;

== 4. File Results: Dateien bereitstellen ==
&lt;syntaxhighlight lang="csharp"&gt;
// Aus wwwroot (z.B. /wwwroot/sample.pdf)
[Route("file-download")]
public VirtualFileResult Download1()
{
    return File("/sample.pdf", "application/pdf");
}

// Von Festplatte (Vorsicht bei Pfaden!)
[Route("file-download2")]
public PhysicalFileResult Download2()
{
    return PhysicalFile(@"c:\files\sample.pdf", "application/pdf");
}

// Aus Speicher (byte[])
[Route("file-download3")]
public FileContentResult Download3()
{
    byte[] data = System.IO.File.ReadAllBytes(@"c:\files\sample.pdf");
    return File(data, "application/pdf");
}
&lt;/syntaxhighlight&gt;

== 5. IActionResult: Verschiedene Rückgaben möglich ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("validate")]
public IActionResult Validate(int bookid = 0)
{
    if (bookid &lt;= 0)
        return BadRequest("Book id ungültig");
    if (bookid &gt; 1000)
        return NotFound("Book id zu groß");
    return File("/sample.pdf", "application/pdf");
}
&lt;/syntaxhighlight&gt;

== 6. Status Code Results ==
&lt;syntaxhighlight lang="csharp"&gt;
// 400 Bad Request
return BadRequest("Fehlerhafte Anfrage!");

// 404 Not Found
return NotFound("Nicht gefunden!");

// 401 Unauthorized
return Unauthorized();

// Beliebiger Code
return StatusCode(418, "Ich bin eine Teekanne"); // RFC Joke ;-)
&lt;/syntaxhighlight&gt;

== 7. Redirects ==
&lt;syntaxhighlight lang="csharp"&gt;
// Zu einer URL
return Redirect("/home");

// Zu einer Action im gleichen Controller
return RedirectToAction("About");

// Zu einer Action in anderem Controller
return RedirectToAction("Details", "Books", new { id = 42 });

// Nur lokal (Schutz gegen Open Redirects)
return LocalRedirect("/safe-page");

// Permanent
return RedirectPermanent("/neue-seite");
&lt;/syntaxhighlight&gt;

== 8. Übungen ==
* Schreibe einen Controller namens `ProductController` mit Action Methods:
** `List()` → gibt einen Text "Alle Produkte" zurück
** `Details(int id)` → gibt JSON zurück: { "id": id, "name": "Produktname" }
** `DownloadManual()` → gibt eine Datei aus wwwroot zurück
* Baue Routing mit [Route] Attributen ein.
* Füge eine Action hinzu, die einen 404-Status zurückgibt, falls die id &gt; 100 ist.

== 9. Wichtige Interview-Stichworte ==
* Controller: Endet immer auf *Controller*
* Action-Methoden: public, beliebiger Name
* Rückgabewerte: ContentResult, JsonResult, FileResult, IActionResult, RedirectResult usw.
* Attribute Routing: [Route], [HttpGet], [HttpPost], ...
* Statuscodes: 200, 400, 401, 404 etc. per Helper-Methoden</text>
      <sha1>cwlwjy2kb05glmdhnl79p8t97ugveih</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Model Binding Übungen</title>
    <ns>0</ns>
    <id>73</id>
    <revision>
      <id>263</id>
      <timestamp>2025-06-24T04:54:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Model Binding &amp; Validation – ASP.NET Core MVC (Spickzettel) =  == Standard-Model-Binding (Query, Route, Form) ==  &lt;syntaxhighlight lang="csharp"&gt; // Route mit optionalen Parametern (aus Query oder Route gebunden) [Route("buchladen/{buchid?}/{eingeloggt?}")] public IActionResult Index(int? buchid, bool? eingeloggt) {     return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}", "text/plain"); }  // Route mit festem (required) Parameter (aus Route…“</comment>
      <origin>263</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5909" sha1="ajmqa1hzrm2ax7jopx4d279z7v6mffg" xml:space="preserve">= Model Binding &amp; Validation – ASP.NET Core MVC (Spickzettel) =

== Standard-Model-Binding (Query, Route, Form) ==

&lt;syntaxhighlight lang="csharp"&gt;
// Route mit optionalen Parametern (aus Query oder Route gebunden)
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index(int? buchid, bool? eingeloggt)
{
    return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}", "text/plain");
}

// Route mit festem (required) Parameter (aus Route gebunden)
[Route("shop/buecher/{id}")]
public IActionResult Buch()
{
    int id = Convert.ToInt32(Request.RouteValues["id"]);
    return Content($"&lt;h1&gt;Buch-Shop {id}&lt;/h1&gt;", "text/html");
}
&lt;/syntaxhighlight&gt;

== [FromQuery] und [FromRoute] verwenden ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index([FromQuery] int? buchid, [FromRoute] bool? eingeloggt)
{
    // Explizites Binding: buchid nur aus Query, eingeloggt nur aus Route
    return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}");
}
&lt;/syntaxhighlight&gt;

== Model Binding mit Modelklassen ==

&lt;syntaxhighlight lang="csharp"&gt;
// Modelklasse
public class Buch
{
    public int? BuchId { get; set; }
    public string? Autor { get; set; }
    public override string ToString() =&gt; $"Buch: {BuchId}, Autor: {Autor}";
}

// Controller
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index([FromQuery] int? buchid, [FromRoute] bool? eingeloggt, Buch buch)
{
    return Content($"Buch-ID: {buchid}, Buch: {buch}", "text/plain");
}
&lt;/syntaxhighlight&gt;

== Model Validation mit DataAnnotations ==

&lt;syntaxhighlight lang="csharp"&gt;
using System.ComponentModel.DataAnnotations;

public class Person
{
    [Required(ErrorMessage = "{0} darf nicht leer sein")]
    public string? Name { get; set; }

    [EmailAddress]
    public string? Email { get; set; }

    [Compare("Passwort", ErrorMessage = "Passwörter stimmen nicht überein")]
    public string? PasswortBestätigung { get; set; }
}

// Controller
public IActionResult Erstellen(Person person)
{
    if (!ModelState.IsValid)
        return View(person);
    // Speicherung etc.
}
&lt;/syntaxhighlight&gt;

== Custom Validation Attribute Beispiel ==

&lt;syntaxhighlight lang="csharp"&gt;
// Validator: ToDate &gt;= FromDate
public class DatumsbereichValidatorAttribute : ValidationAttribute
{
    public string VonProperty { get; }
    public DatumsbereichValidatorAttribute(string vonProperty) =&gt; VonProperty = vonProperty;
    protected override ValidationResult? IsValid(object? value, ValidationContext context)
    {
        if (value is DateTime toDate)
        {
            var fromProp = context.ObjectType.GetProperty(VonProperty);
            if (fromProp?.GetValue(context.ObjectInstance) is DateTime fromDate &amp;&amp; fromDate &gt; toDate)
                return new ValidationResult(ErrorMessage, new[] { VonProperty, context.MemberName! });
        }
        return ValidationResult.Success;
    }
}
&lt;/syntaxhighlight&gt;

== Model-Level Validation mit IValidatableObject ==

&lt;syntaxhighlight lang="csharp"&gt;
public class Person : IValidatableObject
{
    public DateTime? Geburtsdatum { get; set; }
    public int? Alter { get; set; }

    public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext context)
    {
        if (!Geburtsdatum.HasValue &amp;&amp; !Alter.HasValue)
            yield return new ValidationResult("Geburtsdatum ODER Alter muss angegeben werden", new[] { nameof(Alter) });
    }
}
&lt;/syntaxhighlight&gt;

== [Bind] und [BindNever] Attribute ==

&lt;syntaxhighlight lang="csharp"&gt;
// Nur bestimmte Felder binden
[HttpPost]
public IActionResult Erstellen([Bind("Titel", "Beschreibung")] Produkt produkt) { ... }

// Niemals aus Request binden
public class Produkt
{
    [BindNever]
    public DateTime ErstelltAm { get; set; }
}
&lt;/syntaxhighlight&gt;

== [FromBody]: JSON/XML Body-Parameter binden ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("registrieren")]
public IActionResult Index([FromBody] Person person)
{
    if (!ModelState.IsValid) { ... }
    return Content($"{person}");
}
&lt;/syntaxhighlight&gt;

== Collection Binding (Listen/Arrays binden) ==

&lt;syntaxhighlight lang="csharp"&gt;
public class Person
{
    public List&lt;string?&gt; Interessen { get; set; } = new();
}

// JSON: { "Name": "Anna", "Interessen": ["Musik", "Lesen", "Coding"] }
public IActionResult Index(Person person)
{
    return Content($"Person: {person.Name}, Interessen: {string.Join(",", person.Interessen)}");
}
&lt;/syntaxhighlight&gt;

== [FromHeader]: Parameter aus HTTP-Header ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("registrieren")]
public IActionResult Index(Person person, [FromHeader(Name = "User-Agent")] string userAgent)
{
    return Content($"{person}, {userAgent}");
}
&lt;/syntaxhighlight&gt;

== Input Formatters registrieren (z.B. XML) ==

&lt;syntaxhighlight lang="csharp"&gt;
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddControllers().AddXmlSerializerFormatters();
&lt;/syntaxhighlight&gt;

== Custom Model Binder registrieren ==

&lt;syntaxhighlight lang="csharp"&gt;
// Custom Binder implementieren
public class PersonModelBinder : IModelBinder { ... }

// BinderProvider registrieren (Startup/Program.cs)
builder.Services.AddControllers(options =&gt; {
    options.ModelBinderProviders.Insert(0, new PersonBinderProvider());
});
&lt;/syntaxhighlight&gt;

----

= Übungen / Mini-Aufgaben =

* Schreibe eine Controller-Methode, die einen Parameter aus der Query und einen aus der Route bindet.
* Erstelle ein Model mit mindestens drei Properties und validiere sie mit DataAnnotations.
* Schreibe ein Custom ValidationAttribute, das prüft, ob ein Datum in der Zukunft liegt.
* Nutze [FromBody], um ein komplettes Model aus JSON im Request-Body zu binden.
* Verwende [BindNever], um eine Eigenschaft vor Overposting zu schützen.
* Binde eine Liste von Strings im Model und fülle sie über ein Array im Request.
* Hole den User-Agent per [FromHeader] und gib ihn in der Response aus.</text>
      <sha1>ajmqa1hzrm2ax7jopx4d279z7v6mffg</sha1>
    </revision>
  </page>
  <page>
    <title>Schwachstellen:Hauptseite</title>
    <ns>0</ns>
    <id>74</id>
    <revision>
      <id>264</id>
      <timestamp>2025-06-24T14:51:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Schwachstellen==“</comment>
      <origin>264</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="18" sha1="7c4wphqe7qh1l2drd6by4541vv2nzh8" xml:space="preserve">==Schwachstellen==</text>
      <sha1>7c4wphqe7qh1l2drd6by4541vv2nzh8</sha1>
    </revision>
    <revision>
      <id>265</id>
      <parentid>264</parentid>
      <timestamp>2025-06-24T15:18:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>265</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1475" sha1="sasm0pgwqhwgra8q3ztbnqv6wruvhfx" xml:space="preserve">==Schwachstellen==
===Sprachmodell===
* [https://airiskdatabase.com AI Risk Database] – Eine Datenbank mit Risiken und Schwachstellen im Bereich Künstliche Intelligenz.
* [https://github.com/advisories GitHub CVE &amp; Security Advisories] – Offizielle Sicherheitswarnungen und CVE-Meldungen von GitHub für Open-Source-Projekte.
* [https://cve.mitre.org/ MITRE CVE Database] – Zentrale Datenbank für öffentlich bekannte Schwachstellen (Common Vulnerabilities and Exposures, CVE).
* [https://nvd.nist.gov/ National Vulnerability Database (NVD)] – Die US-amerikanische nationale Datenbank für Schwachstellen, gepflegt vom NIST.
* [https://www.cvedetails.com/ CVE Details] – Eine benutzerfreundliche Übersicht und Analyse von CVE-Einträgen.
* [https://www.exploit-db.com/ Exploit Database] – Sammlung von Exploits und Proof-of-Concept-Code für bekannte Schwachstellen.
* [https://www.securityfocus.com/vulnerabilities SecurityFocus Vulnerability Database] – Archiv von Schwachstellen und Sicherheitsmeldungen.
* [https://www.openwall.com/lists/oss-security/ Open Source Security (oss-security)] – Mailingliste und Archiv zu Schwachstellen in Open-Source-Software.
* [https://vuldb.com VulDB] – Community-basierte Schwachstellendatenbank mit aktuellen Informationen und Analysen.
* [https://www.zerodayinitiative.com/advisories/published/ Zero Day Initiative Advisories] – Veröffentlichte Schwachstellen und Exploits aus dem Zero Day Initiative Programm.</text>
      <sha1>sasm0pgwqhwgra8q3ztbnqv6wruvhfx</sha1>
    </revision>
    <revision>
      <id>266</id>
      <parentid>265</parentid>
      <timestamp>2025-06-24T15:20:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>266</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1332" sha1="18gphefdoejs4sxkm41g05ymzhx5gud" xml:space="preserve">==Schwachstellen==
===Sprachmodell===
* [https://airiskdatabase.com AI Risk Database] – Eine Datenbank mit Risiken und Schwachstellen im Bereich Künstliche Intelligenz.
* [https://github.com/advisories GitHub CVE &amp; Security Advisories] – Offizielle Sicherheitswarnungen und CVE-Meldungen von GitHub für Open-Source-Projekte.
* [https://cve.mitre.org/ MITRE CVE Database] – Zentrale Datenbank für öffentlich bekannte Schwachstellen (Common Vulnerabilities and Exposures, CVE).
* [https://nvd.nist.gov/ National Vulnerability Database (NVD)] – Die US-amerikanische nationale Datenbank für Schwachstellen, gepflegt vom NIST.
* [https://www.cvedetails.com/ CVE Details] – Eine benutzerfreundliche Übersicht und Analyse von CVE-Einträgen.
* [https://www.exploit-db.com/ Exploit Database] – Sammlung von Exploits und Proof-of-Concept-Code für bekannte Schwachstellen.
* [https://www.openwall.com/lists/oss-security/ Open Source Security (oss-security)] – Mailingliste und Archiv zu Schwachstellen in Open-Source-Software.
* [https://vuldb.com VulDB] – Community-basierte Schwachstellendatenbank mit aktuellen Informationen und Analysen.
* [https://www.zerodayinitiative.com/advisories/published/ Zero Day Initiative Advisories] – Veröffentlichte Schwachstellen und Exploits aus dem Zero Day Initiative Programm.</text>
      <sha1>18gphefdoejs4sxkm41g05ymzhx5gud</sha1>
    </revision>
    <revision>
      <id>267</id>
      <parentid>266</parentid>
      <timestamp>2025-06-24T15:34:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>267</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2120" sha1="mog6c3vm86nht83mv2cxeg81crvey59" xml:space="preserve">==Schwachstellen==
===Sprachmodell===
* [https://airiskdatabase.com AI Risk Database] – Eine Datenbank mit Risiken und Schwachstellen im Bereich Künstliche Intelligenz.
* [https://github.com/advisories GitHub CVE &amp; Security Advisories] – Offizielle Sicherheitswarnungen und CVE-Meldungen von GitHub für Open-Source-Projekte.
* [https://cve.mitre.org/ MITRE CVE Database] – Zentrale Datenbank für öffentlich bekannte Schwachstellen (Common Vulnerabilities and Exposures, CVE).
* [https://nvd.nist.gov/ National Vulnerability Database (NVD)] – Die US-amerikanische nationale Datenbank für Schwachstellen, gepflegt vom NIST.
* [https://www.cvedetails.com/ CVE Details] – Eine benutzerfreundliche Übersicht und Analyse von CVE-Einträgen.
* [https://www.exploit-db.com/ Exploit Database] – Sammlung von Exploits und Proof-of-Concept-Code für bekannte Schwachstellen.
* [https://www.openwall.com/lists/oss-security/ Open Source Security (oss-security)] – Mailingliste und Archiv zu Schwachstellen in Open-Source-Software.
* [https://vuldb.com VulDB] – Community-basierte Schwachstellendatenbank mit aktuellen Informationen und Analysen.
* [https://www.zerodayinitiative.com/advisories/published/ Zero Day Initiative Advisories] – Veröffentlichte Schwachstellen und Exploits aus dem Zero Day Initiative Programm.
==Allgemein==
* [https://deps.dev/ Deps.dev] ist ein Tool, das die Abhängigkeiten von Open-Source-Projekten analysiert und Schwachstellen in den Abhängigkeiten identifiziert. Es ist ein kostenloser Dienst, der von GitHub bereitgestellt wird.
* [https://security.snyk.io/ Snyk] ist ein weiteres Tool, das Schwachstellen in Open-Source-Abhängigkeiten identifiziert und Entwicklern hilft, diese zu beheben. Es bietet auch Funktionen zur Überwachung von Sicherheitslücken in Abhängigkeiten im laufenden Betrieb.
* [https://osv.dev/ OSV (Open Source Vulnerabilities)] ist ein Tool, das Schwachstellen in Open-Source-Software identifiziert und Entwicklern hilft, diese zu beheben. Es bietet auch Funktionen zur Überwachung von Sicherheitslücken in Abhängigkeiten im laufenden Betrieb.</text>
      <sha1>mog6c3vm86nht83mv2cxeg81crvey59</sha1>
    </revision>
  </page>
  <page>
    <title>Ai:Hauptseite</title>
    <ns>0</ns>
    <id>75</id>
    <revision>
      <id>268</id>
      <timestamp>2025-06-24T15:56:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Ai:Nahtlose Integration von KI und ML in Ihre Projekte“</comment>
      <origin>268</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="58" sha1="js8fpf3w0q25dy7iswgrsevxpkfut56" xml:space="preserve">* [[Ai:Nahtlose Integration von KI und ML in Ihre Projekte</text>
      <sha1>js8fpf3w0q25dy7iswgrsevxpkfut56</sha1>
    </revision>
    <revision>
      <id>269</id>
      <parentid>268</parentid>
      <timestamp>2025-06-24T15:56:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>269</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="60" sha1="6uo9i5eki1xr4790n2d9r6fc6i2w481" xml:space="preserve">* [[Ai:Nahtlose Integration von KI und ML in Ihre Projekte]]</text>
      <sha1>6uo9i5eki1xr4790n2d9r6fc6i2w481</sha1>
    </revision>
  </page>
  <page>
    <title>Ai:Nahtlose Integration von KI und ML in Ihre Projekte</title>
    <ns>0</ns>
    <id>76</id>
    <revision>
      <id>270</id>
      <timestamp>2025-06-24T16:23:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ Sicher, hier ist eine detaillierte Beschreibung der allgemeinen Frameworks mit LLM-Inferenzfunktionen  == Anwendungsentwicklungs-Frameworks für LLMs == Diese Frameworks erleichtern die Integration und Nutzung von Large Language Models (LLMs) in verschiedene Anwendungen.  === LangChain === '''Beschreibung:''' LangChain ist ein Framework, das die Entwicklung von Anwendungen, die durch Sprachmodelle unterstützt werden, vereinfacht. Es bietet Tools für Ke…“</comment>
      <origin>270</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="11760" sha1="4veao5wh3r5kto7x3lvcm8fi5tootwr" xml:space="preserve">
Sicher, hier ist eine detaillierte Beschreibung der allgemeinen Frameworks mit LLM-Inferenzfunktionen

== Anwendungsentwicklungs-Frameworks für LLMs ==
Diese Frameworks erleichtern die Integration und Nutzung von Large Language Models (LLMs) in verschiedene Anwendungen.

=== LangChain ===
'''Beschreibung:''' LangChain ist ein Framework, das die Entwicklung von Anwendungen, die durch Sprachmodelle unterstützt werden, vereinfacht. Es bietet Tools für Kettenbildung (Chaining), Agentenentwicklung und Datenaugmentation, um komplexe LLM-basierte Workflows zu erstellen. Umfassende Sammlung an Werkzeugen, Komponenten und Schnittstellen zur Vereinfachung der Arbeit mit großen Sprachmodellen. Ermöglicht die Entwicklung von Anwendungen, die kontextbezogen sind und in der Lage sind Daten von unterschiedlichen Quellen zu verarbeiten. '''Kernfunktionen:''' Modellintegrationen (z.B. OpenAI, Hugging Face). Datenverbindungen (z.B. Datenbanken, APIs). Chains (Verknüpfung von LLM-Aufrufen). Agenten (autonome LLM-gesteuerte Entscheidungsfindung). '''Anwendungsfälle:''' Chatbots und virtuelle Assistenten. Frage-Antwort-Systeme. Textzusammenfassung und -generierung.

=== LlamaIndex ===

=== Haystack (von deepset) ===

=== Semantic Kernel ===
'''Beschreibung:''' Semantic Kernel von Microsoft ist ein Open-Source-SDK, das die Integration von LLMs in herkömmliche Programmiersprachen ermöglicht. Es bietet eine flexible Architektur für die Kombination von KI-Funktionen mit benutzerdefiniertem Code. Bietet Entwicklern eine Möglichkeit generative KI mit bestehenden Code in bestehenden Applikationen zu kombinieren. '''Kernfunktionen:''' Funktionsplanung und -ausführung. Plugin-System für benutzerdefinierte Funktionen. Integration mit verschiedenen LLM-Anbietern. ermöglicht das erstellen von KI Agenten. '''Anwendungsfälle:''' Automatisierung von Geschäftsprozessen. Intelligente Suchanwendungen. Persönliche KI-Assistenten. === Spring Boot Ai

== LLM-Inferenz-Engines ==
LLM-Inferenz-Engines sind Softwarebibliotheken oder Frameworks, die zur effizienten Ausführung von Large Language Models (LLMs) verwendet werden. Sie optimieren die Modellinferenz, um die Latenz zu reduzieren und den Durchsatz zu erhöhen. Hier sind einige wichtige LLM-Inferenz-Engines:

=== vLLM ===
Beschreibung: vLLM ist eine schnelle und benutzerfreundliche Inferenz- und Serving-Engine für LLMs. Sie nutzt PagedAttention, einen neuartigen Aufmerksamkeitsalgorithmus, der von der virtuellen Speicherverwaltung in Betriebssystemen inspiriert ist, um den Durchsatz erheblich zu steigern. Wichtige Merkmale: PagedAttention für effiziente Schlüssel-Wert-Cache-Verwaltung Kontinuierliches Batching von Anfragen Optimierte CUDA-Kernel Unterstützung für Quantisierung (GPTQ, AWQ) Vorteile: Hoher Durchsatz, niedrige Latenz, effiziente Ressourcennutzung. Verwendung: Geeignet für Produktionsumgebungen, in denen hohe Leistung und Skalierbarkeit erforderlich sind.

=== Hugging Face Text Generation Inference (TGI) ===
Beschreibung: TGI ist eine Inferenz-Engine von Hugging Face, die auf einfache Bereitstellung und hohe Leistung ausgelegt ist. Wichtige Merkmale: Optimiert für Hugging Face Transformer-Modelle Unterstützung für verschiedene Hardwarebeschleuniger (GPUs, CPUs) Flexibles und erweiterbares Design Verwendet in Hugging Face Diensten wie Hugging Chat und der Inference API. Vorteile: Einfache Integration mit dem Hugging Face Ökosystem, gute Leistung. Verwendung: Beliebt für die Bereitstellung von Hugging Face Modellen in Produktionsumgebungen.

=== llama.cpp ===
Beschreibung: llama.cpp ist eine C++-Implementierung des Llama-Modells, die auf Leistung und Effizienz ausgelegt ist, insbesondere auf Hardware wie Apple Silicon. Wichtige Merkmale: Reine C++-Implementierung ohne Abhängigkeiten Optimiert für CPU-Inferenz Gute Unterstützung für Apple Silicon Schnelle ausführung auf Verbraucherhardware. Vorteile: Niedriger Ressourcenverbrauch, gute Leistung auf CPUs. Verwendung: Ideal für lokale Inferenz auf Laptops und anderen Geräten mit begrenzten Ressourcen.

=== OpenVINO ===
Beschreibung: OpenVINO (Open Visual Inference and Neural Network Optimization) ist ein Toolkit von Intel zur Optimierung und Bereitstellung von KI-Modellen, einschließlich LLMs. Wichtige Merkmale: Unterstützung für verschiedene Hardwareplattformen (CPUs, GPUs, VPU) Optimierungen für Intel-Hardware Werkzeuge zur Modelloptimierung und -konvertierung Vorteile: Gute Leistung auf Intel-Hardware, Unterstützung für verschiedene Hardwareplattformen. Verwendung: Geeignet für die Bereitstellung von LLMs auf Intel-basierter Hardware.

=== GGML - GGUF ===
Beschreibung: GGML (auch in Verbindung mit GGUF verwendet) ist ein C-Bibliothek für Machine Learning, die speziell für die Ausführung von LLMs auf Verbraucherhardware entwickelt wurde. GGUF ist das neue Quantisierungsformat von GGML. Wichtige Merkmale: CPU-zentriert, mit teilweiser GPU-Unterstützung über OpenCL oder Metal. Ermöglicht die Ausführung großer Modelle auf Geräten mit begrenztem Speicher. Breite Unterstützung für viele Quantisierungs Methoden. GGUF hat das ältere GGML Format abgelöst. Vorteile: Ermöglicht die Inferenz auf schwächeren Geräten. Verwendung: Besonders für das lokale Nutzen von LLM's von Bedeutung.

== ML-Compiler und verwandte Tools ==

* '''ML-Compiler''' sind Software-Tools, die darauf abzielen, maschinelle Lernmodelle (ML) zu optimieren und auf verschiedene Hardware-Plattformen zu übersetzen. Sie ermöglichen eine effiziente Ausführung von ML-Modellen auf unterschiedlichen Geräten und verbessern die Leistung durch Optimierungen wie Fusionierung von Operationen, Speicheroptimierung und Code-Generierung.

=== Apache TVM ===

* '''Beschreibung:''' Apache TVM ist ein Open-Source-Compiler-Framework für maschinelles Lernen, das die Leistung von ML-Modellen auf verschiedenen Hardware-Plattformen optimiert. Es unterstützt eine breite Palette von Backend-Hardware, darunter CPUs, GPUs und spezialisierte Beschleuniger.

* '''Funktionen:'''
** Modelloptimierung: TVM führt verschiedene Optimierungen durch, wie z.B. Operatorenfusion, Layout-Transformationen und Speichermanagement, um die Ausführungsgeschwindigkeit und den Speicherverbrauch zu verbessern.
** Code-Generierung: TVM generiert optimierten Code für verschiedene Hardware-Backends, was eine effiziente Ausführung auf unterschiedlichen Plattformen ermöglicht.
** Hardware-Unterstützung: TVM unterstützt eine Vielzahl von Hardware-Plattformen, darunter CPUs (x86, ARM), GPUs (NVIDIA, AMD, Intel) und spezialisierte Beschleuniger (TPUs, FPGAs).
** Framework-Integration: TVM kann mit verschiedenen ML-Frameworks wie TensorFlow, PyTorch und ONNX integriert werden.
** Relay IR: verwendet eine funktionale relationale IR, um Optimierungen durchzuführen.

* '''Anwendung:''' TVM wird verwendet, um ML-Modelle für das Edge Computing, eingebettete Systeme und Cloud-Bereitstellungen zu optimieren.

=== Google MLIR (Multi-Level Intermediate Representation) ===

* '''Beschreibung:''' MLIR ist ein Compiler-Infrastrukturprojekt, das eine flexible und erweiterbare Zwischenrepräsentation (IR) für die Optimierung von ML-Modellen bietet. Es ist ein modulares System, das verschiedene Abstraktionsebenen unterstützt und eine Vielzahl von Optimierungen ermöglicht.

* '''Funktionen:'''
** Multi-Level IR: MLIR unterstützt verschiedene Abstraktionsebenen, von hochrangigen ML-Operationen bis hin zu hardwarenahen Operationen.
** Dialekte: MLIR verwendet Dialekte, um verschiedene Abstraktionsebenen und Optimierungen darzustellen.
** Optimierungs-Framework: MLIR bietet eine Reihe von Optimierungspässen, die auf verschiedenen Abstraktionsebenen angewendet werden können.
** Code-Generierung: MLIR kann Code für verschiedene Hardware-Backends generieren, darunter CPUs, GPUs und spezialisierte Beschleuniger.
** Erweiterbarkeit: MLIR ist so konzipiert, dass es erweiterbar ist, was es ermöglicht, neue Dialekte und Optimierungen hinzuzufügen.

* '''Anwendung:''' MLIR wird verwendet, um ML-Modelle für verschiedene Anwendungen zu optimieren, darunter Inferenz, Training und hardwarebeschleunigte Berechnungen. Es ist die Grundlage vieler Google ML-Tools, einschließlich XLA.

=== TensorFlow XLA (Accelerated Linear Algebra) ===

* '''Beschreibung:''' XLA ist ein Compiler für lineare Algebra, der TensorFlow-Modelle optimiert. Es führt verschiedene Optimierungen durch, um die Ausführungsgeschwindigkeit und den Speicherverbrauch zu verbessern, insbesondere auf GPUs und TPUs.

* '''Funktionen:'''
** Just-in-Time (JIT) Kompilierung: XLA kompiliert TensorFlow-Graphen zur Laufzeit, um die Ausführungsgeschwindigkeit zu verbessern.
** Operatorenfusion: XLA fusioniert mehrere Operationen zu einer einzigen Operation, um den Overhead zu reduzieren.
** Speichermanagement: XLA optimiert die Speicherzuweisung und -freigabe, um den Speicherverbrauch zu minimieren.
** Hardware-Beschleunigung: XLA ist speziell für die Beschleunigung von ML-Modellen auf GPUs und TPUs konzipiert.
** Backends: XLA unterstützt verschiedene Backend Hardware, besonders die Google TPU, aber auch Nvidia und AMD GPUs.

* '''Anwendung:''' XLA wird verwendet, um die Leistung von TensorFlow-Modellen für Training und Inferenz zu verbessern.

=== Meta Glow ===

* '''Beschreibung:''' Glow ist ein Compiler für neuronale Netzwerke, der von Meta (ehemals Facebook) entwickelt wurde. Er zielt darauf ab, die Leistung von ML-Modellen auf verschiedenen Hardware-Plattformen zu optimieren, insbesondere für Edge-Computing-Anwendungen.

* '''Funktionen:'''
** Optimierungen: Glow führt verschiedene Optimierungen durch, wie z.B. Operatorenfusion, Speichermanagement und Code-Generierung.
** Code-Generierung: Glow generiert optimierten Code für verschiedene Hardware-Backends, darunter CPUs und spezialisierte Beschleuniger.
** Edge-Computing-Fokus: Glow ist speziell für die Optimierung von ML-Modellen für Edge-Computing-Anwendungen konzipiert.
** Open Source: Glow ist ein Open-Source-Projekt, das von der Community weiterentwickelt wird.
** IR: Glow verwendet eine eigene interne IR, um Optimierungen durchzuführen.

* '''Anwendung:''' Glow wird verwendet, um ML-Modelle für Edge-Computing-Anwendungen zu optimieren, z.B. für Computer Vision, natürliche Sprachverarbeitung und andere Anwendungen, die auf eingebetteten Systemen ausgeführt werden.

=== ONNX (Open Neural Network Exchange) ===

* '''Beschreibung:''' ONNX ist ein offenes Format für die Darstellung von ML-Modellen. Es ermöglicht den Austausch von Modellen zwischen verschiedenen ML-Frameworks und Hardware-Plattformen. ONNX ist nicht direkt ein Compiler, sondern eine Zwischenrepräsentation, die von Compilern und Laufzeitumgebungen verwendet wird.

* '''Funktionen:'''
** Modell-Interoperabilität: ONNX ermöglicht den Austausch von Modellen zwischen verschiedenen ML-Frameworks wie TensorFlow, PyTorch und scikit-learn.
** Hardware-Unabhängigkeit: ONNX-Modelle können auf verschiedenen Hardware-Plattformen ausgeführt werden, was die Bereitstellung von ML-Modellen vereinfacht.
** Standardisierung: ONNX ist ein offener Standard, der von einer breiten Palette von Unternehmen und Organisationen unterstützt wird.
** Graph-Repräsentation: ONNX repräsentiert ML-Modelle als gerichtete azyklische Graphen (DAGs).
** Laufzeitumgebungen: ONNX-Laufzeitumgebungen wie ONNX Runtime optimieren und führen ONNX-Modelle aus.

* '''Anwendung:''' ONNX wird verwendet, um die Interoperabilität von ML-Modellen zu verbessern und die Bereitstellung von Modellen auf verschiedenen Hardware-Plattformen zu vereinfachen. Es ist ein wichtiger Bestandteil der ML-Toolchain, der von Compilern und Laufzeitumgebungen verwendet wird.</text>
      <sha1>4veao5wh3r5kto7x3lvcm8fi5tootwr</sha1>
    </revision>
  </page>
  <page>
    <title>Kulturbühne Kultavida</title>
    <ns>0</ns>
    <id>77</id>
    <revision>
      <id>271</id>
      <timestamp>2025-06-24T16:55:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>271</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="557" sha1="6m8fwr4pyu75dl0icf3s0waqgxj1qmq" xml:space="preserve">Die Kulturbühne Kultavida in Ahrensburg wurde von Oliver Arndt ins Leben gerufen. Die gemütliche und persönliche Kleinkunstbühne befindet sich auf Wohnzimmer-Niveau in der Großen Straße 32, mitten im Zentrum von Ahrensburg. Sie verfügt über etwa 40 Sitzplätze sowie bis zu 60 Stehplätze.
Als Kleinkunst- und Kulturhalle versteht sich die Kulturbühne als Plattform für Musik, Lesungen, Theater und Workshops und bietet ein abwechslungsreiches Programm: Offene Bühne, Konzerte, Lesungen, Comedy und Workshops.

==Weblink==
* https://kultavida.de/</text>
      <sha1>6m8fwr4pyu75dl0icf3s0waqgxj1qmq</sha1>
    </revision>
  </page>
  <page>
    <title>Regelmäßige Feste &amp; Veranstaltungen</title>
    <ns>0</ns>
    <id>78</id>
    <revision>
      <id>272</id>
      <timestamp>2025-06-24T17:45:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Ahrensburger Stadtfest * Kultur4Ort * Schlosspark-Kinosommer * Ahrensburger Weihnachtsmarkt“</comment>
      <origin>272</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="93" sha1="o91vt830abezi5dzbxugl3motehvm6r" xml:space="preserve">* Ahrensburger Stadtfest
* Kultur4Ort
* Schlosspark-Kinosommer
* Ahrensburger Weihnachtsmarkt</text>
      <sha1>o91vt830abezi5dzbxugl3motehvm6r</sha1>
    </revision>
    <revision>
      <id>273</id>
      <parentid>272</parentid>
      <timestamp>2025-06-24T17:52:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>273</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="135" sha1="73qfoqeq1d0vsm1sz07ovgo5gnu1via" xml:space="preserve">* Ahrensburger Stadtfest
* Kultur4Ort
* Schlosspark-Kinosommer
* Ahrensburger Weihnachtsmarkt
* Oktoberfest
* Weinfest
* Music for free</text>
      <sha1>73qfoqeq1d0vsm1sz07ovgo5gnu1via</sha1>
    </revision>
    <revision>
      <id>274</id>
      <parentid>273</parentid>
      <timestamp>2025-06-24T18:03:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>274</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="186" sha1="q8xwjhr044wk7uxhk2m1u5xd148xpdb" xml:space="preserve">* Ahrensburger Stadtfest
* Kultur4Ort
* Schlosspark-Kinosommer
* Ahrensburger Weihnachtsmarkt
* Oktoberfest
* Weinfest
* Music for free
* Osterfeuer:
* Schleswig-Holstein Musik Festival:</text>
      <sha1>q8xwjhr044wk7uxhk2m1u5xd148xpdb</sha1>
    </revision>
    <revision>
      <id>275</id>
      <parentid>274</parentid>
      <timestamp>2025-06-25T02:21:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>275</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="190" sha1="hrua6zglzcflb1w91a6w2ftewh3f4za" xml:space="preserve">* [[Ahrensburger Stadtfest]]
* Kultur4Ort
* Schlosspark-Kinosommer
* Ahrensburger Weihnachtsmarkt
* Oktoberfest
* Weinfest
* Music for free
* Osterfeuer:
* Schleswig-Holstein Musik Festival:</text>
      <sha1>hrua6zglzcflb1w91a6w2ftewh3f4za</sha1>
    </revision>
    <revision>
      <id>276</id>
      <parentid>275</parentid>
      <timestamp>2025-06-25T19:43:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>276</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="194" sha1="4mmt72sr9k8xyrkwpz46p0bt9q1qyve" xml:space="preserve">* [[Ahrensburger Stadtfest]]
* [[Kultur4Ort]]
* Schlosspark-Kinosommer
* Ahrensburger Weihnachtsmarkt
* Oktoberfest
* Weinfest
* Music for free
* Osterfeuer:
* Schleswig-Holstein Musik Festival:</text>
      <sha1>4mmt72sr9k8xyrkwpz46p0bt9q1qyve</sha1>
    </revision>
    <revision>
      <id>277</id>
      <parentid>276</parentid>
      <timestamp>2025-06-25T20:00:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>277</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="147" sha1="048h35p9574truezxj366q80mokj72e" xml:space="preserve">* [[Ahrensburger Stadtfest]]
* [[Kultur4Ort]]
* [[Schlosspark-Kinosommer]]
* Ahrensburger Weihnachtsmarkt
* Oktoberfest
* Weinfest
* Music for free</text>
      <sha1>048h35p9574truezxj366q80mokj72e</sha1>
    </revision>
    <revision>
      <id>278</id>
      <parentid>277</parentid>
      <timestamp>2025-06-25T20:09:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>278</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="104" sha1="s3jhydxe68nro1kg83cftu6ct9btlo1" xml:space="preserve">* [[Ahrensburger Stadtfest]]
* [[Kultur4Ort]]
* Ahrensburger Weihnachtsmarkt
* Weinfest
* Music for free</text>
      <sha1>s3jhydxe68nro1kg83cftu6ct9btlo1</sha1>
    </revision>
    <revision>
      <id>279</id>
      <parentid>278</parentid>
      <timestamp>2025-06-25T20:18:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>279</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="108" sha1="9srx7f1rw1xszi10x0meelhvfnvgdpc" xml:space="preserve">* [[Ahrensburger Stadtfest]]
* [[Kultur4Ort]]
* [[Ahrensburger Weihnachtsmarkt]]
* Weinfest
* Music for free</text>
      <sha1>9srx7f1rw1xszi10x0meelhvfnvgdpc</sha1>
    </revision>
    <revision>
      <id>280</id>
      <parentid>279</parentid>
      <timestamp>2025-06-25T20:38:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>280</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="112" sha1="kd3iwmoi6lzoj61gxaxbei96hjrm0o1" xml:space="preserve">* [[Ahrensburger Stadtfest]]
* [[Kultur4Ort]]
* [[Ahrensburger Weihnachtsmarkt]]
* [[Weinfest]]
* Music for free</text>
      <sha1>kd3iwmoi6lzoj61gxaxbei96hjrm0o1</sha1>
    </revision>
    <revision>
      <id>281</id>
      <parentid>280</parentid>
      <timestamp>2025-06-25T21:13:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>281</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="116" sha1="d7k696n48vuhp7ahy0hkkogb7d2127i" xml:space="preserve">* [[Ahrensburger Stadtfest]]
* [[Kultur4Ort]]
* [[Ahrensburger Weihnachtsmarkt]]
* [[Weinfest]]
* [[Music for free]]</text>
      <sha1>d7k696n48vuhp7ahy0hkkogb7d2127i</sha1>
    </revision>
  </page>
  <page>
    <title>Ahrensburger Stadtfest</title>
    <ns>0</ns>
    <id>79</id>
    <revision>
      <id>282</id>
      <timestamp>2025-06-25T02:47:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>282</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="451" sha1="1c5o12a3calvzmj86zup8uqm9ffk907" xml:space="preserve">==Ahrensburger Stadtfest==

Das Ahrensburger Stadtfest ist ein dreitägiges Volksfest, das jährlich am zweiten Juniwochenende im Zentrum von Ahrensburg stattfindet. Veranstalter ist das Ahrensburger Stadtforum (der Verein der Kaufleute und Gewerbetreibenden), unterstützt von der Stadt Ahrensburg.
Veranstaltungsorte: Große Straße, Hagener Allee, Rondell, Manhagener Allee, Hamburger Straße.

==Weblinks==
* https://www.ahrensburger-stadtfest.de/</text>
      <sha1>1c5o12a3calvzmj86zup8uqm9ffk907</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Razor Views</title>
    <ns>0</ns>
    <id>80</id>
    <revision>
      <id>283</id>
      <timestamp>2025-06-25T03:52:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC – Speckzettel &amp; Übungen =  == MVC Architektur: Grundprinzip == * **Model:** Daten &amp; Geschäftslogik (z.B. DB-Zugriffe, Validierung) * **View:** Darstellung der UI (Razor/HTML-Templates) * **Controller:** Vermittler – verarbeitet Anfragen, steuert Model &amp; View  === Model-Typen: === * Geschäftsmodell: Reale Entitäten (z.B. Produkt, Kunde) * View Model: Für die Darstellung optimiert (z.B. Zusammenfassung mehrerer Models)  == Ablauf…“</comment>
      <origin>283</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5301" sha1="bg1i4hrgqhjmt7ffc5iqdhjqy2sb6c7" xml:space="preserve">= ASP.NET Core MVC – Speckzettel &amp; Übungen =

== MVC Architektur: Grundprinzip ==
* **Model:** Daten &amp; Geschäftslogik (z.B. DB-Zugriffe, Validierung)
* **View:** Darstellung der UI (Razor/HTML-Templates)
* **Controller:** Vermittler – verarbeitet Anfragen, steuert Model &amp; View

=== Model-Typen: ===
* Geschäftsmodell: Reale Entitäten (z.B. Produkt, Kunde)
* View Model: Für die Darstellung optimiert (z.B. Zusammenfassung mehrerer Models)

== Ablauf einer MVC-Anfrage ==
# Routing: URL → Controller/Action
# Model Binding: Request-Daten werden Parametern/Models zugewiesen
# Validierung: Daten werden geprüft, Fehler landen in ModelState
# Action-Logik: Daten holen/bearbeiten, ViewModel erstellen
# View-Auswahl: View + Model werden an die View-Engine (Razor) übergeben
# View-Rendering: Razor erzeugt das HTML
# Response: HTML wird an den Client geschickt

== Beispielcode ==

=== Aktivierung in Program.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Program.cs
builder.Services.AddControllersWithViews(); // MVC aktivieren
&lt;/syntaxhighlight&gt;

=== Controller Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
// HomeController.cs
public class HomeController : Controller
{
    [Route("home")]
    public IActionResult Index()
    {
        return View(); // Rendert Views/Home/Index.cshtml
    }
}
&lt;/syntaxhighlight&gt;

=== View Beispiel ===
&lt;syntaxhighlight lang="html"&gt;
// Views/Home/Index.cshtml
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Asp.Net Core App&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    Willkommen!
&lt;/body&gt;
&lt;/html&gt;
&lt;/syntaxhighlight&gt;

----

== Razor-Grundlagen ==

* **@{...}**: C#-Codeblock
* **@variable**: Variablen-Ausgabe
* **@if, @else, @switch, @foreach, @for**: Kontrollstrukturen
* **@Html.Raw()**: Rohes HTML ausgeben (Achtung: XSS-Gefahr!)

=== Razor-Control-Flow Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
@if (person.Geburtsdatum.HasValue)
{
    &lt;p&gt;Alter: @(Math.Round((DateTime.Now - person.Geburtsdatum.Value).TotalDays / 365.25)) Jahre&lt;/p&gt;
}
else
{
    &lt;p&gt;Geburtsdatum unbekannt&lt;/p&gt;
}
&lt;/syntaxhighlight&gt;

=== Übung: Kontrollstrukturen ===
&lt;pre&gt;
Schreibe einen Razor-View, der eine Liste von Personen mit Name und Geschlecht anzeigt.
&lt;/pre&gt;

----

== ViewData &amp; ViewBag ==

* **ViewData["key"]**: Dictionary, cast nötig
* **ViewBag.key**: Dynamisches Objekt, kein Cast nötig

=== Beispiel: Übergabe im Controller ===
&lt;syntaxhighlight lang="csharp"&gt;
// Controller
ViewData["Titel"] = "Meine App";
ViewBag.Personen = personenListe;
&lt;/syntaxhighlight&gt;

=== Beispiel: Zugriff in View ===
&lt;syntaxhighlight lang="csharp"&gt;
// View
&lt;title&gt;@ViewData["Titel"]&lt;/title&gt;
@foreach(var p in ViewBag.Personen) { &lt;div&gt;@p.Name&lt;/div&gt; }
&lt;/syntaxhighlight&gt;

=== Übung: ViewBag ===
&lt;pre&gt;
Übertrage die aktuelle Uhrzeit per ViewBag in die View und zeige sie dort an.
&lt;/pre&gt;

----

== Starke Typisierung mit @model ==

* View erhält direkt eine Model-Instanz → IntelliSense, Typ-Sicherheit

=== Beispiel: Übergabe einer Liste ===
&lt;syntaxhighlight lang="csharp"&gt;
// Controller
public IActionResult Index()
{
    List&lt;Person&gt; personen = new();
    // Personen füllen...
    return View(personen);
}
&lt;/syntaxhighlight&gt;

&lt;syntaxhighlight lang="csharp"&gt;
// Index.cshtml
@model IEnumerable&lt;Person&gt;
@foreach(var p in Model)
{
    &lt;div&gt;@p.Name - @p.Geschlecht&lt;/div&gt;
}
&lt;/syntaxhighlight&gt;

=== Übung: Starke Typisierung ===
&lt;pre&gt;
Erstelle ein ViewModel mit Person &amp; Produkt und zeige beides in einer View an.
&lt;/pre&gt;

----

== Lokale Funktionen im View ==

&lt;syntaxhighlight lang="csharp"&gt;
@functions {
    double? AlterBerechnen(DateTime? geburt)
    {
        if(geburt != null)
            return Math.Round((DateTime.Now - geburt.Value).TotalDays/365.25);
        else
            return null;
    }
}
&lt;!-- Nutzung: --&gt;
@AlterBerechnen(person.Geburtsdatum)
&lt;/syntaxhighlight&gt;

----

== _ViewImports.cshtml ==
* Gemeinsame Direktiven für alle Views eines Ordners:
&lt;syntaxhighlight lang="csharp"&gt;
@using YourProject.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
&lt;/syntaxhighlight&gt;

----

== Shared Views ==
* In **Views/Shared** ablegen → wiederverwendbar
* Beispiel: _Layout.cshtml, _ProductCard.cshtml (Partial Views)

=== Beispiel: Shared View verwenden ===
&lt;syntaxhighlight lang="csharp"&gt;
// Controller
public IActionResult All()
{
    return View(); // Sucht zuerst in Views/Controller, dann Views/Shared
}
&lt;/syntaxhighlight&gt;

---

== Wichtige Best Practices ==
* Trenne Präsentation (View), Logik (Controller), und Daten (Model)!
* Nutze starke Typisierung (ViewModels)!
* Wiederverwendbare Views in Views/Shared ablegen!
* Html.Raw() **nur** bei vertrauenswürdigem Inhalt!
* Konsistenz: Nutze entweder ViewBag **oder** ViewData – nicht beides wild gemischt!

----

= Interview-Checkliste MVC =
* Razor-Syntax erklären &amp; anwenden (inkl. Control-Flow, Html.Raw)
* ViewModels &amp; starke Typisierung erklären
* Sicherheitsaspekte (keine ungesicherten Daten in Html.Raw)
* Einsatz von _ViewImports.cshtml &amp; Shared Views begründen

----

== Mini-Übungsaufgaben ==
# Erstelle eine View, die alle Produkte als Tabelle darstellt.
# Übergebe eine Fehlermeldung per ViewBag und zeige sie prominent in der View an.
# Verwende ein ViewModel, um Person und deren Produktliste in einer View darzustellen.
# Schreibe eine lokale Funktion in einer View, die das Alter einer Person berechnet.</text>
      <sha1>bg1i4hrgqhjmt7ffc5iqdhjqy2sb6c7</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Grud Operatoren</title>
    <ns>0</ns>
    <id>81</id>
    <revision>
      <id>284</id>
      <timestamp>2025-06-25T10:46:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Controller: Lesen (Index) &amp; Erstellen (Create) == === Beispiel: PersonenController.cs === &lt;syntaxhighlight lang="csharp"&gt; // Index (Read) public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder) {     var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);     return View(personen); }  // Create (GET) public IActionResult Create() {     return View(); }  // Create (POST) [Htt…“</comment>
      <origin>284</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2639" sha1="ops6shp7sd3jqnv1i49xe1axknfcvhv" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="html+razor"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;syntaxhighlight lang="html+razor"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>ops6shp7sd3jqnv1i49xe1axknfcvhv</sha1>
    </revision>
    <revision>
      <id>285</id>
      <parentid>284</parentid>
      <timestamp>2025-06-25T11:02:30Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel: Create.cshtml (Erstellen) */</comment>
      <origin>285</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2609" sha1="2ndl8t61r2m8cmmf8bj1kefy3fid25h" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="html+razor"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;pre&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>2ndl8t61r2m8cmmf8bj1kefy3fid25h</sha1>
    </revision>
    <revision>
      <id>286</id>
      <parentid>285</parentid>
      <timestamp>2025-06-25T11:02:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel: Index.cshtml (Lesen) */</comment>
      <origin>286</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2602" sha1="gnpel3ttkjl2ust29c5nl9kewac6d4u" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="htm"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;pre&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>gnpel3ttkjl2ust29c5nl9kewac6d4u</sha1>
    </revision>
    <revision>
      <id>287</id>
      <parentid>286</parentid>
      <timestamp>2025-06-25T11:03:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel: Create.cshtml (Erstellen) */</comment>
      <origin>287</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2625" sha1="hnvjmgqozuynlt30xw4689fthc84l7y" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="htm"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;syntaxhighlight lang="htm"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>hnvjmgqozuynlt30xw4689fthc84l7y</sha1>
    </revision>
    <revision>
      <id>288</id>
      <parentid>287</parentid>
      <timestamp>2025-06-25T11:04:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>288</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2626" sha1="6gcyb80412ifgtwwunaaovxl5p3d50k" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="htm"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;syntaxhighlight lang="html"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>6gcyb80412ifgtwwunaaovxl5p3d50k</sha1>
    </revision>
    <revision>
      <id>289</id>
      <parentid>288</parentid>
      <timestamp>2025-06-25T11:05:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>289</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2627" sha1="gghzrfuhhqszvaerslnjfog2s1frdgb" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="html"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;syntaxhighlight lang="html"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>gghzrfuhhqszvaerslnjfog2s1frdgb</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Identity &amp; Authorization</title>
    <ns>0</ns>
    <id>82</id>
    <revision>
      <id>290</id>
      <timestamp>2025-06-25T11:39:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „// Benutzerregistrierung ApplicationUser user = new ApplicationUser { UserName = registerDTO.Email, Email = registerDTO.Email }; IdentityResult result = await _userManager.CreateAsync(user, registerDTO.Password);  // Benutzer anmelden var result = await _signInManager.PasswordSignInAsync(     loginDTO.Email,     loginDTO.Password,     isPersistent: false,     lockoutOnFailure: false);  // Rolle prüfen if (await _userManager.IsInRoleAsync(user, "Admin"))…“</comment>
      <origin>290</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1929" sha1="e11ftd2jr9fxzcrzrfsf5i3vdbtwegw" xml:space="preserve">// Benutzerregistrierung
ApplicationUser user = new ApplicationUser { UserName = registerDTO.Email, Email = registerDTO.Email };
IdentityResult result = await _userManager.CreateAsync(user, registerDTO.Password);

// Benutzer anmelden
var result = await _signInManager.PasswordSignInAsync(
    loginDTO.Email,
    loginDTO.Password,
    isPersistent: false,
    lockoutOnFailure: false);

// Rolle prüfen
if (await _userManager.IsInRoleAsync(user, "Admin")) {
    // Admin-spezifische Logik
}

// Rolle erstellen (falls nicht vorhanden)
if (!await _roleManager.RoleExistsAsync("Admin")) {
    await _roleManager.CreateAsync(new ApplicationRole("Admin"));
}

// Benutzer zu Rolle hinzufügen
await _userManager.AddToRoleAsync(user, "Admin");

// Benutzer abmelden
await _signInManager.SignOutAsync();

// E-Mail prüfen (bereits registriert?)
var existingUser = await _userManager.FindByEmailAsync(email);
return Json(existingUser == null);

// [Authorize] zum Schutz von Aktionen
[Authorize]
public IActionResult ProtectedAction() { ... }

// [AllowAnonymous] für anonyme Zugriffe
[AllowAnonymous]
public IActionResult PublicAction() { ... }

// [ValidateAntiForgeryToken] gegen CSRF
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult SubmitForm() { ... }

// Benutzerdefinierte Richtlinie in Program.cs
builder.Services.AddAuthorization(options =&gt; {
    options.AddPolicy("NotAuthorized", policy =&gt; policy.RequireAssertion(
        context =&gt; !context.User.Identity.IsAuthenticated));
});

// Identity-Konfiguration in Program.cs
builder.Services.AddIdentity&lt;ApplicationUser, ApplicationRole&gt;(options =&gt; {
    options.Password.RequiredLength = 8;
    options.Password.RequireNonAlphanumeric = true;
}).AddEntityFrameworkStores&lt;ApplicationDbContext&gt;()
  .AddDefaultTokenProviders();

// Identity-Cookie konfigurieren
builder.Services.ConfigureApplicationCookie(options =&gt; {
    options.LoginPath = "/Account/Login";
});</text>
      <sha1>e11ftd2jr9fxzcrzrfsf5i3vdbtwegw</sha1>
    </revision>
    <revision>
      <id>291</id>
      <parentid>290</parentid>
      <timestamp>2025-06-25T11:43:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>291</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1942" sha1="2ca5f8ai4qpwgitlmm9a3j3wpaz3r96" xml:space="preserve">&lt;pre&gt;
// Benutzerregistrierung
ApplicationUser user = new ApplicationUser { UserName = registerDTO.Email, Email = registerDTO.Email };
IdentityResult result = await _userManager.CreateAsync(user, registerDTO.Password);

// Benutzer anmelden
var result = await _signInManager.PasswordSignInAsync(
    loginDTO.Email,
    loginDTO.Password,
    isPersistent: false,
    lockoutOnFailure: false);

// Rolle prüfen
if (await _userManager.IsInRoleAsync(user, "Admin")) {
    // Admin-spezifische Logik
}

// Rolle erstellen (falls nicht vorhanden)
if (!await _roleManager.RoleExistsAsync("Admin")) {
    await _roleManager.CreateAsync(new ApplicationRole("Admin"));
}

// Benutzer zu Rolle hinzufügen
await _userManager.AddToRoleAsync(user, "Admin");

// Benutzer abmelden
await _signInManager.SignOutAsync();

// E-Mail prüfen (bereits registriert?)
var existingUser = await _userManager.FindByEmailAsync(email);
return Json(existingUser == null);

// [Authorize] zum Schutz von Aktionen
[Authorize]
public IActionResult ProtectedAction() { ... }

// [AllowAnonymous] für anonyme Zugriffe
[AllowAnonymous]
public IActionResult PublicAction() { ... }

// [ValidateAntiForgeryToken] gegen CSRF
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult SubmitForm() { ... }

// Benutzerdefinierte Richtlinie in Program.cs
builder.Services.AddAuthorization(options =&gt; {
    options.AddPolicy("NotAuthorized", policy =&gt; policy.RequireAssertion(
        context =&gt; !context.User.Identity.IsAuthenticated));
});

// Identity-Konfiguration in Program.cs
builder.Services.AddIdentity&lt;ApplicationUser, ApplicationRole&gt;(options =&gt; {
    options.Password.RequiredLength = 8;
    options.Password.RequireNonAlphanumeric = true;
}).AddEntityFrameworkStores&lt;ApplicationDbContext&gt;()
  .AddDefaultTokenProviders();

// Identity-Cookie konfigurieren
builder.Services.ConfigureApplicationCookie(options =&gt; {
    options.LoginPath = "/Account/Login";
});
&lt;/pre&gt;</text>
      <sha1>2ca5f8ai4qpwgitlmm9a3j3wpaz3r96</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Entity Framework Core</title>
    <ns>0</ns>
    <id>83</id>
    <revision>
      <id>292</id>
      <timestamp>2025-06-25T12:04:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Entity Framework Core (EF Core) Spickzettel =  == Was ist EF Core? == * EF Core ist ein moderner, leichter und erweiterbarer Object-Relational Mapper (ORM) für .NET. * Erlaubt die Arbeit mit Datenbankdaten als .NET-Objekte (Entities), anstatt mit SQL-Queries.  == Grundkonzepte == * '''Entities''': C#-Klassen, die Datenbanktabellen repräsentieren. * '''DbContext''': Brücke zwischen Entities und Datenbank. * '''DbSet&lt;TEntity&gt;''': Sammlung einer Entitä…“</comment>
      <origin>292</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5538" sha1="r2l5p5vz1l04vjzoiy9ame7s138zh8d" xml:space="preserve">= Entity Framework Core (EF Core) Spickzettel =

== Was ist EF Core? ==
* EF Core ist ein moderner, leichter und erweiterbarer Object-Relational Mapper (ORM) für .NET.
* Erlaubt die Arbeit mit Datenbankdaten als .NET-Objekte (Entities), anstatt mit SQL-Queries.

== Grundkonzepte ==
* '''Entities''': C#-Klassen, die Datenbanktabellen repräsentieren.
* '''DbContext''': Brücke zwischen Entities und Datenbank.
* '''DbSet&lt;TEntity&gt;''': Sammlung einer Entität (Tabelle).

== Beispiel: Entities und DbContext ==
&lt;syntaxhighlight lang="csharp"&gt;
public class Country
{
    public int CountryID { get; set; }
    public string CountryName { get; set; }
    public ICollection&lt;Person&gt; Persons { get; set; }
}
public class Person
{
    public int PersonID { get; set; }
    public string PersonName { get; set; }
    public int CountryID { get; set; }
    public Country Country { get; set; }
}

public class PersonsDbContext : DbContext
{
    public DbSet&lt;Country&gt; Countries { get; set; }
    public DbSet&lt;Person&gt; Persons { get; set; }
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity&lt;Country&gt;().ToTable("Countries");
        modelBuilder.Entity&lt;Person&gt;().ToTable("Persons");
    }
}
&lt;/syntaxhighlight&gt;

== Wichtige NuGet-Pakete ==
* &lt;code&gt;Microsoft.EntityFrameworkCore&lt;/code&gt;
* &lt;code&gt;Microsoft.EntityFrameworkCore.SqlServer&lt;/code&gt; (oder Sqlite, Npgsql etc.)
* &lt;code&gt;Microsoft.EntityFrameworkCore.Tools&lt;/code&gt;

== Verbindung zur Datenbank ==
&lt;syntaxhighlight lang="csharp"&gt;
// In Program.cs oder Startup.cs
builder.Services.AddDbContext&lt;PersonsDbContext&gt;(options =&gt;
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));
&lt;/syntaxhighlight&gt;

''appsettings.json'':
&lt;syntaxhighlight lang="json"&gt;
{
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=PersonsDatabase;Integrated Security=True;"
  }
}
&lt;/syntaxhighlight&gt;

== Datenbank initialisieren (Seeding) ==
&lt;syntaxhighlight lang="csharp"&gt;
protected override void OnModelCreating(ModelBuilder modelBuilder)
{
    modelBuilder.Entity&lt;Country&gt;().HasData(
        new Country { CountryID = 1, CountryName = "Deutschland" }
    );
    modelBuilder.Entity&lt;Person&gt;().HasData(
        new Person { PersonID = 1, PersonName = "Max Mustermann", CountryID = 1 }
    );
}
&lt;/syntaxhighlight&gt;

== Code First Migration ==
# Migration erstellen:
&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;
# Migration anwenden:
&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

== CRUD-Operationen mit EF Core ==
* '''Create''':  
  &lt;syntaxhighlight lang="csharp"&gt;
var person = new Person { PersonName = "Anna" };
context.Persons.Add(person);
context.SaveChanges();
  &lt;/syntaxhighlight&gt;
* '''Read''':  
  &lt;syntaxhighlight lang="csharp"&gt;
var people = context.Persons.ToList();
var one = context.Persons.FirstOrDefault(p =&gt; p.PersonID == 1);
  &lt;/syntaxhighlight&gt;
* '''Update''':  
  &lt;syntaxhighlight lang="csharp"&gt;
var person = context.Persons.Find(1);
person.PersonName = "Maria";
context.SaveChanges();
  &lt;/syntaxhighlight&gt;
* '''Delete''':  
  &lt;syntaxhighlight lang="csharp"&gt;
var person = context.Persons.Find(1);
context.Persons.Remove(person);
context.SaveChanges();
  &lt;/syntaxhighlight&gt;

== Beziehungen (Relationships) ==
* '''One-to-Many''': Ein Land hat viele Personen, eine Person gehört zu einem Land.
* '''Foreign Key''' wird automatisch erkannt (CountryID in Person).
* Mit Navigation Properties arbeiten.

== LINQ-Abfragen ==
&lt;syntaxhighlight lang="csharp"&gt;
var deutsche = context.Persons.Where(p =&gt; p.Country.CountryName == "Deutschland").ToList();
&lt;/syntaxhighlight&gt;

== Eager Loading mit Include ==
&lt;syntaxhighlight lang="csharp"&gt;
var personsWithCountry = context.Persons.Include(p =&gt; p.Country).ToList();
&lt;/syntaxhighlight&gt;

== Fluent API (Erweiterte Konfiguration) ==
&lt;syntaxhighlight lang="csharp"&gt;
modelBuilder.Entity&lt;Person&gt;()
    .Property(p =&gt; p.PersonName)
    .IsRequired()
    .HasMaxLength(100);
&lt;/syntaxhighlight&gt;

== Stored Procedures verwenden ==
&lt;syntaxhighlight lang="csharp"&gt;
// Select
var result = context.Persons.FromSqlRaw("EXEC GetAllPersons").ToList();
// Insert
context.Database.ExecuteSqlRaw("EXEC InsertPerson @Name", new SqlParameter("@Name", "Max"));
&lt;/syntaxhighlight&gt;

== Dateien generieren (PDF/CSV) ==
* '''PDF (z.B. mit Rotativa):'''
&lt;syntaxhighlight lang="csharp"&gt;
return new ViewAsPdf("PersonsPDF", personsList);
&lt;/syntaxhighlight&gt;
* '''CSV (mit CsvHelper):'''
&lt;syntaxhighlight lang="csharp"&gt;
using (var writer = new StreamWriter("file.csv"))
using (var csv = new CsvWriter(writer, CultureInfo.InvariantCulture))
{
    csv.WriteRecords(personsList);
}
&lt;/syntaxhighlight&gt;

== Best Practices ==
* Asynchrone Methoden verwenden: &lt;code&gt;await context.SaveChangesAsync()&lt;/code&gt;
* Migrationen immer ins Source Control aufnehmen
* Validierung auf Model- und View-Ebene
* Repository-Pattern für größere Projekte

== Interviewfragen-Vorbereitung ==
* Was ist ein ORM? Wie funktioniert EF Core?
* Unterschied zwischen Code First und Database First?
* Wie werden Beziehungen zwischen Tabellen definiert?
* Wozu dient die Migration?
* Wie funktioniert Change Tracking?

== Häufige Fehler ==
* Vergessen: SaveChanges() oder SaveChangesAsync()
* Falsche/fehlende Navigation Properties
* Verbindungskette falsch/fehlt
* Nicht alle Migrations ausgeführt

----
''Tipp:'' Für weitere Beispiele siehe offizielle EF Core Dokumentation: https://learn.microsoft.com/de-de/ef/core/</text>
      <sha1>r2l5p5vz1l04vjzoiy9ame7s138zh8d</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Laout Views</title>
    <ns>0</ns>
    <id>84</id>
    <revision>
      <id>293</id>
      <timestamp>2025-06-25T14:27:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Layout Views – Spickzettel (Cheat Sheet) ==  '''Layout View''' ist eine Webseite (z.B. ''layout.cshtml''), die für die Präsentationslogik-Vorlage zuständig ist (typischerweise ein HTML-Template mit Header, Sidebar, Footer usw.).  === Ablauf der View-Ausführung === # Die '''View''' wird zuerst ausgeführt. # Die '''Layout View''' wird danach mit dem Inhalt der View „gefüllt“. # Daten aus der View können somit auch im Layout genutzt werden.…“</comment>
      <origin>293</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2088" sha1="e84mv7zj1nzn7nzx2kla24zyc4izl76" xml:space="preserve">== Layout Views – Spickzettel (Cheat Sheet) ==

'''Layout View''' ist eine Webseite (z.B. ''layout.cshtml''), die für die Präsentationslogik-Vorlage zuständig ist (typischerweise ein HTML-Template mit Header, Sidebar, Footer usw.).

=== Ablauf der View-Ausführung ===
# Die '''View''' wird zuerst ausgeführt.
# Die '''Layout View''' wird danach mit dem Inhalt der View „gefüllt“.
# Daten aus der View können somit auch im Layout genutzt werden.

=== Merkmale von Layout Views ===
* Die Methode &lt;code&gt;@RenderBody()&lt;/code&gt; gibt im Layout an, '''wo''' der Inhalt der jeweiligen View angezeigt wird.
* Die &lt;code&gt;Layout&lt;/code&gt;-Eigenschaft in einer View gibt den Pfad zur Layout-View an.
* Diese Eigenschaft kann auch '''dynamisch''' gesetzt werden (z.B. per Code).
* '''View''' und '''Layout View''' teilen sich das &lt;code&gt;ViewData&lt;/code&gt;-Objekt.
* '''CSS/JS-Dateien''', die im Layout eingebunden sind, gelten auch für den View-Inhalt, weil die View in das Layout „hineingemischt“ wird.

=== Beispiel: layout.cshtml ===
&lt;source lang="csharp"&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;@ViewBag.Title&lt;/title&gt;
    &lt;link rel="stylesheet" href="~/Content/site.css" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
        &lt;h1&gt;Meine Webseite&lt;/h1&gt;
    &lt;/header&gt;
    &lt;div&gt;
        @RenderBody()
    &lt;/div&gt;
    &lt;footer&gt;
        &amp;copy; 2025
    &lt;/footer&gt;
    &lt;script src="~/Scripts/site.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/source&gt;

=== Beispiel: View (Index.cshtml) ===
&lt;source lang="csharp"&gt;
@{
    ViewBag.Title = "Startseite";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Pfad zum Layout
}

&lt;h2&gt;Willkommen!&lt;/h2&gt;
&lt;p&gt;Dies ist der Inhalt der Startseite.&lt;/p&gt;
&lt;/source&gt;

=== Hinweise ===
* Mit &lt;code&gt;ViewData["xy"]&lt;/code&gt; oder &lt;code&gt;ViewBag.Xy&lt;/code&gt; können Daten an das Layout übergeben werden.
* Das Layout kann im Controller oder direkt in der View gesetzt werden.

----

'''Zusammengefasst:'''
Das Layout ist eine zentrale Design-Schablone, die das Aussehen und die Struktur für viele Seiten vorgibt – und &lt;code&gt;@RenderBody()&lt;/code&gt; ist die Einfüge-Markierung für den individuellen Seiteninhalt.</text>
      <sha1>e84mv7zj1nzn7nzx2kla24zyc4izl76</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Layout Views</title>
    <ns>0</ns>
    <id>85</id>
    <revision>
      <id>294</id>
      <timestamp>2025-06-25T14:31:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Layout Views – Spickzettel (Cheat Sheet) ==  '''Layout View''' ist eine Webseite (z.B. ''layout.cshtml''), die für die Präsentationslogik-Vorlage zuständig ist (typischerweise ein HTML-Template mit Header, Sidebar, Footer usw.).  === Ablauf der View-Ausführung === # Die '''View''' wird zuerst ausgeführt. # Die '''Layout View''' wird danach mit dem Inhalt der View „gefüllt“. # Daten aus der View können somit auch im Layout genutzt werden.…“</comment>
      <origin>294</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2088" sha1="e84mv7zj1nzn7nzx2kla24zyc4izl76" xml:space="preserve">== Layout Views – Spickzettel (Cheat Sheet) ==

'''Layout View''' ist eine Webseite (z.B. ''layout.cshtml''), die für die Präsentationslogik-Vorlage zuständig ist (typischerweise ein HTML-Template mit Header, Sidebar, Footer usw.).

=== Ablauf der View-Ausführung ===
# Die '''View''' wird zuerst ausgeführt.
# Die '''Layout View''' wird danach mit dem Inhalt der View „gefüllt“.
# Daten aus der View können somit auch im Layout genutzt werden.

=== Merkmale von Layout Views ===
* Die Methode &lt;code&gt;@RenderBody()&lt;/code&gt; gibt im Layout an, '''wo''' der Inhalt der jeweiligen View angezeigt wird.
* Die &lt;code&gt;Layout&lt;/code&gt;-Eigenschaft in einer View gibt den Pfad zur Layout-View an.
* Diese Eigenschaft kann auch '''dynamisch''' gesetzt werden (z.B. per Code).
* '''View''' und '''Layout View''' teilen sich das &lt;code&gt;ViewData&lt;/code&gt;-Objekt.
* '''CSS/JS-Dateien''', die im Layout eingebunden sind, gelten auch für den View-Inhalt, weil die View in das Layout „hineingemischt“ wird.

=== Beispiel: layout.cshtml ===
&lt;source lang="csharp"&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;@ViewBag.Title&lt;/title&gt;
    &lt;link rel="stylesheet" href="~/Content/site.css" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
        &lt;h1&gt;Meine Webseite&lt;/h1&gt;
    &lt;/header&gt;
    &lt;div&gt;
        @RenderBody()
    &lt;/div&gt;
    &lt;footer&gt;
        &amp;copy; 2025
    &lt;/footer&gt;
    &lt;script src="~/Scripts/site.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/source&gt;

=== Beispiel: View (Index.cshtml) ===
&lt;source lang="csharp"&gt;
@{
    ViewBag.Title = "Startseite";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Pfad zum Layout
}

&lt;h2&gt;Willkommen!&lt;/h2&gt;
&lt;p&gt;Dies ist der Inhalt der Startseite.&lt;/p&gt;
&lt;/source&gt;

=== Hinweise ===
* Mit &lt;code&gt;ViewData["xy"]&lt;/code&gt; oder &lt;code&gt;ViewBag.Xy&lt;/code&gt; können Daten an das Layout übergeben werden.
* Das Layout kann im Controller oder direkt in der View gesetzt werden.

----

'''Zusammengefasst:'''
Das Layout ist eine zentrale Design-Schablone, die das Aussehen und die Struktur für viele Seiten vorgibt – und &lt;code&gt;@RenderBody()&lt;/code&gt; ist die Einfüge-Markierung für den individuellen Seiteninhalt.</text>
      <sha1>e84mv7zj1nzn7nzx2kla24zyc4izl76</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Layout Views Übungen</title>
    <ns>0</ns>
    <id>86</id>
    <revision>
      <id>295</id>
      <timestamp>2025-06-25T15:01:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC – Layout Views Spickzettel =  == 1. Grundstruktur: Layout-View (_Layout.cshtml) == &lt;syntaxhighlight lang="html"&gt; &lt;!-- Views/Shared/_Layout.cshtml --&gt; &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;title&gt;@ViewData["Title"]&lt;/title&gt;     &lt;link href="~/StyleSheet.css" rel="stylesheet" /&gt; &lt;/head&gt; &lt;body&gt;     &lt;div class="navbar"&gt;         &lt;a href="/"&gt;Home&lt;/a&gt;     &lt;/div&gt;     &lt;div class="container"&gt;         @RenderBody()     &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; &lt;/syntaxh…“</comment>
      <origin>295</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1474" sha1="ocn9mn7mwovm55q2mifckeametstw0w" xml:space="preserve">= ASP.NET Core MVC – Layout Views Spickzettel =

== 1. Grundstruktur: Layout-View (_Layout.cshtml) ==
&lt;syntaxhighlight lang="html"&gt;
&lt;!-- Views/Shared/_Layout.cshtml --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;@ViewData["Title"]&lt;/title&gt;
    &lt;link href="~/StyleSheet.css" rel="stylesheet" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="navbar"&gt;
        &lt;a href="/"&gt;Home&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="container"&gt;
        @RenderBody()
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/syntaxhighlight&gt;

* '''@RenderBody()''': Platzhalter für den Inhalt der einzelnen View.

== 2. Verwendung in einer Content-View ==
&lt;syntaxhighlight lang="csharp"&gt;
@{
    Layout = "~/Views/Shared/_Layout.cshtml"; // Layout explizit festlegen
    ViewData["Title"] = "Home";
}
&lt;h1&gt;Home&lt;/h1&gt;
&lt;p&gt;Willkommen!&lt;/p&gt;
&lt;/syntaxhighlight&gt;

* '''Layout''': Legt verwendetes Layout fest.
* '''ViewData["Title"]''': Titel für Layout setzen.

== 3. _ViewStart.cshtml: Standardlayout setzen ==
&lt;syntaxhighlight lang="csharp"&gt;
@{
    Layout = "_Layout"; // Standard-Layout für alle Views im Verzeichnis
}
&lt;/syntaxhighlight&gt;

== 4. Dynamisches Layout (z.B. per ViewBag) ==
&lt;syntaxhighlight lang="csharp"&gt;
@{
    if (ViewBag.ProductID != null) {
        Layout = "~/Views/Shared/_ProductsLayout.cshtml";
    }
}
&lt;!-- Restlicher View-Code --&gt;
&lt;/syntaxhighlight&gt;

== 5. Sections &amp; @RenderSection ==
'''Layout-View:'''
&lt;syntaxhighlight lang="csharp"&gt;
@RenderSection("footer_section", false) // "false": Section ist optional
&lt;/syntaxhighlight&gt;</text>
      <sha1>ocn9mn7mwovm55q2mifckeametstw0w</sha1>
    </revision>
  </page>
  <page>
    <title>Kultur4Ort</title>
    <ns>0</ns>
    <id>87</id>
    <revision>
      <id>296</id>
      <timestamp>2025-06-25T19:57:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>296</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="319" sha1="e63cakbz3sqjl5hh1o46tr4g8rs5d89" xml:space="preserve">Kultur4Ort in Ahrensburg ist eine offene und kostenlose Veranstaltungsreihe der Stadt Ahrensburg, die jedes Jahr an einem anderen Ort in Ahrensburg stattfindet. Die Reihe fördert Nachwuchs, kulturellen Austausch, die Nutzung öffentlicher Räume als Kulturorte sowie die Netzwerkbildung in der Kulturszene.
==Weblink==</text>
      <sha1>e63cakbz3sqjl5hh1o46tr4g8rs5d89</sha1>
    </revision>
  </page>
  <page>
    <title>Ahrensburger Weihnachtsmarkt</title>
    <ns>0</ns>
    <id>88</id>
    <revision>
      <id>297</id>
      <timestamp>2025-06-25T20:27:24Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>297</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="198" sha1="3g7lkpm4rpo5maujo8brunchn6en8a2" xml:space="preserve">Der Weihnachtsmarkt oder Adventsmarkt findet im Rondell in Ahrensburg während der Adventszeit statt. Die gemütliche Atmosphäre entsteht durch dicht stehende Holzbuden, die zum Verweilen einladen.</text>
      <sha1>3g7lkpm4rpo5maujo8brunchn6en8a2</sha1>
    </revision>
  </page>
  <page>
    <title>Weinfest</title>
    <ns>0</ns>
    <id>89</id>
    <revision>
      <id>298</id>
      <timestamp>2025-06-25T21:05:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>298</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="317" sha1="rdlkwcdigd6tyohpk6e3seuwzfnw81p" xml:space="preserve">Das Weinfest in Ahrensburg findet in der Innenstadt entlang der Großen Straße statt. Rund 20 Winzer:innen präsentieren Weine und Traubenprodukte aus verschiedenen Anbaugebieten. Besucher:innen erwartet eine entspannte Atmosphäre mit Live-Musik (Pop, Rock, Oldies) sowie kulinarischen Angeboten rund um die Traube.</text>
      <sha1>rdlkwcdigd6tyohpk6e3seuwzfnw81p</sha1>
    </revision>
  </page>
  <page>
    <title>Music for free</title>
    <ns>0</ns>
    <id>90</id>
    <revision>
      <id>299</id>
      <timestamp>2025-06-25T21:19:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>299</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="254" sha1="klksq408dmi0p1rk2vjor17h0zw602r" xml:space="preserve">Ein Veranstaltungsklassiker des Ahrensburger Stadtforums: Kostenloser Eintritt zu Live-Konzerten in sieben Lokalen der Innenstadt, jeweils von 20 bis 23 Uhr.
Bands und Stilrichtungen: von Rock über Pop, Jazz, Chanson bis Latin. Abschlussfeier mit Disco.</text>
      <sha1>klksq408dmi0p1rk2vjor17h0zw602r</sha1>
    </revision>
  </page>
  <page>
    <title>Die Stadtteile im Porträt</title>
    <ns>0</ns>
    <id>91</id>
    <revision>
      <id>300</id>
      <timestamp>2025-06-26T12:25:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>300</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2306" sha1="2uuyt1ld8ewlzy4e2zdo5xzqj5pid09" xml:space="preserve">Die Stadtteile im Porträt in Ahrensburg: 

* '''Ahrensburg (Zentrum)''': Das Zentrum ist das historische und kommerzielle Herz der Stadt. Hier befinden sich das bekannte Schloss Ahrensburg, die Fußgängerzone mit zahlreichen Geschäften, das Rathaus sowie zentrale Haltestellen für U- und S-Bahn. Das Zentrum ist geprägt von einer Mischung aus Altbauten, modernen Gebäuden und vielfältigen Einkaufsmöglichkeiten.
* '''Ahrensfelde''': Ursprünglich ein eigenständiges Dorf, liegt Ahrensfelde heute nördlich des Zentrums. Der Stadtteil hat seinen dörflichen Charakter bewahrt, mit vielen Einfamilienhäusern, alten Höfen und viel Grün. Die Umgebung ist ruhig und familienfreundlich.
* '''Am Hagen / Siedlung Hagen / Waldgut Hagen''': Dieses Gebiet im Südwesten von Ahrensburg ist naturnah und zeichnet sich durch große Waldflächen und geschützte Forstgebiete aus. Die Siedlung Hagen bietet Wohnraum in ruhiger Lage, während das Waldgut Hagen als Naherholungsgebiet dient.
* '''Beimoor / Gewerbegebiet Nord''': Nordöstlich des Stadtzentrums gelegen, umfasst dieser Stadtteil sowohl Wohngebiete als auch ein großes Gewerbegebiet. Hier befinden sich zahlreiche Unternehmen, Handwerksbetriebe und Einkaufsmöglichkeiten. Die Wohngebiete sind modern und familienfreundlich.
* '''Gartenholz (inkl. Kremerberg)''': Im Norden der Stadt gelegen, ist Gartenholz ein gemischtes Wohn- und Gewerbegebiet. Der Regionalbahn-Haltepunkt Ahrensburg-Gartenholz sorgt für eine gute Verkehrsanbindung. Die Bebauung ist vielfältig, von Einfamilienhäusern bis zu Mehrfamilienhäusern.
* '''Erlenhof-Süd''': Dieses neue Wohngebiet westlich der Lübecker Straße entstand ab etwa 2014. Es bietet moderne Wohnhäuser, Spielplätze und Grünflächen. Die Infrastruktur ist auf Familien und junge Menschen ausgerichtet.
* '''Woldenhorn''': Der historische Altort, ursprünglich Woldenhorn genannt, bildet das Zentrum der Stadt. Hier finden sich viele denkmalgeschützte Gebäude und das kulturelle Herz Ahrensburgs.
* '''Wulfsdorf''': Südwestlich an der Grenze zu Hamburg gelegen, ist Wulfsdorf teils dörflich geprägt, teils in das städtische Gefüge eingebunden. Es gibt landwirtschaftliche Betriebe, alte Höfe und neue Wohngebiete. Die Nähe zu Hamburg macht den Stadtteil besonders attraktiv für Pendler.</text>
      <sha1>2uuyt1ld8ewlzy4e2zdo5xzqj5pid09</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Ubuntu Software Pakete Installieren</title>
    <ns>0</ns>
    <id>92</id>
    <revision>
      <id>301</id>
      <timestamp>2025-06-26T13:17:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== System aktualisieren und upgraden == Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:  # '''System aktualisieren'''  Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können. &lt;pre&gt; sudo apt update sudo apt upgrade &lt;/pre&gt;  == Weitere Pakete installieren == Mit folgende…“</comment>
      <origin>301</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2125" sha1="dyv1p3dlwgtrfwjtc0enzwttom7s52s" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>dyv1p3dlwgtrfwjtc0enzwttom7s52s</sha1>
    </revision>
    <revision>
      <id>302</id>
      <parentid>301</parentid>
      <timestamp>2025-06-26T20:39:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Composer Installieren */</comment>
      <origin>302</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1624" sha1="5617k1bg1zjz95ayscu40cgruwltkp4" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>5617k1bg1zjz95ayscu40cgruwltkp4</sha1>
    </revision>
    <revision>
      <id>303</id>
      <parentid>302</parentid>
      <timestamp>2025-06-26T21:28:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Weitere Pakete installieren */</comment>
      <origin>303</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1621" sha1="kflzvg8zh0rlxybav0vytbkx4cv5t57" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>kflzvg8zh0rlxybav0vytbkx4cv5t57</sha1>
    </revision>
    <revision>
      <id>304</id>
      <parentid>303</parentid>
      <timestamp>2025-06-26T21:31:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* .NET installieren */</comment>
      <origin>304</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1597" sha1="k4gne0cmtqilqbbd42bzlrqhki9r10x" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>k4gne0cmtqilqbbd42bzlrqhki9r10x</sha1>
    </revision>
    <revision>
      <id>305</id>
      <parentid>304</parentid>
      <timestamp>2025-06-26T21:38:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java installieren */</comment>
      <origin>305</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1597" sha1="cwqq6isnpkqo4cna4gz3mocc3k3y7ev" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>cwqq6isnpkqo4cna4gz3mocc3k3y7ev</sha1>
    </revision>
    <revision>
      <id>306</id>
      <parentid>305</parentid>
      <timestamp>2025-06-26T21:41:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* .NET installieren */</comment>
      <origin>306</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1706" sha1="61rjxyvzh3po08uesza2vhe3yxs9uaz" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt install -y dotnet-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>61rjxyvzh3po08uesza2vhe3yxs9uaz</sha1>
    </revision>
    <revision>
      <id>307</id>
      <parentid>306</parentid>
      <timestamp>2025-06-26T21:45:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* .NET installieren */</comment>
      <origin>307</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1714" sha1="7whkxkkbhishx9a7tyjkj2r448sywvd" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>7whkxkkbhishx9a7tyjkj2r448sywvd</sha1>
    </revision>
  </page>
  <page>
    <title>Ubuntu Software Pakete Installieren</title>
    <ns>0</ns>
    <id>93</id>
    <revision>
      <id>308</id>
      <timestamp>2025-06-26T13:19:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== System aktualisieren und upgraden == Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:  # '''System aktualisieren'''  Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können. &lt;pre&gt; sudo apt update sudo apt upgrade &lt;/pre&gt;  == Weitere Pakete installieren == Mit folgende…“</comment>
      <origin>308</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2125" sha1="dyv1p3dlwgtrfwjtc0enzwttom7s52s" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>dyv1p3dlwgtrfwjtc0enzwttom7s52s</sha1>
    </revision>
    <revision>
      <id>309</id>
      <parentid>308</parentid>
      <timestamp>2025-06-26T13:21:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* .NET installieren */</comment>
      <origin>309</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2234" sha1="hbvpweoazp5jzm2a353o4rae0ande8n" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>hbvpweoazp5jzm2a353o4rae0ande8n</sha1>
    </revision>
    <revision>
      <id>310</id>
      <parentid>309</parentid>
      <timestamp>2025-06-26T13:23:01Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* .NET installieren */</comment>
      <origin>310</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2218" sha1="6t37npogonjr9kgf1q21rt0264zve01" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>6t37npogonjr9kgf1q21rt0264zve01</sha1>
    </revision>
    <revision>
      <id>311</id>
      <parentid>310</parentid>
      <timestamp>2025-06-26T13:34:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java installieren */</comment>
      <origin>311</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2219" sha1="81j5yvir9vcvfgjo6dky5l87s9wu2rd" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt-get install openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>81j5yvir9vcvfgjo6dky5l87s9wu2rd</sha1>
    </revision>
  </page>
  <page>
    <title>Server:KachelServer</title>
    <ns>0</ns>
    <id>94</id>
    <revision>
      <id>312</id>
      <timestamp>2025-06-26T13:39:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Ubuntu 24.04 LTS Installation == Diese Seite beschreibt, wie man alle notwendige Software installiert, einrichtet und konfiguriert, um einen eigenen Kachelserver zu betreiben. Diese Schritt-für-Schritt-Anleitung wurde für Ubuntu Linux 24.04 (Noble Numbat) geschrieben und im April 2024 getestet.  == Softwareinstallation == Der OSM-Kachelserver-Stack ist eine Sammlung von Programmen und Bibliotheken, die zusammenarbeiten, um einen Kachelserver zu erste…“</comment>
      <origin>312</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="13461" sha1="r8k4yfantqpjh5zjew2crnvwztprdfk" xml:space="preserve">== Ubuntu 24.04 LTS Installation ==
Diese Seite beschreibt, wie man alle notwendige Software installiert, einrichtet und konfiguriert, um einen eigenen Kachelserver zu betreiben. Diese Schritt-für-Schritt-Anleitung wurde für Ubuntu Linux 24.04 (Noble Numbat) geschrieben und im April 2024 getestet.

== Softwareinstallation ==
Der OSM-Kachelserver-Stack ist eine Sammlung von Programmen und Bibliotheken, die zusammenarbeiten, um einen Kachelserver zu erstellen. Wie so oft bei OpenStreetMap gibt es viele Wege, dieses Ziel zu erreichen, und fast alle Komponenten haben Alternativen, die verschiedene spezifische Vor- und Nachteile haben. Dieses Tutorial beschreibt die gängigste Version, die der auf den Haupt-Kachelserven von OpenStreetMap.org ähnlich ist.

Er besteht aus 5 Hauptkomponenten: mod_tile, renderd, mapnik, osm2pgsql und einer PostgreSQL/PostGIS-Datenbank. Mod_tile ist ein Apache-Modul, das zwischengespeicherte Kacheln bereitstellt und entscheidet, welche Kacheln neu gerendert werden müssen - entweder weil sie noch nicht zwischengespeichert sind oder weil sie veraltet sind. Renderd bietet ein Prioritätswarteschlangensystem für verschiedene Arten von Anfragen, um die Last von Renderanfragen zu verwalten und zu glätten. Mapnik ist die Softwarebibliothek, die das eigentliche Rendern durchführt und von renderd verwendet wird.

Dank der Arbeit der Debian- und Ubuntu-Maintainer, die neuesten Versionen dieser Pakete in Ubuntu 24.04 zu integrieren, sind diese Anweisungen etwas kürzer als einige frühere Versionen.

Diese Anweisungen wurden geschrieben und gegen einen neu installierten Ubuntu 24.04 Server getestet. Wenn Sie bereits andere Versionen einiger Software installiert haben (vielleicht haben Sie von einer früheren Version aktualisiert, oder Sie haben einige PPAs zum Laden eingerichtet), dann müssen Sie möglicherweise einige Anpassungen vornehmen.

Um diese Komponenten zu erstellen, müssen zunächst eine Vielzahl von Abhängigkeiten installiert werden.

Dieser Leitfaden geht davon aus, dass Sie alles von einem Nicht-Root-Benutzer über "sudo" ausführen. Versuchen Sie nicht, alles unten als Root zu tun; es wird nicht funktionieren.

Aktualisieren Sie zunächst Ihre Paketliste und installieren Sie die erforderlichen Pakete:

== Nutzer erstellen bei Ubuntu 24.04 LTS ==
Um einen neuen Nutzer in Ubuntu 24.04 LTS zu erstellen, können Sie die folgenden Schritte ausführen:

# Öffnen Sie ein Terminalfenster.
# Führen Sie den folgenden Befehl aus, um einen neuen Nutzer zu erstellen:

 &lt;code&gt;sudo adduser --force-badname _renderd
 sudo usermod -aG sudo _renderd
 exit&lt;/code&gt;

=== Login als neuer Nutzer ===
Der gegebene Codeblock zeigt, wie man sich als ein bestimmter Nutzer in einem Linux-System einloggt. Der Befehl &lt;code&gt;ssh&lt;/code&gt; wird verwendet, um eine sichere Shell-Sitzung zu starten.
 &lt;code&gt;ssh _renderd@localhost&lt;/code&gt;
An diesem Punkt wurden einige neue Konten hinzugefügt. Sie können sie mit "tail /etc/passwd" sehen. "postgres" wird zur Verwaltung der Datenbanken verwendet, die wir zur Speicherung von Daten für das Rendering verwenden. "_renderd" wird für den Renderd-Daemon verwendet, und wir müssen sicherstellen, dass viele der unten aufgeführten Befehle als dieser Benutzer ausgeführt werden.

Jetzt müssen Sie eine PostGIS-Datenbank erstellen. Die Standardwerte verschiedener Programme gehen davon aus, dass die Datenbank "gis" heißt und wir werden in diesem Tutorial die gleiche Konvention verwenden, obwohl dies nicht notwendig ist. Beachten Sie, dass "_renderd" unten dem Benutzer entspricht, unter dem der Renderd-Daemon ausgeführt wird.
 &lt;code&gt;sudo -u postgres -i
 createuser _renderd
 createdb -E UTF8 -O _renderd gis
 psql -d gis -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d gis -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d gis -c "ALTER TABLE geometry_columns OWNER TO _renderd;" # Rechte setzen
 psql -d gis -c "ALTER TABLE spatial_ref_sys OWNER TO _renderd;" # Rechte setzen
 exit&lt;/code&gt;
(Das wird Sie aus dem Benutzer "postgres" herausbringen)

== Mapnik ==
Mapnik wurde oben installiert. Wir werden überprüfen, ob es korrekt installiert wurde, indem wir Folgendes tun:
 &lt;code&gt;python3
 &gt;&gt;&gt; import mapnik
 &gt;&gt;&gt;&lt;/code&gt;
Wenn Sie keine Fehlermeldung erhalten, ist Mapnik korrekt installiert. Drücken Sie "Ctrl-D", um Python zu verlassen.

== Konfiguration des Stylesheets ==
Jetzt, da alle notwendige Software installiert ist, müssen Sie ein Stylesheet herunterladen und konfigurieren.

Der Stil, den wir hier verwenden, ist der, der von der "Standard"-Karte auf der Website openstreetmap.org verwendet wird. Er wurde gewählt, weil er gut dokumentiert ist und überall auf der Welt funktionieren sollte (einschließlich an Orten mit nicht-lateinischen Ortsnamen). Es gibt jedoch ein paar Nachteile - es ist sehr viel ein Kompromiss, der global funktionieren soll, und es ist ziemlich kompliziert zu verstehen und zu modifizieren, falls Sie das tun müssen.

Die Heimat von "OpenStreetMap Carto" im Web ist &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/&lt;/nowiki&gt; und es hat seine eigenen Installationsanweisungen unter &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/blob/master/INSTALL.md&lt;/nowiki&gt; , obwohl wir hier alles abdecken, was getan werden muss.

Hier gehen wir davon aus, dass wir die Details des Stylesheets in einem Verzeichnis unter "src" im Home-Verzeichnis des jeweiligen Nicht-Root-Benutzerkontos speichern, das Sie verwenden; wir werden den Zugriff so ändern, dass der Benutzer "_renderd" darauf zugreifen kann.
 &lt;code&gt;mkdir ~/src
 cd ~/src
 git clone &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto&lt;/nowiki&gt;
 cd openstreetmap-carto
 git pull --all
 git switch --detach v5.9.0&lt;/code&gt;
Als nächstes installieren wir eine geeignete Version des "carto"-Compilers.
 &lt;code&gt;npm install -g carto
 carto -v&lt;/code&gt;
Das sollte mit einer Zahl antworten, die mindestens so hoch ist wie:
     &lt;code&gt;1.2.0&lt;/code&gt;
Dann konvertieren wir das Carto-Projekt in ein Format, das Mapnik verstehen kann:
 &lt;code&gt;carto project.mml &gt; mapnik.xml&lt;/code&gt;
Sie haben jetzt ein Mapnik XML-Stylesheet unter /home/IhrBenutzerkonto/src/openstreetmap-carto/mapnik.xml .

== Daten laden ==
Zunächst laden wir nur eine kleine Menge an Testdaten. Es sind andere Download-Standorte verfügbar, aber "download.geofabrik.de" bietet eine breite Palette an Optionen. In diesem Beispiel laden wir die Daten für Schlewig Holstein herunter, die derzeit etwa 32Mb groß sind.

Navigieren Sie zu &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein.html&lt;/nowiki&gt; und beachten Sie das Datum "Diese Datei wurde zuletzt geändert" (z.B. "2024-04-24T20:21:40Z"). Wir werden das später benötigen, wenn wir die Datenbank mit den nachfolgenden Änderungen der Menschen an OpenStreetMap aktualisieren wollen. Laden Sie es wie folgt herunter:
 &lt;code&gt;mkdir ~/data
 cd ~/data
 wget &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf&lt;/nowiki&gt;
 osmosis --read-pbf file=schleswig-holstein-latest.osm.pbf --bounding-box left=10.1141 right=10.3716 top=53.7136 bottom=53.6249 --write-pbf file=ahrensburg.pbf&lt;/code&gt;
 
Als nächstes müssen wir sicherstellen, dass der Benutzer "_renderd" auf das Stylesheet zugreifen kann. Um dies zu ermöglichen, benötigt er Zugriff auf den Ort, an dem Sie es heruntergeladen haben, und standardmäßig hat er keinen Zugriff auf Ihr Home-Verzeichnis. Wenn es sich in "src" unter Ihrem Benutzerkonto befindet, dann
 &lt;code&gt;chmod a+rx ~&lt;/code&gt;
wird funktionieren. Wenn Sie dies nicht tun möchten, können Sie es verschieben und die Verweise auf die Dateiorte in den nachfolgenden Befehlen ändern.

Der folgende Befehl wird die zuvor heruntergeladenen OpenStreetMap-Daten in die Datenbank einfügen. Dieser Schritt ist sehr intensiv in Bezug auf die Festplatten-I/O; der Import des gesamten Planeten kann je nach Hardware viele Stunden, Tage oder Wochen dauern. Für kleinere Extrakte ist die Importzeit entsprechend viel schneller, und Sie müssen möglicherweise mit verschiedenen -C-Werten experimentieren, um in den verfügbaren Speicher Ihres Rechners zu passen. Beachten Sie, dass der Benutzer "_renderd" für diesen Prozess verwendet wird.
 &lt;code&gt;sudo -u _renderd osm2pgsql -d gis --create --slim  -G --hstore --tag-transform-script ~/src/openstreetmap-carto/openstreetmap-carto.lua -C 2500 --number-processes 1 -S ~/src/openstreetmap-carto/openstreetmap-carto.style ~/data/ahrensburg.pbf&lt;/code&gt;

== Erstellen von Indizes ==
Seit der Version v5.3.0 müssen einige zusätzliche Indizes manuell angewendet werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f indexes.sql&lt;/code&gt;
Es sollte 16 Mal mit "CREATE INDEX" antworten.

== Datenbankfunktionen ==
In Version 5.9.0 von "OSM Carto" (veröffentlicht im Oktober 2024) müssen einige Funktionen manuell in die Datenbank geladen werden. Diese können jederzeit hinzugefügt / neu geladen werden mit:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f functions.sql&lt;/code&gt;

== Shapefile-Download ==
Obwohl die meisten Daten, die zur Erstellung der Karte verwendet werden, direkt aus der oben heruntergeladenen OpenStreetMap-Datendatei stammen, werden immer noch einige Shapefiles für Dinge wie Ländergrenzen bei niedriger Zoomstufe benötigt. Um diese herunterzuladen und zu indizieren, verwenden wir das gleiche Konto wie zuvor:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 mkdir data
 sudo chown _renderd data
 sudo -u _renderd scripts/get-external-data.py&lt;/code&gt;
Dieser Prozess beinhaltet einen erheblichen Download und kann einige Zeit in Anspruch nehmen - während er läuft, wird nicht viel auf dem Bildschirm angezeigt. Einige Daten gehen direkt in die Datenbank, und einige gehen in ein "data"-Verzeichnis unter "openstreetmap-carto". Wenn hier ein Problem auftritt, dann sind die Natural Earth Daten möglicherweise verschoben worden - schauen Sie sich dieses Problem und andere Probleme bei Natural Earth für weitere Details an. Wenn Sie den Download-Ort von Natural Earth ändern müssen, ist Ihre Kopie dieser Datei diejenige, die Sie bearbeiten sollten.

== Schriftarten ==
In der Version v5.6.0 und höher von Carto müssen Schriftarten manuell installiert werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 scripts/get-fonts.sh&lt;/code&gt;
Unser Testdatenbereich (Ahrensburg) wurde sowohl wegen seiner geringen Größe als auch wegen einiger Ortsnamen in dieser Region ausgewählt, die Namen mit nicht-lateinischen Zeichen enthalten.

== Einrichten Ihres Webservers ==

=== Konfigurieren von renderd ===
Die Konfigurationsdatei für "renderd" unter Ubuntu 24.04 ist "/etc/renderd.conf". Bearbeiten Sie diese mit einem Texteditor wie nano:
 &lt;code&gt;sudo nano /etc/renderd.conf&lt;/code&gt;
Ändern Sie die folgenden Zeilen, um sie an Ihre Umgebung anzupassen:
 &lt;code&gt;[s2o]
 URI=/hot/
 XML=/home/_renderd/src/openstreetmap-carto/mapnik.xml
 HOST=localhost
 TILESIZE=256
 MAXZOOM=20&lt;/code&gt;
Der Pfad zur XML-Datei "/home/accountname/src/openstreetmap-carto/mapnik.xml" muss auf den tatsächlichen Pfad auf Ihrem System geändert werden. Sie können auch "[s2o]" und "URI=/hot/" ändern, wenn Sie möchten. Wenn Sie mehr als einen Satz von Kacheln von einem Server rendern möchten, können Sie das tun - fügen Sie einfach einen weiteren Abschnitt wie "[s2o]" mit einem anderen Namen hinzu, der auf einen anderen Kartenstil verweist. Wenn Sie möchten, dass es sich auf eine andere Datenbank als die Standarddatenbank "gis" bezieht, können Sie das tun, aber das liegt außerhalb des Rahmens dieses Dokuments. Wenn Sie nur etwa 2Gb Speicher haben, sollten Sie auch "num_threads" auf 2 reduzieren. "URI=/hot/" wurde gewählt, damit die hier generierten Kacheln leichter anstelle der HOT-Kachel-Ebene auf OpenStreetMap.org verwendet werden können. Sie können hier etwas anderes verwenden, aber "/hot/" ist genauso gut wie alles andere.

Als dieser Leitfaden zum ersten Mal geschrieben wurde, war die von Ubuntu 24.04 bereitgestellte Version von Mapnik 3.1, und die Einstellung "plugins_dir" im Abschnitt "[mapnik]" der Datei war "/usr/lib/mapnik/3.1/input". Dieses "3.1" könnte sich in der Zukunft wieder ändern. Wenn beim Versuch, Kacheln zu rendern, ein Fehler auftritt, wie dieser:
 &lt;code&gt;An error occurred while loading the map layer 's2o': Could not create datasource for type: 'postgis' (no datasource plugin directories have been successfully registered)  encountered during parsing of layer 'landcover-low-zoom'&lt;/code&gt;
Dann schauen Sie in "/usr/lib/mapnik" und sehen Sie, welche Versionsverzeichnisse es gibt, und schauen Sie auch in "/usr/lib/mapnik/(version)/input", um sicherzustellen, dass dort eine Datei "postgis.input" existiert.

Jetzt, da wir "renderd" gesagt haben, wie es auf Kachelrendering-Anfragen reagieren soll, müssen wir dem Apache-Webserver sagen, dass er sie senden soll. Leider wurde die Konfiguration dafür aus den neuesten Versionen von mod_tile entfernt. Sie kann jedoch derzeit von hier installiert werden
 &lt;code&gt;cd /etc/apache2/conf-available/
 sudo wget &lt;nowiki&gt;https://raw.githubusercontent.com/openstreetmap/mod_tile/python-implementation/etc/apache2/renderd.conf&lt;/nowiki&gt;
 sudo a2enconf renderd
 sudo systemctl reload apache2&lt;/code&gt;

=== Reload Apache ===
 &lt;code&gt;sudo nano /usr/lib/systemd/system/renderd.service
 sudo systemctl daemon-reload
 sudo systemctl restart renderd
 sudo systemctl restart apache2&lt;/code&gt;</text>
      <sha1>r8k4yfantqpjh5zjew2crnvwztprdfk</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Apache Port ändern</title>
    <ns>0</ns>
    <id>95</id>
    <revision>
      <id>313</id>
      <timestamp>2025-06-26T13:41:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „&lt;code&gt;sudo nano /etc/apache2/ports.conf&lt;/code&gt; Ändern Sie den Port von 80 auf 8080  &lt;code&gt;Listen 8080&lt;/code&gt; Apache restarten  &lt;code&gt;sudo systemctl restart apache2“</comment>
      <origin>313</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="164" sha1="gr15p2kx141yv2lfpir3ww6jvq5etiv" xml:space="preserve">&lt;code&gt;sudo nano /etc/apache2/ports.conf&lt;/code&gt;
Ändern Sie den Port von 80 auf 8080
 &lt;code&gt;Listen 8080&lt;/code&gt;
Apache restarten
 &lt;code&gt;sudo systemctl restart apache2</text>
      <sha1>gr15p2kx141yv2lfpir3ww6jvq5etiv</sha1>
    </revision>
  </page>
  <page>
    <title>Server:SSL</title>
    <ns>0</ns>
    <id>96</id>
    <revision>
      <id>314</id>
      <timestamp>2025-06-26T13:42:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:  # &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren. # &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver. # &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standardkonfiguration von Nginx, um Konflikte mit eigenen Einstellun…“</comment>
      <origin>314</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1782" sha1="bn1cv7n7shhys4wfredahwgdqj85u9l" xml:space="preserve">Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:

# &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren.
# &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver.
# &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standardkonfiguration von Nginx, um Konflikte mit eigenen Einstellungen zu vermeiden.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt den laufenden Nginx-Dienst, damit Certbot später Zertifikate anfordern und konfigurieren kann.
# &lt;code&gt;sudo snap install --classic certbot&lt;/code&gt;  Installiert Certbot (das Tool zur Verwaltung von SSL-Zertifikaten von Let's Encrypt) über Snap.
# &lt;code&gt;sudo ln -s /snap/bin/certbot /usr/bin/certbot&lt;/code&gt;  Erstellt einen symbolischen Link, damit Certbot systemweit als Befehl verfügbar ist.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt Nginx erneut, um sicherzustellen, dass der Webserver für die Zertifikatsanfrage nicht läuft.

Diese Schritte bereiten das System darauf vor, SSL-Zertifikate mit Certbot für Nginx zu erstellen und zu verwalten.

==Kurze Form==
&lt;pre&gt;
sudo apt install snapd
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
sudo systemctl stop nginx
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo systemctl stop nginx
&lt;/pre&gt;
Nach der Eingabe der obigen Befehle können Sie mit den folgenden Schritten fortfahren, um SSL-Zertifikate für Ihre Domains zu erstellen und Nginx wieder zu starten.
&lt;pre&gt;
sudo certbot certonly --standalone -d ahrensburg.city -d www.ahrensburg.city
sudo certbot certonly --standalone -d alterwiki.ahrensburg.city
sudo systemctl start nginx
&lt;/pre&gt;</text>
      <sha1>bn1cv7n7shhys4wfredahwgdqj85u9l</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Nginx Einstellung</title>
    <ns>0</ns>
    <id>97</id>
    <revision>
      <id>315</id>
      <timestamp>2025-06-26T13:45:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] == Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:   sudo nano /etc/nginx/conf.d/start.conf Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen ei…“</comment>
      <origin>315</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="626" sha1="jcpw7usuhmiotqyjc921rhs1h1qjgfv" xml:space="preserve">
== Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] ==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
  sudo nano /etc/nginx/conf.d/start.conf
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei</text>
      <sha1>jcpw7usuhmiotqyjc921rhs1h1qjgfv</sha1>
    </revision>
    <revision>
      <id>316</id>
      <parentid>315</parentid>
      <timestamp>2025-06-26T13:46:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>316</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="890" sha1="csfsk5bcy9cwhpt3655tou43epotmfx" xml:space="preserve">
== Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] ==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
  sudo nano /etc/nginx/conf.d/start.conf
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei


Hinweis:

Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
sudo nginx -t
sudo systemctl reload nginx
Prüfen Sie mit sudo nginx -t immer zuerst, ob die Konfiguration fehlerfrei ist.</text>
      <sha1>csfsk5bcy9cwhpt3655tou43epotmfx</sha1>
    </revision>
    <revision>
      <id>317</id>
      <parentid>316</parentid>
      <timestamp>2025-06-26T13:48:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>317</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1939" sha1="lc5k5xz5fx3xa6denzs777kfv9dck23" xml:space="preserve">
== Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] ==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
  sudo nano /etc/nginx/conf.d/start.conf
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei

&lt;pre&gt;
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/mediawiki;
    index index.php index.html index.htm;
   location /hot {
        proxy_pass http://localhost:8080/hot;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

location /karte {
    alias /var/www/karte;
    autoindex on;
}
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}
server {
    listen 80;
    listen [::]:80;
    server_name ahrensburg.city;
    return 301 https://$host$request_uri;
}


&lt;/pre&gt;

Hinweis:

Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
sudo nginx -t
sudo systemctl reload nginx
Prüfen Sie mit sudo nginx -t immer zuerst, ob die Konfiguration fehlerfrei ist.</text>
      <sha1>lc5k5xz5fx3xa6denzs777kfv9dck23</sha1>
    </revision>
    <revision>
      <id>318</id>
      <parentid>317</parentid>
      <timestamp>2025-06-26T13:50:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] */</comment>
      <origin>318</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1903" sha1="kxnbwyb9fc9n7bbpyo1svfkijqeo1g1" xml:space="preserve">
== Erstellen Sie eine neue Konfigurationsdatei==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
  sudo nano /etc/nginx/conf.d/start.conf
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei

&lt;pre&gt;
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/mediawiki;
    index index.php index.html index.htm;
   location /hot {
        proxy_pass http://localhost:8080/hot;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

location /karte {
    alias /var/www/karte;
    autoindex on;
}
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}
server {
    listen 80;
    listen [::]:80;
    server_name ahrensburg.city;
    return 301 https://$host$request_uri;
}


&lt;/pre&gt;

Hinweis:

Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
sudo nginx -t
sudo systemctl reload nginx
Prüfen Sie mit sudo nginx -t immer zuerst, ob die Konfiguration fehlerfrei ist.</text>
      <sha1>kxnbwyb9fc9n7bbpyo1svfkijqeo1g1</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Mediawiki Installieren</title>
    <ns>0</ns>
    <id>98</id>
    <revision>
      <id>319</id>
      <timestamp>2025-06-26T13:57:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == Postgres Datenbank erstellen ==  &lt;code&gt;sudo -u postgres -i  createdb -E UTF8 -O thorsten mediawiki  psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten    exit&lt;/code&gt;  == PHP installieren ==  &lt;code&gt;sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-xmlrpc php-zip php-intl -y&lt;/code&gt;  == Mediawiki installieren ==  &lt;code&gt;cd /var/www  sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawi…“</comment>
      <origin>319</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1053" sha1="9rr1kowfgc8q675s6zxm7u74g8gg1n5" xml:space="preserve">
== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten
 
 exit&lt;/code&gt;

== PHP installieren ==
 &lt;code&gt;sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-xmlrpc php-zip php-intl -y&lt;/code&gt;

== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Lesbare URLs konfiguriern in mediawiki ==
 &lt;code&gt;sudo nano /var/www/mediawiki/LocalSettings.php&lt;/code&gt;

 &lt;code&gt;$wgScriptPath = "";
 $wgArticlePath = "/$1";
 $wgUsePathInfo = true;&lt;/code&gt;</text>
      <sha1>9rr1kowfgc8q675s6zxm7u74g8gg1n5</sha1>
    </revision>
    <revision>
      <id>320</id>
      <parentid>319</parentid>
      <timestamp>2025-06-26T13:57:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>320</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="902" sha1="47d7hnbnfx04duap33fgobyglbkmcvl" xml:space="preserve">
== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten
 
 exit&lt;/code&gt;


== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Lesbare URLs konfiguriern in mediawiki ==
 &lt;code&gt;sudo nano /var/www/mediawiki/LocalSettings.php&lt;/code&gt;

 &lt;code&gt;$wgScriptPath = "";
 $wgArticlePath = "/$1";
 $wgUsePathInfo = true;&lt;/code&gt;</text>
      <sha1>47d7hnbnfx04duap33fgobyglbkmcvl</sha1>
    </revision>
  </page>
  <page>
    <title>Vereinsleben</title>
    <ns>0</ns>
    <id>99</id>
    <revision>
      <id>321</id>
      <timestamp>2025-06-26T18:14:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>321</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1914" sha1="rwiogq40jzu6cmulxpa25c50u9u57gz" xml:space="preserve">Das Vereinsleben in Ahrensburg bietet zahlreiche Möglichkeiten, sich zu treffen und gemeinsam die Freizeit zu gestalten. In Ahrensburg gibt es verschiedene Vereine, darunter Sportvereine, Kulturvereine sowie Gemeinschafts- und Ehrenamtsvereine.

==Sportvereine==
* Ahrensburger TSV von 1874 e.V. – Der größte Sportverein im Kreis Stormarn mit etwa 4.000 Mitgliedern. Er bietet 25 Abteilungen, darunter Turnen, Fußball, Handball, Schwimmen, Tennis, Tischtennis, Volleyball, Tanz und einen Spielmannszug. Außerdem gibt es Angebote für ehrenamtliches Engagement, Jugendfreizeiten, Boxen und vieles mehr.
* SSC Hagen Ahrensburg (gegründet 1947) – Rund 1.800 Mitglieder in neun Abteilungen: Fußball (Herren, Damen), Tennis, Schwimmen, Tischtennis, Leichtathletik, Tanz, Turnen und Volleyball. Zu den aktuellen Erfolgen zählen unter anderem Kreisliga-Fußball und Pokalgewinne.

==Kultur, Gemeinschaft &amp; Ehrenamt==
* Ahrensburger Bürgerverein von 1874 e.V. – Pflege historischer Bauten wie der Bagatelle, aktives Engagement für das Stadtbild und die Kultur.
* Theater und Musik in Ahrensburg e.V. – Organisiert seit über 60 Jahren Theater- und Konzertveranstaltungen auf hohem Niveau – vom Alfred-Rust-Saal bis zum Eduard-Söring-Saal.
* Niederdeutsche Bühne Ahrensburg (Stormarner Speeldeel e.V.) – Widmet sich dem plattdeutschen Theater mit Aufführungen im lokalen Dialekt.
* Deutsches Rotes Kreuz Ahrensburg (DRK OV) – Ehrenamtlich aktiv in Erste Hilfe, sozialen Diensten, Jugendrotkreuz, Wohlfahrts- und Flüchtlingshilfe.
* AWO Ortsverein Ahrensburg / Peter-Rantzau-Haus  
    Bietet Integrations- und Begegnungsprojekte, einen Buchladen, Haustierhilfe und diverse Freiwilligendienste. Im Peter-Rantzau-Haus sind Ehrenamtliche in vielen Bereichen engagiert.
* Hospiz Ahrensburg e.V. – Ausbildung und Einsatz als Sterbe- oder Trauerbegleiter*in. Qualifizierte Schulungsangebote ab 2025.</text>
      <sha1>rwiogq40jzu6cmulxpa25c50u9u57gz</sha1>
    </revision>
    <revision>
      <id>322</id>
      <parentid>321</parentid>
      <timestamp>2025-06-26T18:15:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>322</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1910" sha1="mr1uekgo12vbhwhs8615ugpgkmpdy80" xml:space="preserve">Das Vereinsleben in Ahrensburg bietet zahlreiche Möglichkeiten, sich zu treffen und gemeinsam die Freizeit zu gestalten. In Ahrensburg gibt es verschiedene Vereine, darunter Sportvereine, Kulturvereine sowie Gemeinschafts- und Ehrenamtsvereine.

==Sportvereine==
* Ahrensburger TSV von 1874 e.V. – Der größte Sportverein im Kreis Stormarn mit etwa 4.000 Mitgliedern. Er bietet 25 Abteilungen, darunter Turnen, Fußball, Handball, Schwimmen, Tennis, Tischtennis, Volleyball, Tanz und einen Spielmannszug. Außerdem gibt es Angebote für ehrenamtliches Engagement, Jugendfreizeiten, Boxen und vieles mehr.
* SSC Hagen Ahrensburg (gegründet 1947) – Rund 1.800 Mitglieder in neun Abteilungen: Fußball (Herren, Damen), Tennis, Schwimmen, Tischtennis, Leichtathletik, Tanz, Turnen und Volleyball. Zu den aktuellen Erfolgen zählen unter anderem Kreisliga-Fußball und Pokalgewinne.

==Kultur, Gemeinschaft &amp; Ehrenamt==
* Ahrensburger Bürgerverein von 1874 e.V. – Pflege historischer Bauten wie der Bagatelle, aktives Engagement für das Stadtbild und die Kultur.
* Theater und Musik in Ahrensburg e.V. – Organisiert seit über 60 Jahren Theater- und Konzertveranstaltungen auf hohem Niveau – vom Alfred-Rust-Saal bis zum Eduard-Söring-Saal.
* Niederdeutsche Bühne Ahrensburg (Stormarner Speeldeel e.V.) – Widmet sich dem plattdeutschen Theater mit Aufführungen im lokalen Dialekt.
* Deutsches Rotes Kreuz Ahrensburg (DRK OV) – Ehrenamtlich aktiv in Erste Hilfe, sozialen Diensten, Jugendrotkreuz, Wohlfahrts- und Flüchtlingshilfe.
* AWO Ortsverein Ahrensburg / Peter-Rantzau-Haus   Bietet Integrations- und Begegnungsprojekte, einen Buchladen, Haustierhilfe und diverse Freiwilligendienste. Im Peter-Rantzau-Haus sind Ehrenamtliche in vielen Bereichen engagiert.
* Hospiz Ahrensburg e.V. – Ausbildung und Einsatz als Sterbe- oder Trauerbegleiter*in. Qualifizierte Schulungsangebote ab 2025.</text>
      <sha1>mr1uekgo12vbhwhs8615ugpgkmpdy80</sha1>
    </revision>
  </page>
  <page>
    <title>Builder:Hauptseite</title>
    <ns>0</ns>
    <id>100</id>
    <revision>
      <id>323</id>
      <timestamp>2025-06-26T22:12:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Builder== &lt;pre&gt;  rsync -avz /quelle/ user@server:/ziel/“</comment>
      <origin>323</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="57" sha1="sgzjojsy4ephtkdo0vjp7n0fd2xto2o" xml:space="preserve">==Builder==
&lt;pre&gt;

rsync -avz /quelle/ user@server:/ziel/</text>
      <sha1>sgzjojsy4ephtkdo0vjp7n0fd2xto2o</sha1>
    </revision>
  </page>
  <page>
    <title>Backup:Hautptseite</title>
    <ns>0</ns>
    <id>101</id>
    <revision>
      <id>324</id>
      <timestamp>2025-06-27T06:18:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Beispiel Site==“</comment>
      <origin>324</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="17" sha1="n2vzddr1ggrq8hrpxh4zrtqe5pjgpmm" xml:space="preserve">==Beispiel Site==</text>
      <sha1>n2vzddr1ggrq8hrpxh4zrtqe5pjgpmm</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Partial Views</title>
    <ns>0</ns>
    <id>102</id>
    <revision>
      <id>325</id>
      <timestamp>2025-06-27T12:53:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Partial Views in ASP.NET Core MVC – Spickzettel =  == 🧩 Was ist eine Partial View? == Eine '''Partial View''' ist ein wiederverwendbares Razor-Markup-Fragment (.cshtml), das in andere Views eingebettet werden kann. Sie dient der Strukturierung und Wiederverwendung von UI-Komponenten (z. B. Listen, Formulare, Widgets).  == ✅ Vorteile == * '''Wiederverwendbarkeit''': Einmal erstellt, mehrfach einsetzbar * '''Modularität''': Zerlegung großer Vie…“</comment>
      <origin>325</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4487" sha1="gmdjj6w77354mn1jfrgrv7hnj6ewgfh" xml:space="preserve">= Partial Views in ASP.NET Core MVC – Spickzettel =

== 🧩 Was ist eine Partial View? ==
Eine '''Partial View''' ist ein wiederverwendbares Razor-Markup-Fragment (.cshtml), das in andere Views eingebettet werden kann.
Sie dient der Strukturierung und Wiederverwendung von UI-Komponenten (z. B. Listen, Formulare, Widgets).

== ✅ Vorteile ==
* '''Wiederverwendbarkeit''': Einmal erstellt, mehrfach einsetzbar
* '''Modularität''': Zerlegung großer Views in kleine Bestandteile
* '''Dynamik''': Daten können flexibel übergeben werden

== 🛠️ Verwendung ==

=== 🔸 Speicherort &amp; Namenskonvention ===
* Normalerweise im Ordner: &lt;code&gt;Views/Shared/&lt;/code&gt; oder im selben Ordner wie die aufrufende View
* Namenskonvention: &lt;code&gt;_ListPartialView.cshtml&lt;/code&gt; (Unterstrich als Erkennungszeichen)

=== 🔸 Rendern ===
&lt;pre&gt;
&lt;!-- Tag Helper --&gt;
&lt;partial name="_ListPartialView" /&gt;
&lt;partial name="_ListPartialView" model="yourModel" /&gt;

&lt;!-- HTML Helper --&gt;
@await Html.PartialAsync("_ListPartialView")
@await Html.PartialAsync("_ListPartialView", yourModel)
&lt;/pre&gt;

== 📄 Beispiel 1: Mit ViewBag / ViewData ==

=== _ListPartialView.cshtml ===
&lt;source lang="razor"&gt;
&lt;div class="list-container"&gt;
    &lt;h3&gt;@ViewBag.ListTitle&lt;/h3&gt;
    &lt;ul class="list"&gt;
    @foreach (string item in ViewBag.ListItems)
    {
        &lt;li&gt;@item&lt;/li&gt;
    }
    &lt;/ul&gt;
&lt;/div&gt;
&lt;/source&gt;

=== Index.cshtml ===
&lt;source lang="razor"&gt;
&lt;h1&gt;Home&lt;/h1&gt;

&lt;partial name="_ListPartialView" /&gt;

@{
    var myViewData = new ViewDataDictionary(ViewData);
    myViewData["ListTitle"] = "Länder";
    myViewData["ListItems"] = new List&lt;string&gt; { "USA", "Kanada", "Japan", "Deutschland", "Indien" };
}

&lt;div class="box"&gt;
    &lt;partial name="_ListPartialView" view-data="myViewData" /&gt;
&lt;/div&gt;
&lt;/source&gt;

== 📄 Beispiel 2: Stark typisierte Partial View (empfohlen) ==

=== ListModel.cs ===
&lt;source lang="csharp"&gt;
public class ListModel
{
    public string ListTitle { get; set; }
    public List&lt;string&gt; ListItems { get; set; }
}
&lt;/source&gt;

=== _ListPartialView.cshtml ===
&lt;source lang="razor"&gt;
@model ListModel

&lt;div class="list-container"&gt;
    &lt;h3&gt;@Model.ListTitle&lt;/h3&gt;
    &lt;ul class="list"&gt;
    @foreach (var item in Model.ListItems)
    {
        &lt;li&gt;@item&lt;/li&gt;
    }
    &lt;/ul&gt;
&lt;/div&gt;
&lt;/source&gt;

=== Index.cshtml ===
&lt;source lang="razor"&gt;
@using YourNamespace.Models

@{
    var listModel = new ListModel {
        ListTitle = "Länder",
        ListItems = new List&lt;string&gt; { "USA", "Kanada", "Japan", "Deutschland", "Indien" }
    };
}
&lt;partial name="_ListPartialView" model="listModel" /&gt;
&lt;/source&gt;

== 📄 Beispiel 3: PartialViewResult mit AJAX ==

=== HomeController.cs ===
&lt;source lang="csharp"&gt;
[Route("programming-languages")]
public IActionResult ProgrammingLanguages()
{
    var listModel = new ListModel
    {
        ListTitle = "Programmiersprachen",
        ListItems = new List&lt;string&gt; { "Python", "C#", "Go" }
    };
    return PartialView("_ListPartialView", listModel);
}
&lt;/source&gt;

=== Index.cshtml (AJAX Beispiel) ===
&lt;source lang="html"&gt;
&lt;button id="button-load"&gt;Lade Programmiersprachen&lt;/button&gt;
&lt;div class="programming-languages-content"&gt;&lt;/div&gt;

&lt;script&gt;
document.querySelector("#button-load").addEventListener("click", async () =&gt; {
    const response = await fetch("programming-languages");
    const html = await response.text();
    document.querySelector(".programming-languages-content").innerHTML = html;
});
&lt;/script&gt;
&lt;/source&gt;

== 🧠 Zusammenfassung ==

=== 🔹 Partial Views ===
* Zweck: Wiederverwendbare Razor-Fragmente (z. B. für Listen, Formulare)
* Konvention: &lt;code&gt;_PartialName.cshtml&lt;/code&gt;
* Speicherort: &lt;code&gt;Views/Shared&lt;/code&gt; oder lokaler Ordner
* Rendern:
  * &lt;code&gt;&lt;partial name="..." /&gt;&lt;/code&gt;
  * &lt;code&gt;@await Html.PartialAsync(...)&lt;/code&gt;

=== 🔹 ViewData / ViewBag ===
* Übergabe von Daten aus Controller oder Parent View
* In Partial View per &lt;code&gt;@ViewData["key"]&lt;/code&gt; oder &lt;code&gt;@ViewBag.Key&lt;/code&gt;

=== 🔹 Starke Typisierung ===
* Mit &lt;code&gt;@model YourNamespace.YourModel&lt;/code&gt;
* Zugriff auf &lt;code&gt;@Model.Property&lt;/code&gt;
* Vorteil: IntelliSense, Typprüfung, weniger Fehler

=== 🔹 PartialViewResult ===
* Rückgabe einer Partial View aus Controller
* Einsatz für AJAX-Szenarien:
  &lt;source lang="csharp"&gt;
  return PartialView("_PartialName", model);
  &lt;/source&gt;

=== 🔹 Best Practices ===
* Verwende ViewModels für saubere Trennung
* Nutze starke Typisierung wo möglich
* Vermeide Logik in Views
* Caching bedenken für statische Inhalte</text>
      <sha1>gmdjj6w77354mn1jfrgrv7hnj6ewgfh</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Hauptseite</title>
    <ns>3000</ns>
    <id>103</id>
    <revision>
      <id>327</id>
      <timestamp>2025-06-13T23:51:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Startseite“</comment>
      <origin>327</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10" sha1="laxtoews4xx8ub1ts0hgvtviz01bvza" xml:space="preserve">Startseite</text>
      <sha1>laxtoews4xx8ub1ts0hgvtviz01bvza</sha1>
    </revision>
    <revision>
      <id>328</id>
      <parentid>327</parentid>
      <timestamp>2025-06-13T23:55:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>328</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="19" sha1="g9acxmsdg2uvnac1msn1926pfi60eqd" xml:space="preserve">* [[Server:Mieten]]</text>
      <sha1>g9acxmsdg2uvnac1msn1926pfi60eqd</sha1>
    </revision>
    <revision>
      <id>329</id>
      <parentid>328</parentid>
      <timestamp>2025-06-14T00:48:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>329</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="45" sha1="py10d4p717i4uropnio4df6wmdrumsq" xml:space="preserve">* [[Server:Mieten]]
* [[Server:KachelServer]]</text>
      <sha1>py10d4p717i4uropnio4df6wmdrumsq</sha1>
    </revision>
    <revision>
      <id>330</id>
      <parentid>329</parentid>
      <timestamp>2025-06-14T01:00:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>330</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="79" sha1="31ad8qt4phjoy8ra52547chmryw5lbl" xml:space="preserve">* [[Server:Mieten]]
* [[Serber:Softwareinstallation]]
* [[Server:KachelServer]]</text>
      <sha1>31ad8qt4phjoy8ra52547chmryw5lbl</sha1>
    </revision>
    <revision>
      <id>331</id>
      <parentid>330</parentid>
      <timestamp>2025-06-14T01:00:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>331</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="79" sha1="6kgkt7i5n0fd7hc8j22zu3kudsrf5dt" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Softwareinstallation]]
* [[Server:KachelServer]]</text>
      <sha1>6kgkt7i5n0fd7hc8j22zu3kudsrf5dt</sha1>
    </revision>
    <revision>
      <id>332</id>
      <parentid>331</parentid>
      <timestamp>2025-06-14T01:01:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>332</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="80" sha1="c6yys9olhli5hhd621stj8xe1xsc59b" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Software Installation]]
* [[Server:KachelServer]]</text>
      <sha1>c6yys9olhli5hhd621stj8xe1xsc59b</sha1>
    </revision>
    <revision>
      <id>333</id>
      <parentid>332</parentid>
      <timestamp>2025-06-14T01:07:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>333</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="94" sha1="83wj0897euyroulpmm8pqmrbjj3tqc4" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]</text>
      <sha1>83wj0897euyroulpmm8pqmrbjj3tqc4</sha1>
    </revision>
    <revision>
      <id>334</id>
      <parentid>333</parentid>
      <timestamp>2025-06-14T03:00:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>334</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="127" sha1="sy1tkm63f9c4ohm75qa7jgzms4fjuh0" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]</text>
      <sha1>sy1tkm63f9c4ohm75qa7jgzms4fjuh0</sha1>
    </revision>
    <revision>
      <id>335</id>
      <parentid>334</parentid>
      <timestamp>2025-06-14T21:39:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>335</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="177" sha1="m96rb70kjgbsxeje9sznqbasggeqs8y" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:	TYPO3 (Tier 1)]]
* [[Server: Drupal]]</text>
      <sha1>m96rb70kjgbsxeje9sznqbasggeqs8y</sha1>
    </revision>
    <revision>
      <id>336</id>
      <parentid>335</parentid>
      <timestamp>2025-06-14T21:40:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>336</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="185" sha1="czzrg4e7hbwvraxcav6ro626h5429rf" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:	TYPO3 (Tier 1)]]
* [[Server: Drupal (Tier 1]]</text>
      <sha1>czzrg4e7hbwvraxcav6ro626h5429rf</sha1>
    </revision>
    <revision>
      <id>337</id>
      <parentid>336</parentid>
      <timestamp>2025-06-14T21:40:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>337</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="186" sha1="bkoge5c6eokzb3fwcfskn6k9htt4kjp" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:	TYPO3 (Tier 1)]]
* [[Server: Drupal (Tier 1)]]</text>
      <sha1>bkoge5c6eokzb3fwcfskn6k9htt4kjp</sha1>
    </revision>
    <revision>
      <id>338</id>
      <parentid>337</parentid>
      <timestamp>2025-06-14T21:40:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>338</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="184" sha1="tsbzn49ycl9260eq5iqii5mqffr5r6h" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:TYPO3 (Tier 1)]]
* [[Server:Drupal (Tier 1)]]</text>
      <sha1>tsbzn49ycl9260eq5iqii5mqffr5r6h</sha1>
    </revision>
    <revision>
      <id>339</id>
      <parentid>338</parentid>
      <timestamp>2025-06-14T23:59:10Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>339</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="209" sha1="kpfvd4qz80jtwom2ti83bhz0ei5f3l6" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:TYPO3 (Tier 1)]]
* [[Server:Drupal (Tier 1)]]
* [[Server:opencode.de]]</text>
      <sha1>kpfvd4qz80jtwom2ti83bhz0ei5f3l6</sha1>
    </revision>
    <revision>
      <id>340</id>
      <parentid>339</parentid>
      <timestamp>2025-06-15T01:03:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>340</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="220" sha1="azv5moyu0kpuyoyg5pwqi1gsdavco1y" xml:space="preserve">==Thema: Inoffizielles Stadtportal zum Thema Server-Software Verwalten==
* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]</text>
      <sha1>azv5moyu0kpuyoyg5pwqi1gsdavco1y</sha1>
    </revision>
    <revision>
      <id>341</id>
      <parentid>340</parentid>
      <timestamp>2025-06-15T01:11:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>341</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="212" sha1="gh135lv0a8tj7db96lne5rfeat71esg" xml:space="preserve">==Inoffizielles Stadtportal zur Verwaltung von Server-Software==
* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]</text>
      <sha1>gh135lv0a8tj7db96lne5rfeat71esg</sha1>
    </revision>
    <revision>
      <id>342</id>
      <parentid>341</parentid>
      <timestamp>2025-06-15T01:29:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>342</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="147" sha1="pcfoax9lwmbsrigsnwvnnf6cn2xhsjv" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]</text>
      <sha1>pcfoax9lwmbsrigsnwvnnf6cn2xhsjv</sha1>
    </revision>
    <revision>
      <id>343</id>
      <parentid>342</parentid>
      <timestamp>2025-06-15T01:53:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>343</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="176" sha1="lfyqtzkrtw655bha0hzbs6lt3ynheeo" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]


* Blog
* Nachrichtenportal</text>
      <sha1>lfyqtzkrtw655bha0hzbs6lt3ynheeo</sha1>
    </revision>
    <revision>
      <id>344</id>
      <parentid>343</parentid>
      <timestamp>2025-06-15T02:11:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>344</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="178" sha1="mql0r3cox64xmugk4henf233aii2206" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]


* Blog
* Nachrichtenportal
*</text>
      <sha1>mql0r3cox64xmugk4henf233aii2206</sha1>
    </revision>
    <revision>
      <id>345</id>
      <parentid>344</parentid>
      <timestamp>2025-06-15T02:37:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>345</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="257" sha1="pw404rf6yy24p6sq79daa6bez3xbwz4" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]


* Blog  - Drupal
* Nachrichtenportal - Typo3 und Drupal
* Veranstaltungskalender software und Portal
* Wiki</text>
      <sha1>pw404rf6yy24p6sq79daa6bez3xbwz4</sha1>
    </revision>
    <revision>
      <id>346</id>
      <parentid>345</parentid>
      <timestamp>2025-06-15T04:29:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>346</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="269" sha1="huhdlmd16lfyo8b9c7y8i8am65xgx95" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]


* Blog  - Drupal
* Nachrichtenportal - Typo3 und Drupal
* Veranstaltungskalender software und Portal
* Wiki - mediawiki</text>
      <sha1>huhdlmd16lfyo8b9c7y8i8am65xgx95</sha1>
    </revision>
    <revision>
      <id>347</id>
      <parentid>346</parentid>
      <timestamp>2025-06-15T05:07:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>347</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="306" sha1="3gf0xd87dbx51p19b87ur0we7o19esf" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]


* Blog  - Drupal
* Nachrichtenportal - Typo3 und Drupal
* Veranstaltungskalender software und Portal
* Wiki - mediawiki</text>
      <sha1>3gf0xd87dbx51p19b87ur0we7o19esf</sha1>
    </revision>
    <revision>
      <id>348</id>
      <parentid>347</parentid>
      <timestamp>2025-06-15T14:00:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>348</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="184" sha1="q8ebordstsohyf9ld5i2uuxx30lseld" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>q8ebordstsohyf9ld5i2uuxx30lseld</sha1>
    </revision>
    <revision>
      <id>349</id>
      <parentid>348</parentid>
      <timestamp>2025-06-16T01:06:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>349</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="224" sha1="fnq3me69vexnb4ebk77u7hq12k59gag" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

* [[Server:Mediawiki/Freigabeprozess]]</text>
      <sha1>fnq3me69vexnb4ebk77u7hq12k59gag</sha1>
    </revision>
    <revision>
      <id>350</id>
      <parentid>349</parentid>
      <timestamp>2025-06-16T02:10:32Z</timestamp>
      <contributor>
        <ip>95.90.254.18</ip>
      </contributor>
      <origin>350</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="231" sha1="7wyo0wszsgfq98czbac1ooblk2onrhs" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

* [[Server:Mediawiki/Freigabeprozess]]


gggg</text>
      <sha1>7wyo0wszsgfq98czbac1ooblk2onrhs</sha1>
    </revision>
    <revision>
      <id>351</id>
      <parentid>350</parentid>
      <timestamp>2025-06-16T03:33:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>351</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="269" sha1="lhn1jmgyv17t5t4j9luji1m0zo2m2xa" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

* [[Server:Mediawiki/Freigabeprozess]]
==Mediawiki Rechte- und Zugriffsverwaltung==</text>
      <sha1>lhn1jmgyv17t5t4j9luji1m0zo2m2xa</sha1>
    </revision>
    <revision>
      <id>352</id>
      <parentid>351</parentid>
      <timestamp>2025-06-16T09:08:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>352</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="349" sha1="b4v0n5qvl8joe25y2pctnn3mivjdq8r" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

* [[Server:Mediawiki/Freigabeprozess]]
* [[Server:Benutzerrechte änder]]
* [[Server:Namepace Benutzerrechte ändern]]
==Mediawiki Rechte- und Zugriffsverwaltung==</text>
      <sha1>b4v0n5qvl8joe25y2pctnn3mivjdq8r</sha1>
    </revision>
    <revision>
      <id>353</id>
      <parentid>352</parentid>
      <timestamp>2025-06-16T09:48:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>353</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1902" sha1="6yl859ra9y1uznb75xe0rj8qmf0aj02" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>6yl859ra9y1uznb75xe0rj8qmf0aj02</sha1>
    </revision>
    <revision>
      <id>354</id>
      <parentid>353</parentid>
      <timestamp>2025-06-16T09:56:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Nachteile */</comment>
      <origin>354</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1928" sha1="j6mczueeupevb09bvtjjqgksnjk2i5y" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
==Weiter Informationen==
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]

==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>j6mczueeupevb09bvtjjqgksnjk2i5y</sha1>
    </revision>
    <revision>
      <id>355</id>
      <parentid>354</parentid>
      <timestamp>2025-06-16T10:02:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>355</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1902" sha1="6yl859ra9y1uznb75xe0rj8qmf0aj02" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>6yl859ra9y1uznb75xe0rj8qmf0aj02</sha1>
    </revision>
    <revision>
      <id>356</id>
      <parentid>355</parentid>
      <timestamp>2025-06-17T23:32:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>356</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1921" sha1="4sqdea2e338ynj8s52pfwyuu2lqlxvw" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Nginx]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>4sqdea2e338ynj8s52pfwyuu2lqlxvw</sha1>
    </revision>
    <revision>
      <id>357</id>
      <parentid>356</parentid>
      <timestamp>2025-06-17T23:37:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>357</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1933" sha1="m4mrbk6c03y7xa325eno4q7cxtwc71l" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Nginx Einstellung]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>m4mrbk6c03y7xa325eno4q7cxtwc71l</sha1>
    </revision>
    <revision>
      <id>358</id>
      <parentid>357</parentid>
      <timestamp>2025-06-18T00:27:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>358</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1950" sha1="md3nhs9b6qsy94bfvve4vi3sropk0a2" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>md3nhs9b6qsy94bfvve4vi3sropk0a2</sha1>
    </revision>
    <revision>
      <id>359</id>
      <parentid>358</parentid>
      <timestamp>2025-06-18T08:48:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>359</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2024" sha1="3c4tl4btex1a4k7jgwclumur8rcoxc2" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>3c4tl4btex1a4k7jgwclumur8rcoxc2</sha1>
    </revision>
    <revision>
      <id>360</id>
      <parentid>359</parentid>
      <timestamp>2025-06-19T06:40:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>360</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2057" sha1="bn6izydi3rsjdtj9zv4l183y7ho3bha" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>bn6izydi3rsjdtj9zv4l183y7ho3bha</sha1>
    </revision>
    <revision>
      <id>361</id>
      <parentid>360</parentid>
      <timestamp>2025-06-19T08:06:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>361</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2188" sha1="41tq9saeh6g75nrgzyo7f8tywvm4h2h" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Visual Studio Code mit]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
==Vergleich: Drupal und Mediawiki nutzen==
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>41tq9saeh6g75nrgzyo7f8tywvm4h2h</sha1>
    </revision>
    <revision>
      <id>362</id>
      <parentid>361</parentid>
      <timestamp>2025-06-19T08:13:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>362</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2191" sha1="1b11d8570fboc6gntl148rf7zt9idaf" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
==Vergleich: Drupal und Mediawiki nutzen==
==Drupal==
 Drupal ist ein Open-Source Content-Management-System (CMS), das für die Erstellung und Verwaltung von Webseiten verwendet wird. Es bietet eine flexible Architektur, zahlreiche Erweiterungen und eine aktive Community.
===Vorteile===
* Hohe Flexibilität und Erweiterbarkeit durch Module und Themes
* Aktive Community und umfangreiche Dokumentation
* Leistungsstarke Benutzer- und Rechteverwaltung
* Geeignet für komplexe und mehrsprachige Webseiten
* Gute Skalierbarkeit für große Projekte

===Nachteile===
* Einarbeitung kann für Einsteiger anspruchsvoll sein
* Höherer Ressourcenbedarf im Vergleich zu einfacheren CMS
* Updates und Wartung können aufwendig sein
* Für kleine Webseiten oft überdimensioniert
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]
==Mediawiki==
Mediawiki ist eine freie Wiki-Software, die zur gemeinschaftlichen Erstellung und Verwaltung von Inhalten genutzt wird. Sie ist flexibel, erweiterbar und bildet die technische Grundlage für Wikipedia.
===Wiki-Prinzip===
Das Wiki-Prinzip ermöglicht es mehreren Benutzern, Inhalte gemeinschaftlich und direkt im Browser zu erstellen und zu bearbeiten.

====Vorteile====
* Förderung der Zusammenarbeit und des Wissensaustauschs
* Schnelle und einfache Aktualisierung von Inhalten
* Versionskontrolle ermöglicht Nachverfolgung von Änderungen
* Niedrige Einstiegshürde für neue Autoren

====Nachteile====
* Gefahr von Vandalismus oder Fehlinformationen
* Qualitätssicherung kann aufwendig sein
* Strukturen können unübersichtlich werden
* Erfordert aktive Moderation und Pflege
===Freigabeprozess===
* [[Server:Mediawiki/Freigabeprozess]]
====Mediawiki Rechte- und Zugriffsverwaltung====
* [[Server:Namespace Benutzerrechte ändern]]
* [[Server:Benutzerrechte ändern]]</text>
      <sha1>1b11d8570fboc6gntl148rf7zt9idaf</sha1>
    </revision>
    <revision>
      <id>363</id>
      <parentid>362</parentid>
      <timestamp>2025-06-19T08:28:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>363</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="430" sha1="fcf758jgpkfwaq8cm7cery5w00yhfe7" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>fcf758jgpkfwaq8cm7cery5w00yhfe7</sha1>
    </revision>
    <revision>
      <id>364</id>
      <parentid>363</parentid>
      <timestamp>2025-06-19T09:15:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>364</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="510" sha1="3fah6defxfjm6unyrup6xz8n5zksi6p" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>3fah6defxfjm6unyrup6xz8n5zksi6p</sha1>
    </revision>
    <revision>
      <id>365</id>
      <parentid>364</parentid>
      <timestamp>2025-06-19T21:18:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>365</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="530" sha1="0dpc0vfvg54nn4d78vky6gmnngjaqvj" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>0dpc0vfvg54nn4d78vky6gmnngjaqvj</sha1>
    </revision>
    <revision>
      <id>366</id>
      <parentid>365</parentid>
      <timestamp>2025-06-20T06:44:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>366</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="421" sha1="3zexuullu7osrvnt5tzwogt676ex36t" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]</text>
      <sha1>3zexuullu7osrvnt5tzwogt676ex36t</sha1>
    </revision>
    <revision>
      <id>367</id>
      <parentid>366</parentid>
      <timestamp>2025-06-20T07:26:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>367</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="530" sha1="0dpc0vfvg54nn4d78vky6gmnngjaqvj" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>0dpc0vfvg54nn4d78vky6gmnngjaqvj</sha1>
    </revision>
    <revision>
      <id>368</id>
      <parentid>367</parentid>
      <timestamp>2025-06-22T19:35:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>Thorsten verschob die Seite [[Ns3000:Hauptseite]] nach [[Server:Hauptseite]]</comment>
      <origin>367</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="530" sha1="0dpc0vfvg54nn4d78vky6gmnngjaqvj" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Inhaltsverwaltung und Datenverwaltungssoftware für Websites]]
* [[Server:Office Paket mit KI]]
* [[Server:Mehr Informationen zu Sprachmodellen und Deep Research im Internet]]
* [[Server:Visual Studio Code mit KI]]
* [[Server:Vergleich: Drupal und Mediawiki nutzen]]
* [[Server:Drupal]]
* [[Server:Drupal Themen Vorschlag]]</text>
      <sha1>0dpc0vfvg54nn4d78vky6gmnngjaqvj</sha1>
    </revision>
    <revision>
      <id>369</id>
      <parentid>368</parentid>
      <timestamp>2025-06-26T13:37:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>369</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="195" sha1="4rwir0b8py5qlqwsrb9imj1jbmfl0wa" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]</text>
      <sha1>4rwir0b8py5qlqwsrb9imj1jbmfl0wa</sha1>
    </revision>
    <revision>
      <id>370</id>
      <parentid>369</parentid>
      <timestamp>2025-06-26T13:56:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>370</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="231" sha1="podxxh7o6ddfvb2ecorik3g69o16u0o" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]</text>
      <sha1>podxxh7o6ddfvb2ecorik3g69o16u0o</sha1>
    </revision>
    <revision>
      <id>598</id>
      <parentid>370</parentid>
      <timestamp>2025-07-05T00:43:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>598</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="252" sha1="51x7hsizsq6xr1jnf0davmdzc0retyu" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Postfix]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]</text>
      <sha1>51x7hsizsq6xr1jnf0davmdzc0retyu</sha1>
    </revision>
    <revision>
      <id>599</id>
      <parentid>598</parentid>
      <timestamp>2025-07-05T00:45:19Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>599</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="263" sha1="qi57p782287kgbphxphm6o48fe2i2l4" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Postfix Mailserver]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]</text>
      <sha1>qi57p782287kgbphxphm6o48fe2i2l4</sha1>
    </revision>
    <revision>
      <id>601</id>
      <parentid>599</parentid>
      <timestamp>2025-07-05T16:56:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>601</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="339" sha1="oiu261xmbnqzre30dc61sm7lndxvw3v" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:Postfix Mailserver]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]
* [[Server:Moodle Installieren]]
* [[Server:Ahrensburg.city Asp Anwendung]]</text>
      <sha1>oiu261xmbnqzre30dc61sm7lndxvw3v</sha1>
    </revision>
    <revision>
      <id>603</id>
      <parentid>601</parentid>
      <timestamp>2025-07-06T14:07:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>603</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="307" sha1="po919ntv2aiellue8vlss64p5db1u8i" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]
* [[Server:Moodle Installieren]]
* [[Server:Ahrensburg.city Asp Anwendung]]</text>
      <sha1>po919ntv2aiellue8vlss64p5db1u8i</sha1>
    </revision>
    <revision>
      <id>627</id>
      <parentid>603</parentid>
      <timestamp>2025-07-09T22:14:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>627</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="274" sha1="q7ofhm60bqcqtlbpxmcaggi2qybijy5" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]
* [[Server:Ahrensburg.city Asp Anwendung]]</text>
      <sha1>q7ofhm60bqcqtlbpxmcaggi2qybijy5</sha1>
    </revision>
    <revision>
      <id>642</id>
      <parentid>627</parentid>
      <timestamp>2025-07-10T13:29:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>642</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="294" sha1="gzoluhdy9u66jn4jkrqv9gg0uo5fnt4" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]
* [[Server:Moodle]]
* [[Server:Ahrensburg.city Asp Anwendung]]</text>
      <sha1>gzoluhdy9u66jn4jkrqv9gg0uo5fnt4</sha1>
    </revision>
    <revision>
      <id>646</id>
      <parentid>642</parentid>
      <timestamp>2025-07-10T15:35:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>646</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="275" sha1="qq75rnqdwvlou898gzsxfcyckm6kejt" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]

* [[Server:Ahrensburg.city Asp Anwendung]]</text>
      <sha1>qq75rnqdwvlou898gzsxfcyckm6kejt</sha1>
    </revision>
    <revision>
      <id>712</id>
      <parentid>646</parentid>
      <timestamp>2025-08-01T03:26:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>712</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="295" sha1="ftwuazh05sxufcyg70xvldsi7ndqse1" xml:space="preserve">* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:KachelServer]]
* [[Server:Apache Port ändern]]
* [[Server:SSL]]
* [[Server:Nginx Einstellung]]
* [[Server:Mediawiki Installieren]]
* [[Server:Postfix]]
* [[Server:Ahrensburg.city Asp Anwendung]]</text>
      <sha1>ftwuazh05sxufcyg70xvldsi7ndqse1</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Ns3000:Mieten</title>
    <ns>3000</ns>
    <id>104</id>
    <revision>
      <id>371</id>
      <timestamp>2025-06-13T23:56:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Webspace Mieten== Webspace ist ein wichtiger Bestandteil eines Hosting-Pakets und bezieht sich auf den Speicherplatz, den ein Hosting-Anbieter auf seinen Servern zur Verfügung stellt. Webspace wird verwendet, um Dateien, Bilder und andere Inhalte einer Website zu speichern und zu verwalten. Die Menge an Webspace, die benötigt wird, hängt von der Größe der Website und der Anzahl der Besucher ab. * [https://bero-host.de/webhosting/prepaid-webspace-m…“</comment>
      <origin>371</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8603" sha1="ra7qqzs496lgna7fs9pznsvuavwy8gu" xml:space="preserve">== Webspace Mieten==
Webspace ist ein wichtiger Bestandteil eines Hosting-Pakets und bezieht sich auf den Speicherplatz, den ein Hosting-Anbieter auf seinen Servern zur Verfügung stellt. Webspace wird verwendet, um Dateien, Bilder
und andere Inhalte einer Website zu speichern und zu verwalten. Die Menge an Webspace, die benötigt wird, hängt von der Größe der Website und der Anzahl der Besucher ab.
* [https://bero-host.de/webhosting/prepaid-webspace-mieten Bero-Host] bietet eine Vielzahl von Webspace-Paketen zu wettbewerbsfähigen Preisen an.
* [https://server.unesty.net/webspace unesty] bietet eine breite Palette von Webspace-Paketen mit hoher Leistung und Zuverlässigkeit an.
==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>ra7qqzs496lgna7fs9pznsvuavwy8gu</sha1>
    </revision>
    <revision>
      <id>372</id>
      <parentid>371</parentid>
      <timestamp>2025-06-14T00:35:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Webspace Mieten */</comment>
      <origin>372</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7912" sha1="h87lgi653cwqkzc5txo8vunxj7j3e83" xml:space="preserve">==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>h87lgi653cwqkzc5txo8vunxj7j3e83</sha1>
    </revision>
    <revision>
      <id>373</id>
      <parentid>372</parentid>
      <timestamp>2025-06-22T19:37:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <minor/>
      <comment>Thorsten verschob die Seite [[Ns3000:Mieten]] nach [[Server:Ns3000:Mieten]]</comment>
      <origin>372</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7912" sha1="h87lgi653cwqkzc5txo8vunxj7j3e83" xml:space="preserve">==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>h87lgi653cwqkzc5txo8vunxj7j3e83</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Hauptseite</title>
    <ns>3002</ns>
    <id>105</id>
    <revision>
      <id>374</id>
      <timestamp>2025-06-22T18:10:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Test“</comment>
      <origin>374</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6" sha1="2ysnf4t7ane4z0f5n6t5ajet0yfpu48" xml:space="preserve">* Test</text>
      <sha1>2ysnf4t7ane4z0f5n6t5ajet0yfpu48</sha1>
    </revision>
    <revision>
      <id>375</id>
      <parentid>374</parentid>
      <timestamp>2025-06-23T08:18:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>375</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="16" sha1="f5hbodr4nae5siappy0qij2p98f9gxd" xml:space="preserve">* [[Kurse:HTTP]]</text>
      <sha1>f5hbodr4nae5siappy0qij2p98f9gxd</sha1>
    </revision>
    <revision>
      <id>376</id>
      <parentid>375</parentid>
      <timestamp>2025-06-23T08:30:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>376</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="39" sha1="c6yqpg7pl2dlz9w48pehhxhwo2m1q3n" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]</text>
      <sha1>c6yqpg7pl2dlz9w48pehhxhwo2m1q3n</sha1>
    </revision>
    <revision>
      <id>377</id>
      <parentid>376</parentid>
      <timestamp>2025-06-23T08:56:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>377</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="59" sha1="mo9fngp93ti5uvhnaebcsbpwg6njls3" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]</text>
      <sha1>mo9fngp93ti5uvhnaebcsbpwg6njls3</sha1>
    </revision>
    <revision>
      <id>378</id>
      <parentid>377</parentid>
      <timestamp>2025-06-23T09:15:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>378</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="83" sha1="27o5eu05sz0rtcfoowsjbdav7mbwevv" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]</text>
      <sha1>27o5eu05sz0rtcfoowsjbdav7mbwevv</sha1>
    </revision>
    <revision>
      <id>379</id>
      <parentid>378</parentid>
      <timestamp>2025-06-23T09:33:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>379</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="106" sha1="tklqtmf556p7sk7butys5dlw618541s" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controller
* [[Kurse:Model Binding]]</text>
      <sha1>tklqtmf556p7sk7butys5dlw618541s</sha1>
    </revision>
    <revision>
      <id>380</id>
      <parentid>379</parentid>
      <timestamp>2025-06-23T09:34:11Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>380</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="108" sha1="rwwzz54cwl3hpkam1x3nknp9n0ic4pu" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controller]]
* [[Kurse:Model Binding]]</text>
      <sha1>rwwzz54cwl3hpkam1x3nknp9n0ic4pu</sha1>
    </revision>
    <revision>
      <id>381</id>
      <parentid>380</parentid>
      <timestamp>2025-06-23T09:34:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>381</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="109" sha1="f22in4im8yxgk6bgl27gs369m9skym3" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]</text>
      <sha1>f22in4im8yxgk6bgl27gs369m9skym3</sha1>
    </revision>
    <revision>
      <id>382</id>
      <parentid>381</parentid>
      <timestamp>2025-06-23T10:19:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>382</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="133" sha1="7uscenoye2kzn6tli0527xozaa62b5o" xml:space="preserve">* [[Kurse:HTTP]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>7uscenoye2kzn6tli0527xozaa62b5o</sha1>
    </revision>
    <revision>
      <id>383</id>
      <parentid>382</parentid>
      <timestamp>2025-06-23T19:28:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>383</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="164" sha1="cf5ja05i0s5tcsgflaye6zb0qmvf0ea" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>cf5ja05i0s5tcsgflaye6zb0qmvf0ea</sha1>
    </revision>
    <revision>
      <id>384</id>
      <parentid>383</parentid>
      <timestamp>2025-06-23T20:51:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>384</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="204" sha1="ja6gg7x09te6wtfeph23h5339egx42l" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>ja6gg7x09te6wtfeph23h5339egx42l</sha1>
    </revision>
    <revision>
      <id>385</id>
      <parentid>384</parentid>
      <timestamp>2025-06-24T02:32:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>385</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="241" sha1="32o0c76v2nxotaqxzgt3j1qm542ue8r" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurs:Täglich Routing Übungen]]
* [[Kurse:Controllers]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>32o0c76v2nxotaqxzgt3j1qm542ue8r</sha1>
    </revision>
    <revision>
      <id>386</id>
      <parentid>385</parentid>
      <timestamp>2025-06-24T03:39:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>386</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="282" sha1="nf6dk3fvvqdt3dfv5l74ofmzye9df3p" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurs:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurs:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]]
* [[Kurse:Razor Views]]</text>
      <sha1>nf6dk3fvvqdt3dfv5l74ofmzye9df3p</sha1>
    </revision>
    <revision>
      <id>387</id>
      <parentid>386</parentid>
      <timestamp>2025-06-24T04:14:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>387</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="324" sha1="t5segcy5kw5l842vankg0g21h6om7rq" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurs:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurs:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [Kurs:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]]</text>
      <sha1>t5segcy5kw5l842vankg0g21h6om7rq</sha1>
    </revision>
    <revision>
      <id>388</id>
      <parentid>387</parentid>
      <timestamp>2025-06-24T04:14:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>388</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="325" sha1="b2oa6jqyl5nkizxdz3fma9evy5mgnp6" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurs:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurs:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurs:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]]</text>
      <sha1>b2oa6jqyl5nkizxdz3fma9evy5mgnp6</sha1>
    </revision>
    <revision>
      <id>389</id>
      <parentid>388</parentid>
      <timestamp>2025-06-24T04:40:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>389</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="328" sha1="76g39v5o1xwdaoctq6aqlxsyl1l1vqx" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]]</text>
      <sha1>76g39v5o1xwdaoctq6aqlxsyl1l1vqx</sha1>
    </revision>
    <revision>
      <id>390</id>
      <parentid>389</parentid>
      <timestamp>2025-06-24T04:57:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>390</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="361" sha1="inmafcx01xj6eu6guyuuj1gvk3e2o2c" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]</text>
      <sha1>inmafcx01xj6eu6guyuuj1gvk3e2o2c</sha1>
    </revision>
    <revision>
      <id>391</id>
      <parentid>390</parentid>
      <timestamp>2025-06-25T10:41:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>391</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="389" sha1="bxvmssdxph23kt89pa9nxrkm57ffiri" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Grud Operatoren]]</text>
      <sha1>bxvmssdxph23kt89pa9nxrkm57ffiri</sha1>
    </revision>
    <revision>
      <id>392</id>
      <parentid>391</parentid>
      <timestamp>2025-06-25T11:39:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>392</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="426" sha1="12gv93in7h9zlgs8g5a0dicwy5gh4zg" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Grud Operatoren]]
* [[Kurse:Identity &amp; Authorization]]</text>
      <sha1>12gv93in7h9zlgs8g5a0dicwy5gh4zg</sha1>
    </revision>
    <revision>
      <id>393</id>
      <parentid>392</parentid>
      <timestamp>2025-06-25T11:58:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>393</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="460" sha1="k7yxy8vorcv0pota1m1sypv0a9hzr0k" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Grud Operatoren]]
* [[Kurse:Identity &amp; Authorization]]
* [[Kurse:Entity Framework Core]]</text>
      <sha1>k7yxy8vorcv0pota1m1sypv0a9hzr0k</sha1>
    </revision>
    <revision>
      <id>394</id>
      <parentid>393</parentid>
      <timestamp>2025-06-25T13:38:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>394</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="389" sha1="bxvmssdxph23kt89pa9nxrkm57ffiri" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Grud Operatoren]]</text>
      <sha1>bxvmssdxph23kt89pa9nxrkm57ffiri</sha1>
    </revision>
    <revision>
      <id>395</id>
      <parentid>394</parentid>
      <timestamp>2025-06-25T13:39:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>395</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="361" sha1="inmafcx01xj6eu6guyuuj1gvk3e2o2c" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]</text>
      <sha1>inmafcx01xj6eu6guyuuj1gvk3e2o2c</sha1>
    </revision>
    <revision>
      <id>396</id>
      <parentid>395</parentid>
      <timestamp>2025-06-25T14:27:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>396</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="385" sha1="8xaty9d2run77pe86xpgn5qb4gzncen" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Laout Views]]</text>
      <sha1>8xaty9d2run77pe86xpgn5qb4gzncen</sha1>
    </revision>
    <revision>
      <id>397</id>
      <parentid>396</parentid>
      <timestamp>2025-06-25T14:31:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>397</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="386" sha1="qqfatk3lxfq0wiueuffxw4cqkwofu60" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]]</text>
      <sha1>qqfatk3lxfq0wiueuffxw4cqkwofu60</sha1>
    </revision>
    <revision>
      <id>398</id>
      <parentid>397</parentid>
      <timestamp>2025-06-25T14:40:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>398</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="429" sha1="0zkg2dlc9yinqfiwjvrtwoaau9senzd" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]</text>
      <sha1>0zkg2dlc9yinqfiwjvrtwoaau9senzd</sha1>
    </revision>
    <revision>
      <id>399</id>
      <parentid>398</parentid>
      <timestamp>2025-06-27T12:53:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>399</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="455" sha1="hcvbot7fesz375fc68a8n4iyd6e8lhi" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]</text>
      <sha1>hcvbot7fesz375fc68a8n4iyd6e8lhi</sha1>
    </revision>
    <revision>
      <id>507</id>
      <parentid>399</parentid>
      <timestamp>2025-06-29T18:54:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>507</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="477" sha1="ozyumrzgot50ctxs86q6q65kteu8zrm" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]

* [[Kurse:Services]]</text>
      <sha1>ozyumrzgot50ctxs86q6q65kteu8zrm</sha1>
    </revision>
    <revision>
      <id>509</id>
      <parentid>507</parentid>
      <timestamp>2025-06-29T19:21:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>509</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="504" sha1="gfq0vvjwitofpggj4eqb4a7n7jlmfwy" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]</text>
      <sha1>gfq0vvjwitofpggj4eqb4a7n7jlmfwy</sha1>
    </revision>
    <revision>
      <id>511</id>
      <parentid>509</parentid>
      <timestamp>2025-06-29T19:47:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>511</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="542" sha1="5vnmlkb8j6work6z2ogz4u2g9ehtouh" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]</text>
      <sha1>5vnmlkb8j6work6z2ogz4u2g9ehtouh</sha1>
    </revision>
    <revision>
      <id>513</id>
      <parentid>511</parentid>
      <timestamp>2025-06-29T20:03:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>513</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="581" sha1="clbpli7quj8th0mgrwpv7cmg7t7oiwj" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]</text>
      <sha1>clbpli7quj8th0mgrwpv7cmg7t7oiwj</sha1>
    </revision>
    <revision>
      <id>516</id>
      <parentid>513</parentid>
      <timestamp>2025-06-29T20:09:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>516</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="609" sha1="7cvsfbcz6mo9v3ij84hoqy8xka20v69" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]</text>
      <sha1>7cvsfbcz6mo9v3ij84hoqy8xka20v69</sha1>
    </revision>
    <revision>
      <id>518</id>
      <parentid>516</parentid>
      <timestamp>2025-06-29T20:17:32Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>518</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="633" sha1="h09gpjpgxf8s32pcmn67pn7zi7ds8of" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]</text>
      <sha1>h09gpjpgxf8s32pcmn67pn7zi7ds8of</sha1>
    </revision>
    <revision>
      <id>524</id>
      <parentid>518</parentid>
      <timestamp>2025-06-29T21:10:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>524</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="667" sha1="h4fsjbbm4cec7tshk7qes58vuc6oxwa" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]</text>
      <sha1>h4fsjbbm4cec7tshk7qes58vuc6oxwa</sha1>
    </revision>
    <revision>
      <id>526</id>
      <parentid>524</parentid>
      <timestamp>2025-06-30T04:03:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>526</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="715" sha1="a89ft1gmbvsjqrlidynol55amvf33ml" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization</text>
      <sha1>a89ft1gmbvsjqrlidynol55amvf33ml</sha1>
    </revision>
    <revision>
      <id>527</id>
      <parentid>526</parentid>
      <timestamp>2025-06-30T04:03:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>527</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="717" sha1="qzf3vys7vspys7mw0ovqumuhl0osv7q" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]</text>
      <sha1>qzf3vys7vspys7mw0ovqumuhl0osv7q</sha1>
    </revision>
    <revision>
      <id>579</id>
      <parentid>527</parentid>
      <timestamp>2025-07-02T10:44:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>579</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="776" sha1="1zkyl7q57ivwr6kp8ngnf2zmtoxk8qn" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]</text>
      <sha1>1zkyl7q57ivwr6kp8ngnf2zmtoxk8qn</sha1>
    </revision>
    <revision>
      <id>585</id>
      <parentid>579</parentid>
      <timestamp>2025-07-03T19:15:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>585</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="843" sha1="hgovnrgfbr928uzrad1cl2gufv07flq" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
==
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]</text>
      <sha1>hgovnrgfbr928uzrad1cl2gufv07flq</sha1>
    </revision>
    <revision>
      <id>587</id>
      <parentid>585</parentid>
      <timestamp>2025-07-03T20:15:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Kurse Übungen Projekt */</comment>
      <origin>587</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="972" sha1="tpthxzdv9mntfwh7oqxzy2cy6y49v86" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
==
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Lernplan für Jakarta EE nach einzelnen Schritten]]
* [[Kurse:Lernplan für Spring boot 3 6 nach einzelnen Schritten]]</text>
      <sha1>tpthxzdv9mntfwh7oqxzy2cy6y49v86</sha1>
    </revision>
    <revision>
      <id>589</id>
      <parentid>587</parentid>
      <timestamp>2025-07-03T20:28:39Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>589</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="906" sha1="d7bgqebflca2dbjkfkihgnf5s318xus" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
==
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Lernplan für Spring Boot 3 und Spring Framework 6]]</text>
      <sha1>d7bgqebflca2dbjkfkihgnf5s318xus</sha1>
    </revision>
    <revision>
      <id>591</id>
      <parentid>589</parentid>
      <timestamp>2025-07-04T03:41:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>591</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1073" sha1="ltpyyb9dhj4tqfbut6tyadem1o9bk6b" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
==
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Lernplan für Spring Boot 3 und Spring Framework 6]]
* [[Kurse:Lernplan für Drupal 11 einzelnen Schritten]]
* [[Kurse:Lernplan für Moodle 5 einzelnen Schritten]]
* [[Kurse:Lernplan für Mediawiki einzelnen Schritten]]</text>
      <sha1>ltpyyb9dhj4tqfbut6tyadem1o9bk6b</sha1>
    </revision>
    <revision>
      <id>595</id>
      <parentid>591</parentid>
      <timestamp>2025-07-04T21:16:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>595</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1092" sha1="coq5dco1j6pfnse6tw82t17orp6i4u0" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
==
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Lernplan für Spring Boot 3 und Spring Framework 6]]
* [[Kurse:Lernplan für Drupal 11 einzelnen Schritten]]
* [[Kurse:Lernplan für Moodle 5 einzelnen Schritten]]
* [[Kurse:Lernplan für Mediawiki einzelnen Schritten]]
* [[Kurse:Moodle]]</text>
      <sha1>coq5dco1j6pfnse6tw82t17orp6i4u0</sha1>
    </revision>
    <revision>
      <id>610</id>
      <parentid>595</parentid>
      <timestamp>2025-07-08T21:26:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>610</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="973" sha1="4ycvu8toq3htrvli6oj7szxbhz3nzif" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
==
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Lernplan für Moodle 5 einzelnen Schritten]]
* [[Kurse:Lernplan für Mediawiki einzelnen Schritten]]
* [[Kurse:Moodle]]</text>
      <sha1>4ycvu8toq3htrvli6oj7szxbhz3nzif</sha1>
    </revision>
    <revision>
      <id>611</id>
      <parentid>610</parentid>
      <timestamp>2025-07-08T21:56:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>611</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="990" sha1="kbh59cgsbtdcv6pdl0obma16zumtd3x" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
==
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Lernplan für Moodle 5 einzelnen Schritten]]
* [[Kurse:Lernplan für Mediawiki einzelnen Schritten]]
* [[Kurse:Moodle]]
* [[Kurse:Lumi]]</text>
      <sha1>kbh59cgsbtdcv6pdl0obma16zumtd3x</sha1>
    </revision>
    <revision>
      <id>668</id>
      <parentid>611</parentid>
      <timestamp>2025-07-17T00:47:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Kurse Übungen Projekt */</comment>
      <origin>668</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="840" sha1="1ejzh61dikhzmcvqobnsdyu33cypmbf" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]</text>
      <sha1>1ejzh61dikhzmcvqobnsdyu33cypmbf</sha1>
    </revision>
    <revision>
      <id>669</id>
      <parentid>668</parentid>
      <timestamp>2025-07-17T01:17:10Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>669</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="874" sha1="1mz0wydlyglsxs56c18gfygxjjhgsj1" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:asp net core Übung 1]]</text>
      <sha1>1mz0wydlyglsxs56c18gfygxjjhgsj1</sha1>
    </revision>
    <revision>
      <id>670</id>
      <parentid>669</parentid>
      <timestamp>2025-07-17T01:18:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>670</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="874" sha1="1q0mpcwvofx7547n8h3bbly5u2kzyj8" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]</text>
      <sha1>1q0mpcwvofx7547n8h3bbly5u2kzyj8</sha1>
    </revision>
    <revision>
      <id>676</id>
      <parentid>670</parentid>
      <timestamp>2025-07-17T18:21:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>676</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="906" sha1="7dscxer0ccrcni2nitw6sj7z30fteb2" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
==Kurse==
* [[Kurse:Udemy.com]]</text>
      <sha1>7dscxer0ccrcni2nitw6sj7z30fteb2</sha1>
    </revision>
    <revision>
      <id>722</id>
      <parentid>676</parentid>
      <timestamp>2025-08-11T22:15:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Kurse Übungen Projekt */</comment>
      <origin>722</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="961" sha1="0fzzs17p5kuijonf7d9n659b9e6sf3k" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[n C# gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]</text>
      <sha1>0fzzs17p5kuijonf7d9n659b9e6sf3k</sha1>
    </revision>
    <revision>
      <id>723</id>
      <parentid>722</parentid>
      <timestamp>2025-08-11T22:16:32Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>723</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="965" sha1="scuwefwx6zy48f4o14omfvbus0ly7bj" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C sharpe gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]</text>
      <sha1>scuwefwx6zy48f4o14omfvbus0ly7bj</sha1>
    </revision>
    <revision>
      <id>724</id>
      <parentid>723</parentid>
      <timestamp>2025-08-11T22:17:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>724</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="964" sha1="9ek0pqjo4vaz1tpbu4kz0as399nsxdv" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C Sharp gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]</text>
      <sha1>9ek0pqjo4vaz1tpbu4kz0as399nsxdv</sha1>
    </revision>
    <revision>
      <id>764</id>
      <parentid>724</parentid>
      <timestamp>2025-08-26T03:54:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Kurse */</comment>
      <origin>764</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="996" sha1="r2zqwro2wd4hra89tuvhqv3z2ludbka" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C Sharp gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]
* [[Kurse:Variable-Datentypen]]</text>
      <sha1>r2zqwro2wd4hra89tuvhqv3z2ludbka</sha1>
    </revision>
    <revision>
      <id>766</id>
      <parentid>764</parentid>
      <timestamp>2025-09-01T22:58:11Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>766</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1027" sha1="r89rlqwk22nc29z5pjbgw1ri5fptuwl" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C Sharp gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]
* [[Kurse:Variable-Datentypen]]
* [[Kurse:Datentypen-C-Sharp]]</text>
      <sha1>r89rlqwk22nc29z5pjbgw1ri5fptuwl</sha1>
    </revision>
    <revision>
      <id>775</id>
      <parentid>766</parentid>
      <timestamp>2025-09-07T02:32:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Kurse */</comment>
      <origin>775</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1060" sha1="bdt9fch3dw2f6u1crhyh132bkyp3ccn" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C Sharp gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]
* [[Kurse:Variable-Datentypen]]
* [[Kurse:Datentypen-C-Sharp]]
* [[Kurse:Moderne-C-Charp Aufbau</text>
      <sha1>bdt9fch3dw2f6u1crhyh132bkyp3ccn</sha1>
    </revision>
    <revision>
      <id>776</id>
      <parentid>775</parentid>
      <timestamp>2025-09-07T02:36:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Kurse */</comment>
      <origin>776</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1069" sha1="ceoeavbjq14mazozbdt4n6mbfbev2gy" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C Sharp gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]
* [[Kurse:Variable-Datentypen]]
* [[Kurse:Datentypen-C-Sharp]]
* [[Kurse:Moderne-C-Charp Classe Aufbau]]</text>
      <sha1>ceoeavbjq14mazozbdt4n6mbfbev2gy</sha1>
    </revision>
    <revision>
      <id>777</id>
      <parentid>776</parentid>
      <timestamp>2025-09-07T02:39:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Kurse */</comment>
      <origin>777</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1068" sha1="93mlbked92oaslfb92fwyhjw7mut8kq" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C Sharp gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]
* [[Kurse:Variable-Datentypen]]
* [[Kurse:Datentypen-C-Sharp]]
* [[Kurse:Moderne-C-Charp Class Aufbau]]</text>
      <sha1>93mlbked92oaslfb92fwyhjw7mut8kq</sha1>
    </revision>
    <revision>
      <id>788</id>
      <parentid>777</parentid>
      <timestamp>2025-09-25T18:33:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>788</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1126" sha1="gaky5btqwnk38tvoctnh2ljhzdxaous" xml:space="preserve">* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C Sharp gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]
* [[Kurse:Variable-Datentypen]]

==Wichtige Befehl==
* [[Kurse:Asp Net Core Einstellung]]
* [[Kurse:Datentypen-C-Sharp]]
* [[Kurse:Moderne-C-Charp Class Aufbau]]</text>
      <sha1>gaky5btqwnk38tvoctnh2ljhzdxaous</sha1>
    </revision>
    <revision>
      <id>790</id>
      <parentid>788</parentid>
      <timestamp>2025-09-26T08:29:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>790</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1150" sha1="czzedspmht76hmvlp3pmj6kgzxg91jl" xml:space="preserve">* [[Kurse:Lerntechnik]]
* [[Kurse:HTTP]] - [[Kurse:HTTP Code Übungen]]
* [[Kurse:Middleware]] - [[Kurse:Tägich Middleware Übungen]]
* [[Kurse:Routing]] - [[Kurse:Täglich Routing Übungen]]
* [[Kurse:Controllers]] - [[Kurse:Täglich Controllers Übungen]]
* [[Kurse:Model Binding]] - [[Kurse:Täglich Model Binding Übungen]]
* [[Kurse:Razor Views]] - [[Kurse:Täglich Razor Views]]
* [[Kurse:Layout Views]] - [[Kurse:Täglich Layout Views Übungen]]
* [[Kurse:Partial Views]]
* [[Kurse:View Components]]
* [[Kurse:Services]]
* [[Kurse:ASP.NET Core Environments]]
* [[Kurse:ASP.NET Core Konfiguration]]
* [[Kurse:Crud Operations]]
* [[Kurse:Tag Helpers]]
* [[Kurse:Entity Framework Core]]
* [[Kurse:ASP.NET Core Identity &amp; Authorization]]
==Kurse Übungen Projekt==
* [[Kurse:News Site erstellen]]
* [[Kurse:Lernplan für Asp net Core nach einzelnen Schritten]]
* [[Kurse:Asp Net Core Übung 1]]
* [[C Sharp gibt es folgende Kategorien von Datentypen]]

==Kurse==
* [[Kurse:Udemy.com]]
* [[Kurse:Variable-Datentypen]]

==Wichtige Befehl==
* [[Kurse:Asp Net Core Einstellung]]
* [[Kurse:Datentypen-C-Sharp]]
* [[Kurse:Moderne-C-Charp Class Aufbau]]</text>
      <sha1>czzedspmht76hmvlp3pmj6kgzxg91jl</sha1>
    </revision>
    <revision>
      <id>795</id>
      <parentid>790</parentid>
      <timestamp>2025-09-28T11:03:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Der Seiteninhalt wurde durch einen anderen Text ersetzt: „* [[Kurse:Lerntechnik]]“</comment>
      <origin>795</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="23" sha1="t4e5d0qlcsfs1y3fao6mxsjs1naludl" xml:space="preserve">* [[Kurse:Lerntechnik]]</text>
      <sha1>t4e5d0qlcsfs1y3fao6mxsjs1naludl</sha1>
    </revision>
    <revision>
      <id>796</id>
      <parentid>795</parentid>
      <timestamp>2025-09-28T11:08:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>796</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="53" sha1="3t28abgsj7mfn8tt1bust5e2hef3p1l" xml:space="preserve">* [[Kurse:Lerntechnik]]
* [[Kurse:Asp net core leer]]</text>
      <sha1>3t28abgsj7mfn8tt1bust5e2hef3p1l</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Haupseite</title>
    <ns>3000</ns>
    <id>106</id>
    <revision>
      <id>400</id>
      <timestamp>2025-06-22T18:53:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Server==“</comment>
      <origin>400</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="10" sha1="se409shl57omlhfvbsdhchiyb8onn7t" xml:space="preserve">==Server==</text>
      <sha1>se409shl57omlhfvbsdhchiyb8onn7t</sha1>
    </revision>
    <revision>
      <id>401</id>
      <parentid>400</parentid>
      <timestamp>2025-06-22T19:39:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>401</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="30" sha1="qgnoewztnqmsxwhilshp0dociizqv72" xml:space="preserve">==Server==
* [[Server:Mieten]]</text>
      <sha1>qgnoewztnqmsxwhilshp0dociizqv72</sha1>
    </revision>
    <revision>
      <id>402</id>
      <parentid>401</parentid>
      <timestamp>2025-06-22T21:03:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>402</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="49" sha1="o0r1to9dztux26zf2hheprfcr97gpdu" xml:space="preserve">==Server==
* [[Server:Mieten]
* [[Server:Backup]]</text>
      <sha1>o0r1to9dztux26zf2hheprfcr97gpdu</sha1>
    </revision>
    <revision>
      <id>403</id>
      <parentid>402</parentid>
      <timestamp>2025-06-22T21:04:24Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>403</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="50" sha1="rqxzq66fqbbhksogfgqutolovtxvzxm" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]</text>
      <sha1>rqxzq66fqbbhksogfgqutolovtxvzxm</sha1>
    </revision>
    <revision>
      <id>404</id>
      <parentid>403</parentid>
      <timestamp>2025-06-22T21:28:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>404</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="76" sha1="gefzf8wfp1737pmexnm7bu1nl94h4aq" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Asp Net Core]]</text>
      <sha1>gefzf8wfp1737pmexnm7bu1nl94h4aq</sha1>
    </revision>
    <revision>
      <id>405</id>
      <parentid>404</parentid>
      <timestamp>2025-06-26T13:18:09Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>405</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="118" sha1="qz5aqmkoeiq8z8no776cspuz6hzqx26" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]
* [[Ubuntu Software Pakete Installieren]]
* [[Server:Asp Net Core]]</text>
      <sha1>qz5aqmkoeiq8z8no776cspuz6hzqx26</sha1>
    </revision>
    <revision>
      <id>706</id>
      <parentid>405</parentid>
      <timestamp>2025-07-30T13:57:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>706</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="139" sha1="iup7kh1uhzj0sv9lx2dvnsdvi76dhmi" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]
* [[Ubuntu Software Pakete Installieren]]
* [[Server:Asp Net Core]]
* [[Server:Mailfix]]</text>
      <sha1>iup7kh1uhzj0sv9lx2dvnsdvi76dhmi</sha1>
    </revision>
    <revision>
      <id>708</id>
      <parentid>706</parentid>
      <timestamp>2025-08-01T03:09:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>708</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="139" sha1="ea2termv6ourtfzzejf8jcxymj69oee" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]
* [[Ubuntu Software Pakete Installieren]]
* [[Server:Asp Net Core]]
* [[Server:Postfix]]</text>
      <sha1>ea2termv6ourtfzzejf8jcxymj69oee</sha1>
    </revision>
    <revision>
      <id>709</id>
      <parentid>708</parentid>
      <timestamp>2025-08-01T03:10:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>709</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="146" sha1="gtw4f2uky1i6ezyp0gboc8l1r7fqqpf" xml:space="preserve">==Server==
* [[Server:Mieten]]
* [[Server:Backup]]
* [[Server:Ubuntu Software Pakete Installieren]]
* [[Server:Asp Net Core]]
* [[Server:Postfix]]</text>
      <sha1>gtw4f2uky1i6ezyp0gboc8l1r7fqqpf</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Mieten</title>
    <ns>3000</ns>
    <id>107</id>
    <revision>
      <id>406</id>
      <timestamp>2025-06-22T19:49:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==KVM Server Mieten== KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung…“</comment>
      <origin>406</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7912" sha1="h87lgi653cwqkzc5txo8vunxj7j3e83" xml:space="preserve">==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>h87lgi653cwqkzc5txo8vunxj7j3e83</sha1>
    </revision>
    <revision>
      <id>763</id>
      <parentid>406</parentid>
      <timestamp>2025-08-24T15:01:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>763</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="9022" sha1="kcp2mypsyowi8zo63xauw4xbjc96e5t" xml:space="preserve">==KVM Server Mieten==
KVM Server sind virtuelle Server, die auf einem dedizierten Server laufen. KVM steht für Kernel-based Virtual Machine und ist eine Open-Source-Virtualisierungstechnologie, die es ermöglicht, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen. KVM-Server bieten eine hohe Leistung und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine skalierbare und zuverlässige Hosting-Lösung benötigen.

===Vorteile von KVM-Servern===
KVM-Server bieten eine Reihe von Vorteilen gegenüber anderen Virtualisierungstechnologien, darunter:

* Hohe Leistung: KVM-Server bieten eine hohe Leistung und Skalierbarkeit, da sie direkt auf der Hardware des Host-Servers ausgeführt werden.
* Flexibilität: KVM-Server bieten eine hohe Flexibilität, da sie es ermöglichen, verschiedene Betriebssysteme und Anwendungen auf demselben physischen Server auszuführen.
* Sicherheit: KVM-Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede virtuelle Maschine bereitstellen.
* Kostenersparnis: KVM-Server sind eine kostengünstige Lösung, da sie es ermöglichen, mehrere virtuelle Maschinen auf einem einzigen physischen Server auszuführen.

===Server Mieten===
Wenn Sie einen KVM-Server mieten möchten, gibt es eine Vielzahl von Anbietern, die KVM-Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen KVM-Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des KVM-Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren KVM-Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.
=== Server Kvm Anbieter===
Es gibt viele Anbieter, die KVM-Server anbieten, darunter:
* [https://server.unesty.net/ Unesty] bietet eine Vielzahl von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://www.ovhcloud.com/ OVH] bietet eine breite Palette von KVM-Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte KVM-Server-Lösungen für Unternehmen an.
* [https://servdiscount.com/ ServDiscount] bietet günstige KVM-Server mit hoher Leistung und Zuverlässigkeit an.
* [https://emeraldhost.de/de EmeraldHost] bietet eine hohe Leistung und Flexibilität zu wettbewerbsfähigen Preisen.
* [https://venocix.de/ venocix.de] bietet eine breite Palette von KVM-Servern zu wettbewerbsfähigen Preisen an.
* [https://zap-hosting.com/ Zap-Hosting] bietet eine Vielzahl von KVM-Servern für Spiele- und Anwendungs-Hosting an.
* [https://netcup.de/ Netcup] bietet leistungsstarke und flexible KVM-Server für verschiedene Anforderungen an.

==Dedizierter Server==
Ein dedizierter Server ist ein physischer Server, der ausschließlich von einem einzigen Benutzer oder einer einzigen Organisation genutzt wird. Dedizierte Server bieten eine hohe Leistung, Sicherheit und Flexibilität und sind eine kostengünstige Lösung für Unternehmen, die eine zuverlässige Hosting-Lösung benötigen.

===Vorteile von dedizierten Servern===
Dedizierte Server bieten eine Reihe von Vorteilen gegenüber anderen Hosting-Lösungen, darunter:

* Hohe Leistung: Dedizierte Server bieten eine hohe Leistung, da sie über dedizierte Ressourcen verfügen, die nicht mit anderen Benutzern geteilt werden.
* Sicherheit: Dedizierte Server bieten eine hohe Sicherheit, da sie eine isolierte Umgebung für jede Organisation bereitstellen.
* Flexibilität: Dedizierte Server bieten eine hohe Flexibilität, da sie es ermöglichen, die Hardware und Software nach den individuellen Anforderungen der Organisation anzupassen.
* Kostenersparnis: Dedizierte Server sind eine kostengünstige Lösung, da sie es ermöglichen, die Ressourcen effizient zu nutzen und die Betriebskosten zu senken.

===Server Mieten===
Wenn Sie einen dedizierten Server mieten möchten, gibt es eine Vielzahl von Anbietern, die dedizierte Server zu unterschiedlichen Preisen und mit unterschiedlichen Spezifikationen anbieten. Bevor Sie einen dedizierten Server mieten, sollten Sie die folgenden Punkte beachten:

* Spezifikationen: Überprüfen Sie die Spezifikationen des dedizierten Servers, um sicherzustellen, dass er Ihren Anforderungen entspricht.
* Preis: Vergleichen Sie die Preise verschiedener Anbieter, um den besten Preis für Ihren dedizierten Server zu finden.
* Support: Überprüfen Sie den Support, den der Anbieter bietet, um sicherzustellen, dass Sie im Falle von Problemen Unterstützung erhalten.

===Dedizierte Server Anbieter===
Es gibt viele Anbieter, die dedizierte Server anbieten, darunter:

* [https://www.hetzner.com/ Hetzner] bietet eine breite Palette von dedizierten Servern mit hoher Leistung und Zuverlässigkeit an.
* [https://servdiscount.com/ ServDiscount] bietet günstige dedizierte Serverlösungen mit hoher Leistung und Zuverlässigkeit an.
* [https://ovhcloud.com/ OVH] bietet dedizierte Server mit verschiedenen Konfigurationen und hoher Verfügbarkeit.
* [https://server.unesty.net/ Unesty] bietet dedizierte Server mit individueller Konfiguration und zuverlässigem Support.
* [https://bero-host.de/ Bero-Host] bietet maßgeschneiderte dedizierte Serverlösungen für Unternehmen.
* [https://venocix.de/ Venocix] bietet dedizierte Server mit schnellen Anbindungen und verschiedenen Hardwareoptionen.
* [https://oneprovider.com/ OneProvider] bietet dedizierte Server weltweit an, jedoch gibt es gemischte Erfahrungen bezüglich Support und Zuverlässigkeit.
* [https://oneprovider.com/ OneProvider] bietet dedizierte Server weltweit an und hat auch gute günstige Angebote.
* [https://www.soyoustart.com/ SoYouStart] bietet dedizierte Server mit weltweiten Standorten zu günstigen Preisen.
* [https://www.kimsufi.com/ Kimsufi] bietet preiswerte dedizierte Server mit internationalen Standorten.
* [https://www.online.net/ Online.net]

==Bandbreite==

Die Bandbreite ist ein wichtiger Faktor bei der Auswahl eines Hosting-Anbieters. Die Bandbreite bezieht sich auf die Menge an Daten, die über das Netzwerk übertragen werden können. Je höher die Bandbreite, desto schneller können Daten übertragen werden. Die Bandbreite wird in der Regel in Megabit pro Sekunde (Mbps) oder Gigabit pro Sekunde (Gbps) gemessen.

===Bandbreite Anforderungen===
Die Bandbreiteanforderungen hängen von der Art der Website oder Anwendung ab, die gehostet werden soll. Websites mit vielen Bildern, Videos oder anderen Medien benötigen in der Regel eine höhere Bandbreite als Websites mit reinem Textinhalt. Unternehmen mit hohem Datenverkehr oder großen Dateien benötigen ebenfalls eine höhere Bandbreite.
====Bandbreite benötigt für Server====
Die Bandbreitenanforderungen für Server hängen stark von der Art der Anwendung und dem erwarteten Datenverkehr ab. Hier sind einige typische Szenarien und die entsprechenden Bandbreitenanforderungen:

* 1 Gbps Bandbreite:
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder große Dateien übertragen. 
** Einsatzgebiet: Geeignet für Streaming-Dienste, große E-Commerce-Websites, Cloud-Speicherlösungen und andere Anwendungen, die eine hohe Datenübertragungsrate erfordern.

* 100 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server geeignet, die mittleren Datenverkehr verarbeiten oder kleinere Dateien übertragen.
** Einsatzgebiet**: Ideal für mittelgroße Unternehmenswebsites, Blogs, kleinere E-Commerce-Websites und Anwendungen mit moderatem Datenverkehr.

* 200 Mbps Bandbreite: 
** Beschreibung: Diese Bandbreite ist für Server erforderlich, die hohen Datenverkehr bewältigen müssen oder große Dateien übertragen.
** Einsatzgebiet: Geeignet für größere Unternehmenswebsites, Online-Spiele, Video-Streaming-Dienste und andere datenintensive Anwendungen.

* 300 Mbps Bandbreite: 
** Beschreibung**: Diese Bandbreite ist für Server erforderlich, die sehr hohen Datenverkehr bewältigen müssen oder sehr große Dateien übertragen.
** Einsatzgebiet**: Ideal für große Streaming-Dienste, umfangreiche Cloud-Dienste, große E-Commerce-Plattformen und andere Anwendungen, die eine sehr hohe Datenübertragungsrate erfordern.

===Webframework Systemvoraussetzungen===
Die Systemanforderungen für ein Webframework hängen von der Art des Webframeworks und der Größe der Website ab. Hier sind einige typische Systemanforderungen für beliebte Webframework-Systeme:

===RAM===
{| class="wikitable"
! Anwendung !! Minimale RAM-Anforderung !! Empfohlene RAM-Anforderung 
|-  
| [[Django]] || 512 MB - 1 GB || 2 GB - 4 GB
|-
| Express.js || 256 MB || 1 GB - 2 GB
|-
| Fiber (Golang) || 2 GB RAM || 4 GB - 8 GB
|-
| Actix (Rust) || 512 MB - 1 GB || 4 GB - 8 GB

| MediaWiki || 4 GB || 8 - 16 GB
|-
| Statische Website || 512 MB || 1 GB bis 2 GB RAM
|}</text>
      <sha1>kcp2mypsyowi8zo63xauw4xbjc96e5t</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Backup</title>
    <ns>3000</ns>
    <id>108</id>
    <revision>
      <id>407</id>
      <timestamp>2025-06-22T21:10:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Server Backup Anbieter in Deutschland==  Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:  * Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung. * Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise. * Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.  ==G…“</comment>
      <origin>407</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="920" sha1="17rc6kdqz2lh2f7b91a0cylram3uuwc" xml:space="preserve">==Server Backup Anbieter in Deutschland==

Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:

* Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung.
* Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise.
* Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.

==Git-Backup erstellen, ohne Nutzerdaten zu verwenden==
Es gibt verschiedene Anbieter, bei denen Sie Git-Repositories hosten können. Zu den bekanntesten gehören:

* GitHub – Weltweit größter Anbieter für Git-Repositories, bietet kostenlose und kostenpflichtige Pläne.
* GitLab – Open-Source-Lösung, kann selbst gehostet oder als Cloud-Service genutzt werden.
* Codeberg – Gemeinnütziger Anbieter aus Europa, legt Wert auf Datenschutz und Transparenz.</text>
      <sha1>17rc6kdqz2lh2f7b91a0cylram3uuwc</sha1>
    </revision>
    <revision>
      <id>542</id>
      <parentid>407</parentid>
      <timestamp>2025-07-01T14:08:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>542</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3017" sha1="5cpxkxrbqayzmi8gr0zartfb37qgznd" xml:space="preserve">==Server Backup Anbieter in Deutschland==

Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:

* Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung.
* Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise.
* Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.

==Git-Backup erstellen, ohne Nutzerdaten zu verwenden==
Es gibt verschiedene Anbieter, bei denen Sie Git-Repositories hosten können. Zu den bekanntesten gehören:

* GitHub – Weltweit größter Anbieter für Git-Repositories, bietet kostenlose und kostenpflichtige Pläne.
* GitLab – Open-Source-Lösung, kann selbst gehostet oder als Cloud-Service genutzt werden.
* Codeberg – Gemeinnütziger Anbieter aus Europa, legt Wert auf Datenschutz und Transparenz.
==Hetzner Storage Box ==
{| class="wikitable"
! Protokoll
! Beschreibung
! Vorteile
! Nachteile
! Einsatzgebiet
|-
| FTP
| File Transfer Protocol, klassisches Protokoll für Dateiübertragungen.
| Einfach, weit verbreitet.
| Keine Verschlüsselung, unsicher.
| Einfache Dateiübertragung in internen Netzen.
|-
| FTPS
| FTP mit SSL/TLS-Verschlüsselung.
| Verschlüsselt, sicherer als FTP.
| Komplexere Einrichtung, Firewall-Probleme möglich.
| Sicherer Dateitransfer über das Internet.
|-
| SFTP
| SSH File Transfer Protocol, basiert auf SSH.
| Verschlüsselt, sicher, einfach zu bedienen.
| Etwas langsamer als FTP.
| Sicherer Dateitransfer und Backups.
|-
| SCP
| Secure Copy Protocol, basiert auf SSH.
| Schnell, verschlüsselt, einfach.
| Keine Verzeichnis-Synchronisation, nur Kopieren.
| Schnelle, sichere Dateiübertragung.
|-
| Samba/CIFS
| Netzwerkprotokoll für Windows-Freigaben.
| Integration in Windows, Netzwerklaufwerk möglich.
| Komplexe Rechteverwaltung, Performance.
| Netzwerklaufwerke, Windows-Umgebungen.
|-
| BorgBackup
| Backup-Software mit Deduplizierung und Verschlüsselung.
| Effizient, verschlüsselt, inkrementelle Backups.
| Komplexere Einrichtung, CLI-basiert.
| Sicheres, platzsparendes Backup.
|-
| Restic
| Moderne Backup-Software, verschlüsselt und dedupliziert.
| Einfach, sicher, viele Speicherziele.
| CLI-basiert, weniger GUI.
| Cloud- und Server-Backups.
|-
| Rclone
| Synchronisation mit vielen Cloud-Anbietern.
| Vielseitig, unterstützt viele Ziele.
| CLI-basiert, Konfiguration nötig.
| Cloud-Synchronisation, Backups.
|-
| rsync via SSH
| Datei-Synchronisation über SSH.
| Schnell, effizient, verschlüsselt.
| Komplexere Syntax, nur für Unix.
| Backups, Spiegelung von Verzeichnissen.
|-
| HTTPS
| Dateiübertragung über das Web (verschlüsselt).
| Einfach, sicher, überall verfügbar.
| Kein echtes Dateisystem, meist Web-Interface.
| Web-Uploads, einfache Transfers.
|-
| WebDAV
| Erweiterung von HTTP für Dateizugriff.
| Netzwerklaufwerk möglich, verschlüsselt.
| Performance, Kompatibilität.
| Netzwerklaufwerke, Web-Integration.
|}</text>
      <sha1>5cpxkxrbqayzmi8gr0zartfb37qgznd</sha1>
    </revision>
    <revision>
      <id>543</id>
      <parentid>542</parentid>
      <timestamp>2025-07-01T14:21:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>543</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3028" sha1="pznljm3x3ilw94wrv8ischu0ey1dkez" xml:space="preserve">==Server Backup Anbieter in Deutschland==

Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:

* Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung.
* Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise.
* Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.

==Git-Backup erstellen, ohne Nutzerdaten zu verwenden==
Es gibt verschiedene Anbieter, bei denen Sie Git-Repositories hosten können. Zu den bekanntesten gehören:

* GitHub – Weltweit größter Anbieter für Git-Repositories, bietet kostenlose und kostenpflichtige Pläne.
* GitLab – Open-Source-Lösung, kann selbst gehostet oder als Cloud-Service genutzt werden.
* Codeberg – Gemeinnütziger Anbieter aus Europa, legt Wert auf Datenschutz und Transparenz.
==Hetzner Storage Box ==
{| class="wikitable"
! Protokoll
! Beschreibung
! Vorteile
! Nachteile
! Einsatzgebiet
|-
| FTP
| File Transfer Protocol, klassisches Protokoll für Dateiübertragungen.
| Einfach, weit verbreitet.
| Keine Verschlüsselung, unsicher.
| Einfache Dateiübertragung in internen Netzen.
|-
| FTPS
| FTP mit SSL/TLS-Verschlüsselung.
| Verschlüsselt, sicherer als FTP.
| Komplexere Einrichtung, Firewall-Probleme möglich.
| Sicherer Dateitransfer über das Internet.
|-
| SFTP
| SSH File Transfer Protocol, basiert auf SSH.
| Verschlüsselt, sicher, einfach zu bedienen.
| Etwas langsamer als FTP.
| Sicherer Dateitransfer und Backups.
|-
| SCP
| Secure Copy Protocol, basiert auf SSH.
| Schnell, verschlüsselt, einfach.
| Keine Verzeichnis-Synchronisation, nur Kopieren.
| Schnelle, sichere Dateiübertragung.
|-
| Samba/CIFS
| Netzwerkprotokoll für Windows-Freigaben.
| Integration in Windows, Netzwerklaufwerk möglich.
| Komplexe Rechteverwaltung, Performance.
| Netzwerklaufwerke, Windows-Umgebungen.
|-
| BorgBackup
| Backup-Software mit Deduplizierung und Verschlüsselung.
| Effizient, verschlüsselt, inkrementelle Backups.
| Komplexere Einrichtung, CLI-basiert.
| Sicheres, platzsparendes Backup.
|-
| Restic
| Moderne Backup-Software, verschlüsselt und dedupliziert.
| Einfach, sicher, viele Speicherziele.
| CLI-basiert, weniger GUI.
| Cloud- und Server-Backups.
|-
| Rclone
| Synchronisation mit vielen Cloud-Anbietern.
| Vielseitig, unterstützt viele Ziele.
| CLI-basiert, Konfiguration nötig.
| Cloud-Synchronisation, Backups.
|-
| rsync via SSH
| Datei-Synchronisation über SSH.
| Schnell, effizient, verschlüsselt.
| Komplexere Syntax, nur für Unix.
| Backups, Spiegelung von Verzeichnissen.
|-
| HTTPS
| Dateiübertragung über das Web (verschlüsselt).
| Einfach, sicher, überall verfügbar.
| Kein echtes Dateisystem, meist Web-Interface.
| Web-Uploads, einfache Transfers.
|-
| WebDAV
| Erweiterung von HTTP für Dateizugriff.
| Netzwerklaufwerk möglich, verschlüsselt.
| Performance, Kompatibilität.
| Netzwerklaufwerke, Web-Integration.
|}

Vergleich</text>
      <sha1>pznljm3x3ilw94wrv8ischu0ey1dkez</sha1>
    </revision>
    <revision>
      <id>544</id>
      <parentid>543</parentid>
      <timestamp>2025-07-01T14:32:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>544</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5453" sha1="j73mhot7hp9yq9h5h6mncb7f7jacmax" xml:space="preserve">==Server Backup Anbieter in Deutschland==

Es gibt mehrere günstige Backup-Server-Anbieter in Deutschland. Hier sind einige Beispiele:

* Hetzner Storage Box – Bietet verschiedene Speichergrößen, schnelle Anbindung und einfache Verwaltung.
* Netcup Storage Server – Flexible Tarife, gute Anbindung innerhalb Deutschlands, günstige Preise.
* Contabo Storage VPS – Große Speicherkapazitäten, günstige Preise, verschiedene Standorte verfügbar.

==Git-Backup erstellen, ohne Nutzerdaten zu verwenden==
Es gibt verschiedene Anbieter, bei denen Sie Git-Repositories hosten können. Zu den bekanntesten gehören:

* GitHub – Weltweit größter Anbieter für Git-Repositories, bietet kostenlose und kostenpflichtige Pläne.
* GitLab – Open-Source-Lösung, kann selbst gehostet oder als Cloud-Service genutzt werden.
* Codeberg – Gemeinnütziger Anbieter aus Europa, legt Wert auf Datenschutz und Transparenz.
==Hetzner Storage Box ==
{| class="wikitable"
! Protokoll
! Beschreibung
! Vorteile
! Nachteile
! Einsatzgebiet
|-
| FTP
| File Transfer Protocol, klassisches Protokoll für Dateiübertragungen.
| Einfach, weit verbreitet.
| Keine Verschlüsselung, unsicher.
| Einfache Dateiübertragung in internen Netzen.
|-
| FTPS
| FTP mit SSL/TLS-Verschlüsselung.
| Verschlüsselt, sicherer als FTP.
| Komplexere Einrichtung, Firewall-Probleme möglich.
| Sicherer Dateitransfer über das Internet.
|-
| SFTP
| SSH File Transfer Protocol, basiert auf SSH.
| Verschlüsselt, sicher, einfach zu bedienen.
| Etwas langsamer als FTP.
| Sicherer Dateitransfer und Backups.
|-
| SCP
| Secure Copy Protocol, basiert auf SSH.
| Schnell, verschlüsselt, einfach.
| Keine Verzeichnis-Synchronisation, nur Kopieren.
| Schnelle, sichere Dateiübertragung.
|-
| Samba/CIFS
| Netzwerkprotokoll für Windows-Freigaben.
| Integration in Windows, Netzwerklaufwerk möglich.
| Komplexe Rechteverwaltung, Performance.
| Netzwerklaufwerke, Windows-Umgebungen.
|-
| BorgBackup
| Backup-Software mit Deduplizierung und Verschlüsselung.
| Effizient, verschlüsselt, inkrementelle Backups.
| Komplexere Einrichtung, CLI-basiert.
| Sicheres, platzsparendes Backup.
|-
| Restic
| Moderne Backup-Software, verschlüsselt und dedupliziert.
| Einfach, sicher, viele Speicherziele.
| CLI-basiert, weniger GUI.
| Cloud- und Server-Backups.
|-
| Rclone
| Synchronisation mit vielen Cloud-Anbietern.
| Vielseitig, unterstützt viele Ziele.
| CLI-basiert, Konfiguration nötig.
| Cloud-Synchronisation, Backups.
|-
| rsync via SSH
| Datei-Synchronisation über SSH.
| Schnell, effizient, verschlüsselt.
| Komplexere Syntax, nur für Unix.
| Backups, Spiegelung von Verzeichnissen.
|-
| HTTPS
| Dateiübertragung über das Web (verschlüsselt).
| Einfach, sicher, überall verfügbar.
| Kein echtes Dateisystem, meist Web-Interface.
| Web-Uploads, einfache Transfers.
|-
| WebDAV
| Erweiterung von HTTP für Dateizugriff.
| Netzwerklaufwerk möglich, verschlüsselt.
| Performance, Kompatibilität.
| Netzwerklaufwerke, Web-Integration.
|}

==Vergleich: rsync, Restic, BorgBackup und Rclone==

{| class="wikitable"
! Tool
! Hauptfunktion
! Vorteile
! Nachteile
! Typische Nutzung
|-
| rsync
| Datei-Synchronisation und inkrementelle Backups über das Netzwerk (meist via SSH).
| Schnell, effizient, weit verbreitet, viele Optionen.
| Keine integrierte Verschlüsselung (außer via SSH), keine Deduplizierung, keine integrierte Backup-Verwaltung.
| Synchronisation von Verzeichnissen, einfache Backups auf Server oder NAS.
|-
| Restic
| Moderne Backup-Software mit Verschlüsselung und Deduplizierung.
| Einfach zu bedienen, verschlüsselt, unterstützt viele Speicherziele (lokal, SFTP, S3, etc.), inkrementelle Backups.
| Nur Kommandozeile, keine GUI, weniger granulare Restore-Optionen als Borg.
| Sichere, verschlüsselte Backups auf verschiedene Ziele (Cloud, Server, externe Festplatte).
|-
| BorgBackup
| Backup-Software mit starker Deduplizierung und Verschlüsselung.
| Sehr effizient, verschlüsselt, inkrementelle Backups, schnelle Wiederherstellung einzelner Dateien.
| Einrichtung komplexer als rsync, hauptsächlich für Linux, CLI-basiert.
| Platzsparende, sichere Backups auf Server oder NAS, besonders für viele ähnliche Dateien.
|-
| Rclone
| Synchronisation und Backup zu/von vielen Cloud-Anbietern und Protokollen.
| Unterstützt viele Cloud-Dienste, vielseitig, verschlüsselt möglich, Synchronisation und Kopieren.
| CLI-basiert, Konfiguration kann komplex sein, keine klassische Backup-Verwaltung.
| Synchronisation und Backups zwischen lokalen Systemen und Cloud-Speichern.
|}

===Wie funktioniert das?===

* '''rsync''': Kopiert und synchronisiert Dateien/Verzeichnisse lokal oder über das Netzwerk. Beispiel:
    &lt;syntaxhighlight lang="bash"&gt;
    rsync -avz /quelle/ user@server:/ziel/
    &lt;/syntaxhighlight&gt;

* '''Restic''': Erstellt verschlüsselte, deduplizierte Backups. Beispiel:
    &lt;syntaxhighlight lang="bash"&gt;
    restic -r /pfad/zum/repo backup /zu/sichernder/ordner
    &lt;/syntaxhighlight&gt;

* '''BorgBackup''': Erstellt verschlüsselte, deduplizierte Archive. Beispiel:
    &lt;syntaxhighlight lang="bash"&gt;
    borg init --encryption=repokey /pfad/zum/repo
    borg create /pfad/zum/repo::backup-$(date +%Y-%m-%d) /zu/sichernder/ordner
    &lt;/syntaxhighlight&gt;

* '''Rclone''': Synchronisiert Dateien mit vielen Cloud-Anbietern. Beispiel:
    &lt;syntaxhighlight lang="bash"&gt;
    rclone sync /lokaler/ordner remote:backup
    &lt;/syntaxhighlight&gt;</text>
      <sha1>j73mhot7hp9yq9h5h6mncb7f7jacmax</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Asp Net Core</title>
    <ns>3000</ns>
    <id>109</id>
    <revision>
      <id>408</id>
      <timestamp>2025-06-22T22:24:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>408</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="862" sha1="nhdtyvt0y91sufx3txzf7opysdfjr4t" xml:space="preserve">== ASP.NET Core 9 Runtime auf Ubuntu 24.04 Server installieren ==

Folgen Sie diesen Schritten, um das ASP.NET Core 9 Runtime auf einem Ubuntu 24.04 Server zu installieren:

=== 1. Microsoft-Paketrepository hinzufügen ===
Öffnen Sie ein Terminal und führen Sie folgende Befehle aus:

=== 2. ASP.NET Core Runtime installieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt-get install aspnetcore-runtime-9.0
&lt;/syntaxhighlight&gt;

=== 3. Installation überprüfen ===
&lt;syntaxhighlight lang="bash"&gt;
dotnet --list-runtimes
&lt;/syntaxhighlight&gt;
Sie sollten nun die ASP.NET Core 9 Runtime in der Liste sehen.

'''Hinweis:''' Ersetzen Sie ggf. die Versionsnummer, falls eine neuere Version verfügbar ist.

== Siehe auch ==
* [https://learn.microsoft.com/de-de/aspnet/core/?view=aspnetcore-9.0 Microsoft-Dokumentation zu ASP.NET Core]
* [[Server:Dotnet installieren Ubuntu]]</text>
      <sha1>nhdtyvt0y91sufx3txzf7opysdfjr4t</sha1>
    </revision>
    <revision>
      <id>409</id>
      <parentid>408</parentid>
      <timestamp>2025-06-22T23:05:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>409</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="892" sha1="7yy1gi1d9ryjm1194e1wcxqjaaq1kmm" xml:space="preserve">== ASP.NET Core 9 Runtime auf Ubuntu 24.04 Server installieren ==

Folgen Sie diesen Schritten, um das ASP.NET Core 9 Runtime auf einem Ubuntu 24.04 Server zu installieren:

=== 1. Microsoft-Paketrepository hinzufügen ===
Öffnen Sie ein Terminal und führen Sie folgende Befehle aus:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt-get update &amp;&amp; \
  sudo apt-get install -y aspnetcore-runtime-8.0
&lt;/syntaxhighlight&gt;

=== 2. ASP.NET Core Runtime installieren ===

=== 3. Installation überprüfen ===
&lt;syntaxhighlight lang="bash"&gt;
dotnet --list-runtimes
&lt;/syntaxhighlight&gt;
Sie sollten nun die ASP.NET Core 9 Runtime in der Liste sehen.

'''Hinweis:''' Ersetzen Sie ggf. die Versionsnummer, falls eine neuere Version verfügbar ist.

== Siehe auch ==
* [https://learn.microsoft.com/de-de/aspnet/core/?view=aspnetcore-8.0 Microsoft-Dokumentation zu ASP.NET Core]
* [[Server:Dotnet installieren Ubuntu]]</text>
      <sha1>7yy1gi1d9ryjm1194e1wcxqjaaq1kmm</sha1>
    </revision>
    <revision>
      <id>410</id>
      <parentid>409</parentid>
      <timestamp>2025-06-22T23:27:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>410</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1606" sha1="3ycnbz67ja3ixxrw3gze79swhv8424e" xml:space="preserve">== ASP.NET Core 8 Runtime auf Ubuntu 24.04 Server installieren ==
Folgen Sie dieser Anleitung, um das ASP.NET Core 8 Runtime auf einem Ubuntu 24.04 Server zu installieren.
=== 1. Microsoft-Paketrepository hinzufügen ===
Öffnen Sie ein Terminal und führen Sie folgende Befehle aus:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt-get update &amp;&amp; \
  sudo apt-get install -y aspnetcore-runtime-8.0
&lt;/syntaxhighlight&gt;

== ASP.NET Core 9 Runtime auf Ubuntu 24.04 Server installieren ==

Folgen Sie dieser Anleitung, um das ASP.NET Core 9 Runtime auf einem Ubuntu 24.04 Server zu installieren.

=== 1. Microsoft-Paketrepository hinzufügen ===
Öffnen Sie ein Terminal und führen Sie folgende Befehle aus:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
&lt;/syntaxhighlight&gt;

=== 2. ASP.NET Core Runtime installieren ===
Installieren Sie das ASP.NET Core Runtime-Paket:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/syntaxhighlight&gt;

=== 3. Installation überprüfen ===
Prüfen Sie, ob die Runtime korrekt installiert wurde:
&lt;syntaxhighlight lang="bash"&gt;
dotnet --list-runtimes
&lt;/syntaxhighlight&gt;
Sie sollten nun die ASP.NET Core 9 Runtime in der Liste sehen.

'''Hinweis:''' Ersetzen Sie ggf. die Versionsnummer, falls eine neuere Version verfügbar ist.

== Siehe auch ==
* [https://learn.microsoft.com/de-de/aspnet/core/?view=aspnetcore-8.0 Microsoft-Dokumentation zu ASP.NET Core]
* [https://learn.microsoft.com/de-de/aspnet/core/?view=aspnetcore-9.0 Microsoft-Dokumentation zu ASP.NET Core]</text>
      <sha1>3ycnbz67ja3ixxrw3gze79swhv8424e</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:HTTP</title>
    <ns>3002</ns>
    <id>110</id>
    <revision>
      <id>411</id>
      <timestamp>2025-06-23T08:18:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* = Einführung in HTTP =  HTTP ist ein Anwendungsprotokoll, das einen Regelsatz für das Senden von Anfragen vom Browser zum Server und das Senden von Antworten vom Server zum Browser definiert. Ursprünglich von Tim Berners-Lee entwickelt, wurde es später von der IETF (Internet Engineering Task Force) und dem W3C (World Wide Web Consortium) standardisiert.  == HTTP-Antwort ==  === Antwort-Startzeile === Enthält die HTTP-Version, den Statuscode und die…“</comment>
      <origin>411</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4655" sha1="eln2x35vix5gw1rctc1xxkmy7szurdx" xml:space="preserve">* = Einführung in HTTP =

HTTP ist ein Anwendungsprotokoll, das einen Regelsatz für das Senden von Anfragen vom Browser zum Server und das Senden von Antworten vom Server zum Browser definiert.
Ursprünglich von Tim Berners-Lee entwickelt, wurde es später von der IETF (Internet Engineering Task Force) und dem W3C (World Wide Web Consortium) standardisiert.

== HTTP-Antwort ==

=== Antwort-Startzeile ===
Enthält die HTTP-Version, den Statuscode und die Statusbeschreibung.
* '''HTTP-Version:''' 1/1 | 2 | 3
* '''Statuscode:''' 101 | 200 | 302 | 400 | 401 | 404 | 500
* '''Statusbeschreibung:''' Switching Protocols | OK | Found | Bad Request | Unauthorized | Not Found | Internal Server Error

=== HTTP-Antwort-Statuscodes ===
{| class="wikitable"
| '''1xx''' || '''Informationell'''
|-
| 101 || Switching Protocols
|-
| '''2xx''' || '''Erfolg'''
|-
| 200 || OK
|-
| '''3xx''' || '''Umleitung'''
|-
| 302 || Found
|-
| 304 || Not Modified
|-
| '''4xx''' || '''Client-Fehler'''
|-
| 400 || Bad Request
|-
| 401 || Unauthorized
|-
| 404 || Not Found
|-
| '''5xx''' || '''Server-Fehler'''
|-
| 500 || Internal Server Error
|}

=== HTTP-Antwort-Header ===
; Date
: Datum und Uhrzeit der Antwort. z.B.: &lt;nowiki&gt;Tue, 15 Nov 1994 08:12:31 GMT&lt;/nowiki&gt;

; Server
: Name des Servers. z.B.: &lt;nowiki&gt;Server=Kestrel&lt;/nowiki&gt;

; Content-Type
: MIME-Typ des Antwort-Hauptteils (Body). z.B.: &lt;nowiki&gt;text/plain, text/html, application/json, application/xml&lt;/nowiki&gt; etc.

; Content-Length
: Länge (in Bytes) des Antwort-Hauptteils (Body). z.B.: &lt;nowiki&gt;100&lt;/nowiki&gt;

; Cache-Control
: Gibt die Anzahl der Sekunden an, die die Antwort im Browser zwischengespeichert (gecacht) werden kann. z.B.: &lt;nowiki&gt;max-age=60&lt;/nowiki&gt;

; Set-Cookie
: Enthält Cookies, die an den Browser gesendet werden sollen. z.B.: &lt;nowiki&gt;x=10&lt;/nowiki&gt;

; Access-Control-Allow-Origin
: Wird verwendet, um CORS (Cross-Origin Resource Sharing) zu aktivieren. z.B.: &lt;nowiki&gt;Access-Control-Allow-Origin: http://www.example.com&lt;/nowiki&gt;

; Location
: Enthält die URL, zu der umgeleitet werden soll. z.B.: &lt;nowiki&gt;http://www.example-redirect.com&lt;/nowiki&gt;

[https://developer.mozilla.org/de/docs/Web/HTTP/Headers Weiterführende Lektüre]

== HTTP-Anfrage ==

=== HTTP-Anfrage-Header ===
; Accept
: Repräsentiert den MIME-Typ des Antwortinhalts, den der Client akzeptiert. z.B.: &lt;nowiki&gt;text/html&lt;/nowiki&gt;

; Accept-Language
: Repräsentiert die natürliche Sprache des Antwortinhalts, die der Client akzeptiert. z.B.: &lt;nowiki&gt;en-US&lt;/nowiki&gt;

; Content-Type
: MIME-Typ des Anfrage-Hauptteils (Body). z.B.: &lt;nowiki&gt;text/x-www-form-urlencoded, application/json, application/xml, multipart/form-data&lt;/nowiki&gt;

; Content-Length
: Länge (in Bytes) des Anfrage-Hauptteils (Body). z.B.: &lt;nowiki&gt;100&lt;/nowiki&gt;

; Date
: Datum und Uhrzeit der Anfrage. z.B.: &lt;nowiki&gt;Tue, 15 Nov 1994 08:12:31 GMT&lt;/nowiki&gt;

; Host
: Domainname des Servers. z.B.: &lt;nowiki&gt;www.example.com&lt;/nowiki&gt;

; User-Agent
: Details zum Browser (Client). z.B.: &lt;nowiki&gt;Mozilla/5.0 Firefox/12.0&lt;/nowiki&gt;

; Cookie
: Enthält Cookies, die an den Server gesendet werden sollen. z.B.: &lt;nowiki&gt;x=100&lt;/nowiki&gt;

[https://developer.mozilla.org/de/docs/Web/HTTP/Headers Weiterführende Lektüre]

=== HTTP-Anfragemethoden ===
; GET
: Anfragen zum Abrufen von Informationen (Seite, Entitätsobjekt oder eine statische Datei).

; POST
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen wird es in die Datenbank eingefügt.

; PUT
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen werden damit alle Eigenschaften (vollständiges Update) in der Datenbank aktualisiert.

; PATCH
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen werden damit einige Eigenschaften (Teil-Update) in der Datenbank aktualisiert.

; DELETE
: Fordert das Löschen einer Entität in der Datenbank an.

=== HTTP GET vs. POST ===

==== GET ====
* Wird verwendet, um Daten vom Server abzurufen.
* Parameter befinden sich in der Anfrage-URL (nur als Query-String).
* Es kann nur eine begrenzte Anzahl von Zeichen an den Server gesendet werden. Max: 2048 Zeichen.
* Wird hauptsächlich als Standardmethode für Anfragen zum Abrufen von Seiten, statischen Dateien usw. verwendet.
* Kann von Browsern / Suchmaschinen zwischengespeichert (gecacht) werden.

==== POST ====
* Wird verwendet, um Daten auf dem Server einzufügen.
* Parameter befinden sich im Anfrage-Hauptteil (Body) (als Query-String, JSON, XML oder Formulardaten).
* Es können unbegrenzt viele Daten an den Server gesendet werden.
* Wird hauptsächlich für Formularübermittlungen / XHR-Aufrufe verwendet.
* Kann nicht von Browsern / Suchmaschinen zwischengespeichert (gecacht) werden.</text>
      <sha1>eln2x35vix5gw1rctc1xxkmy7szurdx</sha1>
    </revision>
    <revision>
      <id>412</id>
      <parentid>411</parentid>
      <timestamp>2025-06-23T08:20:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>412</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4653" sha1="l318yw025k9zftsdwiyytnu8ia5g59t" xml:space="preserve">= Einführung in HTTP =

HTTP ist ein Anwendungsprotokoll, das einen Regelsatz für das Senden von Anfragen vom Browser zum Server und das Senden von Antworten vom Server zum Browser definiert.
Ursprünglich von Tim Berners-Lee entwickelt, wurde es später von der IETF (Internet Engineering Task Force) und dem W3C (World Wide Web Consortium) standardisiert.

== HTTP-Antwort ==

=== Antwort-Startzeile ===
Enthält die HTTP-Version, den Statuscode und die Statusbeschreibung.
* '''HTTP-Version:''' 1/1 | 2 | 3
* '''Statuscode:''' 101 | 200 | 302 | 400 | 401 | 404 | 500
* '''Statusbeschreibung:''' Switching Protocols | OK | Found | Bad Request | Unauthorized | Not Found | Internal Server Error

=== HTTP-Antwort-Statuscodes ===
{| class="wikitable"
| '''1xx''' || '''Informationell'''
|-
| 101 || Switching Protocols
|-
| '''2xx''' || '''Erfolg'''
|-
| 200 || OK
|-
| '''3xx''' || '''Umleitung'''
|-
| 302 || Found
|-
| 304 || Not Modified
|-
| '''4xx''' || '''Client-Fehler'''
|-
| 400 || Bad Request
|-
| 401 || Unauthorized
|-
| 404 || Not Found
|-
| '''5xx''' || '''Server-Fehler'''
|-
| 500 || Internal Server Error
|}

=== HTTP-Antwort-Header ===
; Date
: Datum und Uhrzeit der Antwort. z.B.: &lt;nowiki&gt;Tue, 15 Nov 1994 08:12:31 GMT&lt;/nowiki&gt;

; Server
: Name des Servers. z.B.: &lt;nowiki&gt;Server=Kestrel&lt;/nowiki&gt;

; Content-Type
: MIME-Typ des Antwort-Hauptteils (Body). z.B.: &lt;nowiki&gt;text/plain, text/html, application/json, application/xml&lt;/nowiki&gt; etc.

; Content-Length
: Länge (in Bytes) des Antwort-Hauptteils (Body). z.B.: &lt;nowiki&gt;100&lt;/nowiki&gt;

; Cache-Control
: Gibt die Anzahl der Sekunden an, die die Antwort im Browser zwischengespeichert (gecacht) werden kann. z.B.: &lt;nowiki&gt;max-age=60&lt;/nowiki&gt;

; Set-Cookie
: Enthält Cookies, die an den Browser gesendet werden sollen. z.B.: &lt;nowiki&gt;x=10&lt;/nowiki&gt;

; Access-Control-Allow-Origin
: Wird verwendet, um CORS (Cross-Origin Resource Sharing) zu aktivieren. z.B.: &lt;nowiki&gt;Access-Control-Allow-Origin: http://www.example.com&lt;/nowiki&gt;

; Location
: Enthält die URL, zu der umgeleitet werden soll. z.B.: &lt;nowiki&gt;http://www.example-redirect.com&lt;/nowiki&gt;

[https://developer.mozilla.org/de/docs/Web/HTTP/Headers Weiterführende Lektüre]

== HTTP-Anfrage ==

=== HTTP-Anfrage-Header ===
; Accept
: Repräsentiert den MIME-Typ des Antwortinhalts, den der Client akzeptiert. z.B.: &lt;nowiki&gt;text/html&lt;/nowiki&gt;

; Accept-Language
: Repräsentiert die natürliche Sprache des Antwortinhalts, die der Client akzeptiert. z.B.: &lt;nowiki&gt;en-US&lt;/nowiki&gt;

; Content-Type
: MIME-Typ des Anfrage-Hauptteils (Body). z.B.: &lt;nowiki&gt;text/x-www-form-urlencoded, application/json, application/xml, multipart/form-data&lt;/nowiki&gt;

; Content-Length
: Länge (in Bytes) des Anfrage-Hauptteils (Body). z.B.: &lt;nowiki&gt;100&lt;/nowiki&gt;

; Date
: Datum und Uhrzeit der Anfrage. z.B.: &lt;nowiki&gt;Tue, 15 Nov 1994 08:12:31 GMT&lt;/nowiki&gt;

; Host
: Domainname des Servers. z.B.: &lt;nowiki&gt;www.example.com&lt;/nowiki&gt;

; User-Agent
: Details zum Browser (Client). z.B.: &lt;nowiki&gt;Mozilla/5.0 Firefox/12.0&lt;/nowiki&gt;

; Cookie
: Enthält Cookies, die an den Server gesendet werden sollen. z.B.: &lt;nowiki&gt;x=100&lt;/nowiki&gt;

[https://developer.mozilla.org/de/docs/Web/HTTP/Headers Weiterführende Lektüre]

=== HTTP-Anfragemethoden ===
; GET
: Anfragen zum Abrufen von Informationen (Seite, Entitätsobjekt oder eine statische Datei).

; POST
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen wird es in die Datenbank eingefügt.

; PUT
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen werden damit alle Eigenschaften (vollständiges Update) in der Datenbank aktualisiert.

; PATCH
: Sendet ein Entitätsobjekt an den Server; im Allgemeinen werden damit einige Eigenschaften (Teil-Update) in der Datenbank aktualisiert.

; DELETE
: Fordert das Löschen einer Entität in der Datenbank an.

=== HTTP GET vs. POST ===

==== GET ====
* Wird verwendet, um Daten vom Server abzurufen.
* Parameter befinden sich in der Anfrage-URL (nur als Query-String).
* Es kann nur eine begrenzte Anzahl von Zeichen an den Server gesendet werden. Max: 2048 Zeichen.
* Wird hauptsächlich als Standardmethode für Anfragen zum Abrufen von Seiten, statischen Dateien usw. verwendet.
* Kann von Browsern / Suchmaschinen zwischengespeichert (gecacht) werden.

==== POST ====
* Wird verwendet, um Daten auf dem Server einzufügen.
* Parameter befinden sich im Anfrage-Hauptteil (Body) (als Query-String, JSON, XML oder Formulardaten).
* Es können unbegrenzt viele Daten an den Server gesendet werden.
* Wird hauptsächlich für Formularübermittlungen / XHR-Aufrufe verwendet.
* Kann nicht von Browsern / Suchmaschinen zwischengespeichert (gecacht) werden.</text>
      <sha1>l318yw025k9zftsdwiyytnu8ia5g59t</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Middleware</title>
    <ns>3002</ns>
    <id>111</id>
    <revision>
      <id>413</id>
      <timestamp>2025-06-23T08:34:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Einführung in Middleware == Middleware ist eine Komponente, die in die Anwendungs-Pipeline eingebunden wird, um Anfragen (Requests) und Antworten (Responses) zu verarbeiten. Middlewares werden nacheinander verkettet und in der gleichen Reihenfolge ausgeführt, in der sie hinzugefügt werden.  Middleware kann ein Request-Delegate (anonyme Methode oder Lambda-Ausdruck) oder eine Klasse sein.  === Middleware - Run === Die Erweiterungsmethode namens '''Ru…“</comment>
      <origin>413</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4447" sha1="byusd5o3m8kcxo6n8ty1xtzyukgpbis" xml:space="preserve">== Einführung in Middleware ==
Middleware ist eine Komponente, die in die Anwendungs-Pipeline eingebunden wird, um Anfragen (Requests) und Antworten (Responses) zu verarbeiten.
Middlewares werden nacheinander verkettet und in der gleichen Reihenfolge ausgeführt, in der sie hinzugefügt werden.

Middleware kann ein Request-Delegate (anonyme Methode oder Lambda-Ausdruck) oder eine Klasse sein.

=== Middleware - Run ===
Die Erweiterungsmethode namens '''Run''' wird verwendet, um eine abschließende (terminating) / kurzschließende (short-circuiting) Middleware auszuführen, die die Anfrage nicht an die nächste Middleware weiterleitet.

&amp;lt;source lang="csharp"&gt;
app.Run( );
app.Run(async (HttpContext context) =&gt;
{
// Code
});
&amp;lt;/source&gt;

=== Middleware-Kette ===
==== app.Use( ) ====
Die Erweiterungsmethode namens '''Use''' wird verwendet, um eine nicht-abschließende Middleware auszuführen, die die Anfrage an die nächste Middleware weiterleiten kann oder auch nicht.

&amp;lt;source lang="csharp"&gt;
app.Use(async (HttpContext context, RequestDelegate next) =&gt;
{
// Logik davor
await next(context);
// Logik danach
});
&amp;lt;/source&gt;

=== Middleware-Klasse ===
Eine Middleware-Klasse wird verwendet, um die Middleware-Logik von einem Lambda-Ausdruck in eine separate / wiederverwendbare Klasse auszulagern.

&amp;lt;source lang="csharp"&gt;
class MiddlewareClassName : IMiddleware
{
public async Task InvokeAsync(HttpContext context, RequestDelegate next)
{
// Logik davor
await next(context);
// Logik danach
}
}

// Registrierung in der Pipeline
app.UseMiddleware&amp;lt;MiddlewareClassName&gt;();

&amp;lt;/source&gt;

=== Middleware-Erweiterungen ===
Eine Middleware-Erweiterungsmethode wird verwendet, um die Middleware mit einem einzigen Methodenaufruf aufzurufen.

'''Middleware-Klasse:'''

&amp;lt;source lang="csharp"&gt;
class MiddlewareClassName : IMiddleware
{
public async Task InvokeAsync(HttpContext context, RequestDelegate next)
{
// Logik davor
await next(context);
// Logik danach
}
}
&amp;lt;/source&gt;

'''Erweiterungsmethode:'''

&amp;lt;source lang="csharp"&gt;
static class ClassNameExtensions
{
public static IApplicationBuilder ExtensionMethodName(this IApplicationBuilder app)
{
return app.UseMiddleware&amp;lt;MiddlewareClassName&gt;();
}
}

// Aufruf in der Pipeline
app.ExtensionMethodName();

&amp;lt;/source&gt;

=== Konventionelle Middleware ===
Eine konventionelle Middleware folgt einem Muster (Konstruktor mit einem '''RequestDelegate''' und eine '''InvokeAsync'''-Methode), anstatt die '''IMiddleware'''-Schnittstelle explizit zu implementieren.

&amp;lt;source lang="csharp"&gt;
class MiddlewareClassName
{
private readonly RequestDelegate _next;

public MiddlewareClassName(RequestDelegate next)
{
_next = next;
}

public async Task InvokeAsync(HttpContext context)
{
// Logik davor
await _next(context);
// Logik danach
}
}

&amp;lt;/source&gt;

'''Erweiterungsmethode zur Registrierung:'''

&amp;lt;source lang="csharp"&gt;
static class ClassNameExtensions
{
public static IApplicationBuilder ExtensionMethodName(this IApplicationBuilder app)
{
return app.UseMiddleware&amp;lt;MiddlewareClassName&gt;();
}
}

// Aufruf in der Pipeline
app.ExtensionMethodName();

&amp;lt;/source&gt;

== Die richtige Reihenfolge der Middleware ==
Die Reihenfolge, in der Middleware-Komponenten zur Pipeline hinzugefügt werden, ist entscheidend, da sie die Verarbeitung von Anfragen und Antworten beeinflusst.

&amp;lt;source lang="csharp"&gt;
// Ausnahmebehandlung zuerst
app.UseExceptionHandler("/Error");

// Erzwingt HTTPS
app.UseHsts();
app.UseHttpsRedirection();

// Stellt statische Dateien bereit (z.B. HTML, CSS, Bilder)
app.UseStaticFiles();

// Routing-Entscheidungen
app.UseRouting();

// CORS-Richtlinien anwenden
app.UseCors();

// Authentifizierung des Benutzers
app.UseAuthentication();

// Autorisierung des Zugriffs auf Ressourcen
app.UseAuthorization();

// Sitzungszustand verwalten
app.UseSession();

// Endpunkte für Controller mappen
app.MapControllers();

// Fügen Sie hier Ihre benutzerdefinierten Middlewares hinzu

// Eine abschließende Middleware am Ende
app.Run();

&amp;lt;/source&gt;

=== Middleware - UseWhen ===
Die Erweiterungsmethode namens '''UseWhen''' wird verwendet, um einen Zweig der Middleware-Pipeline nur dann auszuführen, wenn die angegebene Bedingung wahr ist.

&amp;lt;source lang="csharp"&gt;
app.UseWhen(
context =&gt; { return boolescher_Wert; }, // Bedingung
appBuilder =&gt;
{
// Fügen Sie hier Ihre Middlewares für diesen Zweig hinzu
appBuilder.Use(...);
}
);
&amp;lt;/source&gt;</text>
      <sha1>byusd5o3m8kcxo6n8ty1xtzyukgpbis</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Routing</title>
    <ns>3002</ns>
    <id>112</id>
    <revision>
      <id>414</id>
      <timestamp>2025-06-23T09:02:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „'''Einführung in Routing''' Routing ist ein Prozess, bei dem eingehende HTTP-Anfragen durch Überprüfung der HTTP-Methode und der URL abgeglichen und dann entsprechende Endpunkte aufgerufen werden.  == Routing - UseRouting und UseEndPoints == === UseRouting( ) ===  &amp;lt;pre&gt; app.UseRouting(); &amp;lt;/pre&gt;  Aktiviert das Routing und wählt einen passenden Endpunkt basierend auf dem URL-Pfad und der HTTP-Methode aus.  === UseEndPoints( ) ===  &amp;lt;pre&gt; app.Use…“</comment>
      <origin>414</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="6250" sha1="be9dleif29gebmfvv3eqs5a20txy1lx" xml:space="preserve">'''Einführung in Routing'''
Routing ist ein Prozess, bei dem eingehende HTTP-Anfragen durch Überprüfung der HTTP-Methode und der URL abgeglichen und dann entsprechende Endpunkte aufgerufen werden.

== Routing - UseRouting und UseEndPoints ==
=== UseRouting( ) ===

&amp;lt;pre&gt;
app.UseRouting();
&amp;lt;/pre&gt;

Aktiviert das Routing und wählt einen passenden Endpunkt basierend auf dem URL-Pfad und der HTTP-Methode aus.

=== UseEndPoints( ) ===

&amp;lt;pre&gt;
app.UseEndPoints(endpoints =&gt;
{
endpoints.Map(…);
endpoints.MapGet(…);
endpoints.MapPost(…);
);
&amp;lt;/pre&gt;

Führt den passenden Endpunkt aus, der von der obigen Methode UseRouting() ausgewählt wurde.

== Map, MapGet, MapPost ==
=== endpoints.Map( ) ===

&amp;lt;pre&gt;
endpoints.Map("path", async (HttpContext context) =&gt;
{
//code
});
&amp;lt;/pre&gt;

Führt den Endpunkt aus, wenn der URL-Pfad einer HTTP-Anfrage mit dem angegebenen Pfad beginnt.

=== endpoints.MapGet( ) ===

&amp;lt;pre&gt;
endpoints.MapGet("path", async (HttpContext context) =&gt;
{
//code
});
&amp;lt;/pre&gt;

Führt den Endpunkt aus, wenn der URL-Pfad einer HTTP-GET-Anfrage mit dem angegebenen Pfad beginnt.

=== endpoints.MapPost( ) ===

&amp;lt;pre&gt;
endpoints.MapPost("path", async (HttpContext context) =&gt;
{
//code
});
&amp;lt;/pre&gt;

Führt den Endpunkt aus, wenn der URL-Pfad einer HTTP-POST-Anfrage mit dem angegebenen Pfad beginnt.

== GetEndpoint( ) ==

&amp;lt;pre&gt;
context.GetEndpoint();
&amp;lt;/pre&gt;

Gibt eine Instanz des Typs Microsoft.AspNetCore.Http.Endpoint zurück, die einen Endpunkt darstellt.
Diese Instanz enthält zwei wichtige Eigenschaften: DisplayName, RequestDelegate.

== Routenparameter ==

&amp;lt;pre&gt;
"{parameter}"
&amp;lt;/pre&gt;

Ein Routenparameter kann mit jedem beliebigen Wert übereinstimmen.

== Standard-Routenparameter ==

&amp;lt;pre&gt;
"{parameter=default_value}"
&amp;lt;/pre&gt;

Ein Routenparameter mit einem Standardwert passt auf jeden beliebigen Wert.
Er passt auch auf einen leeren Wert. In diesem Fall wird der Standardwert für den Parameter verwendet.

== Optionale Routenparameter ==

&amp;lt;pre&gt;
"{parameter?}"
&amp;lt;/pre&gt;

"?" kennzeichnet einen optionalen Parameter.
Das bedeutet, er passt sowohl auf einen Wert als auch auf einen leeren Wert.

== Routen-Constraints ==
=== Routenparameter mit Constraint: ===

&amp;lt;pre&gt;
"{parameter:constraint}"
&amp;lt;/pre&gt;

Ein Routenparameter, der eine Beschränkung (Constraint) hat, kann mit einem Wert übereinstimmen, der die angegebene Beschränkung erfüllt.

=== Mehrere Constraints ===

&amp;lt;pre&gt;
"{parameter:constraint1:constraint2}"
&amp;lt;/pre&gt;

Ein Routenparameter kann mehr als eine Beschränkung haben, die durch einen Doppelpunkt ( : ) getrennt sind.

'''int'''
Passt auf jede ganze Zahl.
Bsp: {id:int} passt auf 123456789, -123456789

'''bool'''
Passt auf true oder false. Groß- und Kleinschreibung wird nicht beachtet.
Bsp: {active:bool} passt auf true, false, TRUE, FALSE

'''datetime'''
Passt auf einen gültigen DateTime-Wert in den Formaten "yyyy-MM-dd hh:mm:ss tt" und "MM/dd/yyyy hh:mm:ss tt".
Bsp: {id:datetime} passt auf 2030-01-01%2011:59%20pm
Hinweis: '%20' entspricht einem Leerzeichen.

'''decimal'''
Passt auf einen gültigen Dezimalwert.
Bsp: {price:decimal} passt auf 49.99, -1, 0.01

'''long'''
Passt auf einen gültigen Long-Wert.
Bsp: {id:long} passt auf 123456789, -123456789

'''guid'''
Passt auf einen gültigen Guid-Wert (Globally Unique Identifier - Eine hexadezimale Zahl, die universell eindeutig ist).
Bsp: {id:guid} passt auf 123E4567-E89B-12D3-A456-426652340000

'''minlength(wert)'''
Passt auf eine Zeichenkette, die mindestens die angegebene Anzahl von Zeichen hat.
Bsp: {username:minlength(4)} passt auf John, Allen, William

'''maxlength(wert)'''
Passt auf eine Zeichenkette, die höchstens die angegebene Anzahl von Zeichen hat.
Bsp: {username:maxlength(7)} passt auf John, Allen, William

'''length(min,max)'''
Passt auf eine Zeichenkette, deren Zeichenanzahl zwischen der angegebenen minimalen und maximalen Länge liegt (beide Zahlen einschließlich).
Bsp: {username:length(4, 7)} passt auf John, Allen, William

'''length(wert)'''
Passt auf eine Zeichenkette, die genau die angegebene Anzahl von Zeichen hat.
Bsp: {tin:length(9)} passt auf 987654321

'''min(wert)'''
Passt auf einen ganzzahligen Wert, der größer oder gleich dem angegebenen Wert ist.
Bsp: {age:min(18)} passt auf 18, 19, 100

'''max(wert)'''
Passt auf einen ganzzahligen Wert, der kleiner oder gleich dem angegebenen Wert ist.
Bsp: {age:max(100)} passt auf -1, 1, 18, 100

'''range(min,max)'''
Passt auf einen ganzzahligen Wert zwischen den angegebenen Minimal- und Maximalwerten (beide Zahlen einschließlich).
Bsp: {age:range(18,100)} passt auf 18, 19, 99, 100

'''alpha'''
Passt auf eine Zeichenkette, die nur Alphabete (A-Z) und (a-z) enthält.
Bsp: {username:alpha} passt auf rick, william

'''regex(ausdruck)'''
Passt auf eine Zeichenkette, die mit dem angegebenen regulären Ausdruck übereinstimmt.
Bsp 1: {age:regex(^[0-9]{2}$)} passt auf jede zweistellige Zahl, wie 10, 11, 98, 99
Bsp 2: {age:regex(^\\d{3}-\\d{3}$)} passt auf jede dreistellige Zahl, gefolgt von einem Bindestrich und dann einer dreistelligen Zahl, wie 123-456

== Benutzerdefinierte Routen-Constraint-Klassen ==
=== Benutzerdefinierte Routen-Constraint-Klasse ===

&amp;lt;pre&gt;
public class KlassenName : IRouteConstraint
{
public bool Match(HttpContext? HttpContext, IRouter? route, string routeKey, RouteValueDictionary values, RouteDirection routeDirection)
{
//gibt true oder false zurück
}
}
&amp;lt;/pre&gt;

&amp;lt;pre&gt;
builder.Services.AddRouting(options =&gt;
{
options.ConstraintMap.Add("name", typeof(KlassenName));
}); //Hinzufügen des benutzerdefinierten Constraints zum Routing
&amp;lt;/pre&gt;

== Reihenfolge der Endpunktauswahl ==
Oben hat die höchste Priorität (wird zuerst ausgewertet).

URL-Vorlage mit mehr Segmenten.
Bsp: "a/b/c/d" hat eine höhere Priorität als "a/b/c".

URL-Vorlage mit literalen Text hat eine höhere Priorität als ein Parametersegment.
Bsp: "a/b" hat eine höhere Priorität als "a/{parameter}".

URL-Vorlage, die ein Parametersegment mit Constraints hat, hat eine höhere Priorität als ein Parametersegment ohne Constraints.
Bsp: "a/b:int" hat eine höhere Priorität als "a/b".

Catch-all-Parameter (**).
Bsp: "a/{b}" hat eine höhere Priorität als "a/**".

== WebRoot ==</text>
      <sha1>be9dleif29gebmfvv3eqs5a20txy1lx</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Controllers</title>
    <ns>3002</ns>
    <id>113</id>
    <revision>
      <id>415</id>
      <timestamp>2025-06-23T09:19:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Absolut! Hier ist die deutsche Übersetzung des Textes, formatiert in MediaWiki-Syntax.  = Einführung in Controller = Ein Controller ist eine Klasse, die verwendet wird, um eine Reihe von Aktionen (oder Aktionsmethoden) zu gruppieren. Aktionsmethoden führen eine bestimmte Operation aus, wenn eine Anfrage empfangen wird, und geben das Ergebnis (Antwort) zurück.  == Controller erstellen == Controller sollten eines oder beides erfüllen:  Der Klassenname…“</comment>
      <origin>415</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7728" sha1="j5h49xd4xt4ui5v1nuh0hun36s492fw" xml:space="preserve">Absolut! Hier ist die deutsche Übersetzung des Textes, formatiert in MediaWiki-Syntax.

= Einführung in Controller =
Ein Controller ist eine Klasse, die verwendet wird, um eine Reihe von Aktionen (oder Aktionsmethoden) zu gruppieren.
Aktionsmethoden führen eine bestimmte Operation aus, wenn eine Anfrage empfangen wird, und geben das Ergebnis (Antwort) zurück.

== Controller erstellen ==
Controller sollten eines oder beides erfüllen:

Der Klassenname sollte mit "Controller" enden. Bsp: &amp;lt;code&gt;HomeController&amp;lt;/code&gt;
Das &amp;lt;code&gt;[Controller]&amp;lt;/code&gt;-Attribut wird auf die Klasse selbst oder auf ihre Basisklasse angewendet.
&amp;lt;source lang="csharp"&gt;
[Controller]
class KlassenNameController
{
// Aktionsmethoden hier
}
&amp;lt;/source&gt;

'''Optional:'''

Ist eine öffentliche (&amp;lt;code&gt;public&amp;lt;/code&gt;) Klasse.
Erbt von &amp;lt;code&gt;Microsoft.AspNetCore.Mvc.Controller&amp;lt;/code&gt;.
== 'Routing' in Controllern aktivieren ==
'''AddControllers( )'''

&amp;lt;source lang="csharp"&gt;
builder.Services.AddControllers();
&amp;lt;/source&gt;
Fügt alle Controller als Dienste zur &amp;lt;code&gt;IServiceCollection&amp;lt;/code&gt; hinzu.
So kann auf sie zugegriffen werden, wenn ein bestimmter Endpunkt sie benötigt.

'''MapControllers()'''

&amp;lt;source lang="csharp"&gt;
app.MapControllers();
&amp;lt;/source&gt;
Fügt alle Aktionsmethoden als Endpunkte hinzu.
Dadurch entfällt die Notwendigkeit, die &amp;lt;code&gt;UseEndPoints()&amp;lt;/code&gt;-Methode zu verwenden, um Aktionsmethoden als Endpunkte hinzuzufügen.

== Verantwortlichkeiten von Controllern ==

'''Anfragen lesen''' ** Extrahieren von Datenwerten aus der Anfrage, wie z.B. Query-String-Parameter, Anfragekörper (Request Body), Anfrage-Cookies, Anfrage-Header usw.
'''Modelle aufrufen''' ** Aufrufen von Geschäftslogik-Methoden. Geschäftsoperationen sind in der Regel als 'Dienste' (Services) verfügbar.
'''Validierung''' ** Validieren eingehender Anfragedetails (Query-String-Parameter, Anfragekörper, Anfrage-Cookies, Anfrage-Header usw.)
'''Antwort vorbereiten''' ** Auswählen, welche Art von Antwort an den Client gesendet werden soll, und Vorbereiten der Antwort (Aktionsergebnis).
=== ContentResult ===
Ein &amp;lt;code&gt;ContentResult&amp;lt;/code&gt; kann jeden Antworttyp repräsentieren, basierend auf dem angegebenen MIME-Typ.
Der MIME-Typ repräsentiert den Typ des Inhalts, wie z.B. &amp;lt;code&gt;text/plain&amp;lt;/code&gt;, &amp;lt;code&gt;text/html&amp;lt;/code&gt;, &amp;lt;code&gt;application/json&amp;lt;/code&gt;, &amp;lt;code&gt;application/xml&amp;lt;/code&gt;, &amp;lt;code&gt;application/pdf&amp;lt;/code&gt; usw.

&amp;lt;source lang="csharp"&gt;
return new ContentResult() { Content = "Inhalt", ContentType = "Inhaltstyp" };
// [oder]
return Content("Inhalt", "Inhaltstyp");
&amp;lt;/source&gt;

=== JsonResult ===
Ein &amp;lt;code&gt;JsonResult&amp;lt;/code&gt; kann ein Objekt im JavaScript Object Notation (JSON)-Format repräsentieren.
Bsp: &amp;lt;code&gt;{ "firstName": "James", "lastName": "Smith", "age": 25 }&amp;lt;/code&gt;

&amp;lt;source lang="csharp"&gt;
return new JsonResult(ihr_objekt);
// [oder]
return Json(ihr_objekt);
&amp;lt;/source&gt;

== Dateiergebnisse (File Results) ==
Ein Dateiergebnis sendet den Inhalt einer Datei als Antwort.
Bsp: PDF-Datei, TXT-Datei, EXE-Datei, ZIP-Datei usw.

=== VirtualFileResult ===

&amp;lt;source lang="csharp"&gt;
return new VirtualFileResult("relativer/dateipfad", "inhaltstyp");
//oder
return File("relativer/dateipfad", "inhaltstyp");
&amp;lt;/source&gt;
Repräsentiert eine Datei innerhalb des WebRoot-Ordners (standardmäßig 'wwwroot').
Wird verwendet, wenn sich die Datei im WebRoot-Ordner befindet.

=== PhysicalFileResult ===
Repräsentiert eine Datei, die nicht notwendigerweise Teil des Projektordners ist.
Wird verwendet, wenn sich die Datei außerhalb des WebRoot-Ordners befindet.

&amp;lt;source lang="csharp"&gt;
return new PhysicalFileResult("absoluter/dateipfad", "inhaltstyp");
//oder
return PhysicalFile("absoluter/dateipfad", "inhaltstyp");
&amp;lt;/source&gt;

=== FileContentResult ===
Repräsentiert eine Datei aus einem &amp;lt;code&gt;byte[]&amp;lt;/code&gt;.
Wird verwendet, wenn ein Teil der Datei oder ein &amp;lt;code&gt;byte[]&amp;lt;/code&gt; aus einer anderen Datenquelle als Antwort gesendet werden muss.

&amp;lt;source lang="csharp"&gt;
return new FileContentResult(byte_array, "inhaltstyp");
//oder
return File(byte_array, "inhaltstyp");
&amp;lt;/source&gt;

== IActionResult ==
Es ist die übergeordnete Schnittstelle (Interface) für alle Aktionsergebnis-Klassen wie &amp;lt;code&gt;ContentResult&amp;lt;/code&gt;, &amp;lt;code&gt;JsonResult&amp;lt;/code&gt;, &amp;lt;code&gt;RedirectResult&amp;lt;/code&gt;, &amp;lt;code&gt;StatusCodeResult&amp;lt;/code&gt;, &amp;lt;code&gt;ViewResult&amp;lt;/code&gt; usw.
Indem der Rückgabetyp als &amp;lt;code&gt;IActionResult&amp;lt;/code&gt; angegeben wird, können Sie jeden der Untertypen von &amp;lt;code&gt;IActionResult&amp;lt;/code&gt; zurückgeben.

== Statuscode-Ergebnisse (Status Code Results) ==
Ein Statuscode-Ergebnis sendet eine leere Antwort mit dem angegebenen Statuscode.
Bsp: 200, 400, 401, 404, 500 usw.

=== StatusCodeResult ===
Repräsentiert eine Antwort mit dem angegebenen Statuscode.
Wird verwendet, wenn Sie einen bestimmten HTTP-Statuscode als Antwort senden möchten.

&amp;lt;source lang="csharp"&gt;
return new StatusCodeResult(status_code);
//oder
return StatusCode(status_code);
&amp;lt;/source&gt;

=== UnauthorizedResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '401 Unauthorized'.
Wird verwendet, wenn der Benutzer nicht autorisiert (nicht angemeldet) ist.

&amp;lt;source lang="csharp"&gt;
return new UnauthorizedResult();
//oder
return Unauthorized();
&amp;lt;/source&gt;

=== BadRequestResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '400 Bad Request'.
Wird verwendet, wenn die Anfragewerte ungültig sind (Validierungsfehler).

&amp;lt;source lang="csharp"&gt;
return new BadRequestResult();
//oder
return BadRequest();
&amp;lt;/source&gt;

=== NotFoundResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '404 Not Found'.
Wird verwendet, wenn die angeforderten Informationen auf dem Server nicht verfügbar sind.

&amp;lt;source lang="csharp"&gt;
return new NotFoundResult();
//oder
return NotFound();
&amp;lt;/source&gt;

== Umleitungsergebnisse (Redirect Results) ==
Ein Umleitungsergebnis sendet entweder eine HTTP 302- oder 301-Antwort an den Browser, um auf eine bestimmte Aktion oder URL umzuleiten.
Bsp: Umleitung von 'action1' zu 'action2'.

=== RedirectToActionResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer anderen Aktionsmethode, basierend auf dem Aktionsnamen und dem Controllernamen.

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new RedirectToActionResult("action", "controller", new { route_values });
//oder
return RedirectToAction("action", "controller", new { route_values });
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new RedirectToActionResult("action", "controller", new { route_values }, true);
//oder
return RedirectToActionPermanent("action", "controller", new { route_values });
&amp;lt;/source&gt;

=== LocalRedirectResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer anderen lokalen URL.

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new LocalRedirectResult("url");
//oder
return LocalRedirect("url");
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new LocalRedirectResult("url", true);
//oder
return LocalRedirectPermanent("url");
&amp;lt;/source&gt;

=== RedirectResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer beliebigen anderen URL (entweder innerhalb derselben Webanwendung oder einer anderen Webanwendung).

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new RedirectResult("url");
//oder
return Redirect("url");
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new RedirectResult("url", true);
//oder
return RedirectPermanent("url");
&amp;lt;/source&gt;</text>
      <sha1>j5h49xd4xt4ui5v1nuh0hun36s492fw</sha1>
    </revision>
    <revision>
      <id>416</id>
      <parentid>415</parentid>
      <timestamp>2025-06-23T09:27:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>416</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7639" sha1="58vuk5n91oe7ta41b7g2wp5x37svybf" xml:space="preserve">= Einführung in Controller =
Ein Controller ist eine Klasse, die verwendet wird, um eine Reihe von Aktionen (oder Aktionsmethoden) zu gruppieren.
Aktionsmethoden führen eine bestimmte Operation aus, wenn eine Anfrage empfangen wird, und geben das Ergebnis (Antwort) zurück.

== Controller erstellen ==
Controller sollten eines oder beides erfüllen:

Der Klassenname sollte mit "Controller" enden. Bsp: &amp;lt;code&gt;HomeController&amp;lt;/code&gt;
Das &amp;lt;code&gt;[Controller]&amp;lt;/code&gt;-Attribut wird auf die Klasse selbst oder auf ihre Basisklasse angewendet.
&amp;lt;source lang="csharp"&gt;
[Controller]
class KlassenNameController
{
// Aktionsmethoden hier
}
&amp;lt;/source&gt;

'''Optional:'''

Ist eine öffentliche (&amp;lt;code&gt;public&amp;lt;/code&gt;) Klasse.
Erbt von &amp;lt;code&gt;Microsoft.AspNetCore.Mvc.Controller&amp;lt;/code&gt;.
== 'Routing' in Controllern aktivieren ==
'''AddControllers( )'''

&amp;lt;source lang="csharp"&gt;
builder.Services.AddControllers();
&amp;lt;/source&gt;
Fügt alle Controller als Dienste zur &amp;lt;code&gt;IServiceCollection&amp;lt;/code&gt; hinzu.
So kann auf sie zugegriffen werden, wenn ein bestimmter Endpunkt sie benötigt.

'''MapControllers()'''

&amp;lt;source lang="csharp"&gt;
app.MapControllers();
&amp;lt;/source&gt;
Fügt alle Aktionsmethoden als Endpunkte hinzu.
Dadurch entfällt die Notwendigkeit, die &amp;lt;code&gt;UseEndPoints()&amp;lt;/code&gt;-Methode zu verwenden, um Aktionsmethoden als Endpunkte hinzuzufügen.

== Verantwortlichkeiten von Controllern ==

'''Anfragen lesen''' ** Extrahieren von Datenwerten aus der Anfrage, wie z.B. Query-String-Parameter, Anfragekörper (Request Body), Anfrage-Cookies, Anfrage-Header usw.
'''Modelle aufrufen''' ** Aufrufen von Geschäftslogik-Methoden. Geschäftsoperationen sind in der Regel als 'Dienste' (Services) verfügbar.
'''Validierung''' ** Validieren eingehender Anfragedetails (Query-String-Parameter, Anfragekörper, Anfrage-Cookies, Anfrage-Header usw.)
'''Antwort vorbereiten''' ** Auswählen, welche Art von Antwort an den Client gesendet werden soll, und Vorbereiten der Antwort (Aktionsergebnis).
=== ContentResult ===
Ein &amp;lt;code&gt;ContentResult&amp;lt;/code&gt; kann jeden Antworttyp repräsentieren, basierend auf dem angegebenen MIME-Typ.
Der MIME-Typ repräsentiert den Typ des Inhalts, wie z.B. &amp;lt;code&gt;text/plain&amp;lt;/code&gt;, &amp;lt;code&gt;text/html&amp;lt;/code&gt;, &amp;lt;code&gt;application/json&amp;lt;/code&gt;, &amp;lt;code&gt;application/xml&amp;lt;/code&gt;, &amp;lt;code&gt;application/pdf&amp;lt;/code&gt; usw.

&amp;lt;source lang="csharp"&gt;
return new ContentResult() { Content = "Inhalt", ContentType = "Inhaltstyp" };
// [oder]
return Content("Inhalt", "Inhaltstyp");
&amp;lt;/source&gt;

=== JsonResult ===
Ein &amp;lt;code&gt;JsonResult&amp;lt;/code&gt; kann ein Objekt im JavaScript Object Notation (JSON)-Format repräsentieren.
Bsp: &amp;lt;code&gt;{ "firstName": "James", "lastName": "Smith", "age": 25 }&amp;lt;/code&gt;

&amp;lt;source lang="csharp"&gt;
return new JsonResult(ihr_objekt);
// [oder]
return Json(ihr_objekt);
&amp;lt;/source&gt;

== Dateiergebnisse (File Results) ==
Ein Dateiergebnis sendet den Inhalt einer Datei als Antwort.
Bsp: PDF-Datei, TXT-Datei, EXE-Datei, ZIP-Datei usw.

=== VirtualFileResult ===

&amp;lt;source lang="csharp"&gt;
return new VirtualFileResult("relativer/dateipfad", "inhaltstyp");
//oder
return File("relativer/dateipfad", "inhaltstyp");
&amp;lt;/source&gt;
Repräsentiert eine Datei innerhalb des WebRoot-Ordners (standardmäßig 'wwwroot').
Wird verwendet, wenn sich die Datei im WebRoot-Ordner befindet.

=== PhysicalFileResult ===
Repräsentiert eine Datei, die nicht notwendigerweise Teil des Projektordners ist.
Wird verwendet, wenn sich die Datei außerhalb des WebRoot-Ordners befindet.

&amp;lt;source lang="csharp"&gt;
return new PhysicalFileResult("absoluter/dateipfad", "inhaltstyp");
//oder
return PhysicalFile("absoluter/dateipfad", "inhaltstyp");
&amp;lt;/source&gt;

=== FileContentResult ===
Repräsentiert eine Datei aus einem &amp;lt;code&gt;byte[]&amp;lt;/code&gt;.
Wird verwendet, wenn ein Teil der Datei oder ein &amp;lt;code&gt;byte[]&amp;lt;/code&gt; aus einer anderen Datenquelle als Antwort gesendet werden muss.

&amp;lt;source lang="csharp"&gt;
return new FileContentResult(byte_array, "inhaltstyp");
//oder
return File(byte_array, "inhaltstyp");
&amp;lt;/source&gt;

== IActionResult ==
Es ist die übergeordnete Schnittstelle (Interface) für alle Aktionsergebnis-Klassen wie &amp;lt;code&gt;ContentResult&amp;lt;/code&gt;, &amp;lt;code&gt;JsonResult&amp;lt;/code&gt;, &amp;lt;code&gt;RedirectResult&amp;lt;/code&gt;, &amp;lt;code&gt;StatusCodeResult&amp;lt;/code&gt;, &amp;lt;code&gt;ViewResult&amp;lt;/code&gt; usw.
Indem der Rückgabetyp als &amp;lt;code&gt;IActionResult&amp;lt;/code&gt; angegeben wird, können Sie jeden der Untertypen von &amp;lt;code&gt;IActionResult&amp;lt;/code&gt; zurückgeben.

== Statuscode-Ergebnisse (Status Code Results) ==
Ein Statuscode-Ergebnis sendet eine leere Antwort mit dem angegebenen Statuscode.
Bsp: 200, 400, 401, 404, 500 usw.

=== StatusCodeResult ===
Repräsentiert eine Antwort mit dem angegebenen Statuscode.
Wird verwendet, wenn Sie einen bestimmten HTTP-Statuscode als Antwort senden möchten.

&amp;lt;source lang="csharp"&gt;
return new StatusCodeResult(status_code);
//oder
return StatusCode(status_code);
&amp;lt;/source&gt;

=== UnauthorizedResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '401 Unauthorized'.
Wird verwendet, wenn der Benutzer nicht autorisiert (nicht angemeldet) ist.

&amp;lt;source lang="csharp"&gt;
return new UnauthorizedResult();
//oder
return Unauthorized();
&amp;lt;/source&gt;

=== BadRequestResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '400 Bad Request'.
Wird verwendet, wenn die Anfragewerte ungültig sind (Validierungsfehler).

&amp;lt;source lang="csharp"&gt;
return new BadRequestResult();
//oder
return BadRequest();
&amp;lt;/source&gt;

=== NotFoundResult ===
Repräsentiert eine Antwort mit dem HTTP-Statuscode '404 Not Found'.
Wird verwendet, wenn die angeforderten Informationen auf dem Server nicht verfügbar sind.

&amp;lt;source lang="csharp"&gt;
return new NotFoundResult();
//oder
return NotFound();
&amp;lt;/source&gt;

== Umleitungsergebnisse (Redirect Results) ==
Ein Umleitungsergebnis sendet entweder eine HTTP 302- oder 301-Antwort an den Browser, um auf eine bestimmte Aktion oder URL umzuleiten.
Bsp: Umleitung von 'action1' zu 'action2'.

=== RedirectToActionResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer anderen Aktionsmethode, basierend auf dem Aktionsnamen und dem Controllernamen.

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new RedirectToActionResult("action", "controller", new { route_values });
//oder
return RedirectToAction("action", "controller", new { route_values });
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new RedirectToActionResult("action", "controller", new { route_values }, true);
//oder
return RedirectToActionPermanent("action", "controller", new { route_values });
&amp;lt;/source&gt;

=== LocalRedirectResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer anderen lokalen URL.

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new LocalRedirectResult("url");
//oder
return LocalRedirect("url");
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new LocalRedirectResult("url", true);
//oder
return LocalRedirectPermanent("url");
&amp;lt;/source&gt;

=== RedirectResult ===
Repräsentiert eine Antwort zur Umleitung von der aktuellen Aktionsmethode zu einer beliebigen anderen URL (entweder innerhalb derselben Webanwendung oder einer anderen Webanwendung).

'''302 - Found'''

&amp;lt;source lang="csharp"&gt;
return new RedirectResult("url");
//oder
return Redirect("url");
&amp;lt;/source&gt;

'''301 - Moved Permanently'''

&amp;lt;source lang="csharp"&gt;
return new RedirectResult("url", true);
//oder
return RedirectPermanent("url");
&amp;lt;/source&gt;</text>
      <sha1>58vuk5n91oe7ta41b7g2wp5x37svybf</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Model Binding</title>
    <ns>3002</ns>
    <id>114</id>
    <revision>
      <id>417</id>
      <timestamp>2025-06-23T09:39:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Model Binding == '''Model Binding''' ist eine Funktion von ASP.NET Core, die Werte aus HTTP-Anfragen liest und sie als Argumente an die Aktionsmethode übergibt.  === QueryString vs. RouteData === ==== [FromQuery] und [FromRoute] ====  '''[FromQuery]''' &lt;syntaxhighlight lang="csharp"&gt; // liest den Wert nur aus dem Query-String public IActionResult ActionMethodName( [FromQuery] type parameter) { } &lt;/syntaxhighlight&gt;  '''[FromRoute]''' &lt;syntaxhighlight l…“</comment>
      <origin>417</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="8559" sha1="n5v8ja3onk8votdzuvwav8aghxwade0" xml:space="preserve">== Model Binding ==
'''Model Binding''' ist eine Funktion von ASP.NET Core, die Werte aus HTTP-Anfragen liest und sie als Argumente an die Aktionsmethode übergibt.

=== QueryString vs. RouteData ===
==== [FromQuery] und [FromRoute] ====

'''[FromQuery]'''
&lt;syntaxhighlight lang="csharp"&gt;
// liest den Wert nur aus dem Query-String
public IActionResult ActionMethodName( [FromQuery] type parameter)
{
}
&lt;/syntaxhighlight&gt;

'''[FromRoute]'''
&lt;syntaxhighlight lang="csharp"&gt;
// liest den Wert nur aus den Routenparametern
public IActionResult ActionMethodName( [FromRoute] type parameter)
{
}
&lt;/syntaxhighlight&gt;

=== Modelle ===
Ein '''Modell''' ist eine Klasse, die die Struktur von Daten (als Eigenschaften) darstellt, die Sie von der Anfrage empfangen und/oder an die Antwort senden möchten.
Auch bekannt als '''POCO''' (Plain Old CLR Objects).

==== Modell ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName
{
  public type PropertyName { get; set; }
}
&lt;/syntaxhighlight&gt;

=== form-urlencoded und form-data ===
==== form-urlencoded (Standard) ====
'''Request-Header'''
&lt;pre&gt;
Content-Type: application/x-www-form-urlencoded
&lt;/pre&gt;

'''Request-Body'''
&lt;pre&gt;
param1=value1&amp;param2=value2
&lt;/pre&gt;

==== form-data ====
'''Request-Header'''
&lt;pre&gt;
Content-Type: multipart/form-data
&lt;/pre&gt;

'''Request-Body'''
&lt;pre&gt;
--------------------------d74496d66958873e
Content-Disposition: form-data; name="param1"
value1
--------------------------d74496d66958873e
Content-Disposition: form-data; name="param2"
value2
&lt;/pre&gt;

=== Modellvalidierung ===
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName
{
  [Attribute] // wendet eine Validierungsregel auf diese Eigenschaft an
  public type PropertyName { get; set; }
}
&lt;/syntaxhighlight&gt;

==== ModelState ====
* '''IsValid''': Gibt an, ob mindestens ein Validierungsfehler vorliegt oder nicht (&lt;code&gt;true&lt;/code&gt; oder &lt;code&gt;false&lt;/code&gt;).
* '''Values''': Enthält den Wert jeder Modelleigenschaft mit der entsprechenden "Errors"-Eigenschaft, die eine Liste der Validierungsfehler dieser Modelleigenschaft enthält.
* '''ErrorCount''': Gibt die Anzahl der Fehler zurück.

==== Validierungsattribute ====
; [Required(ErrorMessage = "Wert")]
: Gibt an, dass der Eigenschaftswert erforderlich ist (darf nicht leer oder null sein).

; [StringLength(int maximumLength, MinimumLength = Wert, ErrorMessage = "Wert")]
: Gibt die minimale und maximale Länge (Anzahl der Zeichen) an, die in der Zeichenfolge zulässig ist.

; [Range(int minimum, int maximum, ErrorMessage = "Wert")]
: Gibt den minimal und maximal zulässigen numerischen Wert an.

; [RegularExpression(string pattern, ErrorMessage = "Wert")]
: Gibt das gültige Muster (regulärer Ausdruck) an.

; [EmailAddress(ErrorMessage = "Wert")]
: Gibt an, dass der Wert eine gültige E-Mail-Adresse sein muss.

; [Phone(ErrorMessage = "Wert")]
: Gibt an, dass der Wert eine gültige Telefonnummer sein muss. Bsp.: &lt;code&gt;(999)-999-9999&lt;/code&gt; oder &lt;code&gt;9876543210&lt;/code&gt;

; [Compare(string otherProperty, ErrorMessage = "Wert")]
: Gibt an, dass die Werte der aktuellen Eigenschaft und einer anderen Eigenschaft übereinstimmen müssen.

; [Url(ErrorMessage = "Wert")]
: Gibt an, dass der Wert eine gültige URL (Website-Adresse) sein muss. Bsp.: &lt;code&gt;http://www.example.com&lt;/code&gt;

; [ValidateNever]
: Gibt an, dass die Eigenschaft nicht validiert werden soll (schließt die Eigenschaft von der Modellvalidierung aus).

=== Benutzerdefinierte Validierungen ===
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName : ValidationAttribute
{
  public override ValidationResult? IsValid(object? value, ValidationContext validationContext)
  {
    // return ValidationResult.Success;
    // [oder] return new ValidationResult("Fehlermeldung");
  }
}
&lt;/syntaxhighlight&gt;

* '''ValidationAttribute''': Basisklasse für alle Validierungsattribute wie &lt;code&gt;RequiredAttribute&lt;/code&gt;, &lt;code&gt;RegularExpressionAttribute&lt;/code&gt;, &lt;code&gt;RangeAttribute&lt;/code&gt;, &lt;code&gt;StringLengthAttribute&lt;/code&gt;, &lt;code&gt;CompareAttribute&lt;/code&gt; usw. Stellt Eigenschaften wie &lt;code&gt;ErrorMessage&lt;/code&gt; &amp; Methoden wie &lt;code&gt;Validate()&lt;/code&gt;, &lt;code&gt;IsValid()&lt;/code&gt; etc. bereit.

* '''ValidationContext''': Dient als Parameter für die &lt;code&gt;IsValid()&lt;/code&gt;-Methode von benutzerdefinierten Validierungsattribut-Klassen. Stellt Eigenschaften wie &lt;code&gt;ObjectType&lt;/code&gt;, &lt;code&gt;ObjectInstance&lt;/code&gt; bereit.

==== Benutzerdefinierte Validierungen mit mehreren Eigenschaften ====
==== IValidatableObject ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName : IValidatableObject
{
  // Modelleigenschaften hier
 
  public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext validationContext)
  {
    if (Bedingung)
    {
      yield return new ValidationResult("Fehlermeldung");
    }
  }
}
&lt;/syntaxhighlight&gt;

* '''IValidatableObject''': Basis-Interface für Modellklassen mit Validierung. Stellt eine Methode namens &lt;code&gt;Validate()&lt;/code&gt; zur Verfügung, um Validierungslogik auf Klassenebene zu definieren. Die &lt;code&gt;Validate()&lt;/code&gt;-Methode wird ausgeführt, nachdem alle Validierungen auf Eigenschaftsebene ausgeführt wurden; sie wird jedoch nicht ausgeführt, wenn mindestens eine Validierung auf Eigenschaftsebene einen Fehler ergibt.

* '''ValidationContext''': Dient als Parameter für die &lt;code&gt;Validate()&lt;/code&gt;-Methode von Modellklassen, die &lt;code&gt;IValidatableObject&lt;/code&gt; implementieren. Stellt Eigenschaften wie &lt;code&gt;ObjectType&lt;/code&gt;, &lt;code&gt;ObjectInstance&lt;/code&gt; bereit.

=== [Bind] und [BindNever] ===
==== [Bind] ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassNameController
{
  public IActionResult ActionMethodName( [Bind(nameof(ClassName.PropertyName), nameof(ClassName.PropertyName) )]  ClassName parameterName)
  {
  }
}
&lt;/syntaxhighlight&gt;
Das '''[Bind]'''-Attribut gibt an, dass nur die angegebenen Eigenschaften in die Modellbindung einbezogen werden sollen. Verhindert Over-Posting (das Senden von Werten an unerwartete Eigenschaften), insbesondere in "Create"-Szenarien.

==== [BindNever] ====
&lt;syntaxhighlight lang="csharp"&gt;
class ModelClassName
{
  [BindNever]
  public type PropertyName { get; set; }
}
&lt;/syntaxhighlight&gt;
Das '''[BindNever]'''-Attribut gibt an, dass die angegebene Eigenschaft NICHT in die Modellbindung einbezogen werden soll. Nützlich, wenn Sie weniger Eigenschaften von der Modellbindung ausschließen müssen.

=== [FromBody] ===
&lt;syntaxhighlight lang="csharp"&gt;
// ermöglicht es den Input-Formattern, Daten nur aus dem Request-Body (als JSON, XML oder benutzerdefiniert) zu lesen
public IActionResult ActionMethodName( [FromBody] type parameter)
{
}
&lt;/syntaxhighlight&gt;

=== Input-Formatter ===

=== Benutzerdefinierte Model-Binder ===
==== Benutzerdefinierter Model-Binder ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName : IModelBinder
{
  public Task BindModelAsync(ModelBindingContext bindingContext)
  {
    // liest den Wert aus der Anfrage
    bindingContext.ValueProvider.GetValue("FirstName");
 
    // gibt das Modellobjekt zurück, nachdem die Daten aus der Anfrage gelesen wurden
    bindingContext.Result = ModelBindingResult.Success(your_object);
  }
}
&lt;/syntaxhighlight&gt;

* '''IModelBinder''': Basis-Interface für alle benutzerdefinierten Model-Binder. Stellt eine Methode namens &lt;code&gt;BindModelAsync&lt;/code&gt; zur Verfügung, um die Logik für das Binden (Lesen) von Daten aus der Anfrage und das Erstellen eines Modellobjekts zu definieren, das als Parameter in der Aktionsmethode empfangen wird.

* '''ModelBindingContext''': Dient als Parameter für die &lt;code&gt;BindModelAsync()&lt;/code&gt;-Methode von benutzerdefinierten Model-Binder-Klassen. Stellt Eigenschaften wie &lt;code&gt;HttpContext&lt;/code&gt;, &lt;code&gt;ModelState&lt;/code&gt;, &lt;code&gt;ValueProvider&lt;/code&gt;, &lt;code&gt;Result&lt;/code&gt; etc. bereit.

==== Benutzerdefinierte Model-Binder-Provider ====
&lt;syntaxhighlight lang="csharp"&gt;
class ClassName : IModelBinderProvider
{
  public IModelBinder GetBinder(ModelBinderProviderContext providerContext)
  {
    // gibt den Typ der aufzurufenden benutzerdefinierten Model-Binder-Klasse zurück
    return new BinderTypeModelBinder(typeof(YourModelBinderClassName));
  }
}
&lt;/syntaxhighlight&gt;

* '''IModelBinderProvider''': Basis-Interface für alle benutzerdefinierten Model-Binder-Provider. Stellt eine Methode namens &lt;code&gt;GetBinder&lt;/code&gt; zur Verfügung, um den Typ der benutzerdefinierten Model-Binder-Klasse zurückzugeben.

* '''ModelBinderProviderContext''': Dient als Parameter für die &lt;code&gt;GetBinder()&lt;/code&gt;-Methode von benutzerdefinierten Model-Binder-Provider-Klassen. Stellt Eigenschaften wie &lt;code&gt;BindingInfo&lt;/code&gt;, &lt;code&gt;Services&lt;/code&gt; etc. bereit.</text>
      <sha1>n5v8ja3onk8votdzuvwav8aghxwade0</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Razor Views</title>
    <ns>3002</ns>
    <id>115</id>
    <revision>
      <id>418</id>
      <timestamp>2025-06-23T10:20:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ -----  = '''Kurs: Professionelle Webentwicklung mit ASP.NET Core MVC''' =  Willkommen zu diesem Kurs über das Model-View-Controller (MVC) Architekturmuster in ASP.NET Core! Hier lernen Sie, wie Sie saubere, wartbare und skalierbare Webanwendungen entwickeln, indem Sie die Logik Ihrer Anwendung klar strukturieren.  -----  == '''Lektion 1: Das Fundament – Das MVC-Architekturmuster''' ==  Das Herzstück moderner Webanwendungen ist eine saubere Architektu…“</comment>
      <origin>418</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="7957" sha1="j3e06d2obhz8n8g5mzuahyw5q27yvxh" xml:space="preserve">
-----

= '''Kurs: Professionelle Webentwicklung mit ASP.NET Core MVC''' =

Willkommen zu diesem Kurs über das Model-View-Controller (MVC) Architekturmuster in ASP.NET Core! Hier lernen Sie, wie Sie saubere, wartbare und skalierbare Webanwendungen entwickeln, indem Sie die Logik Ihrer Anwendung klar strukturieren.

-----

== '''Lektion 1: Das Fundament – Das MVC-Architekturmuster''' ==

Das Herzstück moderner Webanwendungen ist eine saubere Architektur. Das Model-View-Controller (MVC) Muster ist ein bewährter Ansatz, der den Code in drei logische Hauptkomponenten unterteilt.

'''Ziele und Vorteile:'''
* '''Klare Trennung der Verantwortlichkeiten (Separation of Concerns):''' Jede Komponente hat genau eine Aufgabe. Das macht den Code verständlicher und Fehler leichter auffindbar.
* '''Parallele Entwicklung:''' Teams können gleichzeitig am Datenmodell, der Benutzeroberfläche und der Anwendungslogik arbeiten.
* '''Einfacheres Testen:''' Jede Komponente kann isoliert getestet werden (Unit-Testing), was die Qualität Ihrer Software enorm steigert.
* '''Wartbarkeit:''' Änderungen in einer Komponente (z. B. im Design der View) haben minimale bis keine Auswirkungen auf die anderen Komponenten.

Das wichtigste Prinzip ist die Unabhängigkeit des '''Models'''. Es kennt weder die View noch den Controller und kann daher völlig eigenständig entwickelt und getestet werden.

-----

== '''Lektion 2: Die drei Hauptakteure und ihre Rollen''' ==

Um das MVC-Muster zu verstehen, müssen wir die Verantwortlichkeiten der einzelnen Komponenten kennen. Stellen Sie sich den Ablauf einer Anfrage vor:

# '''Der Controller: Der Dirigent'''
#* Empfängt die HTTP-Anfrage des Benutzers (z. B. das Aufrufen einer URL).
#* Er ist der Koordinator: Er ruft das Geschäftsmodell auf, um Daten abzufragen oder zu bearbeiten.
#* Anschließend wählt er die passende '''View''' aus, um die Daten darzustellen.

# '''Das Geschäftsmodell (Model): Das Gehirn'''
#* Enthält die gesamte Geschäftslogik und die Daten Ihrer Anwendung.
#* Führt Operationen aus, wie z. B. das Lesen und Schreiben von Daten in einer Datenbank.
#* Es ist die "Quelle der Wahrheit" und gibt die verarbeiteten Daten an den Controller zurück. Es hat keinerlei Kenntnis von der Benutzeroberfläche.

# '''Die View: Das Gesicht'''
#* Ist für die reine Darstellung der Daten verantwortlich (HTML-Code).
#* Sie empfängt die vom Controller vorbereiteten Daten und stellt sie dar.
#* Die View selbst enthält keine Geschäftslogik. Sie sollte nur Code enthalten, der für die Präsentation notwendig ist.

'''Der Datenfluss im Überblick:'''  
Anfrage → '''Controller''' → Ruft '''Model''' auf → Model liefert Daten zurück → '''Controller''' übergibt Daten an '''View''' → View wird gerendert und als Antwort an den Benutzer gesendet.

-----

== '''Lektion 3: Dynamische Ansichten mit der Razor View Engine''' ==

Eine View ist mehr als nur statisches HTML. Mit der Razor View Engine können wir C#-Code direkt in unsere &lt;code&gt;.cshtml&lt;/code&gt;-Dateien einbetten, um dynamische Inhalte zu erzeugen.

* Das &lt;code&gt;@&lt;/code&gt;-Zeichen leitet Razor-Syntax ein.
* Razor ermöglicht es uns, Daten aus unserem Modell direkt im HTML auszugeben und Logik für die Darstellung zu implementieren.

'''Wichtige Razor-Konstrukte:'''
* '''Ausdrücke (&lt;code&gt;@Model.Username&lt;/code&gt;):''' Geben den Wert einer Variable oder Eigenschaft aus.
* '''Codeblöcke (&lt;code&gt;@{ ... }&lt;/code&gt;):''' Führen eine oder mehrere Zeilen C#-Code aus.
* '''Kontrollstrukturen:''' Sie können bekannte C#-Strukturen wie &lt;code&gt;if-else&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt; und &lt;code&gt;for&lt;/code&gt; verwenden, um die Darstellung zu steuern.
* '''Lokale Funktionen:''' Sie können kleine Hilfsfunktionen direkt in Ihrer View definieren.

'''Wichtig:''' Die Logik in einer View sollte sich ausschließlich auf die '''Präsentation''' beschränken! Komplexe Berechnungen gehören in das Model oder den Controller.

-----

== '''Lektion 4: Daten vom Controller an die View übergeben''' ==

Doch wie gelangen die Daten vom Controller in die View? Dafür gibt es mehrere Mechanismen. Wir beginnen mit zwei einfachen, aber "schwach typisierten" Ansätzen.

=== '''1. ViewData''' ===

&lt;code&gt;ViewData&lt;/code&gt; ist ein Wörterbuch-Objekt (&lt;code&gt;Dictionary&amp;lt;string, object&amp;gt;&lt;/code&gt;), in dem Sie Daten unter einem bestimmten Schlüssel ablegen können.

* '''Im Controller:''' &lt;code&gt;ViewData["Titel"] = "Produktliste";&lt;/code&gt;
* '''In der View:''' &lt;code&gt;&amp;lt;h1&amp;gt;@ViewData["Titel"]&amp;lt;/h1&amp;gt;&lt;/code&gt;

Da die Werte als &lt;code&gt;object&lt;/code&gt; gespeichert werden, müssen Sie sie bei komplexeren Datentypen oft umwandeln (casten), was fehleranfällig sein kann.  
&lt;code&gt;@(ViewData["Produkt"] as Produkt).Name&lt;/code&gt;

=== '''2. ViewBag''' ===

&lt;code&gt;ViewBag&lt;/code&gt; ist ein dynamisches Objekt, das im Hintergrund &lt;code&gt;ViewData&lt;/code&gt; verwendet, aber eine einfachere Syntax bietet.

* '''Im Controller:''' &lt;code&gt;ViewBag.Titel = "Produktliste";&lt;/code&gt;
* '''In der View:''' &lt;code&gt;&amp;lt;h1&amp;gt;@ViewBag.Titel&amp;lt;/h1&amp;gt;&lt;/code&gt;

'''Vorteile von &lt;code&gt;ViewBag&lt;/code&gt;:'''
* Einfachere, sauberere Syntax (&lt;code&gt;ViewBag.Eigenschaft&lt;/code&gt;).
* Kein explizites Umwandeln (Casting) notwendig.

'''Nachteil beider Ansätze:''' Es gibt keine Überprüfung zur Kompilierzeit. Ein Tippfehler im Schlüssel (&lt;code&gt;ViewData["Titl"]&lt;/code&gt;) oder im Eigenschaftsnamen (&lt;code&gt;ViewBag.Titl&lt;/code&gt;) wird erst zur Laufzeit als Fehler bemerkt.

-----

== '''Lektion 5: Der Königsweg – Stark typisierte Views''' ==

Für robuste und wartbare Anwendungen ist die Verwendung von '''stark typisierten Views''' der empfohlene Standard. Eine stark typisierte View ist fest an eine bestimmte Modellklasse gebunden.

'''Und so funktioniert's:'''

# '''Im Controller:''' Sie erstellen eine Instanz Ihres Modells und übergeben diese direkt an die &lt;code&gt;View()&lt;/code&gt;-Methode.
&lt;syntaxhighlight lang="csharp"&gt;
public IActionResult Details(int id)
{
    Produkt meinProdukt = _db.Produkte.Find(id);
    return View(meinProdukt); // Übergabe des gesamten Objekts
}
&lt;/syntaxhighlight&gt;

# '''In der View:''' Sie deklarieren mit der &lt;code&gt;@model&lt;/code&gt;-Direktive, welchen Datentyp die View erwartet.
&lt;syntaxhighlight lang="csharp"&gt;
@model Projekt.Modelle.Produkt

&lt;h1&gt;@Model.Name&lt;/h1&gt;
&lt;p&gt;Preis: @Model.Preis.ToString("c")&lt;/p&gt;
&lt;p&gt;Beschreibung: @Model.Beschreibung&lt;/p&gt;
&lt;/syntaxhighlight&gt;

'''Die unschlagbaren Vorteile:'''
* '''IntelliSense:''' Der Editor kennt Ihr Modell und schlägt Ihnen die verfügbaren Eigenschaften vor.
* '''Kompilierzeit-Sicherheit:''' Tippfehler bei Eigenschaftsnamen (&lt;code&gt;@Model.Naem&lt;/code&gt;) führen zu einem Kompilierfehler und werden sofort entdeckt.
* '''Klarheit:''' Es ist sofort ersichtlich, welche Daten diese View für ihre Darstellung benötigt.

-----

== '''Lektion 6: Code organisieren und wiederverwenden''' ==

Für größere Projekte sind Struktur und Wiederverwendbarkeit entscheidend.

=== '''ViewImports.cshtml''' ===

Diese spezielle Datei im &lt;code&gt;Views&lt;/code&gt;-Ordner ist der perfekte Ort, um Namespaces zu importieren (&lt;code&gt;@using Projekt.Modelle&lt;/code&gt;) oder Tag Helper zu registrieren, die in vielen Views benötigt werden. Der Inhalt von &lt;code&gt;ViewImports.cshtml&lt;/code&gt; wird automatisch auf alle Views im selben Ordner und in Unterordnern angewendet.

=== '''Geteilte Views (Shared Views)''' ===

Views, die von mehreren Controllern verwendet werden (z. B. Layout-Dateien, Navigationsleisten, Fehlerseiten), sollten im Ordner &lt;code&gt;/Views/Shared&lt;/code&gt; abgelegt werden. Wenn ein Controller eine View anfordert, sucht das Framework zuerst im spezifischen Ordner des Controllers (&lt;code&gt;/Views/ControllerName&lt;/code&gt;) und danach im &lt;code&gt;/Views/Shared&lt;/code&gt;-Ordner.

=== '''Die View-Auflösung''' ===

Zusammenfassend sucht ASP.NET Core eine View &lt;code&gt;MeineView&lt;/code&gt; für den &lt;code&gt;HomeController&lt;/code&gt; in dieser Reihenfolge:
# &lt;code&gt;/Views/Home/MeineView.cshtml&lt;/code&gt;
# &lt;code&gt;/Views/Shared/MeineView.cshtml&lt;/code&gt;</text>
      <sha1>j3e06d2obhz8n8g5mzuahyw5q27yvxh</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:HTTP Code Übungen</title>
    <ns>3002</ns>
    <id>116</id>
    <revision>
      <id>419</id>
      <timestamp>2025-06-23T19:29:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Übungen zu HTTP-Protokoll und ASP.NET Core ==  === Übung 1: HTTP-Antwort beobachten im Browser === # Öffne deine Beispiel-Webseite in Chrome oder Firefox. # Aktiviere die Entwickler-Tools und wechsle zum Netzwerk-Tab (siehe §19.6 in LaunchCode) :contentReference[oaicite:1]{index=1}. # Lade die Seite neu und identifiziere: : * Eine GET‑Anfrage für das HTML-Dokument : * Eine GET‑Anfrage für eine CSS-Datei : * Eine GET‑Anfrage für ein Bild #…“</comment>
      <origin>419</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2914" sha1="eooowtc0pkx5v6lz5tz3yvhix2lo4n1" xml:space="preserve">== Übungen zu HTTP-Protokoll und ASP.NET Core ==

=== Übung 1: HTTP-Antwort beobachten im Browser ===
# Öffne deine Beispiel-Webseite in Chrome oder Firefox.
# Aktiviere die Entwickler-Tools und wechsle zum Netzwerk-Tab (siehe §19.6 in LaunchCode) :contentReference[oaicite:1]{index=1}.
# Lade die Seite neu und identifiziere:
: * Eine GET‑Anfrage für das HTML-Dokument
: * Eine GET‑Anfrage für eine CSS-Datei
: * Eine GET‑Anfrage für ein Bild
# Notiere für jede Anfrage:
: * Statuscode, z. B. 200 oder 404
: * Content-Type und Größe (Bytes)
# Experimentiere:
: * Ändere im HTML die URL einer CSS-Datei auf einen falschen Namen
: * Lade die Seite erneut und erkläre, wie sich das Verhalten ändert :contentReference[oaicite:2]{index=2}

=== Übung 2: HTTP‑Response‑Analyse ===
Analysiere diese Beispiel-Antwort:

&lt;pre&gt;
HTTP/1.1 404 Not Found
Date: Sat, 21 Jun 2025 20:38:53 +0000
Server: Apache/2.2.3 (CentOS)
Content-Length: 67365
Keep-Alive: timeout=37, max=95
Connection: Keep-alive
Content-Type: text/html
&lt;/pre&gt;

Beantworte:
# Welche HTTP-Version wird verwendet?
# Wurde der Inhalt erfolgreich gesendet?
# Wie groß ist das Dokument?
# Ist die Verbindung persistent?
# Welcher Medientyp wird zurückgesendet?
# Welche Server-Software und Version?
# Ändert sich der ETag bei neuen Ressourcenversionen?
(Lösungsvorlage siehe UMass-Quelle) :contentReference[oaicite:3]{index=3}

=== Übung 3: Minimal-HTTP‑Server mit ASP.NET Core ===
Erstelle eine minimalistische ASP.NET Core‑App (ohne MVC oder Razor), die:
* Auf GET-Anfragen an `/` antwortet mit: `Hello, World!`
* Angabe:
&lt;pre&gt;
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

app.Run(async context =&gt; {
    context.Response.Headers["Content-Type"] = "text/plain";
    await context.Response.WriteAsync("Hello, World!");
});

app.Run();
&lt;/pre&gt;

=== Übung 4: Antwort-Header anpassen ===
Erweitere Übung 3 so, dass:
* Ein eigener Header `X‑Powered‑By` mit Wert `MyServer` gesetzt wird.
* Der Content-Type auf `text/html` geändert wird und das HTML `&lt;h1&gt;Hallo Welt!&lt;/h1&gt;` zurückgeliefert wird.

=== Übung 5: HTTP‑Statuscodes dynamisch setzen ===
Erstelle eine Route `/status`, die anhand eines Query‑Parameters `code` den Status festlegt:

* Beispielaufruf: `/status?code=201`
* Dein Code:
&lt;pre&gt;
var code = int.Parse(context.Request.Query["code"]);
context.Response.StatusCode = code;
await context.Response.WriteAsync($"Status: {code}");
&lt;/pre&gt;

Teste mit verschiedenen Codes wie 200, 400, 404, 500.

=== Übung 6: GET‑Parameter auslesen ===
Baue eine Route `/hello`, die einen Query‑Parameter `name` erwartet:

* Beispiel: `/hello?name=Alice`
* Antwort: `&lt;p&gt;Hello, Alice!&lt;/p&gt;`
* Beispiel-Code:
&lt;pre&gt;
if (context.Request.Path == "/hello" &amp;&amp; context.Request.Method == "GET") {
  var name = context.Request.Query["name"];
  await context.Response.WriteAsync($"&lt;p&gt;Hello, {name}!&lt;/p&gt;");
}</text>
      <sha1>eooowtc0pkx5v6lz5tz3yvhix2lo4n1</sha1>
    </revision>
    <revision>
      <id>420</id>
      <parentid>419</parentid>
      <timestamp>2025-06-23T19:38:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>420</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5731" sha1="nto0det86hxyvdjb9lwbprrqolkdb78" xml:space="preserve">= HTTP-Protokoll (Hypertext Transfer Protocol) =

== Überblick ==
* HTTP ist ein zustandsloses Protokoll zur Übertragung von Hypertext (z. B. HTML) im Internet.
* Client-Server-Modell: Der Client (z. B. Browser) sendet Anfragen, der Server antwortet.
* Jede Anfrage ist unabhängig von vorherigen (stateless).

== Anfragemodell ==
* '''Client Request''': Der Client sendet eine HTTP-Anfrage.
* '''Server Response''': Der Server verarbeitet die Anfrage und antwortet mit Ressourcen oder Fehlermeldungen.

== HTTP-Server ==
'''Definition''': Software, die HTTP-Anfragen verarbeitet und Antworten liefert.

'''Beispiele''':
* Apache HTTP Server
* Nginx
* Microsoft IIS
* Kestrel (ASP.NET Core)

'''Kestrel''':
* Cross-Platform Webserver in ASP.NET Core
* Leichtgewichtig und leistungsfähig

== Ablauf von Anfrage und Antwort mit Kestrel ==
# Client sendet Anfrage
# Kestrel empfängt und leitet sie an Middleware weiter
# Middleware verarbeitet Anfrage
# Anwendung erzeugt Antwort
# Kestrel sendet Antwort zurück an den Client

== Browser &amp; HTTP ==
* Browser fordern HTML, CSS, JS, Bilder über HTTP an
* Klick auf Link → HTTP-Request → Server → Response → Darstellung im Browser

== HTTP-Anfragen in Chrome Dev Tools beobachten ==
* Öffnen: F12 oder Ctrl+Shift+I (Cmd+Option+I auf Mac)
* Reiter „Network“ → Details zu:
** Headers
** Response
** Timing

== Aufbau einer HTTP-Antwort ==
'''Format''':
 HTTP/1.1 200 OK
 Content-Type: text/html
 Content-Length: 137

 &lt;html&gt;
 &lt;body&gt;
 &lt;h1&gt;Hello, World!&lt;/h1&gt;
 &lt;/body&gt;
 &lt;/html&gt;

'''Wichtige Header''':
* Content-Type: Typ der Ressource (z. B. text/html)
* Content-Length: Größe der Antwort
* Server: Infos zum Server
* Set-Cookie: Setzt Cookies im Client
* Cache-Control: Caching-Strategie

== Kestrel Standard-Header ==
* Content-Type: z. B. text/html, application/json
* Server: „Kestrel“
* Date: Zeitstempel der Antwort

== HTTP-Statuscodes ==
=== Kategorien ===
* '''1xx''': Information
* '''2xx''': Erfolg
* '''3xx''': Weiterleitung
* '''4xx''': Clientfehler
* '''5xx''': Serverfehler

=== Gängige Codes ===
* 200 OK
* 201 Created
* 204 No Content
* 400 Bad Request
* 401 Unauthorized
* 403 Forbidden
* 404 Not Found
* 500 Internal Server Error
* 503 Service Unavailable

== ASP.NET Core Codebeispiele ==
=== Beispiel 1: Antwort-Header setzen ===
&lt;syntaxhighlight lang="csharp"&gt;
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

app.Run(async (HttpContext context) =&gt;
{
    context.Response.Headers["MyKey"] = "my value";
    context.Response.Headers["Server"] = "My server";
    context.Response.Headers["Content-Type"] = "text/html";
    await context.Response.WriteAsync("&lt;h1&gt;Hello&lt;/h1&gt;");
    await context.Response.WriteAsync("&lt;h2&gt;World&lt;/h2&gt;");
});

app.Run();
&lt;/syntaxhighlight&gt;

=== Beispiel 2: Statuscode setzen ===
&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (HttpContext context) =&gt;
{
    context.Response.StatusCode = 200;
    await context.Response.WriteAsync("Hello");
    await context.Response.WriteAsync(" World");
});
&lt;/syntaxhighlight&gt;

== HTTP-Request-Aufbau ==
* '''Startzeile''': Methode, URI, HTTP-Version
* '''Header''': z. B. User-Agent, Accept, Authorization
* '''Leerzeile'''
* '''Body (optional)''': z. B. JSON, Formulardaten

=== Beispiel: GET-Anfrage ===
 GET /products?category=electronics&amp;brand=apple HTTP/1.1
 Host: example.com

=== Beispiel: POST-Anfrage ===
 POST /login HTTP/1.1
 Host: example.com
 Content-Type: application/x-www-form-urlencoded

 username=john&amp;password=secret

== Query Strings ==
* Parameter in URL übergeben
* Beispiel: 
 https://example.com/products?category=electronics&amp;brand=apple

== Zugriff auf Request-Details in ASP.NET Core ==
=== Beispiel: Pfad und Methode auslesen ===
&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (HttpContext context) =&gt;
{
    string path = context.Request.Path;
    string method = context.Request.Method;
    context.Response.Headers["Content-type"] = "text/html";
    await context.Response.WriteAsync($"&lt;p&gt;{path}&lt;/p&gt;");
    await context.Response.WriteAsync($"&lt;p&gt;{method}&lt;/p&gt;");
});
&lt;/syntaxhighlight&gt;

=== Beispiel: Query-Parameter auslesen ===
&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (HttpContext context) =&gt;
{
    if (context.Request.Method == "GET" &amp;&amp;
        context.Request.Query.ContainsKey("id"))
    {
        string id = context.Request.Query["id"];
        await context.Response.WriteAsync($"&lt;p&gt;ID: {id}&lt;/p&gt;");
    }
});
&lt;/syntaxhighlight&gt;

=== Beispiel: User-Agent anzeigen ===
&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (HttpContext context) =&gt;
{
    if (context.Request.Headers.ContainsKey("User-Agent"))
    {
        string agent = context.Request.Headers["User-Agent"];
        await context.Response.WriteAsync($"&lt;p&gt;{agent}&lt;/p&gt;");
    }
});
&lt;/syntaxhighlight&gt;

== HTTP-Methoden ==
* '''GET''': Daten abfragen, sichtbar in URL, cachebar, sicher
* '''POST''': Daten senden (z. B. Formulare), im Body, nicht idempotent

== GET vs POST ==
'''GET''':
* Daten in URL
* cachebar, idempotent
* nicht für sensible Daten

'''POST''':
* Daten im Body
* sicherer für Passwörter
* nicht idempotent

== Tool: Postman ==
'''Verwendung''':
* HTTP-Requests (GET, POST, usw.) erstellen
* Header &amp; Body anpassen
* Antwort inspizieren: Statuscode, Header, Body

'''Ablauf''':
# Öffnen → Neue Anfrage
# Methode + URL eingeben (z. B. https://localhost:7070/api/products)
# Optional: Header / Body hinzufügen
# "Send" klicken → Antwort wird unten angezeigt

== Zusammenfassung ==
* HTTP = Grundlage der Webkommunikation
* Zustandslos, Anfrage-Antwort-Modell
* Statuscodes geben Antwortstatus an
* ASP.NET Core erlaubt präzise Steuerung von Anfragen &amp; Antworten
* Tools wie Postman helfen beim Testen von APIs</text>
      <sha1>nto0det86hxyvdjb9lwbprrqolkdb78</sha1>
    </revision>
    <revision>
      <id>421</id>
      <parentid>420</parentid>
      <timestamp>2025-06-23T21:19:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>421</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2188" sha1="okyw21m7o2x8dazjl4cl678n1z2n6yb" xml:space="preserve">== HTTP Spickzettel (MediaWiki) ==

=== HTTP-Protokoll – Übersicht ===
* HTTP (Hypertext Transfer Protocol) ist ein zustandsloses Protokoll ...
...

=== Übung: Statuscode und Header setzen ===
&lt;pre&gt;
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

app.Run(async (HttpContext context) =&gt;
{
    context.Response.StatusCode = 200;
    context.Response.Headers["Content-Type"] = "text/html";
    await context.Response.WriteAsync("&amp;lt;h1&amp;gt;Übung erfolgreich&amp;lt;/h1&amp;gt;");
});

app.Run();
&lt;/pre&gt;
'''Ziel:''' Einen eigenen HTTP-Header setzen und eine HTML-Antwort senden.

=== Übung: Abfrage von Query-Parametern ===
&lt;pre&gt;
app.Run(async (HttpContext context) =&gt;
{
    if (context.Request.Method == "GET" &amp;&amp; context.Request.Query.ContainsKey("name"))
    {
        string name = context.Request.Query["name"];
        await context.Response.WriteAsync($"&amp;lt;p&amp;gt;Hallo {name}!&amp;lt;/p&amp;gt;");
    }
    else
    {
        await context.Response.WriteAsync("&amp;lt;p&amp;gt;Bitte gib einen Namen per Query an (z.B. ?name=Max)&amp;lt;/p&amp;gt;");
    }
});
&lt;/pre&gt;
'''Ziel:''' Umgang mit Query-Strings (z. B. ?name=Max) trainieren.

=== Übung: User-Agent anzeigen ===
&lt;pre&gt;
app.Run(async (HttpContext context) =&gt;
{
    string agent = context.Request.Headers["User-Agent"];
    await context.Response.WriteAsync($"&amp;lt;p&amp;gt;Dein Browser: {agent}&amp;lt;/p&amp;gt;");
});
&lt;/pre&gt;
'''Ziel:''' HTTP-Header auslesen und anzeigen.

=== Übung: HTTP-Request analysieren ===
&lt;pre&gt;
app.Run(async (HttpContext context) =&gt;
{
    var path = context.Request.Path;
    var method = context.Request.Method;
    await context.Response.WriteAsync($"&amp;lt;p&amp;gt;Pfad: {path}&amp;lt;/p&amp;gt;");
    await context.Response.WriteAsync($"&amp;lt;p&amp;gt;Methode: {method}&amp;lt;/p&amp;gt;");
});
&lt;/pre&gt;
'''Ziel:''' Grundlagen zu Methode und Pfad aus Requests üben.

=== Übung: GET vs. POST Test mit Postman ===
'''Anleitung:'''
# Starte deine ASP.NET Core App lokal.
# Öffne Postman.
# Sende GET- und POST-Anfragen an http://localhost:7070 mit passenden Inhalten.
# Beobachte Verhalten bei:
  * GET mit Query
  * POST mit Body (JSON oder Form-Daten)

'''Ziel:''' Unterschiede zwischen GET- und POST-Anfragen erfahren und testen.</text>
      <sha1>okyw21m7o2x8dazjl4cl678n1z2n6yb</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Tägich Middleware Übungen</title>
    <ns>3002</ns>
    <id>117</id>
    <revision>
      <id>422</id>
      <timestamp>2025-06-23T20:52:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Übungen: Middleware in ASP.NET Core =  == Übung 1: Middleware-Kette nachvollziehen == '''Ziel:''' Verstehe die Reihenfolge und das Verhalten von Middleware-Komponenten.  === Aufgabe === Gegeben sei folgender Code:  &lt;syntaxhighlight lang="csharp"&gt; app.Use(async (context, next) =&gt; {     await context.Response.WriteAsync("1. Middleware beginnt\n");     await next(context);     await context.Response.WriteAsync("1. Middleware endet\n"); });  app.Use(async…“</comment>
      <origin>422</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3662" sha1="3e0xxwa9ftwmi66p4ng96ywjmuajppt" xml:space="preserve">= Übungen: Middleware in ASP.NET Core =

== Übung 1: Middleware-Kette nachvollziehen ==
'''Ziel:''' Verstehe die Reihenfolge und das Verhalten von Middleware-Komponenten.

=== Aufgabe ===
Gegeben sei folgender Code:

&lt;syntaxhighlight lang="csharp"&gt;
app.Use(async (context, next) =&gt; {
    await context.Response.WriteAsync("1. Middleware beginnt\n");
    await next(context);
    await context.Response.WriteAsync("1. Middleware endet\n");
});

app.Use(async (context, next) =&gt; {
    await context.Response.WriteAsync("2. Middleware beginnt\n");
    await next(context);
    await context.Response.WriteAsync("2. Middleware endet\n");
});

app.Run(async (context) =&gt; {
    await context.Response.WriteAsync("Terminal Middleware\n");
});
&lt;/syntaxhighlight&gt;

=== Fragen ===
# In welcher Reihenfolge werden die Ausgaben im Browser angezeigt?
# Was passiert, wenn `next(context)` in einer der Middleware-Komponenten weggelassen wird?

== Übung 2: Unterschied zwischen app.Use und app.Run ==
'''Ziel:''' Verstehe den Unterschied zwischen app.Use und app.Run.

=== Aufgabe ===
Ändere folgenden Code so, dass beide app.Run-Aufrufe tatsächlich ausgeführt werden:

&lt;syntaxhighlight lang="csharp"&gt;
app.Run(async (context) =&gt; {
    await context.Response.WriteAsync("Run 1\n");
});

app.Run(async (context) =&gt; {
    await context.Response.WriteAsync("Run 2\n");
});
&lt;/syntaxhighlight&gt;

=== Hinweis ===
Diskutiere: Warum funktioniert das so nicht? Wie müsste man stattdessen app.Use verwenden?

== Übung 3: Eigene Middleware schreiben (konventionell) ==
'''Ziel:''' Eigene Middleware als Klasse schreiben.

=== Aufgabe ===
Erstelle eine Middleware-Klasse, die überprüft, ob ein Query-Parameter namens ''user'' existiert. Wenn ja, gib „Hello, {user}“ zurück. Falls nicht, rufe die nächste Middleware auf.

=== Schritte ===
# Erstelle eine Klasse `GreetingMiddleware` mit einem Konstruktor für `RequestDelegate`.
# Implementiere eine `Invoke`-Methode.
# Erstelle eine Erweiterungsmethode zur Registrierung.
# Binde die Middleware im Pipeline-Setup ein.

== Übung 4: UseWhen einsetzen ==
'''Ziel:''' Conditional Middleware mit UseWhen.

=== Aufgabe ===
Verwende `UseWhen`, um nur dann Logging-Middleware zu aktivieren, wenn die URL ein bestimmtes Query-Flag enthält (z.B. `?debug=true`).

=== Beispielcode-Gerüst ===
&lt;syntaxhighlight lang="csharp"&gt;
app.UseWhen(
    context =&gt; context.Request.Query.ContainsKey("debug"),
    app =&gt; {
        app.Use(async (context, next) =&gt; {
            Console.WriteLine("Debug aktiviert");
            await next();
        });
    });
&lt;/syntaxhighlight&gt;

== Übung 5: Reihenfolge der Middleware reflektieren ==
'''Ziel:''' Die Bedeutung der Middleware-Reihenfolge verstehen.

=== Aufgabe ===
Ordne folgende Middleware-Komponenten in die logische, empfohlene Reihenfolge:

# UseStaticFiles
# UseRouting
# UseAuthorization
# UseHttpsRedirection
# UseAuthentication
# UseDeveloperExceptionPage

=== Bonus-Frage ===
Warum ist `UseExceptionHandler`/`UseDeveloperExceptionPage` ganz vorne in der Reihenfolge wichtig?

== Bonus-Übung: Short-Circuiting verstehen ==
'''Ziel:''' Verhalten bei Abbruch der Pipeline (short-circuit) analysieren.

=== Aufgabe ===
Füge eine Middleware hinzu, die bei einem bestimmten Pfad (z. B. `/blocked`) die Anfrage sofort beantwortet mit "Zugriff verweigert", ohne den weiteren Verlauf der Pipeline aufzurufen.

&lt;syntaxhighlight lang="csharp"&gt;
app.Use(async (context, next) =&gt; {
    if (context.Request.Path == "/blocked")
    {
        await context.Response.WriteAsync("Zugriff verweigert");
        return; // Pipeline wird hier abgebrochen
    }

    await next();
});
&lt;/syntaxhighlight&gt;</text>
      <sha1>3e0xxwa9ftwmi66p4ng96ywjmuajppt</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Routing Übungen</title>
    <ns>3002</ns>
    <id>118</id>
    <revision>
      <id>423</id>
      <timestamp>2025-06-24T04:41:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Moderne MapGet-Syntax (.NET 6+) ==  &lt;syntaxhighlight lang="csharp"&gt; // Minimal-API: Endpunkte direkt am app-Objekt definieren var builder = WebApplication.CreateBuilder(args); var app = builder.Build();  // GET-Endpoint für /hello app.MapGet("/hello", () =&gt; "Hallo Welt!");  // GET-Endpoint mit Parameter app.MapGet("/user/{name}", (string name) =&gt; $"Hallo, {name}!");  // GET-Endpoint mit mehreren Parametern app.MapGet("/add/{a:int}/{b:int}", (int a, in…“</comment>
      <origin>423</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1516" sha1="07whomf5tgo8k3lafngz8t15h2r6783" xml:space="preserve">== Moderne MapGet-Syntax (.NET 6+) ==

&lt;syntaxhighlight lang="csharp"&gt;
// Minimal-API: Endpunkte direkt am app-Objekt definieren
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

// GET-Endpoint für /hello
app.MapGet("/hello", () =&gt; "Hallo Welt!");

// GET-Endpoint mit Parameter
app.MapGet("/user/{name}", (string name) =&gt; $"Hallo, {name}!");

// GET-Endpoint mit mehreren Parametern
app.MapGet("/add/{a:int}/{b:int}", (int a, int b) =&gt; $"Summe: {a + b}");

// POST-Endpoint (als Vergleich)
app.MapPost("/echo", async (HttpContext ctx) =&gt;
{
    using var reader = new StreamReader(ctx.Request.Body);
    var body = await reader.ReadToEndAsync();
    return Results.Text($"Empfangen: {body}");
});

app.Run();
&lt;/syntaxhighlight&gt;

'''Kommentar''':  
* Kein explizites &lt;code&gt;UseRouting&lt;/code&gt; und &lt;code&gt;UseEndpoints&lt;/code&gt; nötig!
* Routen-Parameter werden direkt als Methodenparameter übergeben (z.B. &lt;code&gt;(string name)&lt;/code&gt;).
* Typen (int, string, etc.) dienen als Constraints.
* Für komplexe Logik kann auch ein Lambda mit &lt;code&gt;HttpContext&lt;/code&gt; verwendet werden.

'''Übung''':  
1. Schreibe einen neuen Endpoint &lt;code&gt;/greet/{vorname}/{nachname}&lt;/code&gt;, der &lt;code&gt;Hallo, Vorname Nachname!&lt;/code&gt; zurückgibt.
2. Ergänze einen Endpoint, der das aktuelle Datum unter &lt;code&gt;/now&lt;/code&gt; ausgibt.

----

= Vorteile der modernen Form =
* Kürzer, lesbarer, weniger Boilerplate.
* Ideal für kleine APIs und Lernprojekte.
* Alle Constraints, Parameter etc. funktionieren wie gewohnt.</text>
      <sha1>07whomf5tgo8k3lafngz8t15h2r6783</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Controllers Übungen</title>
    <ns>3002</ns>
    <id>119</id>
    <revision>
      <id>424</id>
      <timestamp>2025-06-24T04:43:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC: Controller &amp; Action Methods – Code-Spickzettel =  == 1. Einfacher Controller mit Action Methods == &lt;syntaxhighlight lang="csharp"&gt; // HomeController.cs namespace MyApp.Controllers {     [Controller]     public class HomeController : Controller     {         [Route("home")]         [Route("/")]         public string Index()         {             return "Hello from Index";         }          [Route("about")]         public string About…“</comment>
      <origin>424</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3798" sha1="cwlwjy2kb05glmdhnl79p8t97ugveih" xml:space="preserve">= ASP.NET Core MVC: Controller &amp; Action Methods – Code-Spickzettel =

== 1. Einfacher Controller mit Action Methods ==
&lt;syntaxhighlight lang="csharp"&gt;
// HomeController.cs
namespace MyApp.Controllers
{
    [Controller]
    public class HomeController : Controller
    {
        [Route("home")]
        [Route("/")]
        public string Index()
        {
            return "Hello from Index";
        }

        [Route("about")]
        public string About()
        {
            return "Hello from About";
        }

        [Route("contact-us/{mobile:regex(^\\d{10}$)}")]
        public string Contact(string mobile)
        {
            return $"Contact: {mobile}";
        }
    }
}
&lt;/syntaxhighlight&gt;

== 2. ContentResult: Rohdaten zurückgeben ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("rawtext")]
public ContentResult RawText()
{
    return Content("Nur Text!", "text/plain");
}

[Route("html")]
public ContentResult HtmlExample()
{
    return Content("&lt;h2&gt;Hallo als HTML&lt;/h2&gt;", "text/html");
}
&lt;/syntaxhighlight&gt;

== 3. JsonResult: JSON zurückgeben ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("person")]
public JsonResult Person()
{
    var person = new { Id = 1, Name = "Anna", Age = 23 };
    return Json(person); // Content-Type: application/json
}
&lt;/syntaxhighlight&gt;

== 4. File Results: Dateien bereitstellen ==
&lt;syntaxhighlight lang="csharp"&gt;
// Aus wwwroot (z.B. /wwwroot/sample.pdf)
[Route("file-download")]
public VirtualFileResult Download1()
{
    return File("/sample.pdf", "application/pdf");
}

// Von Festplatte (Vorsicht bei Pfaden!)
[Route("file-download2")]
public PhysicalFileResult Download2()
{
    return PhysicalFile(@"c:\files\sample.pdf", "application/pdf");
}

// Aus Speicher (byte[])
[Route("file-download3")]
public FileContentResult Download3()
{
    byte[] data = System.IO.File.ReadAllBytes(@"c:\files\sample.pdf");
    return File(data, "application/pdf");
}
&lt;/syntaxhighlight&gt;

== 5. IActionResult: Verschiedene Rückgaben möglich ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("validate")]
public IActionResult Validate(int bookid = 0)
{
    if (bookid &lt;= 0)
        return BadRequest("Book id ungültig");
    if (bookid &gt; 1000)
        return NotFound("Book id zu groß");
    return File("/sample.pdf", "application/pdf");
}
&lt;/syntaxhighlight&gt;

== 6. Status Code Results ==
&lt;syntaxhighlight lang="csharp"&gt;
// 400 Bad Request
return BadRequest("Fehlerhafte Anfrage!");

// 404 Not Found
return NotFound("Nicht gefunden!");

// 401 Unauthorized
return Unauthorized();

// Beliebiger Code
return StatusCode(418, "Ich bin eine Teekanne"); // RFC Joke ;-)
&lt;/syntaxhighlight&gt;

== 7. Redirects ==
&lt;syntaxhighlight lang="csharp"&gt;
// Zu einer URL
return Redirect("/home");

// Zu einer Action im gleichen Controller
return RedirectToAction("About");

// Zu einer Action in anderem Controller
return RedirectToAction("Details", "Books", new { id = 42 });

// Nur lokal (Schutz gegen Open Redirects)
return LocalRedirect("/safe-page");

// Permanent
return RedirectPermanent("/neue-seite");
&lt;/syntaxhighlight&gt;

== 8. Übungen ==
* Schreibe einen Controller namens `ProductController` mit Action Methods:
** `List()` → gibt einen Text "Alle Produkte" zurück
** `Details(int id)` → gibt JSON zurück: { "id": id, "name": "Produktname" }
** `DownloadManual()` → gibt eine Datei aus wwwroot zurück
* Baue Routing mit [Route] Attributen ein.
* Füge eine Action hinzu, die einen 404-Status zurückgibt, falls die id &gt; 100 ist.

== 9. Wichtige Interview-Stichworte ==
* Controller: Endet immer auf *Controller*
* Action-Methoden: public, beliebiger Name
* Rückgabewerte: ContentResult, JsonResult, FileResult, IActionResult, RedirectResult usw.
* Attribute Routing: [Route], [HttpGet], [HttpPost], ...
* Statuscodes: 200, 400, 401, 404 etc. per Helper-Methoden</text>
      <sha1>cwlwjy2kb05glmdhnl79p8t97ugveih</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Model Binding Übungen</title>
    <ns>3002</ns>
    <id>120</id>
    <revision>
      <id>425</id>
      <timestamp>2025-06-24T04:54:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Model Binding &amp; Validation – ASP.NET Core MVC (Spickzettel) =  == Standard-Model-Binding (Query, Route, Form) ==  &lt;syntaxhighlight lang="csharp"&gt; // Route mit optionalen Parametern (aus Query oder Route gebunden) [Route("buchladen/{buchid?}/{eingeloggt?}")] public IActionResult Index(int? buchid, bool? eingeloggt) {     return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}", "text/plain"); }  // Route mit festem (required) Parameter (aus Route…“</comment>
      <origin>425</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5909" sha1="ajmqa1hzrm2ax7jopx4d279z7v6mffg" xml:space="preserve">= Model Binding &amp; Validation – ASP.NET Core MVC (Spickzettel) =

== Standard-Model-Binding (Query, Route, Form) ==

&lt;syntaxhighlight lang="csharp"&gt;
// Route mit optionalen Parametern (aus Query oder Route gebunden)
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index(int? buchid, bool? eingeloggt)
{
    return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}", "text/plain");
}

// Route mit festem (required) Parameter (aus Route gebunden)
[Route("shop/buecher/{id}")]
public IActionResult Buch()
{
    int id = Convert.ToInt32(Request.RouteValues["id"]);
    return Content($"&lt;h1&gt;Buch-Shop {id}&lt;/h1&gt;", "text/html");
}
&lt;/syntaxhighlight&gt;

== [FromQuery] und [FromRoute] verwenden ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index([FromQuery] int? buchid, [FromRoute] bool? eingeloggt)
{
    // Explizites Binding: buchid nur aus Query, eingeloggt nur aus Route
    return Content($"Buch-ID: {buchid}, Eingeloggt: {eingeloggt}");
}
&lt;/syntaxhighlight&gt;

== Model Binding mit Modelklassen ==

&lt;syntaxhighlight lang="csharp"&gt;
// Modelklasse
public class Buch
{
    public int? BuchId { get; set; }
    public string? Autor { get; set; }
    public override string ToString() =&gt; $"Buch: {BuchId}, Autor: {Autor}";
}

// Controller
[Route("buchladen/{buchid?}/{eingeloggt?}")]
public IActionResult Index([FromQuery] int? buchid, [FromRoute] bool? eingeloggt, Buch buch)
{
    return Content($"Buch-ID: {buchid}, Buch: {buch}", "text/plain");
}
&lt;/syntaxhighlight&gt;

== Model Validation mit DataAnnotations ==

&lt;syntaxhighlight lang="csharp"&gt;
using System.ComponentModel.DataAnnotations;

public class Person
{
    [Required(ErrorMessage = "{0} darf nicht leer sein")]
    public string? Name { get; set; }

    [EmailAddress]
    public string? Email { get; set; }

    [Compare("Passwort", ErrorMessage = "Passwörter stimmen nicht überein")]
    public string? PasswortBestätigung { get; set; }
}

// Controller
public IActionResult Erstellen(Person person)
{
    if (!ModelState.IsValid)
        return View(person);
    // Speicherung etc.
}
&lt;/syntaxhighlight&gt;

== Custom Validation Attribute Beispiel ==

&lt;syntaxhighlight lang="csharp"&gt;
// Validator: ToDate &gt;= FromDate
public class DatumsbereichValidatorAttribute : ValidationAttribute
{
    public string VonProperty { get; }
    public DatumsbereichValidatorAttribute(string vonProperty) =&gt; VonProperty = vonProperty;
    protected override ValidationResult? IsValid(object? value, ValidationContext context)
    {
        if (value is DateTime toDate)
        {
            var fromProp = context.ObjectType.GetProperty(VonProperty);
            if (fromProp?.GetValue(context.ObjectInstance) is DateTime fromDate &amp;&amp; fromDate &gt; toDate)
                return new ValidationResult(ErrorMessage, new[] { VonProperty, context.MemberName! });
        }
        return ValidationResult.Success;
    }
}
&lt;/syntaxhighlight&gt;

== Model-Level Validation mit IValidatableObject ==

&lt;syntaxhighlight lang="csharp"&gt;
public class Person : IValidatableObject
{
    public DateTime? Geburtsdatum { get; set; }
    public int? Alter { get; set; }

    public IEnumerable&lt;ValidationResult&gt; Validate(ValidationContext context)
    {
        if (!Geburtsdatum.HasValue &amp;&amp; !Alter.HasValue)
            yield return new ValidationResult("Geburtsdatum ODER Alter muss angegeben werden", new[] { nameof(Alter) });
    }
}
&lt;/syntaxhighlight&gt;

== [Bind] und [BindNever] Attribute ==

&lt;syntaxhighlight lang="csharp"&gt;
// Nur bestimmte Felder binden
[HttpPost]
public IActionResult Erstellen([Bind("Titel", "Beschreibung")] Produkt produkt) { ... }

// Niemals aus Request binden
public class Produkt
{
    [BindNever]
    public DateTime ErstelltAm { get; set; }
}
&lt;/syntaxhighlight&gt;

== [FromBody]: JSON/XML Body-Parameter binden ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("registrieren")]
public IActionResult Index([FromBody] Person person)
{
    if (!ModelState.IsValid) { ... }
    return Content($"{person}");
}
&lt;/syntaxhighlight&gt;

== Collection Binding (Listen/Arrays binden) ==

&lt;syntaxhighlight lang="csharp"&gt;
public class Person
{
    public List&lt;string?&gt; Interessen { get; set; } = new();
}

// JSON: { "Name": "Anna", "Interessen": ["Musik", "Lesen", "Coding"] }
public IActionResult Index(Person person)
{
    return Content($"Person: {person.Name}, Interessen: {string.Join(",", person.Interessen)}");
}
&lt;/syntaxhighlight&gt;

== [FromHeader]: Parameter aus HTTP-Header ==

&lt;syntaxhighlight lang="csharp"&gt;
[Route("registrieren")]
public IActionResult Index(Person person, [FromHeader(Name = "User-Agent")] string userAgent)
{
    return Content($"{person}, {userAgent}");
}
&lt;/syntaxhighlight&gt;

== Input Formatters registrieren (z.B. XML) ==

&lt;syntaxhighlight lang="csharp"&gt;
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddControllers().AddXmlSerializerFormatters();
&lt;/syntaxhighlight&gt;

== Custom Model Binder registrieren ==

&lt;syntaxhighlight lang="csharp"&gt;
// Custom Binder implementieren
public class PersonModelBinder : IModelBinder { ... }

// BinderProvider registrieren (Startup/Program.cs)
builder.Services.AddControllers(options =&gt; {
    options.ModelBinderProviders.Insert(0, new PersonBinderProvider());
});
&lt;/syntaxhighlight&gt;

----

= Übungen / Mini-Aufgaben =

* Schreibe eine Controller-Methode, die einen Parameter aus der Query und einen aus der Route bindet.
* Erstelle ein Model mit mindestens drei Properties und validiere sie mit DataAnnotations.
* Schreibe ein Custom ValidationAttribute, das prüft, ob ein Datum in der Zukunft liegt.
* Nutze [FromBody], um ein komplettes Model aus JSON im Request-Body zu binden.
* Verwende [BindNever], um eine Eigenschaft vor Overposting zu schützen.
* Binde eine Liste von Strings im Model und fülle sie über ein Array im Request.
* Hole den User-Agent per [FromHeader] und gib ihn in der Response aus.</text>
      <sha1>ajmqa1hzrm2ax7jopx4d279z7v6mffg</sha1>
    </revision>
  </page>
  <page>
    <title>Schwachstellen:Hauptseite</title>
    <ns>3006</ns>
    <id>121</id>
    <revision>
      <id>426</id>
      <timestamp>2025-06-24T14:51:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Schwachstellen==“</comment>
      <origin>426</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="18" sha1="7c4wphqe7qh1l2drd6by4541vv2nzh8" xml:space="preserve">==Schwachstellen==</text>
      <sha1>7c4wphqe7qh1l2drd6by4541vv2nzh8</sha1>
    </revision>
    <revision>
      <id>427</id>
      <parentid>426</parentid>
      <timestamp>2025-06-24T15:18:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>427</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1475" sha1="sasm0pgwqhwgra8q3ztbnqv6wruvhfx" xml:space="preserve">==Schwachstellen==
===Sprachmodell===
* [https://airiskdatabase.com AI Risk Database] – Eine Datenbank mit Risiken und Schwachstellen im Bereich Künstliche Intelligenz.
* [https://github.com/advisories GitHub CVE &amp; Security Advisories] – Offizielle Sicherheitswarnungen und CVE-Meldungen von GitHub für Open-Source-Projekte.
* [https://cve.mitre.org/ MITRE CVE Database] – Zentrale Datenbank für öffentlich bekannte Schwachstellen (Common Vulnerabilities and Exposures, CVE).
* [https://nvd.nist.gov/ National Vulnerability Database (NVD)] – Die US-amerikanische nationale Datenbank für Schwachstellen, gepflegt vom NIST.
* [https://www.cvedetails.com/ CVE Details] – Eine benutzerfreundliche Übersicht und Analyse von CVE-Einträgen.
* [https://www.exploit-db.com/ Exploit Database] – Sammlung von Exploits und Proof-of-Concept-Code für bekannte Schwachstellen.
* [https://www.securityfocus.com/vulnerabilities SecurityFocus Vulnerability Database] – Archiv von Schwachstellen und Sicherheitsmeldungen.
* [https://www.openwall.com/lists/oss-security/ Open Source Security (oss-security)] – Mailingliste und Archiv zu Schwachstellen in Open-Source-Software.
* [https://vuldb.com VulDB] – Community-basierte Schwachstellendatenbank mit aktuellen Informationen und Analysen.
* [https://www.zerodayinitiative.com/advisories/published/ Zero Day Initiative Advisories] – Veröffentlichte Schwachstellen und Exploits aus dem Zero Day Initiative Programm.</text>
      <sha1>sasm0pgwqhwgra8q3ztbnqv6wruvhfx</sha1>
    </revision>
    <revision>
      <id>428</id>
      <parentid>427</parentid>
      <timestamp>2025-06-24T15:20:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>428</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1332" sha1="18gphefdoejs4sxkm41g05ymzhx5gud" xml:space="preserve">==Schwachstellen==
===Sprachmodell===
* [https://airiskdatabase.com AI Risk Database] – Eine Datenbank mit Risiken und Schwachstellen im Bereich Künstliche Intelligenz.
* [https://github.com/advisories GitHub CVE &amp; Security Advisories] – Offizielle Sicherheitswarnungen und CVE-Meldungen von GitHub für Open-Source-Projekte.
* [https://cve.mitre.org/ MITRE CVE Database] – Zentrale Datenbank für öffentlich bekannte Schwachstellen (Common Vulnerabilities and Exposures, CVE).
* [https://nvd.nist.gov/ National Vulnerability Database (NVD)] – Die US-amerikanische nationale Datenbank für Schwachstellen, gepflegt vom NIST.
* [https://www.cvedetails.com/ CVE Details] – Eine benutzerfreundliche Übersicht und Analyse von CVE-Einträgen.
* [https://www.exploit-db.com/ Exploit Database] – Sammlung von Exploits und Proof-of-Concept-Code für bekannte Schwachstellen.
* [https://www.openwall.com/lists/oss-security/ Open Source Security (oss-security)] – Mailingliste und Archiv zu Schwachstellen in Open-Source-Software.
* [https://vuldb.com VulDB] – Community-basierte Schwachstellendatenbank mit aktuellen Informationen und Analysen.
* [https://www.zerodayinitiative.com/advisories/published/ Zero Day Initiative Advisories] – Veröffentlichte Schwachstellen und Exploits aus dem Zero Day Initiative Programm.</text>
      <sha1>18gphefdoejs4sxkm41g05ymzhx5gud</sha1>
    </revision>
    <revision>
      <id>429</id>
      <parentid>428</parentid>
      <timestamp>2025-06-24T15:34:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>429</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2120" sha1="mog6c3vm86nht83mv2cxeg81crvey59" xml:space="preserve">==Schwachstellen==
===Sprachmodell===
* [https://airiskdatabase.com AI Risk Database] – Eine Datenbank mit Risiken und Schwachstellen im Bereich Künstliche Intelligenz.
* [https://github.com/advisories GitHub CVE &amp; Security Advisories] – Offizielle Sicherheitswarnungen und CVE-Meldungen von GitHub für Open-Source-Projekte.
* [https://cve.mitre.org/ MITRE CVE Database] – Zentrale Datenbank für öffentlich bekannte Schwachstellen (Common Vulnerabilities and Exposures, CVE).
* [https://nvd.nist.gov/ National Vulnerability Database (NVD)] – Die US-amerikanische nationale Datenbank für Schwachstellen, gepflegt vom NIST.
* [https://www.cvedetails.com/ CVE Details] – Eine benutzerfreundliche Übersicht und Analyse von CVE-Einträgen.
* [https://www.exploit-db.com/ Exploit Database] – Sammlung von Exploits und Proof-of-Concept-Code für bekannte Schwachstellen.
* [https://www.openwall.com/lists/oss-security/ Open Source Security (oss-security)] – Mailingliste und Archiv zu Schwachstellen in Open-Source-Software.
* [https://vuldb.com VulDB] – Community-basierte Schwachstellendatenbank mit aktuellen Informationen und Analysen.
* [https://www.zerodayinitiative.com/advisories/published/ Zero Day Initiative Advisories] – Veröffentlichte Schwachstellen und Exploits aus dem Zero Day Initiative Programm.
==Allgemein==
* [https://deps.dev/ Deps.dev] ist ein Tool, das die Abhängigkeiten von Open-Source-Projekten analysiert und Schwachstellen in den Abhängigkeiten identifiziert. Es ist ein kostenloser Dienst, der von GitHub bereitgestellt wird.
* [https://security.snyk.io/ Snyk] ist ein weiteres Tool, das Schwachstellen in Open-Source-Abhängigkeiten identifiziert und Entwicklern hilft, diese zu beheben. Es bietet auch Funktionen zur Überwachung von Sicherheitslücken in Abhängigkeiten im laufenden Betrieb.
* [https://osv.dev/ OSV (Open Source Vulnerabilities)] ist ein Tool, das Schwachstellen in Open-Source-Software identifiziert und Entwicklern hilft, diese zu beheben. Es bietet auch Funktionen zur Überwachung von Sicherheitslücken in Abhängigkeiten im laufenden Betrieb.</text>
      <sha1>mog6c3vm86nht83mv2cxeg81crvey59</sha1>
    </revision>
  </page>
  <page>
    <title>Ai:Hauptseite</title>
    <ns>3004</ns>
    <id>122</id>
    <revision>
      <id>430</id>
      <timestamp>2025-06-24T15:56:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* Ai:Nahtlose Integration von KI und ML in Ihre Projekte“</comment>
      <origin>430</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="58" sha1="js8fpf3w0q25dy7iswgrsevxpkfut56" xml:space="preserve">* [[Ai:Nahtlose Integration von KI und ML in Ihre Projekte</text>
      <sha1>js8fpf3w0q25dy7iswgrsevxpkfut56</sha1>
    </revision>
    <revision>
      <id>431</id>
      <parentid>430</parentid>
      <timestamp>2025-06-24T15:56:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>431</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="60" sha1="6uo9i5eki1xr4790n2d9r6fc6i2w481" xml:space="preserve">* [[Ai:Nahtlose Integration von KI und ML in Ihre Projekte]]</text>
      <sha1>6uo9i5eki1xr4790n2d9r6fc6i2w481</sha1>
    </revision>
    <revision>
      <id>555</id>
      <parentid>431</parentid>
      <timestamp>2025-07-01T16:24:57Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>555</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="75" sha1="c7crcqdm34p608nyy76nivt5iq1fzno" xml:space="preserve">* [[Ai:Nahtlose Integration von KI und ML in Ihre Projekte]]
* [[Ai:Model]]</text>
      <sha1>c7crcqdm34p608nyy76nivt5iq1fzno</sha1>
    </revision>
    <revision>
      <id>556</id>
      <parentid>555</parentid>
      <timestamp>2025-07-01T16:25:11Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>556</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="77" sha1="4mlv23dnr4ugslssamfj3d4ulh3m7yr" xml:space="preserve">* [[Ai:Nahtlose Integration von KI und ML in Ihre Projekte]]
* [[Ai:Modelle]]</text>
      <sha1>4mlv23dnr4ugslssamfj3d4ulh3m7yr</sha1>
    </revision>
  </page>
  <page>
    <title>Ai:Nahtlose Integration von KI und ML in Ihre Projekte</title>
    <ns>3004</ns>
    <id>123</id>
    <revision>
      <id>432</id>
      <timestamp>2025-06-24T16:23:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ Sicher, hier ist eine detaillierte Beschreibung der allgemeinen Frameworks mit LLM-Inferenzfunktionen  == Anwendungsentwicklungs-Frameworks für LLMs == Diese Frameworks erleichtern die Integration und Nutzung von Large Language Models (LLMs) in verschiedene Anwendungen.  === LangChain === '''Beschreibung:''' LangChain ist ein Framework, das die Entwicklung von Anwendungen, die durch Sprachmodelle unterstützt werden, vereinfacht. Es bietet Tools für Ke…“</comment>
      <origin>432</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="11760" sha1="4veao5wh3r5kto7x3lvcm8fi5tootwr" xml:space="preserve">
Sicher, hier ist eine detaillierte Beschreibung der allgemeinen Frameworks mit LLM-Inferenzfunktionen

== Anwendungsentwicklungs-Frameworks für LLMs ==
Diese Frameworks erleichtern die Integration und Nutzung von Large Language Models (LLMs) in verschiedene Anwendungen.

=== LangChain ===
'''Beschreibung:''' LangChain ist ein Framework, das die Entwicklung von Anwendungen, die durch Sprachmodelle unterstützt werden, vereinfacht. Es bietet Tools für Kettenbildung (Chaining), Agentenentwicklung und Datenaugmentation, um komplexe LLM-basierte Workflows zu erstellen. Umfassende Sammlung an Werkzeugen, Komponenten und Schnittstellen zur Vereinfachung der Arbeit mit großen Sprachmodellen. Ermöglicht die Entwicklung von Anwendungen, die kontextbezogen sind und in der Lage sind Daten von unterschiedlichen Quellen zu verarbeiten. '''Kernfunktionen:''' Modellintegrationen (z.B. OpenAI, Hugging Face). Datenverbindungen (z.B. Datenbanken, APIs). Chains (Verknüpfung von LLM-Aufrufen). Agenten (autonome LLM-gesteuerte Entscheidungsfindung). '''Anwendungsfälle:''' Chatbots und virtuelle Assistenten. Frage-Antwort-Systeme. Textzusammenfassung und -generierung.

=== LlamaIndex ===

=== Haystack (von deepset) ===

=== Semantic Kernel ===
'''Beschreibung:''' Semantic Kernel von Microsoft ist ein Open-Source-SDK, das die Integration von LLMs in herkömmliche Programmiersprachen ermöglicht. Es bietet eine flexible Architektur für die Kombination von KI-Funktionen mit benutzerdefiniertem Code. Bietet Entwicklern eine Möglichkeit generative KI mit bestehenden Code in bestehenden Applikationen zu kombinieren. '''Kernfunktionen:''' Funktionsplanung und -ausführung. Plugin-System für benutzerdefinierte Funktionen. Integration mit verschiedenen LLM-Anbietern. ermöglicht das erstellen von KI Agenten. '''Anwendungsfälle:''' Automatisierung von Geschäftsprozessen. Intelligente Suchanwendungen. Persönliche KI-Assistenten. === Spring Boot Ai

== LLM-Inferenz-Engines ==
LLM-Inferenz-Engines sind Softwarebibliotheken oder Frameworks, die zur effizienten Ausführung von Large Language Models (LLMs) verwendet werden. Sie optimieren die Modellinferenz, um die Latenz zu reduzieren und den Durchsatz zu erhöhen. Hier sind einige wichtige LLM-Inferenz-Engines:

=== vLLM ===
Beschreibung: vLLM ist eine schnelle und benutzerfreundliche Inferenz- und Serving-Engine für LLMs. Sie nutzt PagedAttention, einen neuartigen Aufmerksamkeitsalgorithmus, der von der virtuellen Speicherverwaltung in Betriebssystemen inspiriert ist, um den Durchsatz erheblich zu steigern. Wichtige Merkmale: PagedAttention für effiziente Schlüssel-Wert-Cache-Verwaltung Kontinuierliches Batching von Anfragen Optimierte CUDA-Kernel Unterstützung für Quantisierung (GPTQ, AWQ) Vorteile: Hoher Durchsatz, niedrige Latenz, effiziente Ressourcennutzung. Verwendung: Geeignet für Produktionsumgebungen, in denen hohe Leistung und Skalierbarkeit erforderlich sind.

=== Hugging Face Text Generation Inference (TGI) ===
Beschreibung: TGI ist eine Inferenz-Engine von Hugging Face, die auf einfache Bereitstellung und hohe Leistung ausgelegt ist. Wichtige Merkmale: Optimiert für Hugging Face Transformer-Modelle Unterstützung für verschiedene Hardwarebeschleuniger (GPUs, CPUs) Flexibles und erweiterbares Design Verwendet in Hugging Face Diensten wie Hugging Chat und der Inference API. Vorteile: Einfache Integration mit dem Hugging Face Ökosystem, gute Leistung. Verwendung: Beliebt für die Bereitstellung von Hugging Face Modellen in Produktionsumgebungen.

=== llama.cpp ===
Beschreibung: llama.cpp ist eine C++-Implementierung des Llama-Modells, die auf Leistung und Effizienz ausgelegt ist, insbesondere auf Hardware wie Apple Silicon. Wichtige Merkmale: Reine C++-Implementierung ohne Abhängigkeiten Optimiert für CPU-Inferenz Gute Unterstützung für Apple Silicon Schnelle ausführung auf Verbraucherhardware. Vorteile: Niedriger Ressourcenverbrauch, gute Leistung auf CPUs. Verwendung: Ideal für lokale Inferenz auf Laptops und anderen Geräten mit begrenzten Ressourcen.

=== OpenVINO ===
Beschreibung: OpenVINO (Open Visual Inference and Neural Network Optimization) ist ein Toolkit von Intel zur Optimierung und Bereitstellung von KI-Modellen, einschließlich LLMs. Wichtige Merkmale: Unterstützung für verschiedene Hardwareplattformen (CPUs, GPUs, VPU) Optimierungen für Intel-Hardware Werkzeuge zur Modelloptimierung und -konvertierung Vorteile: Gute Leistung auf Intel-Hardware, Unterstützung für verschiedene Hardwareplattformen. Verwendung: Geeignet für die Bereitstellung von LLMs auf Intel-basierter Hardware.

=== GGML - GGUF ===
Beschreibung: GGML (auch in Verbindung mit GGUF verwendet) ist ein C-Bibliothek für Machine Learning, die speziell für die Ausführung von LLMs auf Verbraucherhardware entwickelt wurde. GGUF ist das neue Quantisierungsformat von GGML. Wichtige Merkmale: CPU-zentriert, mit teilweiser GPU-Unterstützung über OpenCL oder Metal. Ermöglicht die Ausführung großer Modelle auf Geräten mit begrenztem Speicher. Breite Unterstützung für viele Quantisierungs Methoden. GGUF hat das ältere GGML Format abgelöst. Vorteile: Ermöglicht die Inferenz auf schwächeren Geräten. Verwendung: Besonders für das lokale Nutzen von LLM's von Bedeutung.

== ML-Compiler und verwandte Tools ==

* '''ML-Compiler''' sind Software-Tools, die darauf abzielen, maschinelle Lernmodelle (ML) zu optimieren und auf verschiedene Hardware-Plattformen zu übersetzen. Sie ermöglichen eine effiziente Ausführung von ML-Modellen auf unterschiedlichen Geräten und verbessern die Leistung durch Optimierungen wie Fusionierung von Operationen, Speicheroptimierung und Code-Generierung.

=== Apache TVM ===

* '''Beschreibung:''' Apache TVM ist ein Open-Source-Compiler-Framework für maschinelles Lernen, das die Leistung von ML-Modellen auf verschiedenen Hardware-Plattformen optimiert. Es unterstützt eine breite Palette von Backend-Hardware, darunter CPUs, GPUs und spezialisierte Beschleuniger.

* '''Funktionen:'''
** Modelloptimierung: TVM führt verschiedene Optimierungen durch, wie z.B. Operatorenfusion, Layout-Transformationen und Speichermanagement, um die Ausführungsgeschwindigkeit und den Speicherverbrauch zu verbessern.
** Code-Generierung: TVM generiert optimierten Code für verschiedene Hardware-Backends, was eine effiziente Ausführung auf unterschiedlichen Plattformen ermöglicht.
** Hardware-Unterstützung: TVM unterstützt eine Vielzahl von Hardware-Plattformen, darunter CPUs (x86, ARM), GPUs (NVIDIA, AMD, Intel) und spezialisierte Beschleuniger (TPUs, FPGAs).
** Framework-Integration: TVM kann mit verschiedenen ML-Frameworks wie TensorFlow, PyTorch und ONNX integriert werden.
** Relay IR: verwendet eine funktionale relationale IR, um Optimierungen durchzuführen.

* '''Anwendung:''' TVM wird verwendet, um ML-Modelle für das Edge Computing, eingebettete Systeme und Cloud-Bereitstellungen zu optimieren.

=== Google MLIR (Multi-Level Intermediate Representation) ===

* '''Beschreibung:''' MLIR ist ein Compiler-Infrastrukturprojekt, das eine flexible und erweiterbare Zwischenrepräsentation (IR) für die Optimierung von ML-Modellen bietet. Es ist ein modulares System, das verschiedene Abstraktionsebenen unterstützt und eine Vielzahl von Optimierungen ermöglicht.

* '''Funktionen:'''
** Multi-Level IR: MLIR unterstützt verschiedene Abstraktionsebenen, von hochrangigen ML-Operationen bis hin zu hardwarenahen Operationen.
** Dialekte: MLIR verwendet Dialekte, um verschiedene Abstraktionsebenen und Optimierungen darzustellen.
** Optimierungs-Framework: MLIR bietet eine Reihe von Optimierungspässen, die auf verschiedenen Abstraktionsebenen angewendet werden können.
** Code-Generierung: MLIR kann Code für verschiedene Hardware-Backends generieren, darunter CPUs, GPUs und spezialisierte Beschleuniger.
** Erweiterbarkeit: MLIR ist so konzipiert, dass es erweiterbar ist, was es ermöglicht, neue Dialekte und Optimierungen hinzuzufügen.

* '''Anwendung:''' MLIR wird verwendet, um ML-Modelle für verschiedene Anwendungen zu optimieren, darunter Inferenz, Training und hardwarebeschleunigte Berechnungen. Es ist die Grundlage vieler Google ML-Tools, einschließlich XLA.

=== TensorFlow XLA (Accelerated Linear Algebra) ===

* '''Beschreibung:''' XLA ist ein Compiler für lineare Algebra, der TensorFlow-Modelle optimiert. Es führt verschiedene Optimierungen durch, um die Ausführungsgeschwindigkeit und den Speicherverbrauch zu verbessern, insbesondere auf GPUs und TPUs.

* '''Funktionen:'''
** Just-in-Time (JIT) Kompilierung: XLA kompiliert TensorFlow-Graphen zur Laufzeit, um die Ausführungsgeschwindigkeit zu verbessern.
** Operatorenfusion: XLA fusioniert mehrere Operationen zu einer einzigen Operation, um den Overhead zu reduzieren.
** Speichermanagement: XLA optimiert die Speicherzuweisung und -freigabe, um den Speicherverbrauch zu minimieren.
** Hardware-Beschleunigung: XLA ist speziell für die Beschleunigung von ML-Modellen auf GPUs und TPUs konzipiert.
** Backends: XLA unterstützt verschiedene Backend Hardware, besonders die Google TPU, aber auch Nvidia und AMD GPUs.

* '''Anwendung:''' XLA wird verwendet, um die Leistung von TensorFlow-Modellen für Training und Inferenz zu verbessern.

=== Meta Glow ===

* '''Beschreibung:''' Glow ist ein Compiler für neuronale Netzwerke, der von Meta (ehemals Facebook) entwickelt wurde. Er zielt darauf ab, die Leistung von ML-Modellen auf verschiedenen Hardware-Plattformen zu optimieren, insbesondere für Edge-Computing-Anwendungen.

* '''Funktionen:'''
** Optimierungen: Glow führt verschiedene Optimierungen durch, wie z.B. Operatorenfusion, Speichermanagement und Code-Generierung.
** Code-Generierung: Glow generiert optimierten Code für verschiedene Hardware-Backends, darunter CPUs und spezialisierte Beschleuniger.
** Edge-Computing-Fokus: Glow ist speziell für die Optimierung von ML-Modellen für Edge-Computing-Anwendungen konzipiert.
** Open Source: Glow ist ein Open-Source-Projekt, das von der Community weiterentwickelt wird.
** IR: Glow verwendet eine eigene interne IR, um Optimierungen durchzuführen.

* '''Anwendung:''' Glow wird verwendet, um ML-Modelle für Edge-Computing-Anwendungen zu optimieren, z.B. für Computer Vision, natürliche Sprachverarbeitung und andere Anwendungen, die auf eingebetteten Systemen ausgeführt werden.

=== ONNX (Open Neural Network Exchange) ===

* '''Beschreibung:''' ONNX ist ein offenes Format für die Darstellung von ML-Modellen. Es ermöglicht den Austausch von Modellen zwischen verschiedenen ML-Frameworks und Hardware-Plattformen. ONNX ist nicht direkt ein Compiler, sondern eine Zwischenrepräsentation, die von Compilern und Laufzeitumgebungen verwendet wird.

* '''Funktionen:'''
** Modell-Interoperabilität: ONNX ermöglicht den Austausch von Modellen zwischen verschiedenen ML-Frameworks wie TensorFlow, PyTorch und scikit-learn.
** Hardware-Unabhängigkeit: ONNX-Modelle können auf verschiedenen Hardware-Plattformen ausgeführt werden, was die Bereitstellung von ML-Modellen vereinfacht.
** Standardisierung: ONNX ist ein offener Standard, der von einer breiten Palette von Unternehmen und Organisationen unterstützt wird.
** Graph-Repräsentation: ONNX repräsentiert ML-Modelle als gerichtete azyklische Graphen (DAGs).
** Laufzeitumgebungen: ONNX-Laufzeitumgebungen wie ONNX Runtime optimieren und führen ONNX-Modelle aus.

* '''Anwendung:''' ONNX wird verwendet, um die Interoperabilität von ML-Modellen zu verbessern und die Bereitstellung von Modellen auf verschiedenen Hardware-Plattformen zu vereinfachen. Es ist ein wichtiger Bestandteil der ML-Toolchain, der von Compilern und Laufzeitumgebungen verwendet wird.</text>
      <sha1>4veao5wh3r5kto7x3lvcm8fi5tootwr</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Razor Views</title>
    <ns>3002</ns>
    <id>124</id>
    <revision>
      <id>433</id>
      <timestamp>2025-06-25T03:52:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC – Speckzettel &amp; Übungen =  == MVC Architektur: Grundprinzip == * **Model:** Daten &amp; Geschäftslogik (z.B. DB-Zugriffe, Validierung) * **View:** Darstellung der UI (Razor/HTML-Templates) * **Controller:** Vermittler – verarbeitet Anfragen, steuert Model &amp; View  === Model-Typen: === * Geschäftsmodell: Reale Entitäten (z.B. Produkt, Kunde) * View Model: Für die Darstellung optimiert (z.B. Zusammenfassung mehrerer Models)  == Ablauf…“</comment>
      <origin>433</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5301" sha1="bg1i4hrgqhjmt7ffc5iqdhjqy2sb6c7" xml:space="preserve">= ASP.NET Core MVC – Speckzettel &amp; Übungen =

== MVC Architektur: Grundprinzip ==
* **Model:** Daten &amp; Geschäftslogik (z.B. DB-Zugriffe, Validierung)
* **View:** Darstellung der UI (Razor/HTML-Templates)
* **Controller:** Vermittler – verarbeitet Anfragen, steuert Model &amp; View

=== Model-Typen: ===
* Geschäftsmodell: Reale Entitäten (z.B. Produkt, Kunde)
* View Model: Für die Darstellung optimiert (z.B. Zusammenfassung mehrerer Models)

== Ablauf einer MVC-Anfrage ==
# Routing: URL → Controller/Action
# Model Binding: Request-Daten werden Parametern/Models zugewiesen
# Validierung: Daten werden geprüft, Fehler landen in ModelState
# Action-Logik: Daten holen/bearbeiten, ViewModel erstellen
# View-Auswahl: View + Model werden an die View-Engine (Razor) übergeben
# View-Rendering: Razor erzeugt das HTML
# Response: HTML wird an den Client geschickt

== Beispielcode ==

=== Aktivierung in Program.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Program.cs
builder.Services.AddControllersWithViews(); // MVC aktivieren
&lt;/syntaxhighlight&gt;

=== Controller Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
// HomeController.cs
public class HomeController : Controller
{
    [Route("home")]
    public IActionResult Index()
    {
        return View(); // Rendert Views/Home/Index.cshtml
    }
}
&lt;/syntaxhighlight&gt;

=== View Beispiel ===
&lt;syntaxhighlight lang="html"&gt;
// Views/Home/Index.cshtml
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Asp.Net Core App&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    Willkommen!
&lt;/body&gt;
&lt;/html&gt;
&lt;/syntaxhighlight&gt;

----

== Razor-Grundlagen ==

* **@{...}**: C#-Codeblock
* **@variable**: Variablen-Ausgabe
* **@if, @else, @switch, @foreach, @for**: Kontrollstrukturen
* **@Html.Raw()**: Rohes HTML ausgeben (Achtung: XSS-Gefahr!)

=== Razor-Control-Flow Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
@if (person.Geburtsdatum.HasValue)
{
    &lt;p&gt;Alter: @(Math.Round((DateTime.Now - person.Geburtsdatum.Value).TotalDays / 365.25)) Jahre&lt;/p&gt;
}
else
{
    &lt;p&gt;Geburtsdatum unbekannt&lt;/p&gt;
}
&lt;/syntaxhighlight&gt;

=== Übung: Kontrollstrukturen ===
&lt;pre&gt;
Schreibe einen Razor-View, der eine Liste von Personen mit Name und Geschlecht anzeigt.
&lt;/pre&gt;

----

== ViewData &amp; ViewBag ==

* **ViewData["key"]**: Dictionary, cast nötig
* **ViewBag.key**: Dynamisches Objekt, kein Cast nötig

=== Beispiel: Übergabe im Controller ===
&lt;syntaxhighlight lang="csharp"&gt;
// Controller
ViewData["Titel"] = "Meine App";
ViewBag.Personen = personenListe;
&lt;/syntaxhighlight&gt;

=== Beispiel: Zugriff in View ===
&lt;syntaxhighlight lang="csharp"&gt;
// View
&lt;title&gt;@ViewData["Titel"]&lt;/title&gt;
@foreach(var p in ViewBag.Personen) { &lt;div&gt;@p.Name&lt;/div&gt; }
&lt;/syntaxhighlight&gt;

=== Übung: ViewBag ===
&lt;pre&gt;
Übertrage die aktuelle Uhrzeit per ViewBag in die View und zeige sie dort an.
&lt;/pre&gt;

----

== Starke Typisierung mit @model ==

* View erhält direkt eine Model-Instanz → IntelliSense, Typ-Sicherheit

=== Beispiel: Übergabe einer Liste ===
&lt;syntaxhighlight lang="csharp"&gt;
// Controller
public IActionResult Index()
{
    List&lt;Person&gt; personen = new();
    // Personen füllen...
    return View(personen);
}
&lt;/syntaxhighlight&gt;

&lt;syntaxhighlight lang="csharp"&gt;
// Index.cshtml
@model IEnumerable&lt;Person&gt;
@foreach(var p in Model)
{
    &lt;div&gt;@p.Name - @p.Geschlecht&lt;/div&gt;
}
&lt;/syntaxhighlight&gt;

=== Übung: Starke Typisierung ===
&lt;pre&gt;
Erstelle ein ViewModel mit Person &amp; Produkt und zeige beides in einer View an.
&lt;/pre&gt;

----

== Lokale Funktionen im View ==

&lt;syntaxhighlight lang="csharp"&gt;
@functions {
    double? AlterBerechnen(DateTime? geburt)
    {
        if(geburt != null)
            return Math.Round((DateTime.Now - geburt.Value).TotalDays/365.25);
        else
            return null;
    }
}
&lt;!-- Nutzung: --&gt;
@AlterBerechnen(person.Geburtsdatum)
&lt;/syntaxhighlight&gt;

----

== _ViewImports.cshtml ==
* Gemeinsame Direktiven für alle Views eines Ordners:
&lt;syntaxhighlight lang="csharp"&gt;
@using YourProject.Models
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
&lt;/syntaxhighlight&gt;

----

== Shared Views ==
* In **Views/Shared** ablegen → wiederverwendbar
* Beispiel: _Layout.cshtml, _ProductCard.cshtml (Partial Views)

=== Beispiel: Shared View verwenden ===
&lt;syntaxhighlight lang="csharp"&gt;
// Controller
public IActionResult All()
{
    return View(); // Sucht zuerst in Views/Controller, dann Views/Shared
}
&lt;/syntaxhighlight&gt;

---

== Wichtige Best Practices ==
* Trenne Präsentation (View), Logik (Controller), und Daten (Model)!
* Nutze starke Typisierung (ViewModels)!
* Wiederverwendbare Views in Views/Shared ablegen!
* Html.Raw() **nur** bei vertrauenswürdigem Inhalt!
* Konsistenz: Nutze entweder ViewBag **oder** ViewData – nicht beides wild gemischt!

----

= Interview-Checkliste MVC =
* Razor-Syntax erklären &amp; anwenden (inkl. Control-Flow, Html.Raw)
* ViewModels &amp; starke Typisierung erklären
* Sicherheitsaspekte (keine ungesicherten Daten in Html.Raw)
* Einsatz von _ViewImports.cshtml &amp; Shared Views begründen

----

== Mini-Übungsaufgaben ==
# Erstelle eine View, die alle Produkte als Tabelle darstellt.
# Übergebe eine Fehlermeldung per ViewBag und zeige sie prominent in der View an.
# Verwende ein ViewModel, um Person und deren Produktliste in einer View darzustellen.
# Schreibe eine lokale Funktion in einer View, die das Alter einer Person berechnet.</text>
      <sha1>bg1i4hrgqhjmt7ffc5iqdhjqy2sb6c7</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Grud Operatoren</title>
    <ns>3002</ns>
    <id>125</id>
    <revision>
      <id>434</id>
      <timestamp>2025-06-25T10:46:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Controller: Lesen (Index) &amp; Erstellen (Create) == === Beispiel: PersonenController.cs === &lt;syntaxhighlight lang="csharp"&gt; // Index (Read) public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder) {     var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);     return View(personen); }  // Create (GET) public IActionResult Create() {     return View(); }  // Create (POST) [Htt…“</comment>
      <origin>434</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2639" sha1="ops6shp7sd3jqnv1i49xe1axknfcvhv" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="html+razor"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;syntaxhighlight lang="html+razor"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>ops6shp7sd3jqnv1i49xe1axknfcvhv</sha1>
    </revision>
    <revision>
      <id>435</id>
      <parentid>434</parentid>
      <timestamp>2025-06-25T11:02:30Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel: Create.cshtml (Erstellen) */</comment>
      <origin>435</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2609" sha1="2ndl8t61r2m8cmmf8bj1kefy3fid25h" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="html+razor"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;pre&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>2ndl8t61r2m8cmmf8bj1kefy3fid25h</sha1>
    </revision>
    <revision>
      <id>436</id>
      <parentid>435</parentid>
      <timestamp>2025-06-25T11:02:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel: Index.cshtml (Lesen) */</comment>
      <origin>436</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2602" sha1="gnpel3ttkjl2ust29c5nl9kewac6d4u" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="htm"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;pre&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>gnpel3ttkjl2ust29c5nl9kewac6d4u</sha1>
    </revision>
    <revision>
      <id>437</id>
      <parentid>436</parentid>
      <timestamp>2025-06-25T11:03:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel: Create.cshtml (Erstellen) */</comment>
      <origin>437</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2625" sha1="hnvjmgqozuynlt30xw4689fthc84l7y" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="htm"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;syntaxhighlight lang="htm"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>hnvjmgqozuynlt30xw4689fthc84l7y</sha1>
    </revision>
    <revision>
      <id>438</id>
      <parentid>437</parentid>
      <timestamp>2025-06-25T11:04:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>438</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2626" sha1="6gcyb80412ifgtwwunaaovxl5p3d50k" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="htm"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;syntaxhighlight lang="html"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>6gcyb80412ifgtwwunaaovxl5p3d50k</sha1>
    </revision>
    <revision>
      <id>439</id>
      <parentid>438</parentid>
      <timestamp>2025-06-25T11:05:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>439</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2627" sha1="gghzrfuhhqszvaerslnjfog2s1frdgb" xml:space="preserve">== Controller: Lesen (Index) &amp; Erstellen (Create) ==
=== Beispiel: PersonenController.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
// Index (Read)
public IActionResult Index(string searchBy, string searchString, string sortBy, string sortOrder)
{
    var personen = _personService.GetFilteredPersons(searchBy, searchString, sortBy, sortOrder);
    return View(personen);
}

// Create (GET)
public IActionResult Create()
{
    return View();
}

// Create (POST)
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult Create(PersonAddRequest model)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(model);
        return RedirectToAction("Index");
    }
    return View(model);
}
&lt;/syntaxhighlight&gt;
''Hinweis: _personService ist eine Service-Klasse, die die Geschäftslogik kapselt.''

=== Übungsvorschläge ===
* Implementiere ein einfaches CRUD für eine "Person"-Entität.
* Ergänze eine Such- und Sortierfunktion in der Index-Methode.
* Baue eine Validierung mit DataAnnotations (z. B. [Required], [StringLength]) ein.
* Setze eine Weiterleitung nach erfolgreichem Create/Update ein.
* Teste verschiedene Fehlerszenarien (leere Felder, ungültige Eingaben).

== View: Index &amp; Create ==
=== Beispiel: Index.cshtml (Lesen) ===
&lt;syntaxhighlight lang="html"&gt;
@model IEnumerable&lt;PersonResponse&gt;

&lt;form asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Stadt"&gt;Stadt&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" value="@ViewBag.CurrentSearchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name", sortOrder = ViewBag.NameSortParm })
            &lt;/th&gt;
            &lt;th&gt;
                @Html.ActionLink("Stadt", "Index", new { sortBy = "Stadt", sortOrder = ViewBag.StadtSortParm })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
    @foreach (var p in Model)
    {
        &lt;tr&gt;
            &lt;td&gt;@p.Name&lt;/td&gt;
            &lt;td&gt;@p.Stadt&lt;/td&gt;
        &lt;/tr&gt;
    }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Beispiel: Create.cshtml (Erstellen) ===
&lt;syntaxhighlight lang="html"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div&gt;
        &lt;label asp-for="Name"&gt;&lt;/label&gt;
        &lt;input asp-for="Name" /&gt;
        &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;label asp-for="Stadt"&gt;&lt;/label&gt;
        &lt;input asp-for="Stadt" /&gt;
        &lt;span asp-validation-for="Stadt"&gt;&lt;/span&gt;
    &lt;/div&gt;
    &lt;button type="submit"&gt;Erstellen&lt;/button&gt;
&lt;/form&gt;</text>
      <sha1>gghzrfuhhqszvaerslnjfog2s1frdgb</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Identity &amp; Authorization</title>
    <ns>3002</ns>
    <id>126</id>
    <revision>
      <id>440</id>
      <timestamp>2025-06-25T11:39:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „// Benutzerregistrierung ApplicationUser user = new ApplicationUser { UserName = registerDTO.Email, Email = registerDTO.Email }; IdentityResult result = await _userManager.CreateAsync(user, registerDTO.Password);  // Benutzer anmelden var result = await _signInManager.PasswordSignInAsync(     loginDTO.Email,     loginDTO.Password,     isPersistent: false,     lockoutOnFailure: false);  // Rolle prüfen if (await _userManager.IsInRoleAsync(user, "Admin"))…“</comment>
      <origin>440</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1929" sha1="e11ftd2jr9fxzcrzrfsf5i3vdbtwegw" xml:space="preserve">// Benutzerregistrierung
ApplicationUser user = new ApplicationUser { UserName = registerDTO.Email, Email = registerDTO.Email };
IdentityResult result = await _userManager.CreateAsync(user, registerDTO.Password);

// Benutzer anmelden
var result = await _signInManager.PasswordSignInAsync(
    loginDTO.Email,
    loginDTO.Password,
    isPersistent: false,
    lockoutOnFailure: false);

// Rolle prüfen
if (await _userManager.IsInRoleAsync(user, "Admin")) {
    // Admin-spezifische Logik
}

// Rolle erstellen (falls nicht vorhanden)
if (!await _roleManager.RoleExistsAsync("Admin")) {
    await _roleManager.CreateAsync(new ApplicationRole("Admin"));
}

// Benutzer zu Rolle hinzufügen
await _userManager.AddToRoleAsync(user, "Admin");

// Benutzer abmelden
await _signInManager.SignOutAsync();

// E-Mail prüfen (bereits registriert?)
var existingUser = await _userManager.FindByEmailAsync(email);
return Json(existingUser == null);

// [Authorize] zum Schutz von Aktionen
[Authorize]
public IActionResult ProtectedAction() { ... }

// [AllowAnonymous] für anonyme Zugriffe
[AllowAnonymous]
public IActionResult PublicAction() { ... }

// [ValidateAntiForgeryToken] gegen CSRF
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult SubmitForm() { ... }

// Benutzerdefinierte Richtlinie in Program.cs
builder.Services.AddAuthorization(options =&gt; {
    options.AddPolicy("NotAuthorized", policy =&gt; policy.RequireAssertion(
        context =&gt; !context.User.Identity.IsAuthenticated));
});

// Identity-Konfiguration in Program.cs
builder.Services.AddIdentity&lt;ApplicationUser, ApplicationRole&gt;(options =&gt; {
    options.Password.RequiredLength = 8;
    options.Password.RequireNonAlphanumeric = true;
}).AddEntityFrameworkStores&lt;ApplicationDbContext&gt;()
  .AddDefaultTokenProviders();

// Identity-Cookie konfigurieren
builder.Services.ConfigureApplicationCookie(options =&gt; {
    options.LoginPath = "/Account/Login";
});</text>
      <sha1>e11ftd2jr9fxzcrzrfsf5i3vdbtwegw</sha1>
    </revision>
    <revision>
      <id>441</id>
      <parentid>440</parentid>
      <timestamp>2025-06-25T11:43:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>441</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1942" sha1="2ca5f8ai4qpwgitlmm9a3j3wpaz3r96" xml:space="preserve">&lt;pre&gt;
// Benutzerregistrierung
ApplicationUser user = new ApplicationUser { UserName = registerDTO.Email, Email = registerDTO.Email };
IdentityResult result = await _userManager.CreateAsync(user, registerDTO.Password);

// Benutzer anmelden
var result = await _signInManager.PasswordSignInAsync(
    loginDTO.Email,
    loginDTO.Password,
    isPersistent: false,
    lockoutOnFailure: false);

// Rolle prüfen
if (await _userManager.IsInRoleAsync(user, "Admin")) {
    // Admin-spezifische Logik
}

// Rolle erstellen (falls nicht vorhanden)
if (!await _roleManager.RoleExistsAsync("Admin")) {
    await _roleManager.CreateAsync(new ApplicationRole("Admin"));
}

// Benutzer zu Rolle hinzufügen
await _userManager.AddToRoleAsync(user, "Admin");

// Benutzer abmelden
await _signInManager.SignOutAsync();

// E-Mail prüfen (bereits registriert?)
var existingUser = await _userManager.FindByEmailAsync(email);
return Json(existingUser == null);

// [Authorize] zum Schutz von Aktionen
[Authorize]
public IActionResult ProtectedAction() { ... }

// [AllowAnonymous] für anonyme Zugriffe
[AllowAnonymous]
public IActionResult PublicAction() { ... }

// [ValidateAntiForgeryToken] gegen CSRF
[HttpPost]
[ValidateAntiForgeryToken]
public IActionResult SubmitForm() { ... }

// Benutzerdefinierte Richtlinie in Program.cs
builder.Services.AddAuthorization(options =&gt; {
    options.AddPolicy("NotAuthorized", policy =&gt; policy.RequireAssertion(
        context =&gt; !context.User.Identity.IsAuthenticated));
});

// Identity-Konfiguration in Program.cs
builder.Services.AddIdentity&lt;ApplicationUser, ApplicationRole&gt;(options =&gt; {
    options.Password.RequiredLength = 8;
    options.Password.RequireNonAlphanumeric = true;
}).AddEntityFrameworkStores&lt;ApplicationDbContext&gt;()
  .AddDefaultTokenProviders();

// Identity-Cookie konfigurieren
builder.Services.ConfigureApplicationCookie(options =&gt; {
    options.LoginPath = "/Account/Login";
});
&lt;/pre&gt;</text>
      <sha1>2ca5f8ai4qpwgitlmm9a3j3wpaz3r96</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Entity Framework Core</title>
    <ns>3002</ns>
    <id>127</id>
    <revision>
      <id>442</id>
      <timestamp>2025-06-25T12:04:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Entity Framework Core (EF Core) Spickzettel =  == Was ist EF Core? == * EF Core ist ein moderner, leichter und erweiterbarer Object-Relational Mapper (ORM) für .NET. * Erlaubt die Arbeit mit Datenbankdaten als .NET-Objekte (Entities), anstatt mit SQL-Queries.  == Grundkonzepte == * '''Entities''': C#-Klassen, die Datenbanktabellen repräsentieren. * '''DbContext''': Brücke zwischen Entities und Datenbank. * '''DbSet&lt;TEntity&gt;''': Sammlung einer Entitä…“</comment>
      <origin>442</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5538" sha1="r2l5p5vz1l04vjzoiy9ame7s138zh8d" xml:space="preserve">= Entity Framework Core (EF Core) Spickzettel =

== Was ist EF Core? ==
* EF Core ist ein moderner, leichter und erweiterbarer Object-Relational Mapper (ORM) für .NET.
* Erlaubt die Arbeit mit Datenbankdaten als .NET-Objekte (Entities), anstatt mit SQL-Queries.

== Grundkonzepte ==
* '''Entities''': C#-Klassen, die Datenbanktabellen repräsentieren.
* '''DbContext''': Brücke zwischen Entities und Datenbank.
* '''DbSet&lt;TEntity&gt;''': Sammlung einer Entität (Tabelle).

== Beispiel: Entities und DbContext ==
&lt;syntaxhighlight lang="csharp"&gt;
public class Country
{
    public int CountryID { get; set; }
    public string CountryName { get; set; }
    public ICollection&lt;Person&gt; Persons { get; set; }
}
public class Person
{
    public int PersonID { get; set; }
    public string PersonName { get; set; }
    public int CountryID { get; set; }
    public Country Country { get; set; }
}

public class PersonsDbContext : DbContext
{
    public DbSet&lt;Country&gt; Countries { get; set; }
    public DbSet&lt;Person&gt; Persons { get; set; }
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity&lt;Country&gt;().ToTable("Countries");
        modelBuilder.Entity&lt;Person&gt;().ToTable("Persons");
    }
}
&lt;/syntaxhighlight&gt;

== Wichtige NuGet-Pakete ==
* &lt;code&gt;Microsoft.EntityFrameworkCore&lt;/code&gt;
* &lt;code&gt;Microsoft.EntityFrameworkCore.SqlServer&lt;/code&gt; (oder Sqlite, Npgsql etc.)
* &lt;code&gt;Microsoft.EntityFrameworkCore.Tools&lt;/code&gt;

== Verbindung zur Datenbank ==
&lt;syntaxhighlight lang="csharp"&gt;
// In Program.cs oder Startup.cs
builder.Services.AddDbContext&lt;PersonsDbContext&gt;(options =&gt;
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));
&lt;/syntaxhighlight&gt;

''appsettings.json'':
&lt;syntaxhighlight lang="json"&gt;
{
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=PersonsDatabase;Integrated Security=True;"
  }
}
&lt;/syntaxhighlight&gt;

== Datenbank initialisieren (Seeding) ==
&lt;syntaxhighlight lang="csharp"&gt;
protected override void OnModelCreating(ModelBuilder modelBuilder)
{
    modelBuilder.Entity&lt;Country&gt;().HasData(
        new Country { CountryID = 1, CountryName = "Deutschland" }
    );
    modelBuilder.Entity&lt;Person&gt;().HasData(
        new Person { PersonID = 1, PersonName = "Max Mustermann", CountryID = 1 }
    );
}
&lt;/syntaxhighlight&gt;

== Code First Migration ==
# Migration erstellen:
&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;
# Migration anwenden:
&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

== CRUD-Operationen mit EF Core ==
* '''Create''':  
  &lt;syntaxhighlight lang="csharp"&gt;
var person = new Person { PersonName = "Anna" };
context.Persons.Add(person);
context.SaveChanges();
  &lt;/syntaxhighlight&gt;
* '''Read''':  
  &lt;syntaxhighlight lang="csharp"&gt;
var people = context.Persons.ToList();
var one = context.Persons.FirstOrDefault(p =&gt; p.PersonID == 1);
  &lt;/syntaxhighlight&gt;
* '''Update''':  
  &lt;syntaxhighlight lang="csharp"&gt;
var person = context.Persons.Find(1);
person.PersonName = "Maria";
context.SaveChanges();
  &lt;/syntaxhighlight&gt;
* '''Delete''':  
  &lt;syntaxhighlight lang="csharp"&gt;
var person = context.Persons.Find(1);
context.Persons.Remove(person);
context.SaveChanges();
  &lt;/syntaxhighlight&gt;

== Beziehungen (Relationships) ==
* '''One-to-Many''': Ein Land hat viele Personen, eine Person gehört zu einem Land.
* '''Foreign Key''' wird automatisch erkannt (CountryID in Person).
* Mit Navigation Properties arbeiten.

== LINQ-Abfragen ==
&lt;syntaxhighlight lang="csharp"&gt;
var deutsche = context.Persons.Where(p =&gt; p.Country.CountryName == "Deutschland").ToList();
&lt;/syntaxhighlight&gt;

== Eager Loading mit Include ==
&lt;syntaxhighlight lang="csharp"&gt;
var personsWithCountry = context.Persons.Include(p =&gt; p.Country).ToList();
&lt;/syntaxhighlight&gt;

== Fluent API (Erweiterte Konfiguration) ==
&lt;syntaxhighlight lang="csharp"&gt;
modelBuilder.Entity&lt;Person&gt;()
    .Property(p =&gt; p.PersonName)
    .IsRequired()
    .HasMaxLength(100);
&lt;/syntaxhighlight&gt;

== Stored Procedures verwenden ==
&lt;syntaxhighlight lang="csharp"&gt;
// Select
var result = context.Persons.FromSqlRaw("EXEC GetAllPersons").ToList();
// Insert
context.Database.ExecuteSqlRaw("EXEC InsertPerson @Name", new SqlParameter("@Name", "Max"));
&lt;/syntaxhighlight&gt;

== Dateien generieren (PDF/CSV) ==
* '''PDF (z.B. mit Rotativa):'''
&lt;syntaxhighlight lang="csharp"&gt;
return new ViewAsPdf("PersonsPDF", personsList);
&lt;/syntaxhighlight&gt;
* '''CSV (mit CsvHelper):'''
&lt;syntaxhighlight lang="csharp"&gt;
using (var writer = new StreamWriter("file.csv"))
using (var csv = new CsvWriter(writer, CultureInfo.InvariantCulture))
{
    csv.WriteRecords(personsList);
}
&lt;/syntaxhighlight&gt;

== Best Practices ==
* Asynchrone Methoden verwenden: &lt;code&gt;await context.SaveChangesAsync()&lt;/code&gt;
* Migrationen immer ins Source Control aufnehmen
* Validierung auf Model- und View-Ebene
* Repository-Pattern für größere Projekte

== Interviewfragen-Vorbereitung ==
* Was ist ein ORM? Wie funktioniert EF Core?
* Unterschied zwischen Code First und Database First?
* Wie werden Beziehungen zwischen Tabellen definiert?
* Wozu dient die Migration?
* Wie funktioniert Change Tracking?

== Häufige Fehler ==
* Vergessen: SaveChanges() oder SaveChangesAsync()
* Falsche/fehlende Navigation Properties
* Verbindungskette falsch/fehlt
* Nicht alle Migrations ausgeführt

----
''Tipp:'' Für weitere Beispiele siehe offizielle EF Core Dokumentation: https://learn.microsoft.com/de-de/ef/core/</text>
      <sha1>r2l5p5vz1l04vjzoiy9ame7s138zh8d</sha1>
    </revision>
    <revision>
      <id>525</id>
      <parentid>442</parentid>
      <timestamp>2025-06-29T21:46:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>525</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3422" sha1="3sjo7k9bvk2raszevxdfel11khem4y4" xml:space="preserve">== EF Core Cheatsheet (Deutsch) ==

=== DbContext &amp; DbSet ===
&lt;syntaxhighlight lang="csharp"&gt;
public class PersonsDbContext : DbContext
{
    public DbSet&lt;Person&gt; Persons { get; set; }
    public DbSet&lt;Country&gt; Countries { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity&lt;Country&gt;().ToTable("Countries");
        modelBuilder.Entity&lt;Person&gt;().ToTable("Persons");
    }
}
&lt;/syntaxhighlight&gt;

=== Verbindungskette (appsettings.json) ===
&lt;syntaxhighlight lang="json"&gt;
{
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=PersonsDatabase;Integrated Security=True"
  }
}
&lt;/syntaxhighlight&gt;

=== DI Registrierung (Program.cs) ===
&lt;syntaxhighlight lang="csharp"&gt;
builder.Services.AddDbContext&lt;PersonsDbContext&gt;(options =&gt;
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection")));
&lt;/syntaxhighlight&gt;

=== LINQ-Abfrage mit Navigation ===
&lt;syntaxhighlight lang="csharp"&gt;
var peopleFromUSA = _dbContext.Persons
    .Include(p =&gt; p.Country)
    .Where(p =&gt; p.Country.CountryName == "USA")
    .ToList();
&lt;/syntaxhighlight&gt;

=== Seed Data mit JSON-Dateien ===
&lt;syntaxhighlight lang="csharp"&gt;
var countries = JsonSerializer.Deserialize&lt;List&lt;Country&gt;&gt;(File.ReadAllText("countries.json"));
modelBuilder.Entity&lt;Country&gt;().HasData(countries);
&lt;/syntaxhighlight&gt;

=== Fluent API Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
modelBuilder.Entity&lt;Person&gt;()
    .Property(p =&gt; p.TIN)
    .HasColumnName("TaxID")
    .HasColumnType("varchar(8)")
    .HasDefaultValue("ABC12345");
&lt;/syntaxhighlight&gt;

=== Migrationen (Konsole) ===
&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
dotnet ef database update
&lt;/syntaxhighlight&gt;

=== Stored Procedure (Aufruf) ===
&lt;syntaxhighlight lang="csharp"&gt;
public List&lt;Person&gt; GetPersons() =&gt;
    Persons.FromSqlRaw("EXEC dbo.GetAllPersons").ToList();
&lt;/syntaxhighlight&gt;

=== Create (Controller POST) ===
&lt;syntaxhighlight lang="csharp"&gt;
[HttpPost]
public async Task&lt;IActionResult&gt; Create(PersonAddRequest request)
{
    if (ModelState.IsValid)
    {
        await _personsService.AddPerson(request);
        return RedirectToAction("Index");
    }

    ViewBag.Countries = await _countriesService.GetAllCountries();
    return View(request);
}
&lt;/syntaxhighlight&gt;

=== PDF mit Rotativa ===
&lt;syntaxhighlight lang="csharp"&gt;
public async Task&lt;IActionResult&gt; PersonsPDF()
{
    var persons = await _personsService.GetAllPersons();
    return new ViewAsPdf("PersonsPDF", persons)
    {
        PageOrientation = Orientation.Landscape,
        PageMargins = { Top = 20, Bottom = 20, Left = 20, Right = 20 }
    };
}
&lt;/syntaxhighlight&gt;

=== CSV mit CsvHelper ===
&lt;syntaxhighlight lang="csharp"&gt;
public async Task&lt;MemoryStream&gt; GetPersonsCSV()
{
    var stream = new MemoryStream();
    using var writer = new StreamWriter(stream, leaveOpen: true);
    using var csv = new CsvWriter(writer, CultureInfo.InvariantCulture);
    
    var persons = await _dbContext.Persons.Include(p =&gt; p.Country).ToListAsync();
    csv.WriteRecords(persons);
    writer.Flush();
    stream.Position = 0;
    return stream;
}
&lt;/syntaxhighlight&gt;

=== Beziehungskonfiguration (Fluent API) ===
&lt;syntaxhighlight lang="csharp"&gt;
modelBuilder.Entity&lt;Person&gt;()
    .HasOne(p =&gt; p.Country)
    .WithMany(c =&gt; c.Persons)
    .HasForeignKey(p =&gt; p.CountryID);
&lt;/syntaxhighlight&gt;</text>
      <sha1>3sjo7k9bvk2raszevxdfel11khem4y4</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Laout Views</title>
    <ns>3002</ns>
    <id>128</id>
    <revision>
      <id>443</id>
      <timestamp>2025-06-25T14:27:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Layout Views – Spickzettel (Cheat Sheet) ==  '''Layout View''' ist eine Webseite (z.B. ''layout.cshtml''), die für die Präsentationslogik-Vorlage zuständig ist (typischerweise ein HTML-Template mit Header, Sidebar, Footer usw.).  === Ablauf der View-Ausführung === # Die '''View''' wird zuerst ausgeführt. # Die '''Layout View''' wird danach mit dem Inhalt der View „gefüllt“. # Daten aus der View können somit auch im Layout genutzt werden.…“</comment>
      <origin>443</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2088" sha1="e84mv7zj1nzn7nzx2kla24zyc4izl76" xml:space="preserve">== Layout Views – Spickzettel (Cheat Sheet) ==

'''Layout View''' ist eine Webseite (z.B. ''layout.cshtml''), die für die Präsentationslogik-Vorlage zuständig ist (typischerweise ein HTML-Template mit Header, Sidebar, Footer usw.).

=== Ablauf der View-Ausführung ===
# Die '''View''' wird zuerst ausgeführt.
# Die '''Layout View''' wird danach mit dem Inhalt der View „gefüllt“.
# Daten aus der View können somit auch im Layout genutzt werden.

=== Merkmale von Layout Views ===
* Die Methode &lt;code&gt;@RenderBody()&lt;/code&gt; gibt im Layout an, '''wo''' der Inhalt der jeweiligen View angezeigt wird.
* Die &lt;code&gt;Layout&lt;/code&gt;-Eigenschaft in einer View gibt den Pfad zur Layout-View an.
* Diese Eigenschaft kann auch '''dynamisch''' gesetzt werden (z.B. per Code).
* '''View''' und '''Layout View''' teilen sich das &lt;code&gt;ViewData&lt;/code&gt;-Objekt.
* '''CSS/JS-Dateien''', die im Layout eingebunden sind, gelten auch für den View-Inhalt, weil die View in das Layout „hineingemischt“ wird.

=== Beispiel: layout.cshtml ===
&lt;source lang="csharp"&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;@ViewBag.Title&lt;/title&gt;
    &lt;link rel="stylesheet" href="~/Content/site.css" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
        &lt;h1&gt;Meine Webseite&lt;/h1&gt;
    &lt;/header&gt;
    &lt;div&gt;
        @RenderBody()
    &lt;/div&gt;
    &lt;footer&gt;
        &amp;copy; 2025
    &lt;/footer&gt;
    &lt;script src="~/Scripts/site.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/source&gt;

=== Beispiel: View (Index.cshtml) ===
&lt;source lang="csharp"&gt;
@{
    ViewBag.Title = "Startseite";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Pfad zum Layout
}

&lt;h2&gt;Willkommen!&lt;/h2&gt;
&lt;p&gt;Dies ist der Inhalt der Startseite.&lt;/p&gt;
&lt;/source&gt;

=== Hinweise ===
* Mit &lt;code&gt;ViewData["xy"]&lt;/code&gt; oder &lt;code&gt;ViewBag.Xy&lt;/code&gt; können Daten an das Layout übergeben werden.
* Das Layout kann im Controller oder direkt in der View gesetzt werden.

----

'''Zusammengefasst:'''
Das Layout ist eine zentrale Design-Schablone, die das Aussehen und die Struktur für viele Seiten vorgibt – und &lt;code&gt;@RenderBody()&lt;/code&gt; ist die Einfüge-Markierung für den individuellen Seiteninhalt.</text>
      <sha1>e84mv7zj1nzn7nzx2kla24zyc4izl76</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Layout Views</title>
    <ns>3002</ns>
    <id>129</id>
    <revision>
      <id>444</id>
      <timestamp>2025-06-25T14:31:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Layout Views – Spickzettel (Cheat Sheet) ==  '''Layout View''' ist eine Webseite (z.B. ''layout.cshtml''), die für die Präsentationslogik-Vorlage zuständig ist (typischerweise ein HTML-Template mit Header, Sidebar, Footer usw.).  === Ablauf der View-Ausführung === # Die '''View''' wird zuerst ausgeführt. # Die '''Layout View''' wird danach mit dem Inhalt der View „gefüllt“. # Daten aus der View können somit auch im Layout genutzt werden.…“</comment>
      <origin>444</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2088" sha1="e84mv7zj1nzn7nzx2kla24zyc4izl76" xml:space="preserve">== Layout Views – Spickzettel (Cheat Sheet) ==

'''Layout View''' ist eine Webseite (z.B. ''layout.cshtml''), die für die Präsentationslogik-Vorlage zuständig ist (typischerweise ein HTML-Template mit Header, Sidebar, Footer usw.).

=== Ablauf der View-Ausführung ===
# Die '''View''' wird zuerst ausgeführt.
# Die '''Layout View''' wird danach mit dem Inhalt der View „gefüllt“.
# Daten aus der View können somit auch im Layout genutzt werden.

=== Merkmale von Layout Views ===
* Die Methode &lt;code&gt;@RenderBody()&lt;/code&gt; gibt im Layout an, '''wo''' der Inhalt der jeweiligen View angezeigt wird.
* Die &lt;code&gt;Layout&lt;/code&gt;-Eigenschaft in einer View gibt den Pfad zur Layout-View an.
* Diese Eigenschaft kann auch '''dynamisch''' gesetzt werden (z.B. per Code).
* '''View''' und '''Layout View''' teilen sich das &lt;code&gt;ViewData&lt;/code&gt;-Objekt.
* '''CSS/JS-Dateien''', die im Layout eingebunden sind, gelten auch für den View-Inhalt, weil die View in das Layout „hineingemischt“ wird.

=== Beispiel: layout.cshtml ===
&lt;source lang="csharp"&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;@ViewBag.Title&lt;/title&gt;
    &lt;link rel="stylesheet" href="~/Content/site.css" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
        &lt;h1&gt;Meine Webseite&lt;/h1&gt;
    &lt;/header&gt;
    &lt;div&gt;
        @RenderBody()
    &lt;/div&gt;
    &lt;footer&gt;
        &amp;copy; 2025
    &lt;/footer&gt;
    &lt;script src="~/Scripts/site.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/source&gt;

=== Beispiel: View (Index.cshtml) ===
&lt;source lang="csharp"&gt;
@{
    ViewBag.Title = "Startseite";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Pfad zum Layout
}

&lt;h2&gt;Willkommen!&lt;/h2&gt;
&lt;p&gt;Dies ist der Inhalt der Startseite.&lt;/p&gt;
&lt;/source&gt;

=== Hinweise ===
* Mit &lt;code&gt;ViewData["xy"]&lt;/code&gt; oder &lt;code&gt;ViewBag.Xy&lt;/code&gt; können Daten an das Layout übergeben werden.
* Das Layout kann im Controller oder direkt in der View gesetzt werden.

----

'''Zusammengefasst:'''
Das Layout ist eine zentrale Design-Schablone, die das Aussehen und die Struktur für viele Seiten vorgibt – und &lt;code&gt;@RenderBody()&lt;/code&gt; ist die Einfüge-Markierung für den individuellen Seiteninhalt.</text>
      <sha1>e84mv7zj1nzn7nzx2kla24zyc4izl76</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Täglich Layout Views Übungen</title>
    <ns>3002</ns>
    <id>130</id>
    <revision>
      <id>445</id>
      <timestamp>2025-06-25T15:01:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC – Layout Views Spickzettel =  == 1. Grundstruktur: Layout-View (_Layout.cshtml) == &lt;syntaxhighlight lang="html"&gt; &lt;!-- Views/Shared/_Layout.cshtml --&gt; &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;     &lt;title&gt;@ViewData["Title"]&lt;/title&gt;     &lt;link href="~/StyleSheet.css" rel="stylesheet" /&gt; &lt;/head&gt; &lt;body&gt;     &lt;div class="navbar"&gt;         &lt;a href="/"&gt;Home&lt;/a&gt;     &lt;/div&gt;     &lt;div class="container"&gt;         @RenderBody()     &lt;/div&gt; &lt;/body&gt; &lt;/html&gt; &lt;/syntaxh…“</comment>
      <origin>445</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1474" sha1="ocn9mn7mwovm55q2mifckeametstw0w" xml:space="preserve">= ASP.NET Core MVC – Layout Views Spickzettel =

== 1. Grundstruktur: Layout-View (_Layout.cshtml) ==
&lt;syntaxhighlight lang="html"&gt;
&lt;!-- Views/Shared/_Layout.cshtml --&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;@ViewData["Title"]&lt;/title&gt;
    &lt;link href="~/StyleSheet.css" rel="stylesheet" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="navbar"&gt;
        &lt;a href="/"&gt;Home&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="container"&gt;
        @RenderBody()
    &lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/syntaxhighlight&gt;

* '''@RenderBody()''': Platzhalter für den Inhalt der einzelnen View.

== 2. Verwendung in einer Content-View ==
&lt;syntaxhighlight lang="csharp"&gt;
@{
    Layout = "~/Views/Shared/_Layout.cshtml"; // Layout explizit festlegen
    ViewData["Title"] = "Home";
}
&lt;h1&gt;Home&lt;/h1&gt;
&lt;p&gt;Willkommen!&lt;/p&gt;
&lt;/syntaxhighlight&gt;

* '''Layout''': Legt verwendetes Layout fest.
* '''ViewData["Title"]''': Titel für Layout setzen.

== 3. _ViewStart.cshtml: Standardlayout setzen ==
&lt;syntaxhighlight lang="csharp"&gt;
@{
    Layout = "_Layout"; // Standard-Layout für alle Views im Verzeichnis
}
&lt;/syntaxhighlight&gt;

== 4. Dynamisches Layout (z.B. per ViewBag) ==
&lt;syntaxhighlight lang="csharp"&gt;
@{
    if (ViewBag.ProductID != null) {
        Layout = "~/Views/Shared/_ProductsLayout.cshtml";
    }
}
&lt;!-- Restlicher View-Code --&gt;
&lt;/syntaxhighlight&gt;

== 5. Sections &amp; @RenderSection ==
'''Layout-View:'''
&lt;syntaxhighlight lang="csharp"&gt;
@RenderSection("footer_section", false) // "false": Section ist optional
&lt;/syntaxhighlight&gt;</text>
      <sha1>ocn9mn7mwovm55q2mifckeametstw0w</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Ubuntu Software Pakete Installieren</title>
    <ns>3000</ns>
    <id>131</id>
    <revision>
      <id>446</id>
      <timestamp>2025-06-26T13:17:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== System aktualisieren und upgraden == Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:  # '''System aktualisieren'''  Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können. &lt;pre&gt; sudo apt update sudo apt upgrade &lt;/pre&gt;  == Weitere Pakete installieren == Mit folgende…“</comment>
      <origin>446</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2125" sha1="dyv1p3dlwgtrfwjtc0enzwttom7s52s" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>dyv1p3dlwgtrfwjtc0enzwttom7s52s</sha1>
    </revision>
    <revision>
      <id>447</id>
      <parentid>446</parentid>
      <timestamp>2025-06-26T20:39:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Composer Installieren */</comment>
      <origin>447</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1624" sha1="5617k1bg1zjz95ayscu40cgruwltkp4" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>5617k1bg1zjz95ayscu40cgruwltkp4</sha1>
    </revision>
    <revision>
      <id>448</id>
      <parentid>447</parentid>
      <timestamp>2025-06-26T21:28:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Weitere Pakete installieren */</comment>
      <origin>448</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1621" sha1="kflzvg8zh0rlxybav0vytbkx4cv5t57" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-sdk-9.0 # Installation des .NET SDK
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>kflzvg8zh0rlxybav0vytbkx4cv5t57</sha1>
    </revision>
    <revision>
      <id>449</id>
      <parentid>448</parentid>
      <timestamp>2025-06-26T21:31:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* .NET installieren */</comment>
      <origin>449</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1597" sha1="k4gne0cmtqilqbbd42bzlrqhki9r10x" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jdk
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>k4gne0cmtqilqbbd42bzlrqhki9r10x</sha1>
    </revision>
    <revision>
      <id>450</id>
      <parentid>449</parentid>
      <timestamp>2025-06-26T21:38:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java installieren */</comment>
      <origin>450</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1597" sha1="cwqq6isnpkqo4cna4gz3mocc3k3y7ev" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install -y dotnet-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>cwqq6isnpkqo4cna4gz3mocc3k3y7ev</sha1>
    </revision>
    <revision>
      <id>451</id>
      <parentid>450</parentid>
      <timestamp>2025-06-26T21:41:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* .NET installieren */</comment>
      <origin>451</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1706" sha1="61rjxyvzh3po08uesza2vhe3yxs9uaz" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt install -y dotnet-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>61rjxyvzh3po08uesza2vhe3yxs9uaz</sha1>
    </revision>
    <revision>
      <id>452</id>
      <parentid>451</parentid>
      <timestamp>2025-06-26T21:45:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* .NET installieren */</comment>
      <origin>452</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1714" sha1="7whkxkkbhishx9a7tyjkj2r448sywvd" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>7whkxkkbhishx9a7tyjkj2r448sywvd</sha1>
    </revision>
    <revision>
      <id>569</id>
      <parentid>452</parentid>
      <timestamp>2025-07-01T21:42:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* PHP Installieren */</comment>
      <origin>569</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2215" sha1="3a04dz7alph7uv3l9ign8rh56syb73l" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>3a04dz7alph7uv3l9ign8rh56syb73l</sha1>
    </revision>
    <revision>
      <id>617</id>
      <parentid>569</parentid>
      <timestamp>2025-07-09T12:41:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Composer Installieren */</comment>
      <origin>617</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1714" sha1="7whkxkkbhishx9a7tyjkj2r448sywvd" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd  tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt install -y openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>7whkxkkbhishx9a7tyjkj2r448sywvd</sha1>
    </revision>
    <revision>
      <id>710</id>
      <parentid>617</parentid>
      <timestamp>2025-08-01T03:10:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>710</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2219" sha1="81j5yvir9vcvfgjo6dky5l87s9wu2rd" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt-get install openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>81j5yvir9vcvfgjo6dky5l87s9wu2rd</sha1>
    </revision>
    <revision>
      <id>711</id>
      <parentid>710</parentid>
      <timestamp>2025-08-01T03:11:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Composer Installieren */</comment>
      <origin>711</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1718" sha1="s5owpraguf8u3y69rl3sgp60s92m2da" xml:space="preserve">== System aktualisieren und upgraden ==
Um Ihr Ubuntu-System zu aktualisieren und zu upgraden, können Sie die folgenden Befehle verwenden:

# '''System aktualisieren'''

Der Befehl &lt;code&gt;sudo apt update&lt;/code&gt; wird verwendet, um die Paketlisten für Upgrades zu aktualisieren, die installiert werden müssen, sowie für neue Pakete, die installiert werden können.
&lt;pre&gt;
sudo apt update
sudo apt upgrade
&lt;/pre&gt;

== Weitere Pakete installieren ==
Mit folgendem Befehl installieren Sie alle benötigten Pakete:
&lt;pre&gt;
sudo apt install screen locate libapache2-mod-tile renderd git tar unzip wget bzip2 apache2 lua5.1 mapnik-utils python3-mapnik python3-psycopg2 python3-yaml gdal-bin postgresql postgresql-contrib postgis postgresql-16-postgis-3 postgresql-16-postgis-3-scripts osm2pgsql net-tools curl osmosis snapd nginx
&lt;/pre&gt;

== Node.js installieren ==
Anleitung zur Installation von Node.js auf Ubuntu 24.04 LTS:
&lt;pre&gt;
sudo apt install curl
curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
source ~/.bashrc
nvm install 22
&lt;/pre&gt;

== .NET installieren ==
&lt;pre&gt;
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0
&lt;/pre&gt;

== Java installieren ==
&lt;pre&gt;
sudo apt update
sudo apt-get install openjdk-21-jre
java -version
&lt;/pre&gt;

== Python installieren ==
&lt;pre&gt;
sudo apt install python3 python3-pip python3-venv python-is-python3
&lt;/pre&gt;
== PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>s5owpraguf8u3y69rl3sgp60s92m2da</sha1>
    </revision>
  </page>
  <page>
    <title>Server:KachelServer</title>
    <ns>3000</ns>
    <id>132</id>
    <revision>
      <id>453</id>
      <timestamp>2025-06-26T13:39:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Ubuntu 24.04 LTS Installation == Diese Seite beschreibt, wie man alle notwendige Software installiert, einrichtet und konfiguriert, um einen eigenen Kachelserver zu betreiben. Diese Schritt-für-Schritt-Anleitung wurde für Ubuntu Linux 24.04 (Noble Numbat) geschrieben und im April 2024 getestet.  == Softwareinstallation == Der OSM-Kachelserver-Stack ist eine Sammlung von Programmen und Bibliotheken, die zusammenarbeiten, um einen Kachelserver zu erste…“</comment>
      <origin>453</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="13461" sha1="r8k4yfantqpjh5zjew2crnvwztprdfk" xml:space="preserve">== Ubuntu 24.04 LTS Installation ==
Diese Seite beschreibt, wie man alle notwendige Software installiert, einrichtet und konfiguriert, um einen eigenen Kachelserver zu betreiben. Diese Schritt-für-Schritt-Anleitung wurde für Ubuntu Linux 24.04 (Noble Numbat) geschrieben und im April 2024 getestet.

== Softwareinstallation ==
Der OSM-Kachelserver-Stack ist eine Sammlung von Programmen und Bibliotheken, die zusammenarbeiten, um einen Kachelserver zu erstellen. Wie so oft bei OpenStreetMap gibt es viele Wege, dieses Ziel zu erreichen, und fast alle Komponenten haben Alternativen, die verschiedene spezifische Vor- und Nachteile haben. Dieses Tutorial beschreibt die gängigste Version, die der auf den Haupt-Kachelserven von OpenStreetMap.org ähnlich ist.

Er besteht aus 5 Hauptkomponenten: mod_tile, renderd, mapnik, osm2pgsql und einer PostgreSQL/PostGIS-Datenbank. Mod_tile ist ein Apache-Modul, das zwischengespeicherte Kacheln bereitstellt und entscheidet, welche Kacheln neu gerendert werden müssen - entweder weil sie noch nicht zwischengespeichert sind oder weil sie veraltet sind. Renderd bietet ein Prioritätswarteschlangensystem für verschiedene Arten von Anfragen, um die Last von Renderanfragen zu verwalten und zu glätten. Mapnik ist die Softwarebibliothek, die das eigentliche Rendern durchführt und von renderd verwendet wird.

Dank der Arbeit der Debian- und Ubuntu-Maintainer, die neuesten Versionen dieser Pakete in Ubuntu 24.04 zu integrieren, sind diese Anweisungen etwas kürzer als einige frühere Versionen.

Diese Anweisungen wurden geschrieben und gegen einen neu installierten Ubuntu 24.04 Server getestet. Wenn Sie bereits andere Versionen einiger Software installiert haben (vielleicht haben Sie von einer früheren Version aktualisiert, oder Sie haben einige PPAs zum Laden eingerichtet), dann müssen Sie möglicherweise einige Anpassungen vornehmen.

Um diese Komponenten zu erstellen, müssen zunächst eine Vielzahl von Abhängigkeiten installiert werden.

Dieser Leitfaden geht davon aus, dass Sie alles von einem Nicht-Root-Benutzer über "sudo" ausführen. Versuchen Sie nicht, alles unten als Root zu tun; es wird nicht funktionieren.

Aktualisieren Sie zunächst Ihre Paketliste und installieren Sie die erforderlichen Pakete:

== Nutzer erstellen bei Ubuntu 24.04 LTS ==
Um einen neuen Nutzer in Ubuntu 24.04 LTS zu erstellen, können Sie die folgenden Schritte ausführen:

# Öffnen Sie ein Terminalfenster.
# Führen Sie den folgenden Befehl aus, um einen neuen Nutzer zu erstellen:

 &lt;code&gt;sudo adduser --force-badname _renderd
 sudo usermod -aG sudo _renderd
 exit&lt;/code&gt;

=== Login als neuer Nutzer ===
Der gegebene Codeblock zeigt, wie man sich als ein bestimmter Nutzer in einem Linux-System einloggt. Der Befehl &lt;code&gt;ssh&lt;/code&gt; wird verwendet, um eine sichere Shell-Sitzung zu starten.
 &lt;code&gt;ssh _renderd@localhost&lt;/code&gt;
An diesem Punkt wurden einige neue Konten hinzugefügt. Sie können sie mit "tail /etc/passwd" sehen. "postgres" wird zur Verwaltung der Datenbanken verwendet, die wir zur Speicherung von Daten für das Rendering verwenden. "_renderd" wird für den Renderd-Daemon verwendet, und wir müssen sicherstellen, dass viele der unten aufgeführten Befehle als dieser Benutzer ausgeführt werden.

Jetzt müssen Sie eine PostGIS-Datenbank erstellen. Die Standardwerte verschiedener Programme gehen davon aus, dass die Datenbank "gis" heißt und wir werden in diesem Tutorial die gleiche Konvention verwenden, obwohl dies nicht notwendig ist. Beachten Sie, dass "_renderd" unten dem Benutzer entspricht, unter dem der Renderd-Daemon ausgeführt wird.
 &lt;code&gt;sudo -u postgres -i
 createuser _renderd
 createdb -E UTF8 -O _renderd gis
 psql -d gis -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
 psql -d gis -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
 psql -d gis -c "ALTER TABLE geometry_columns OWNER TO _renderd;" # Rechte setzen
 psql -d gis -c "ALTER TABLE spatial_ref_sys OWNER TO _renderd;" # Rechte setzen
 exit&lt;/code&gt;
(Das wird Sie aus dem Benutzer "postgres" herausbringen)

== Mapnik ==
Mapnik wurde oben installiert. Wir werden überprüfen, ob es korrekt installiert wurde, indem wir Folgendes tun:
 &lt;code&gt;python3
 &gt;&gt;&gt; import mapnik
 &gt;&gt;&gt;&lt;/code&gt;
Wenn Sie keine Fehlermeldung erhalten, ist Mapnik korrekt installiert. Drücken Sie "Ctrl-D", um Python zu verlassen.

== Konfiguration des Stylesheets ==
Jetzt, da alle notwendige Software installiert ist, müssen Sie ein Stylesheet herunterladen und konfigurieren.

Der Stil, den wir hier verwenden, ist der, der von der "Standard"-Karte auf der Website openstreetmap.org verwendet wird. Er wurde gewählt, weil er gut dokumentiert ist und überall auf der Welt funktionieren sollte (einschließlich an Orten mit nicht-lateinischen Ortsnamen). Es gibt jedoch ein paar Nachteile - es ist sehr viel ein Kompromiss, der global funktionieren soll, und es ist ziemlich kompliziert zu verstehen und zu modifizieren, falls Sie das tun müssen.

Die Heimat von "OpenStreetMap Carto" im Web ist &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/&lt;/nowiki&gt; und es hat seine eigenen Installationsanweisungen unter &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto/blob/master/INSTALL.md&lt;/nowiki&gt; , obwohl wir hier alles abdecken, was getan werden muss.

Hier gehen wir davon aus, dass wir die Details des Stylesheets in einem Verzeichnis unter "src" im Home-Verzeichnis des jeweiligen Nicht-Root-Benutzerkontos speichern, das Sie verwenden; wir werden den Zugriff so ändern, dass der Benutzer "_renderd" darauf zugreifen kann.
 &lt;code&gt;mkdir ~/src
 cd ~/src
 git clone &lt;nowiki&gt;https://github.com/gravitystorm/openstreetmap-carto&lt;/nowiki&gt;
 cd openstreetmap-carto
 git pull --all
 git switch --detach v5.9.0&lt;/code&gt;
Als nächstes installieren wir eine geeignete Version des "carto"-Compilers.
 &lt;code&gt;npm install -g carto
 carto -v&lt;/code&gt;
Das sollte mit einer Zahl antworten, die mindestens so hoch ist wie:
     &lt;code&gt;1.2.0&lt;/code&gt;
Dann konvertieren wir das Carto-Projekt in ein Format, das Mapnik verstehen kann:
 &lt;code&gt;carto project.mml &gt; mapnik.xml&lt;/code&gt;
Sie haben jetzt ein Mapnik XML-Stylesheet unter /home/IhrBenutzerkonto/src/openstreetmap-carto/mapnik.xml .

== Daten laden ==
Zunächst laden wir nur eine kleine Menge an Testdaten. Es sind andere Download-Standorte verfügbar, aber "download.geofabrik.de" bietet eine breite Palette an Optionen. In diesem Beispiel laden wir die Daten für Schlewig Holstein herunter, die derzeit etwa 32Mb groß sind.

Navigieren Sie zu &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein.html&lt;/nowiki&gt; und beachten Sie das Datum "Diese Datei wurde zuletzt geändert" (z.B. "2024-04-24T20:21:40Z"). Wir werden das später benötigen, wenn wir die Datenbank mit den nachfolgenden Änderungen der Menschen an OpenStreetMap aktualisieren wollen. Laden Sie es wie folgt herunter:
 &lt;code&gt;mkdir ~/data
 cd ~/data
 wget &lt;nowiki&gt;https://download.geofabrik.de/europe/germany/schleswig-holstein-latest.osm.pbf&lt;/nowiki&gt;
 osmosis --read-pbf file=schleswig-holstein-latest.osm.pbf --bounding-box left=10.1141 right=10.3716 top=53.7136 bottom=53.6249 --write-pbf file=ahrensburg.pbf&lt;/code&gt;
 
Als nächstes müssen wir sicherstellen, dass der Benutzer "_renderd" auf das Stylesheet zugreifen kann. Um dies zu ermöglichen, benötigt er Zugriff auf den Ort, an dem Sie es heruntergeladen haben, und standardmäßig hat er keinen Zugriff auf Ihr Home-Verzeichnis. Wenn es sich in "src" unter Ihrem Benutzerkonto befindet, dann
 &lt;code&gt;chmod a+rx ~&lt;/code&gt;
wird funktionieren. Wenn Sie dies nicht tun möchten, können Sie es verschieben und die Verweise auf die Dateiorte in den nachfolgenden Befehlen ändern.

Der folgende Befehl wird die zuvor heruntergeladenen OpenStreetMap-Daten in die Datenbank einfügen. Dieser Schritt ist sehr intensiv in Bezug auf die Festplatten-I/O; der Import des gesamten Planeten kann je nach Hardware viele Stunden, Tage oder Wochen dauern. Für kleinere Extrakte ist die Importzeit entsprechend viel schneller, und Sie müssen möglicherweise mit verschiedenen -C-Werten experimentieren, um in den verfügbaren Speicher Ihres Rechners zu passen. Beachten Sie, dass der Benutzer "_renderd" für diesen Prozess verwendet wird.
 &lt;code&gt;sudo -u _renderd osm2pgsql -d gis --create --slim  -G --hstore --tag-transform-script ~/src/openstreetmap-carto/openstreetmap-carto.lua -C 2500 --number-processes 1 -S ~/src/openstreetmap-carto/openstreetmap-carto.style ~/data/ahrensburg.pbf&lt;/code&gt;

== Erstellen von Indizes ==
Seit der Version v5.3.0 müssen einige zusätzliche Indizes manuell angewendet werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f indexes.sql&lt;/code&gt;
Es sollte 16 Mal mit "CREATE INDEX" antworten.

== Datenbankfunktionen ==
In Version 5.9.0 von "OSM Carto" (veröffentlicht im Oktober 2024) müssen einige Funktionen manuell in die Datenbank geladen werden. Diese können jederzeit hinzugefügt / neu geladen werden mit:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 sudo -u _renderd psql -d gis -f functions.sql&lt;/code&gt;

== Shapefile-Download ==
Obwohl die meisten Daten, die zur Erstellung der Karte verwendet werden, direkt aus der oben heruntergeladenen OpenStreetMap-Datendatei stammen, werden immer noch einige Shapefiles für Dinge wie Ländergrenzen bei niedriger Zoomstufe benötigt. Um diese herunterzuladen und zu indizieren, verwenden wir das gleiche Konto wie zuvor:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 mkdir data
 sudo chown _renderd data
 sudo -u _renderd scripts/get-external-data.py&lt;/code&gt;
Dieser Prozess beinhaltet einen erheblichen Download und kann einige Zeit in Anspruch nehmen - während er läuft, wird nicht viel auf dem Bildschirm angezeigt. Einige Daten gehen direkt in die Datenbank, und einige gehen in ein "data"-Verzeichnis unter "openstreetmap-carto". Wenn hier ein Problem auftritt, dann sind die Natural Earth Daten möglicherweise verschoben worden - schauen Sie sich dieses Problem und andere Probleme bei Natural Earth für weitere Details an. Wenn Sie den Download-Ort von Natural Earth ändern müssen, ist Ihre Kopie dieser Datei diejenige, die Sie bearbeiten sollten.

== Schriftarten ==
In der Version v5.6.0 und höher von Carto müssen Schriftarten manuell installiert werden:
 &lt;code&gt;cd ~/src/openstreetmap-carto/
 scripts/get-fonts.sh&lt;/code&gt;
Unser Testdatenbereich (Ahrensburg) wurde sowohl wegen seiner geringen Größe als auch wegen einiger Ortsnamen in dieser Region ausgewählt, die Namen mit nicht-lateinischen Zeichen enthalten.

== Einrichten Ihres Webservers ==

=== Konfigurieren von renderd ===
Die Konfigurationsdatei für "renderd" unter Ubuntu 24.04 ist "/etc/renderd.conf". Bearbeiten Sie diese mit einem Texteditor wie nano:
 &lt;code&gt;sudo nano /etc/renderd.conf&lt;/code&gt;
Ändern Sie die folgenden Zeilen, um sie an Ihre Umgebung anzupassen:
 &lt;code&gt;[s2o]
 URI=/hot/
 XML=/home/_renderd/src/openstreetmap-carto/mapnik.xml
 HOST=localhost
 TILESIZE=256
 MAXZOOM=20&lt;/code&gt;
Der Pfad zur XML-Datei "/home/accountname/src/openstreetmap-carto/mapnik.xml" muss auf den tatsächlichen Pfad auf Ihrem System geändert werden. Sie können auch "[s2o]" und "URI=/hot/" ändern, wenn Sie möchten. Wenn Sie mehr als einen Satz von Kacheln von einem Server rendern möchten, können Sie das tun - fügen Sie einfach einen weiteren Abschnitt wie "[s2o]" mit einem anderen Namen hinzu, der auf einen anderen Kartenstil verweist. Wenn Sie möchten, dass es sich auf eine andere Datenbank als die Standarddatenbank "gis" bezieht, können Sie das tun, aber das liegt außerhalb des Rahmens dieses Dokuments. Wenn Sie nur etwa 2Gb Speicher haben, sollten Sie auch "num_threads" auf 2 reduzieren. "URI=/hot/" wurde gewählt, damit die hier generierten Kacheln leichter anstelle der HOT-Kachel-Ebene auf OpenStreetMap.org verwendet werden können. Sie können hier etwas anderes verwenden, aber "/hot/" ist genauso gut wie alles andere.

Als dieser Leitfaden zum ersten Mal geschrieben wurde, war die von Ubuntu 24.04 bereitgestellte Version von Mapnik 3.1, und die Einstellung "plugins_dir" im Abschnitt "[mapnik]" der Datei war "/usr/lib/mapnik/3.1/input". Dieses "3.1" könnte sich in der Zukunft wieder ändern. Wenn beim Versuch, Kacheln zu rendern, ein Fehler auftritt, wie dieser:
 &lt;code&gt;An error occurred while loading the map layer 's2o': Could not create datasource for type: 'postgis' (no datasource plugin directories have been successfully registered)  encountered during parsing of layer 'landcover-low-zoom'&lt;/code&gt;
Dann schauen Sie in "/usr/lib/mapnik" und sehen Sie, welche Versionsverzeichnisse es gibt, und schauen Sie auch in "/usr/lib/mapnik/(version)/input", um sicherzustellen, dass dort eine Datei "postgis.input" existiert.

Jetzt, da wir "renderd" gesagt haben, wie es auf Kachelrendering-Anfragen reagieren soll, müssen wir dem Apache-Webserver sagen, dass er sie senden soll. Leider wurde die Konfiguration dafür aus den neuesten Versionen von mod_tile entfernt. Sie kann jedoch derzeit von hier installiert werden
 &lt;code&gt;cd /etc/apache2/conf-available/
 sudo wget &lt;nowiki&gt;https://raw.githubusercontent.com/openstreetmap/mod_tile/python-implementation/etc/apache2/renderd.conf&lt;/nowiki&gt;
 sudo a2enconf renderd
 sudo systemctl reload apache2&lt;/code&gt;

=== Reload Apache ===
 &lt;code&gt;sudo nano /usr/lib/systemd/system/renderd.service
 sudo systemctl daemon-reload
 sudo systemctl restart renderd
 sudo systemctl restart apache2&lt;/code&gt;</text>
      <sha1>r8k4yfantqpjh5zjew2crnvwztprdfk</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Apache Port ändern</title>
    <ns>3000</ns>
    <id>133</id>
    <revision>
      <id>454</id>
      <timestamp>2025-06-26T13:41:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „&lt;code&gt;sudo nano /etc/apache2/ports.conf&lt;/code&gt; Ändern Sie den Port von 80 auf 8080  &lt;code&gt;Listen 8080&lt;/code&gt; Apache restarten  &lt;code&gt;sudo systemctl restart apache2“</comment>
      <origin>454</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="164" sha1="gr15p2kx141yv2lfpir3ww6jvq5etiv" xml:space="preserve">&lt;code&gt;sudo nano /etc/apache2/ports.conf&lt;/code&gt;
Ändern Sie den Port von 80 auf 8080
 &lt;code&gt;Listen 8080&lt;/code&gt;
Apache restarten
 &lt;code&gt;sudo systemctl restart apache2</text>
      <sha1>gr15p2kx141yv2lfpir3ww6jvq5etiv</sha1>
    </revision>
  </page>
  <page>
    <title>Server:SSL</title>
    <ns>3000</ns>
    <id>134</id>
    <revision>
      <id>455</id>
      <timestamp>2025-06-26T13:42:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:  # &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren. # &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver. # &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standardkonfiguration von Nginx, um Konflikte mit eigenen Einstellun…“</comment>
      <origin>455</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1782" sha1="bn1cv7n7shhys4wfredahwgdqj85u9l" xml:space="preserve">Die folgenden Befehle richten die Umgebung für die Nutzung von Certbot mit Nginx auf einem Linux-System ein:

# &lt;code&gt;sudo apt install snapd&lt;/code&gt;  Installiert den Snap-Daemon, der benötigt wird, um Snap-Pakete (wie Certbot) zu installieren.
# &lt;code&gt;sudo apt-get install nginx&lt;/code&gt;  Installiert den Nginx-Webserver.
# &lt;code&gt;sudo rm /etc/nginx/sites-enabled/default&lt;/code&gt;  Entfernt die Standardkonfiguration von Nginx, um Konflikte mit eigenen Einstellungen zu vermeiden.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt den laufenden Nginx-Dienst, damit Certbot später Zertifikate anfordern und konfigurieren kann.
# &lt;code&gt;sudo snap install --classic certbot&lt;/code&gt;  Installiert Certbot (das Tool zur Verwaltung von SSL-Zertifikaten von Let's Encrypt) über Snap.
# &lt;code&gt;sudo ln -s /snap/bin/certbot /usr/bin/certbot&lt;/code&gt;  Erstellt einen symbolischen Link, damit Certbot systemweit als Befehl verfügbar ist.
# &lt;code&gt;sudo systemctl stop nginx&lt;/code&gt;  Stoppt Nginx erneut, um sicherzustellen, dass der Webserver für die Zertifikatsanfrage nicht läuft.

Diese Schritte bereiten das System darauf vor, SSL-Zertifikate mit Certbot für Nginx zu erstellen und zu verwalten.

==Kurze Form==
&lt;pre&gt;
sudo apt install snapd
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
sudo systemctl stop nginx
sudo snap install --classic certbot
sudo ln -s /snap/bin/certbot /usr/bin/certbot
sudo systemctl stop nginx
&lt;/pre&gt;
Nach der Eingabe der obigen Befehle können Sie mit den folgenden Schritten fortfahren, um SSL-Zertifikate für Ihre Domains zu erstellen und Nginx wieder zu starten.
&lt;pre&gt;
sudo certbot certonly --standalone -d ahrensburg.city -d www.ahrensburg.city
sudo certbot certonly --standalone -d alterwiki.ahrensburg.city
sudo systemctl start nginx
&lt;/pre&gt;</text>
      <sha1>bn1cv7n7shhys4wfredahwgdqj85u9l</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Nginx Einstellung</title>
    <ns>3000</ns>
    <id>135</id>
    <revision>
      <id>456</id>
      <timestamp>2025-06-26T13:45:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] == Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:   sudo nano /etc/nginx/conf.d/start.conf Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen ei…“</comment>
      <origin>456</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="626" sha1="jcpw7usuhmiotqyjc921rhs1h1qjgfv" xml:space="preserve">
== Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] ==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
  sudo nano /etc/nginx/conf.d/start.conf
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei</text>
      <sha1>jcpw7usuhmiotqyjc921rhs1h1qjgfv</sha1>
    </revision>
    <revision>
      <id>457</id>
      <parentid>456</parentid>
      <timestamp>2025-06-26T13:46:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>457</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="890" sha1="csfsk5bcy9cwhpt3655tou43epotmfx" xml:space="preserve">
== Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] ==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
  sudo nano /etc/nginx/conf.d/start.conf
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei


Hinweis:

Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
sudo nginx -t
sudo systemctl reload nginx
Prüfen Sie mit sudo nginx -t immer zuerst, ob die Konfiguration fehlerfrei ist.</text>
      <sha1>csfsk5bcy9cwhpt3655tou43epotmfx</sha1>
    </revision>
    <revision>
      <id>458</id>
      <parentid>457</parentid>
      <timestamp>2025-06-26T13:48:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>458</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1939" sha1="lc5k5xz5fx3xa6denzs777kfv9dck23" xml:space="preserve">
== Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] ==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
  sudo nano /etc/nginx/conf.d/start.conf
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei

&lt;pre&gt;
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/mediawiki;
    index index.php index.html index.htm;
   location /hot {
        proxy_pass http://localhost:8080/hot;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

location /karte {
    alias /var/www/karte;
    autoindex on;
}
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}
server {
    listen 80;
    listen [::]:80;
    server_name ahrensburg.city;
    return 301 https://$host$request_uri;
}


&lt;/pre&gt;

Hinweis:

Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
sudo nginx -t
sudo systemctl reload nginx
Prüfen Sie mit sudo nginx -t immer zuerst, ob die Konfiguration fehlerfrei ist.</text>
      <sha1>lc5k5xz5fx3xa6denzs777kfv9dck23</sha1>
    </revision>
    <revision>
      <id>459</id>
      <parentid>458</parentid>
      <timestamp>2025-06-26T13:50:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Erstellen Sie eine neue Konfigurationsdatei[Bearbeiten | Quelltext bearbeiten] */</comment>
      <origin>459</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1903" sha1="kxnbwyb9fc9n7bbpyo1svfkijqeo1g1" xml:space="preserve">
== Erstellen Sie eine neue Konfigurationsdatei==
Um eine neue Konfigurationsdatei für Nginx zu erstellen, öffnen Sie ein Terminal und geben Sie folgenden Befehl ein:
  sudo nano /etc/nginx/conf.d/start.conf
Dies öffnet den Texteditor `nano` mit Root-Rechten und erstellt (oder bearbeitet) die Datei `start.conf` im Verzeichnis `/etc/nginx/conf.d/`. In dieser Datei können Sie Ihre gewünschten Nginx-Konfigurationen eintragen. Nach dem Bearbeiten speichern Sie die Datei mit `Strg + O`, bestätigen mit `Enter` und schließen den Editor mit `Strg + X`.

Folgende Text eingeben in Datei

&lt;pre&gt;
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ahrensburg.city;
    ssl_certificate /etc/letsencrypt/live/ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ahrensburg.city/privkey.pem;
     root /var/www/mediawiki;
    index index.php index.html index.htm;
   location /hot {
        proxy_pass http://localhost:8080/hot;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

location /karte {
    alias /var/www/karte;
    autoindex on;
}
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}
server {
    listen 80;
    listen [::]:80;
    server_name ahrensburg.city;
    return 301 https://$host$request_uri;
}


&lt;/pre&gt;

Hinweis:

Nach dem Speichern und Schließen der Datei müssen Sie die Nginx-Konfiguration neu laden, damit die Änderungen wirksam werden:
sudo nginx -t
sudo systemctl reload nginx
Prüfen Sie mit sudo nginx -t immer zuerst, ob die Konfiguration fehlerfrei ist.</text>
      <sha1>kxnbwyb9fc9n7bbpyo1svfkijqeo1g1</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Mediawiki Installieren</title>
    <ns>3000</ns>
    <id>136</id>
    <revision>
      <id>460</id>
      <timestamp>2025-06-26T13:57:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == Postgres Datenbank erstellen ==  &lt;code&gt;sudo -u postgres -i  createdb -E UTF8 -O thorsten mediawiki  psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten    exit&lt;/code&gt;  == PHP installieren ==  &lt;code&gt;sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-xmlrpc php-zip php-intl -y&lt;/code&gt;  == Mediawiki installieren ==  &lt;code&gt;cd /var/www  sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawi…“</comment>
      <origin>460</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1053" sha1="9rr1kowfgc8q675s6zxm7u74g8gg1n5" xml:space="preserve">
== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten
 
 exit&lt;/code&gt;

== PHP installieren ==
 &lt;code&gt;sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-xmlrpc php-zip php-intl -y&lt;/code&gt;

== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Lesbare URLs konfiguriern in mediawiki ==
 &lt;code&gt;sudo nano /var/www/mediawiki/LocalSettings.php&lt;/code&gt;

 &lt;code&gt;$wgScriptPath = "";
 $wgArticlePath = "/$1";
 $wgUsePathInfo = true;&lt;/code&gt;</text>
      <sha1>9rr1kowfgc8q675s6zxm7u74g8gg1n5</sha1>
    </revision>
    <revision>
      <id>461</id>
      <parentid>460</parentid>
      <timestamp>2025-06-26T13:57:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>461</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="902" sha1="47d7hnbnfx04duap33fgobyglbkmcvl" xml:space="preserve">
== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten
 
 exit&lt;/code&gt;


== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Lesbare URLs konfiguriern in mediawiki ==
 &lt;code&gt;sudo nano /var/www/mediawiki/LocalSettings.php&lt;/code&gt;

 &lt;code&gt;$wgScriptPath = "";
 $wgArticlePath = "/$1";
 $wgUsePathInfo = true;&lt;/code&gt;</text>
      <sha1>47d7hnbnfx04duap33fgobyglbkmcvl</sha1>
    </revision>
  </page>
  <page>
    <title>Builder:Hauptseite</title>
    <ns>3010</ns>
    <id>137</id>
    <revision>
      <id>462</id>
      <timestamp>2025-06-26T22:12:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Builder== &lt;pre&gt;  rsync -avz /quelle/ user@server:/ziel/“</comment>
      <origin>462</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="57" sha1="sgzjojsy4ephtkdo0vjp7n0fd2xto2o" xml:space="preserve">==Builder==
&lt;pre&gt;

rsync -avz /quelle/ user@server:/ziel/</text>
      <sha1>sgzjojsy4ephtkdo0vjp7n0fd2xto2o</sha1>
    </revision>
  </page>
  <page>
    <title>Backup:Hautptseite</title>
    <ns>3012</ns>
    <id>138</id>
    <revision>
      <id>463</id>
      <timestamp>2025-06-27T06:18:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Beispiel Site==“</comment>
      <origin>463</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="17" sha1="n2vzddr1ggrq8hrpxh4zrtqe5pjgpmm" xml:space="preserve">==Beispiel Site==</text>
      <sha1>n2vzddr1ggrq8hrpxh4zrtqe5pjgpmm</sha1>
    </revision>
    <revision>
      <id>465</id>
      <parentid>463</parentid>
      <timestamp>2025-06-28T07:57:57Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel Site */</comment>
      <origin>465</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="243" sha1="isontp78pvxmu9rws1cfd1cr2sxvutz" xml:space="preserve">==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /pfad/zum/dev/mediawiki/ \
  user@prod:/pfad/zum/prod/mediawiki/</text>
      <sha1>isontp78pvxmu9rws1cfd1cr2sxvutz</sha1>
    </revision>
    <revision>
      <id>466</id>
      <parentid>465</parentid>
      <timestamp>2025-06-28T08:05:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>466</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="239" sha1="gk9tryh4qpdj85cvdkx1nlqa3vyycou" xml:space="preserve">==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/

&lt;/pre&gt;</text>
      <sha1>gk9tryh4qpdj85cvdkx1nlqa3vyycou</sha1>
    </revision>
    <revision>
      <id>467</id>
      <parentid>466</parentid>
      <timestamp>2025-06-28T08:34:22Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>467</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="229" sha1="7vncgabihcbcdq5m0er8lu25mjwec7p" xml:space="preserve">==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/

&lt;/pre&gt;</text>
      <sha1>7vncgabihcbcdq5m0er8lu25mjwec7p</sha1>
    </revision>
    <revision>
      <id>472</id>
      <parentid>467</parentid>
      <timestamp>2025-06-28T09:52:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>472</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="396" sha1="qqynb62y8cev130r0qlv65oczra8sgh" xml:space="preserve">==Mediawiki

&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/

&lt;/pre&gt;
==Moodle==
&lt;pre&gt;
rsync -avz --delete \
  --exclude='config.php' \
  --exclude='.git/' \
  --exclude='tests/' \
  /var/www/moodle/ deployer@prod.example.com:/var/www
&lt;/pre&gt;</text>
      <sha1>qqynb62y8cev130r0qlv65oczra8sgh</sha1>
    </revision>
    <revision>
      <id>473</id>
      <parentid>472</parentid>
      <timestamp>2025-06-28T10:31:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>473</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="414" sha1="3inemqcwim01yp8prffxwp5oe9mn6bd" xml:space="preserve">==Mediawiki==

&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki

&lt;/pre&gt;
==Moodle==
&lt;pre&gt;
rsync -avz --delete \
  --exclude='config.php' \
  --exclude='.git/' \
  --exclude='tests/' \
  /var/www/moodle/ deployer@prod.example.com:/var/www/moodle
&lt;/pre&gt;</text>
      <sha1>3inemqcwim01yp8prffxwp5oe9mn6bd</sha1>
    </revision>
    <revision>
      <id>478</id>
      <parentid>473</parentid>
      <timestamp>2025-06-28T11:46:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle */</comment>
      <origin>478</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="441" sha1="omd4xlfvnynl1k3ouar4b7jg2t5b504" xml:space="preserve">==Mediawiki==

&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki

&lt;/pre&gt;
==Moodle==
&lt;pre&gt;
rsync -avz --delete \
  --exclude='config.php' \
  --exclude='.git/' \
  --exclude '.gitignore' \
  --exclude='tests/' \
  /var/www/moodle/ deployer@prod.example.com:/var/www/moodle
&lt;/pre&gt;</text>
      <sha1>omd4xlfvnynl1k3ouar4b7jg2t5b504</sha1>
    </revision>
    <revision>
      <id>479</id>
      <parentid>478</parentid>
      <timestamp>2025-06-28T15:24:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>479</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1057" sha1="if2u5q67nsz24s07w7c901zilkqtlmg" xml:space="preserve">==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/

&lt;/pre&gt;

==Moodle Einstellungen für Nginx auf dem lokalen Rechner==

Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:

&lt;pre&gt;
server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

Stelle sicher, dass die Pfade zu deiner PHP-Version und zum Moodle-Verzeichnis passen.</text>
      <sha1>if2u5q67nsz24s07w7c901zilkqtlmg</sha1>
    </revision>
    <revision>
      <id>505</id>
      <parentid>479</parentid>
      <timestamp>2025-06-29T13:53:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>505</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3763" sha1="8g47kl1rxjyjtkkjaaovz28k0ewuqbz" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/

&lt;/pre&gt;

==Moodle Einstellungen für Nginx auf dem lokalen Rechner==

Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:

&lt;pre&gt;
server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

Stelle sicher, dass die Pfade zu deiner PHP-Version und zum Moodle-Verzeichnis passen.</text>
      <sha1>8g47kl1rxjyjtkkjaaovz28k0ewuqbz</sha1>
    </revision>
    <revision>
      <id>609</id>
      <parentid>505</parentid>
      <timestamp>2025-07-08T07:51:01Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel Site */</comment>
      <origin>609</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3893" sha1="nzno6tnd2sc92xdo2wrp3o6luj2azyo" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Moodle Einstellungen für Nginx auf dem lokalen Rechner==

Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:

&lt;pre&gt;
server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

Stelle sicher, dass die Pfade zu deiner PHP-Version und zum Moodle-Verzeichnis passen.</text>
      <sha1>nzno6tnd2sc92xdo2wrp3o6luj2azyo</sha1>
    </revision>
    <revision>
      <id>653</id>
      <parentid>609</parentid>
      <timestamp>2025-07-13T20:43:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle Einstellungen für Nginx auf dem lokalen Rechner */</comment>
      <origin>653</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3075" sha1="j9dg8teamqxshw6eyozil0j0tsltlea" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;</text>
      <sha1>j9dg8teamqxshw6eyozil0j0tsltlea</sha1>
    </revision>
    <revision>
      <id>654</id>
      <parentid>653</parentid>
      <timestamp>2025-07-13T20:44:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel Site */</comment>
      <origin>654</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3097" sha1="r5higc941yqq3im0z0e88coqtsxsbym" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Backup erstellen==</text>
      <sha1>r5higc941yqq3im0z0e88coqtsxsbym</sha1>
    </revision>
    <revision>
      <id>655</id>
      <parentid>654</parentid>
      <timestamp>2025-07-13T20:49:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Backup erstellen */</comment>
      <origin>655</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3115" sha1="0yjx2weh3j38kf9s4kok9bloeslbq8f" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Backup erstellen==
cd /home/thorsten</text>
      <sha1>0yjx2weh3j38kf9s4kok9bloeslbq8f</sha1>
    </revision>
    <revision>
      <id>656</id>
      <parentid>655</parentid>
      <timestamp>2025-07-13T20:51:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Backup erstellen */</comment>
      <origin>656</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3130" sha1="tj074fxmut6uf0xfvkhjx6lqputgc06" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten


&lt;/pre&gt;</text>
      <sha1>tj074fxmut6uf0xfvkhjx6lqputgc06</sha1>
    </revision>
    <revision>
      <id>657</id>
      <parentid>656</parentid>
      <timestamp>2025-07-13T20:53:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Backup erstellen */</comment>
      <origin>657</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3167" sha1="s6hiojavklmqzoq4amoadp20ze0hjsw" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten
gh repo clone thorstenkloehn/Download

&lt;/pre&gt;</text>
      <sha1>s6hiojavklmqzoq4amoadp20ze0hjsw</sha1>
    </revision>
    <revision>
      <id>658</id>
      <parentid>657</parentid>
      <timestamp>2025-07-13T20:56:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Backup erstellen */</comment>
      <origin>658</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3221" sha1="1lsdul4qxwdrpkvtsppq8yr4w0bmpcq" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten
gh repo clone thorstenkloehn/Download
sudo chmod 777 -R Download
cd /home/thorsten/Download

&lt;/pre&gt;</text>
      <sha1>1lsdul4qxwdrpkvtsppq8yr4w0bmpcq</sha1>
    </revision>
    <revision>
      <id>659</id>
      <parentid>658</parentid>
      <timestamp>2025-07-13T20:57:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Backup erstellen */</comment>
      <origin>659</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3265" sha1="h98tex9qhxdoj0lvz3q108x0sy03zrw" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten
gh repo clone thorstenkloehn/Download
sudo chmod 777 -R Download
cd /home/thorsten/Download
sudo rm /home/thorsten/Download/pagedump.xml
&lt;/pre&gt;</text>
      <sha1>h98tex9qhxdoj0lvz3q108x0sy03zrw</sha1>
    </revision>
    <revision>
      <id>660</id>
      <parentid>659</parentid>
      <timestamp>2025-07-13T20:57:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Backup erstellen */</comment>
      <origin>660</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3398" sha1="76amknnbumei03zcx5gukg9s5qo603e" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten
gh repo clone thorstenkloehn/Download
sudo chmod 777 -R Download
cd /home/thorsten/Download
sudo rm /home/thorsten/Download/pagedump.xml
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/Download/pagedump.xml
&lt;/pre&gt;</text>
      <sha1>76amknnbumei03zcx5gukg9s5qo603e</sha1>
    </revision>
    <revision>
      <id>661</id>
      <parentid>660</parentid>
      <timestamp>2025-07-13T20:59:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Backup erstellen */</comment>
      <origin>661</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3451" sha1="ad3p6avihnb3qc7az976x11m6oz51dd" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/steffi/pagedump.xml
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten
gh repo clone thorstenkloehn/Download
sudo chmod 777 -R Download
cd /home/thorsten/Download
sudo rm /home/thorsten/Download/pagedump.xml
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/Download/pagedump.xml
git add pagedump.xml
git commit -m "Backup"
git push
&lt;/pre&gt;</text>
      <sha1>ad3p6avihnb3qc7az976x11m6oz51dd</sha1>
    </revision>
    <revision>
      <id>662</id>
      <parentid>661</parentid>
      <timestamp>2025-07-13T21:08:09Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Beispiel Site */</comment>
      <origin>662</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3320" sha1="kwvqjayf3ls5n3iatru5nkhvrqua1ky" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten
gh repo clone thorstenkloehn/Download
sudo chmod 777 -R Download
cd /home/thorsten/Download
sudo rm /home/thorsten/Download/pagedump.xml
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/Download/pagedump.xml
git add pagedump.xml
git commit -m "Backup"
git push
&lt;/pre&gt;</text>
      <sha1>kwvqjayf3ls5n3iatru5nkhvrqua1ky</sha1>
    </revision>
    <revision>
      <id>663</id>
      <parentid>662</parentid>
      <timestamp>2025-07-13T21:19:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Backup erstellen */</comment>
      <origin>663</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5538" sha1="j0c8vlf74jtlrua5eoj6mdd7riphmj1" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten
gh repo clone thorstenkloehn/Download
sudo chmod 777 -R Download
cd /home/thorsten/Download
sudo rm /home/thorsten/Download/pagedump.xml
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/Download/pagedump.xml
git add pagedump.xml
git commit -m "Backup"
git push
&lt;/pre&gt;

==Wiedererstellung==
pre&gt;


define("NS_SCHWACHSTELLEN", 3006);
define("NS_SCHWACHSTELLEN_TALK", 3007);
$wgExtraNamespaces[NS_SCHWACHSTELLEN] = "Schwachstellen";
$wgExtraNamespaces[NS_SCHWACHSTELLEN_TALK] = "Schwachstellen Diskussion";
$wgNamespacesWithSubpages[NS_SCHWACHSTELLEN] = true;

// VisualEditor für Schwachstellen-Namensraum aktivieren
$wgVisualEditorAvailableNamespaces[NS_SCHWACHSTELLEN] = true;
$wgVisualEditorAvailableNamespaces[NS_SCHWACHSTELLEN_TALK] = true;
// Server-Namensraum
define("NS_SERVER", 3000);
define("NS_SERVER_TALK", 3001);
$wgExtraNamespaces[NS_SERVER] = "Server";
$wgExtraNamespaces[NS_SERVER_TALK] = "Server Diskussion";
$wgNamespacesWithSubpages[NS_SERVER] = true;

// Kurse-Namensraum
define("NS_KURSE", 3002);
define("NS_KURSE_TALK", 3003);
$wgExtraNamespaces[NS_KURSE] = "Kurse";
$wgExtraNamespaces[NS_KURSE_TALK] = "Kurse Diskussion";
$wgNamespacesWithSubpages[NS_KURSE] = true;


// AI-Namensraum
define("NS_AI", 3004);
define("NS_AI_TALK", 3005);
$wgExtraNamespaces[NS_AI] = "Ai";
$wgExtraNamespaces[NS_AI_TALK] = "Ai Diskussion";
$wgNamespacesWithSubpages[NS_AI] = true;

// VisualEditor für die neuen Namensräume aktivieren
$wgVisualEditorAvailableNamespaces[NS_SERVER] = true;
$wgVisualEditorAvailableNamespaces[NS_SERVER_TALK] = true;
$wgVisualEditorAvailableNamespaces[NS_KURSE] = true;
$wgVisualEditorAvailableNamespaces[NS_KURSE_TALK] = true;
$wgVisualEditorAvailableNamespaces[NS_AI] = true;
$wgVisualEditorAvailableNamespaces[NS_AI_TALK] = true;

define("NS_IDE", 3008);
define("NS_IDE_TALK", 3009);
$wgExtraNamespaces[NS_IDE] = "IDE";
$wgExtraNamespaces[NS_IDE_TALK] = "IDE Diskussion";
$wgNamespacesWithSubpages[NS_IDE] = true;
$wgVisualEditorAvailableNamespaces[NS_IDE] = true;
$wgVisualEditorAvailableNamespaces[NS_IDE_TALK] = true;
define("NS_BUILDER", 3010);
define("NS_BUILDER_TALK", 3011);

$wgExtraNamespaces[NS_BUILDER] = "Builder";
$wgExtraNamespaces[NS_BUILDER_TALK] = "Builder_Diskussion";
$wgVisualEditorAvailableNamespaces[] = NS_BUILDER;
define("NS_BACKUP", 3012);
define("NS_BACKUP_TALK", 3013);

$wgExtraNamespaces[NS_BACKUP] = "Backup";
$wgExtraNamespaces[NS_BACKUP_TALK] = "Backup_Diskussion";
$wgVisualEditorAvailableNamespaces[] = NS_BACKUP;</text>
      <sha1>j0c8vlf74jtlrua5eoj6mdd7riphmj1</sha1>
    </revision>
    <revision>
      <id>664</id>
      <parentid>663</parentid>
      <timestamp>2025-07-13T21:20:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Wiedererstellung */</comment>
      <origin>664</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5546" sha1="i8xheqv50hdp7tgfmrhcfkm40787ulg" xml:space="preserve">==SSH Key Schlüssel Anlegen==
&lt;pre&gt;
# Erstellt einen neuen SSH-Schlüssel (falls noch nicht vorhanden)
ssh-keygen -t rsa -b 4096

# Kopiert den öffentlichen Schlüssel auf den Zielserver
# Ersetzen Sie 'benutzer' und 'hostname' durch die entsprechenden Werte
ssh-copy-id benutzer@hostname

# Falls der SSH-Server einen anderen Port als 22 verwendet
# ssh-copy-id -p &lt;port&gt; benutzer@hostname

=== Vorteile ===
* '''Sicherheit:''' Deutlich sicherer als passwortbasierte Authentifizierung. SSH-Schlüssel sind wesentlich komplexer und widerstandsfähiger gegen Brute-Force-Angriffe.
* '''Bequemlichkeit:''' Ermöglicht passwortloses Anmelden, was die Automatisierung von Aufgaben (z.B. Backups mit rsync, wie im unteren Beispiel) erheblich vereinfacht.

=== Nachteile ===
* '''Schlüsselverwaltung:''' Der private Schlüssel muss absolut sicher aufbewahrt werden. Bei Diebstahl erhält ein Angreifer Zugriff auf alle Systeme, auf denen der öffentliche Schlüssel hinterlegt ist.
* '''Einmaliger Einrichtungsaufwand:''' Die Ersteinrichtung ist etwas aufwändiger als die reine Verwendung eines Passworts.
* '''Verlust des Schlüssels:''' Bei Verlust des privaten Schlüssels (ohne Backup) geht der Zugriff verloren und muss über einen anderen Weg wiederhergestellt werden.
=== Was tun, wenn der Zugriff nicht mehr möglich ist? ===
Wenn Sie einen neuen Rechner einrichten oder den Zugriff über Ihren bisherigen Schlüssel verloren haben, gibt es mehrere Möglichkeiten:

* '''Privaten Schlüssel vom alten Rechner kopieren:'''
** Der sicherste und einfachste Weg ist, Ihren privaten Schlüssel (z.B. `~/.ssh/id_rsa`) von Ihrem alten auf Ihren neuen Rechner zu kopieren.
** Stellen Sie sicher, dass die Datei auf dem neuen System die richtigen Berechtigungen hat (`chmod 600 ~/.ssh/id_rsa`), damit sie von SSH akzeptiert wird.

* '''Neuen Schlüssel generieren und hinzufügen:'''
** Erstellen Sie auf Ihrem neuen Rechner ein neues Schlüsselpaar (wie oben beschrieben mit `ssh-keygen`).
** Sie müssen den neuen '''öffentlichen''' Schlüssel (`~/.ssh/id_rsa.pub`) zum Server hinzufügen. Dafür benötigen Sie vorübergehend eine andere Zugriffsmöglichkeit auf den Server (z.B. Passwort-Login, Zugriff über einen anderen Rechner oder eine Konsole Ihres Hosters), um den Inhalt der `.pub`-Datei in die `~/.ssh/authorized_keys`-Datei auf dem Server einzufügen.

* '''Zugriff über den Hoster wiederherstellen:'''
** Wenn keine der oben genannten Methoden möglich ist, müssen Sie sich an Ihren Server-Hoster wenden. Dieser kann Ihnen in der Regel über ein Web-Interface (Rescue-System, VNC/KVM-Konsole) Zugriff gewähren, sodass Sie einen neuen öffentlichen Schlüssel hinterlegen können.


&lt;/pre&gt;

==Beispiel Site==
&lt;pre&gt;

rsync -avz --delete \
  --exclude 'LocalSettings.php' \
  --exclude '.git/' \
  --exclude '.gitignore' \
  --exclude 'images/' \
  --exclude 'cache/' \
  /var/www/mediawiki \
  user@prod:/var/www/mediawiki/
&lt;/pre&gt;

==Backup erstellen==
&lt;pre&gt;
cd /home/thorsten
gh repo clone thorstenkloehn/Download
sudo chmod 777 -R Download
cd /home/thorsten/Download
sudo rm /home/thorsten/Download/pagedump.xml
ssh root@ahrensburg.city "php /var/www/mediawiki/mediawiki/maintenance/dumpBackup.php --full" &gt; /home/thorsten/Download/pagedump.xml
git add pagedump.xml
git commit -m "Backup"
git push
&lt;/pre&gt;

==Wiedererstellung==
&lt;pre&gt;


define("NS_SCHWACHSTELLEN", 3006);
define("NS_SCHWACHSTELLEN_TALK", 3007);
$wgExtraNamespaces[NS_SCHWACHSTELLEN] = "Schwachstellen";
$wgExtraNamespaces[NS_SCHWACHSTELLEN_TALK] = "Schwachstellen Diskussion";
$wgNamespacesWithSubpages[NS_SCHWACHSTELLEN] = true;

// VisualEditor für Schwachstellen-Namensraum aktivieren
$wgVisualEditorAvailableNamespaces[NS_SCHWACHSTELLEN] = true;
$wgVisualEditorAvailableNamespaces[NS_SCHWACHSTELLEN_TALK] = true;
// Server-Namensraum
define("NS_SERVER", 3000);
define("NS_SERVER_TALK", 3001);
$wgExtraNamespaces[NS_SERVER] = "Server";
$wgExtraNamespaces[NS_SERVER_TALK] = "Server Diskussion";
$wgNamespacesWithSubpages[NS_SERVER] = true;

// Kurse-Namensraum
define("NS_KURSE", 3002);
define("NS_KURSE_TALK", 3003);
$wgExtraNamespaces[NS_KURSE] = "Kurse";
$wgExtraNamespaces[NS_KURSE_TALK] = "Kurse Diskussion";
$wgNamespacesWithSubpages[NS_KURSE] = true;


// AI-Namensraum
define("NS_AI", 3004);
define("NS_AI_TALK", 3005);
$wgExtraNamespaces[NS_AI] = "Ai";
$wgExtraNamespaces[NS_AI_TALK] = "Ai Diskussion";
$wgNamespacesWithSubpages[NS_AI] = true;

// VisualEditor für die neuen Namensräume aktivieren
$wgVisualEditorAvailableNamespaces[NS_SERVER] = true;
$wgVisualEditorAvailableNamespaces[NS_SERVER_TALK] = true;
$wgVisualEditorAvailableNamespaces[NS_KURSE] = true;
$wgVisualEditorAvailableNamespaces[NS_KURSE_TALK] = true;
$wgVisualEditorAvailableNamespaces[NS_AI] = true;
$wgVisualEditorAvailableNamespaces[NS_AI_TALK] = true;

define("NS_IDE", 3008);
define("NS_IDE_TALK", 3009);
$wgExtraNamespaces[NS_IDE] = "IDE";
$wgExtraNamespaces[NS_IDE_TALK] = "IDE Diskussion";
$wgNamespacesWithSubpages[NS_IDE] = true;
$wgVisualEditorAvailableNamespaces[NS_IDE] = true;
$wgVisualEditorAvailableNamespaces[NS_IDE_TALK] = true;
define("NS_BUILDER", 3010);
define("NS_BUILDER_TALK", 3011);

$wgExtraNamespaces[NS_BUILDER] = "Builder";
$wgExtraNamespaces[NS_BUILDER_TALK] = "Builder_Diskussion";
$wgVisualEditorAvailableNamespaces[] = NS_BUILDER;
define("NS_BACKUP", 3012);
define("NS_BACKUP_TALK", 3013);

$wgExtraNamespaces[NS_BACKUP] = "Backup";
$wgExtraNamespaces[NS_BACKUP_TALK] = "Backup_Diskussion";
$wgVisualEditorAvailableNamespaces[] = NS_BACKUP;
&lt;/pre&gt;</text>
      <sha1>i8xheqv50hdp7tgfmrhcfkm40787ulg</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Partial Views</title>
    <ns>3002</ns>
    <id>139</id>
    <revision>
      <id>464</id>
      <timestamp>2025-06-27T12:53:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= Partial Views in ASP.NET Core MVC – Spickzettel =  == 🧩 Was ist eine Partial View? == Eine '''Partial View''' ist ein wiederverwendbares Razor-Markup-Fragment (.cshtml), das in andere Views eingebettet werden kann. Sie dient der Strukturierung und Wiederverwendung von UI-Komponenten (z. B. Listen, Formulare, Widgets).  == ✅ Vorteile == * '''Wiederverwendbarkeit''': Einmal erstellt, mehrfach einsetzbar * '''Modularität''': Zerlegung großer Vie…“</comment>
      <origin>464</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4487" sha1="gmdjj6w77354mn1jfrgrv7hnj6ewgfh" xml:space="preserve">= Partial Views in ASP.NET Core MVC – Spickzettel =

== 🧩 Was ist eine Partial View? ==
Eine '''Partial View''' ist ein wiederverwendbares Razor-Markup-Fragment (.cshtml), das in andere Views eingebettet werden kann.
Sie dient der Strukturierung und Wiederverwendung von UI-Komponenten (z. B. Listen, Formulare, Widgets).

== ✅ Vorteile ==
* '''Wiederverwendbarkeit''': Einmal erstellt, mehrfach einsetzbar
* '''Modularität''': Zerlegung großer Views in kleine Bestandteile
* '''Dynamik''': Daten können flexibel übergeben werden

== 🛠️ Verwendung ==

=== 🔸 Speicherort &amp; Namenskonvention ===
* Normalerweise im Ordner: &lt;code&gt;Views/Shared/&lt;/code&gt; oder im selben Ordner wie die aufrufende View
* Namenskonvention: &lt;code&gt;_ListPartialView.cshtml&lt;/code&gt; (Unterstrich als Erkennungszeichen)

=== 🔸 Rendern ===
&lt;pre&gt;
&lt;!-- Tag Helper --&gt;
&lt;partial name="_ListPartialView" /&gt;
&lt;partial name="_ListPartialView" model="yourModel" /&gt;

&lt;!-- HTML Helper --&gt;
@await Html.PartialAsync("_ListPartialView")
@await Html.PartialAsync("_ListPartialView", yourModel)
&lt;/pre&gt;

== 📄 Beispiel 1: Mit ViewBag / ViewData ==

=== _ListPartialView.cshtml ===
&lt;source lang="razor"&gt;
&lt;div class="list-container"&gt;
    &lt;h3&gt;@ViewBag.ListTitle&lt;/h3&gt;
    &lt;ul class="list"&gt;
    @foreach (string item in ViewBag.ListItems)
    {
        &lt;li&gt;@item&lt;/li&gt;
    }
    &lt;/ul&gt;
&lt;/div&gt;
&lt;/source&gt;

=== Index.cshtml ===
&lt;source lang="razor"&gt;
&lt;h1&gt;Home&lt;/h1&gt;

&lt;partial name="_ListPartialView" /&gt;

@{
    var myViewData = new ViewDataDictionary(ViewData);
    myViewData["ListTitle"] = "Länder";
    myViewData["ListItems"] = new List&lt;string&gt; { "USA", "Kanada", "Japan", "Deutschland", "Indien" };
}

&lt;div class="box"&gt;
    &lt;partial name="_ListPartialView" view-data="myViewData" /&gt;
&lt;/div&gt;
&lt;/source&gt;

== 📄 Beispiel 2: Stark typisierte Partial View (empfohlen) ==

=== ListModel.cs ===
&lt;source lang="csharp"&gt;
public class ListModel
{
    public string ListTitle { get; set; }
    public List&lt;string&gt; ListItems { get; set; }
}
&lt;/source&gt;

=== _ListPartialView.cshtml ===
&lt;source lang="razor"&gt;
@model ListModel

&lt;div class="list-container"&gt;
    &lt;h3&gt;@Model.ListTitle&lt;/h3&gt;
    &lt;ul class="list"&gt;
    @foreach (var item in Model.ListItems)
    {
        &lt;li&gt;@item&lt;/li&gt;
    }
    &lt;/ul&gt;
&lt;/div&gt;
&lt;/source&gt;

=== Index.cshtml ===
&lt;source lang="razor"&gt;
@using YourNamespace.Models

@{
    var listModel = new ListModel {
        ListTitle = "Länder",
        ListItems = new List&lt;string&gt; { "USA", "Kanada", "Japan", "Deutschland", "Indien" }
    };
}
&lt;partial name="_ListPartialView" model="listModel" /&gt;
&lt;/source&gt;

== 📄 Beispiel 3: PartialViewResult mit AJAX ==

=== HomeController.cs ===
&lt;source lang="csharp"&gt;
[Route("programming-languages")]
public IActionResult ProgrammingLanguages()
{
    var listModel = new ListModel
    {
        ListTitle = "Programmiersprachen",
        ListItems = new List&lt;string&gt; { "Python", "C#", "Go" }
    };
    return PartialView("_ListPartialView", listModel);
}
&lt;/source&gt;

=== Index.cshtml (AJAX Beispiel) ===
&lt;source lang="html"&gt;
&lt;button id="button-load"&gt;Lade Programmiersprachen&lt;/button&gt;
&lt;div class="programming-languages-content"&gt;&lt;/div&gt;

&lt;script&gt;
document.querySelector("#button-load").addEventListener("click", async () =&gt; {
    const response = await fetch("programming-languages");
    const html = await response.text();
    document.querySelector(".programming-languages-content").innerHTML = html;
});
&lt;/script&gt;
&lt;/source&gt;

== 🧠 Zusammenfassung ==

=== 🔹 Partial Views ===
* Zweck: Wiederverwendbare Razor-Fragmente (z. B. für Listen, Formulare)
* Konvention: &lt;code&gt;_PartialName.cshtml&lt;/code&gt;
* Speicherort: &lt;code&gt;Views/Shared&lt;/code&gt; oder lokaler Ordner
* Rendern:
  * &lt;code&gt;&lt;partial name="..." /&gt;&lt;/code&gt;
  * &lt;code&gt;@await Html.PartialAsync(...)&lt;/code&gt;

=== 🔹 ViewData / ViewBag ===
* Übergabe von Daten aus Controller oder Parent View
* In Partial View per &lt;code&gt;@ViewData["key"]&lt;/code&gt; oder &lt;code&gt;@ViewBag.Key&lt;/code&gt;

=== 🔹 Starke Typisierung ===
* Mit &lt;code&gt;@model YourNamespace.YourModel&lt;/code&gt;
* Zugriff auf &lt;code&gt;@Model.Property&lt;/code&gt;
* Vorteil: IntelliSense, Typprüfung, weniger Fehler

=== 🔹 PartialViewResult ===
* Rückgabe einer Partial View aus Controller
* Einsatz für AJAX-Szenarien:
  &lt;source lang="csharp"&gt;
  return PartialView("_PartialName", model);
  &lt;/source&gt;

=== 🔹 Best Practices ===
* Verwende ViewModels für saubere Trennung
* Nutze starke Typisierung wo möglich
* Vermeide Logik in Views
* Caching bedenken für statische Inhalte</text>
      <sha1>gmdjj6w77354mn1jfrgrv7hnj6ewgfh</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Hauptseite</title>
    <ns>3008</ns>
    <id>140</id>
    <revision>
      <id>468</id>
      <timestamp>2025-06-28T09:14:22Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Moodle== &lt;pre&gt; cd /var/www git clone git://git.moodle.org/moodle.git CD Moodle git branch -a git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE (3) git checkout MOODLE_500_STABLE &lt;/pre&gt;“</comment>
      <origin>468</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="198" sha1="7ip56qv2jnpzt8v8u285s3ebt95sosd" xml:space="preserve">==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
CD Moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE (3)
git checkout MOODLE_500_STABLE
&lt;/pre&gt;</text>
      <sha1>7ip56qv2jnpzt8v8u285s3ebt95sosd</sha1>
    </revision>
    <revision>
      <id>469</id>
      <parentid>468</parentid>
      <timestamp>2025-06-28T09:28:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle */</comment>
      <origin>469</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="198" sha1="8ity6x39apxs16nljiipepurd0btcqw" xml:space="preserve">==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
CD moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE (3)
git checkout MOODLE_500_STABLE
&lt;/pre&gt;</text>
      <sha1>8ity6x39apxs16nljiipepurd0btcqw</sha1>
    </revision>
    <revision>
      <id>470</id>
      <parentid>469</parentid>
      <timestamp>2025-06-28T09:28:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>470</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="198" sha1="lnrbd8vbkww72u1y38c3r9r4pisja23" xml:space="preserve">==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
cd moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE (3)
git checkout MOODLE_500_STABLE
&lt;/pre&gt;</text>
      <sha1>lnrbd8vbkww72u1y38c3r9r4pisja23</sha1>
    </revision>
    <revision>
      <id>471</id>
      <parentid>470</parentid>
      <timestamp>2025-06-28T09:34:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>471</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="194" sha1="71j2xmao1m6lv6esxir2codjgd5q2gv" xml:space="preserve">==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
cd moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE
git checkout MOODLE_500_STABLE
&lt;/pre&gt;</text>
      <sha1>71j2xmao1m6lv6esxir2codjgd5q2gv</sha1>
    </revision>
    <revision>
      <id>474</id>
      <parentid>471</parentid>
      <timestamp>2025-06-28T11:18:32Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>474</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="270" sha1="fpvgfs397uzqdp06rz7lxi7oe1s77o6" xml:space="preserve">==Datenbank Installieren==
&lt;pre&gt;
sudo apt-get install postgresql-all
&lt;/pre&gt;
==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
cd moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE
git checkout MOODLE_500_STABLE
&lt;/pre&gt;</text>
      <sha1>fpvgfs397uzqdp06rz7lxi7oe1s77o6</sha1>
    </revision>
    <revision>
      <id>475</id>
      <parentid>474</parentid>
      <timestamp>2025-06-28T11:30:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>475</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="412" sha1="7sl2hylgrjdx744ycmx4q2bd5ktqm4f" xml:space="preserve">==Datenbank Installieren==
&lt;pre&gt;
sudo apt-get install postgresql-all
sudo -u postgres -i
createdb -E UTF8 -O thorsten mediawiki
psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten

exit
&lt;/pre&gt;
==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
cd moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE
git checkout MOODLE_500_STABLE
&lt;/pre&gt;</text>
      <sha1>7sl2hylgrjdx744ycmx4q2bd5ktqm4f</sha1>
    </revision>
    <revision>
      <id>476</id>
      <parentid>475</parentid>
      <timestamp>2025-06-28T11:31:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Datenbank Installieren */</comment>
      <origin>476</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="414" sha1="9jhtwtwo1k15cd38epoerlpvklqmrv4" xml:space="preserve">==Datenbank Installieren==
&lt;pre&gt;
sudo apt-get install postgresql-all
sudo -u postgres -i
createdb -E UTF8 -O thorsten mediawiki
psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten"

exit
&lt;/pre&gt;

==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
cd moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE
git checkout MOODLE_500_STABLE
&lt;/pre&gt;</text>
      <sha1>9jhtwtwo1k15cd38epoerlpvklqmrv4</sha1>
    </revision>
    <revision>
      <id>477</id>
      <parentid>476</parentid>
      <timestamp>2025-06-28T11:34:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>477</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="489" sha1="s97i10amaib1vqa6ir528f645vhqxgs" xml:space="preserve">==Datenbank Installieren==
&lt;pre&gt;
sudo apt-get install postgresql-all
sudo -u postgres -i
createdb -E UTF8 -O thorsten mediawiki
psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten"
psql -d mediawiki -c "\password thorsten"   //Passwort in Entwickling "Tes"
exit
&lt;/pre&gt;

==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
cd moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE
git checkout MOODLE_500_STABLE
&lt;/pre&gt;</text>
      <sha1>s97i10amaib1vqa6ir528f645vhqxgs</sha1>
    </revision>
    <revision>
      <id>480</id>
      <parentid>477</parentid>
      <timestamp>2025-06-28T15:41:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>480</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1044" sha1="oz6xr3yo1ehq8g0f9urb0uh006ixuea" xml:space="preserve">==Datenbank Installieren==
&lt;pre&gt;
sudo apt-get install postgresql-all
sudo -u postgres -i
createdb -E UTF8 -O thorsten mediawiki
psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten"
psql -d mediawiki -c "\password thorsten"   //Passwort in Entwickling "Tes"
exit
&lt;/pre&gt;

==Moodle==
&lt;pre&gt;
cd /var/www
git clone git://git.moodle.org/moodle.git
cd moodle
git branch -a
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE
git checkout MOODLE_500_STABLE
&lt;/pre&gt;
==Moodle Entwicklungserver==
&lt;pre&gt;
root /var/www/moodle;
  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>oz6xr3yo1ehq8g0f9urb0uh006ixuea</sha1>
    </revision>
    <revision>
      <id>481</id>
      <parentid>480</parentid>
      <timestamp>2025-06-28T15:42:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>481</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="874" sha1="1d2v70rms7uwfts0zuihue5g9ro4ea3" xml:space="preserve">==Datenbank Installieren==
&lt;pre&gt;
sudo apt-get install postgresql-all
sudo -u postgres -i
createdb -E UTF8 -O thorsten mediawiki
psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten"
psql -d mediawiki -c "\password thorsten"   //Passwort in Entwickling "Tes"
exit
&lt;/pre&gt;

==Moodle==
&lt;pre&gt;
server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}</text>
      <sha1>1d2v70rms7uwfts0zuihue5g9ro4ea3</sha1>
    </revision>
    <revision>
      <id>530</id>
      <parentid>481</parentid>
      <timestamp>2025-06-30T22:45:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde geleert.</comment>
      <origin>530</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="0" sha1="phoiac9h4m842xq45sp7s6u21eteeq1" xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    </revision>
    <revision>
      <id>531</id>
      <parentid>530</parentid>
      <timestamp>2025-06-30T22:46:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>531</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="276" sha1="4mlf1ozcrxble3z9jt2d006d2sc1wt9" xml:space="preserve">
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;</text>
      <sha1>4mlf1ozcrxble3z9jt2d006d2sc1wt9</sha1>
    </revision>
    <revision>
      <id>532</id>
      <parentid>531</parentid>
      <timestamp>2025-06-30T22:48:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>532</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="850" sha1="3utiagvvnuiifobqeh4448u64ymrb0p" xml:space="preserve">
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;</text>
      <sha1>3utiagvvnuiifobqeh4448u64ymrb0p</sha1>
    </revision>
    <revision>
      <id>533</id>
      <parentid>532</parentid>
      <timestamp>2025-06-30T22:49:32Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>533</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1334" sha1="lxpcnf1fe99ar2f0qgc3h6xc98rjwll" xml:space="preserve">
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;</text>
      <sha1>lxpcnf1fe99ar2f0qgc3h6xc98rjwll</sha1>
    </revision>
    <revision>
      <id>534</id>
      <parentid>533</parentid>
      <timestamp>2025-06-30T22:53:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>534</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2226" sha1="czoznfebvfhxwje1om2zu8bpjlin2c9" xml:space="preserve">
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
 &lt;code&gt;sudo apt install postgis postgresql-17-postgis-3 postgresql-17-postgis-3-scripts postgresql-17-pgvector&lt;/code&gt;
&lt;code&gt;sudo -u postgres -i createuser thorsten createdb -E UTF8 -O thorsten thorsten psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen psql -d thorsten -c "\password thorsten"&lt;/code&gt;
 &lt;code&gt;exit # Ausloggen&lt;/code&gt;</text>
      <sha1>czoznfebvfhxwje1om2zu8bpjlin2c9</sha1>
    </revision>
    <revision>
      <id>535</id>
      <parentid>534</parentid>
      <timestamp>2025-06-30T22:54:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Postgis Installation in Ubuntu 23.04 */</comment>
      <origin>535</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2095" sha1="7tzas52zbzsvo5scm0voti57utmg09k" xml:space="preserve">
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;</text>
      <sha1>7tzas52zbzsvo5scm0voti57utmg09k</sha1>
    </revision>
    <revision>
      <id>536</id>
      <parentid>535</parentid>
      <timestamp>2025-06-30T23:04:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>536</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3403" sha1="m7p9538rfmi8cbj9l7q57pzb5wzqp9d" xml:space="preserve">
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.2.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.2.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;</text>
      <sha1>m7p9538rfmi8cbj9l7q57pzb5wzqp9d</sha1>
    </revision>
    <revision>
      <id>537</id>
      <parentid>536</parentid>
      <timestamp>2025-06-30T23:06:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Aktualisieren */</comment>
      <origin>537</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3602" sha1="a7ohh6xx32lrjhjqalf2dd8hzs9jttt" xml:space="preserve">
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.2.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.2.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;</text>
      <sha1>a7ohh6xx32lrjhjqalf2dd8hzs9jttt</sha1>
    </revision>
    <revision>
      <id>538</id>
      <parentid>537</parentid>
      <timestamp>2025-06-30T23:19:01Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Golang */</comment>
      <origin>538</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3602" sha1="1433qp819u1vvfddkyonojqthp18zc6" xml:space="preserve">
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;</text>
      <sha1>1433qp819u1vvfddkyonojqthp18zc6</sha1>
    </revision>
    <revision>
      <id>539</id>
      <parentid>538</parentid>
      <timestamp>2025-06-30T23:29:01Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>539</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3624" sha1="qcqxerqpnuo6r96oa5aheb2b6k9yt3b" xml:space="preserve">* [[IDE:Installieren]]
== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;</text>
      <sha1>qcqxerqpnuo6r96oa5aheb2b6k9yt3b</sha1>
    </revision>
    <revision>
      <id>541</id>
      <parentid>539</parentid>
      <timestamp>2025-06-30T23:31:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Der Seiteninhalt wurde durch einen anderen Text ersetzt: „* [[IDE:Installieren]]“</comment>
      <origin>541</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="22" sha1="qz6zqvqdwbmablfp4oskkabafap9bzd" xml:space="preserve">* [[IDE:Installieren]]</text>
      <sha1>qz6zqvqdwbmablfp4oskkabafap9bzd</sha1>
    </revision>
    <revision>
      <id>570</id>
      <parentid>541</parentid>
      <timestamp>2025-07-01T22:00:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>570</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="55" sha1="anxk2183qyuc7ph3omfuottso8j1c25" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]]</text>
      <sha1>anxk2183qyuc7ph3omfuottso8j1c25</sha1>
    </revision>
    <revision>
      <id>572</id>
      <parentid>570</parentid>
      <timestamp>2025-07-01T22:15:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>572</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="85" sha1="iul18x4wr1e9yqej02beqlttckctn0y" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]
* [[IDE:Mediawiki Extensions]]</text>
      <sha1>iul18x4wr1e9yqej02beqlttckctn0y</sha1>
    </revision>
    <revision>
      <id>575</id>
      <parentid>572</parentid>
      <timestamp>2025-07-02T00:20:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>575</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="86" sha1="m4bcn5mk09oh1o2ia3mwx20dumirqhz" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]]
* [[IDE:Mediawiki Extensions]]</text>
      <sha1>m4bcn5mk09oh1o2ia3mwx20dumirqhz</sha1>
    </revision>
    <revision>
      <id>576</id>
      <parentid>575</parentid>
      <timestamp>2025-07-02T00:20:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>576</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="83" sha1="9t2oiv2tkcbzv26i7jboydincd87h4x" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]]
* [[IDE:Qgis Installieren]]</text>
      <sha1>9t2oiv2tkcbzv26i7jboydincd87h4x</sha1>
    </revision>
    <revision>
      <id>604</id>
      <parentid>576</parentid>
      <timestamp>2025-07-06T20:06:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>604</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="106" sha1="gvwdkmpwpx4gonb3j1s8fajz60lmhql" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]]
* [[IDE:Qgis Installieren]]
* [[IDE:Asp Net Core]]</text>
      <sha1>gvwdkmpwpx4gonb3j1s8fajz60lmhql</sha1>
    </revision>
    <revision>
      <id>628</id>
      <parentid>604</parentid>
      <timestamp>2025-07-10T09:09:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>628</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="123" sha1="hgqw5v43z1dwg7iqel5caofgvzmifgy" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]]
* [[IDE:Moodle]]
* [[IDE:Qgis Installieren]]
* [[IDE:Asp Net Core]]</text>
      <sha1>hgqw5v43z1dwg7iqel5caofgvzmifgy</sha1>
    </revision>
    <revision>
      <id>691</id>
      <parentid>628</parentid>
      <timestamp>2025-07-23T02:02:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>691</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="138" sha1="mokkjcryazvbkqsmzcb6fs3kwmqsf0b" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]]
* [[IDE:Moodle]]
* [[IDE:Qgis Installieren]]
* [[IDE:Asp Net Core]]
* [[IDE:Anki]]</text>
      <sha1>mokkjcryazvbkqsmzcb6fs3kwmqsf0b</sha1>
    </revision>
    <revision>
      <id>714</id>
      <parentid>691</parentid>
      <timestamp>2025-08-01T22:45:19Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>714</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="156" sha1="4rna5r8ie797vwf1x8e6meh7i0or8je" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]]
* [[IDE:Moodle]]
* [[IDE:Qgis Installieren]]
* [[IDE:Asp Net Core]]
* [[IDE:Anki]]
* [[IDE:Postfix]]</text>
      <sha1>4rna5r8ie797vwf1x8e6meh7i0or8je</sha1>
    </revision>
    <revision>
      <id>718</id>
      <parentid>714</parentid>
      <timestamp>2025-08-03T12:44:01Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>718</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="179" sha1="ozjibhej8d778pcqgkm9adz9bwpub6q" xml:space="preserve">* [[IDE:Installieren]]
* [[IDE:Mediawiki Installieren]]
* [[IDE:Moodle]]
* [[IDE:Qgis Installieren]]
* [[IDE:Asp Net Core]]
* [[IDE:Anki]]
* [[IDE:Postfix]]
* [[IDE:asp identity]]</text>
      <sha1>ozjibhej8d778pcqgkm9adz9bwpub6q</sha1>
    </revision>
  </page>
  <page>
    <title>Wochenmarkt</title>
    <ns>0</ns>
    <id>141</id>
    <revision>
      <id>482</id>
      <timestamp>2025-06-28T16:09:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>482</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="454" sha1="0cvr3xyuu967vndnhdalrh2wgoiaqb1" xml:space="preserve">Der Wochenmarkt in Ahrensburg findet jeden Mittwoch und Samstag von 07:00 Uhr bis 13:00 Uhr auf dem Marktplatz vor dem Rathaus, Manfred-Samusch-Straße 5, 22926 Ahrensburg, statt. Bis zu 60 Stände bieten dort ihre Waren an.
Er bietet eine Vielzahl frischer Lebensmittel, darunter Obst, Gemüse, Fleisch, Fisch und Backwaren. Viele Stände werden von lokalen Bauern und Produzenten betrieben, die ihre Waren direkt an die Kundinnen und Kunden verkaufen.</text>
      <sha1>0cvr3xyuu967vndnhdalrh2wgoiaqb1</sha1>
    </revision>
  </page>
  <page>
    <title>Gastronomie-Führer</title>
    <ns>0</ns>
    <id>142</id>
    <revision>
      <id>485</id>
      <timestamp>2025-06-28T17:11:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>485</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1200" sha1="gdimq2nh8eu4v3ar9x1jzwa9k9mthlj" xml:space="preserve">Gastronomie-Führer in Ahrensburg. Hier finden Sie bekannte Restaurants.

* [https://www.block-house.de/restaurants/ahrensburg/grosse-strasse/ BLOCK HOUSE Ahrensburg]: Beliebtes Steakhouse direkt in der Innenstadt mit durchgehend warmer Küche und großer Terrasse. 
    Ideal für Familienessen, saftige Steaks und entspannte Atmosphäre. Adresse: Große Str. 13, 22926 Ahrensburg, Telefon: 04102 54314.
* [https://restaurantstrehl.de/ Restaurant Strehl]: Familiengeführter Betrieb mit Schwerpunkt auf Wild- und deutscher Küche. Besonders gelobt: das gebratene Lachsfilet. Adresse: Reeshoop 50, 22926 Ahrensburg, Telefon: 04102 41261.
* [http://www.villaromana-ahrensburg.de/ Villa Romana]: Authentisch italienisches Ambiente in einer alten Kate, gut geeignet für gemütliche Abendessen mit klassischer Pasta- und Fleischküche. Adresse: b. d. Alten Kate 6, 22926 Ahrensburg, Telefon: 04102 6672596.
* [https://www.restaurantkroatien.de/ Kroatien Restaurant Mediterraneo]: Mediterrane, kroatische Gerichte, z. B. gemischte Vorspeisenteller (Prosciutto, Garnelen etc.). 
    Empfehlenswert für besondere Anlässe oder Familienessen. Adresse: Reeshoop 48, 22926 Ahrensburg, Telefon: 04102 4737184.</text>
      <sha1>gdimq2nh8eu4v3ar9x1jzwa9k9mthlj</sha1>
    </revision>
    <revision>
      <id>486</id>
      <parentid>485</parentid>
      <timestamp>2025-06-28T17:11:57Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>486</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1196" sha1="i9gwx4slou8pq6d1jmiax9ugw9mwc11" xml:space="preserve">Gastronomie-Führer in Ahrensburg. Hier finden Sie bekannte Restaurants.

* [https://www.block-house.de/restaurants/ahrensburg/grosse-strasse/ BLOCK HOUSE Ahrensburg]: Beliebtes Steakhouse direkt in der Innenstadt mit durchgehend warmer Küche und großer Terrasse. 
Ideal für Familienessen, saftige Steaks und entspannte Atmosphäre. Adresse: Große Str. 13, 22926 Ahrensburg, Telefon: 04102 54314.
* [https://restaurantstrehl.de/ Restaurant Strehl]: Familiengeführter Betrieb mit Schwerpunkt auf Wild- und deutscher Küche. Besonders gelobt: das gebratene Lachsfilet. Adresse: Reeshoop 50, 22926 Ahrensburg, Telefon: 04102 41261.
* [http://www.villaromana-ahrensburg.de/ Villa Romana]: Authentisch italienisches Ambiente in einer alten Kate, gut geeignet für gemütliche Abendessen mit klassischer Pasta- und Fleischküche. Adresse: b. d. Alten Kate 6, 22926 Ahrensburg, Telefon: 04102 6672596.
* [https://www.restaurantkroatien.de/ Kroatien Restaurant Mediterraneo]: Mediterrane, kroatische Gerichte, z. B. gemischte Vorspeisenteller (Prosciutto, Garnelen etc.). 
    Empfehlenswert für besondere Anlässe oder Familienessen. Adresse: Reeshoop 48, 22926 Ahrensburg, Telefon: 04102 4737184.</text>
      <sha1>i9gwx4slou8pq6d1jmiax9ugw9mwc11</sha1>
    </revision>
    <revision>
      <id>487</id>
      <parentid>486</parentid>
      <timestamp>2025-06-28T17:13:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>487</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1195" sha1="4no7emlyp26vaxjbkwocrx7ba6jngof" xml:space="preserve">Gastronomie-Führer in Ahrensburg. Hier finden Sie bekannte Restaurants.

* [https://www.block-house.de/restaurants/ahrensburg/grosse-strasse/ BLOCK HOUSE Ahrensburg]: Beliebtes Steakhouse direkt in der Innenstadt mit durchgehend warmer Küche und großer Terrasse.Ideal für Familienessen, saftige Steaks und entspannte Atmosphäre. Adresse: Große Str. 13, 22926 Ahrensburg, Telefon: 04102 54314.

* [https://restaurantstrehl.de/ Restaurant Strehl]: Familiengeführter Betrieb mit Schwerpunkt auf Wild- und deutscher Küche. Besonders gelobt: das gebratene Lachsfilet. Adresse: Reeshoop 50, 22926 Ahrensburg, Telefon: 04102 41261.
* [http://www.villaromana-ahrensburg.de/ Villa Romana]: Authentisch italienisches Ambiente in einer alten Kate, gut geeignet für gemütliche Abendessen mit klassischer Pasta- und Fleischküche. Adresse: b. d. Alten Kate 6, 22926 Ahrensburg, Telefon: 04102 6672596.
* [https://www.restaurantkroatien.de/ Kroatien Restaurant Mediterraneo]: Mediterrane, kroatische Gerichte, z. B. gemischte Vorspeisenteller (Prosciutto, Garnelen etc.). 
    Empfehlenswert für besondere Anlässe oder Familienessen. Adresse: Reeshoop 48, 22926 Ahrensburg, Telefon: 04102 4737184.</text>
      <sha1>4no7emlyp26vaxjbkwocrx7ba6jngof</sha1>
    </revision>
    <revision>
      <id>488</id>
      <parentid>487</parentid>
      <timestamp>2025-06-28T17:13:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>488</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1190" sha1="p6rqzfwojh4d2n6wulq7uol98pu9kgr" xml:space="preserve">Gastronomie-Führer in Ahrensburg. Hier finden Sie bekannte Restaurants.

* [https://www.block-house.de/restaurants/ahrensburg/grosse-strasse/ BLOCK HOUSE Ahrensburg]: Beliebtes Steakhouse direkt in der Innenstadt mit durchgehend warmer Küche und großer Terrasse.Ideal für Familienessen, saftige Steaks und entspannte Atmosphäre. Adresse: Große Str. 13, 22926 Ahrensburg, Telefon: 04102 54314.

* [https://restaurantstrehl.de/ Restaurant Strehl]: Familiengeführter Betrieb mit Schwerpunkt auf Wild- und deutscher Küche. Besonders gelobt: das gebratene Lachsfilet. Adresse: Reeshoop 50, 22926 Ahrensburg, Telefon: 04102 41261.
* [http://www.villaromana-ahrensburg.de/ Villa Romana]: Authentisch italienisches Ambiente in einer alten Kate, gut geeignet für gemütliche Abendessen mit klassischer Pasta- und Fleischküche. Adresse: b. d. Alten Kate 6, 22926 Ahrensburg, Telefon: 04102 6672596.
* [https://www.restaurantkroatien.de/ Kroatien Restaurant Mediterraneo]: Mediterrane, kroatische Gerichte, z. B. gemischte Vorspeisenteller (Prosciutto, Garnelen etc.). Empfehlenswert für besondere Anlässe oder Familienessen. Adresse: Reeshoop 48, 22926 Ahrensburg, Telefon: 04102 4737184.</text>
      <sha1>p6rqzfwojh4d2n6wulq7uol98pu9kgr</sha1>
    </revision>
  </page>
  <page>
    <title>Einkaufen in Ahrensburg</title>
    <ns>0</ns>
    <id>143</id>
    <revision>
      <id>490</id>
      <timestamp>2025-06-28T17:40:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>490</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="671" sha1="dkkv9gymhpjgxmrvb9f3f96tldfls2t" xml:space="preserve">Einkaufen in Ahrensburg

* City Center Ahrensburg: Zentrales Shopping-Zentrum mit überdachtem Ambiente. Mehrere Mode-, Elektronik- und Drogeriegeschäfte sowie Gastronomie (Café, Döner, Burger, Feinkost). Etwa 175 Parkplätze, geöffnet Mo–Sa 10–19 Uhr.
* Kaufhaus Nessler: Inhabergeführtes Traditionskaufhaus seit 1930 mit großer Markenvielfalt (Mode, Haushalt, Sport, Schreibwaren, Elektronik, Kosmetik u.v.m.). Öffnungszeiten: Mo–Fr 9:30–18:30, Sa 9:30–18:30.
* Famila Einkaufszentrum: Mehr als ein Supermarkt – bietet neben Lebensmitteln auch Fachsortimente für Haushalt, Elektronik und Kleidung. Regional- und Frischefokus. Gute Parkinfrastruktur.</text>
      <sha1>dkkv9gymhpjgxmrvb9f3f96tldfls2t</sha1>
    </revision>
  </page>
  <page>
    <title>Kirchen und religiöse Gemeinschaften</title>
    <ns>0</ns>
    <id>144</id>
    <revision>
      <id>492</id>
      <timestamp>2025-06-29T01:45:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>492</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4100" sha1="tj6fqsoeqdeembxtm6fswl3cymqzkdl" xml:space="preserve">==Evangelisch-Lutherisch==
Die evangelisch-lutherische Kirche ist eine der größten christlichen Konfessionen und geht auf die Reformation Martin Luthers im 16. Jahrhundert zurück. Sie betont die Rechtfertigung des Menschen allein durch den Glauben, die Bedeutung der Bibel als höchste Glaubensquelle und die Verwaltung der Sakramente (Taufe und Abendmahl). In Deutschland ist sie in zahlreichen Landeskirchen organisiert und prägt das religiöse Leben vieler Gemeinden.
* Schlosskirche Ahrensburg und St. Johannes: Denkmalgeschützte Backsteinkirchen, die das Zentrum der evangelisch-lutherischen Kirchengemeinde mit etwa 11.000 Mitgliedern in Ahrensburg und Umgebung bilden.
** [https://www.kirche-ahrensburg.de/ Schlosskirche] (erbaut 1593–94): Prunkvolle Innenausstattung und eine historische Orgel. Adresse: Am Alten Markt 3, 22926 Ahrensburg, Telefon: 04102 52584.
** [https://www.kirche-ahrensburg.de/ St. Johannes]: Moderner Campus, der nach Protesten im Jahr 2014 wieder genutzt wird. Adresse: Rudolf-Kinau-Straße 19, 22926 Ahrensburg.
==Freikirchlich / Evangelisch==
Freikirchliche und evangelische Gemeinden sind eigenständige christliche Gemeinschaften, die unabhängig von den großen Landeskirchen organisiert sind. Sie legen besonderen Wert auf die persönliche Glaubensentscheidung, die freiwillige Mitgliedschaft und ein aktives Gemeindeleben. Die Gottesdienste sind oft zeitgemäß gestaltet, und das Engagement der Mitglieder spielt eine zentrale Rolle. Zu den Freikirchen zählen unter anderem Baptisten, Methodisten und die Freien evangelischen Gemeinden.
* [https://feg-ahrensburg.de/ Freie evangelische Gemeinde Ahrensburg (FeG)]: Lebendige Gemeinschaft. Gottesdienste finden sonntags um 10:30 Uhr mit Kindergottesdienst statt. Adresse: Lübecker Str. 4a, 22926 Ahrensburg, Telefon: 04102 471490.
===Baptistengemeinde===
Baptistengemeinden sind evangelische Freikirchen, die ihren Ursprung in der Täuferbewegung des 17. Jahrhunderts haben. Sie betonen die Glaubenstaufe auf das persönliche Bekenntnis hin, die Selbstständigkeit der einzelnen Gemeinde und die freiwillige Mitgliedschaft. Gottesdienste und Gemeindeleben sind oft von persönlichem Engagement und Gemeinschaftssinn geprägt. Die Bibel gilt als maßgebliche Grundlage für Glauben und Leben.
* [https://www.kreuzkirche.church/ Kreuzkirche Ahrensburg]: Evangelisch-freikirchliche Baptistengemeinde mit ökumenischer Ausrichtung. Die Taufe erfolgt auf persönliche Entscheidung.  
Adresse: Hagener Allee 65-67, 22926 Ahrensburg  
Telefon: 04102 52110

==Katholisch==
Die katholische Kirche ist die größte christliche Glaubensgemeinschaft weltweit und sieht sich in der Nachfolge der Apostel, insbesondere des Apostels Petrus. Sie betont die Bedeutung der Sakramente, insbesondere der Eucharistie, und die Autorität des Papstes als Oberhaupt der Kirche. In Deutschland ist die katholische Kirche in Bistümern organisiert und prägt das religiöse und gesellschaftliche Leben vieler Regionen. Die katholische Lehre basiert auf der Bibel und der kirchlichen Tradition.
* [https://sankt-ansverus.de/ St. Marien]: Römisch-katholische Kirche der Pfarrei St.Ansverus im Erzbistum Hamburg. 1953 erbaut, 2001 im Communio-Modell mit zentralem Altar umgestaltet.  
Adresse: Adolfstraße 1, 22926 Ahrensburg  
Telefon: 04102 52907
==Jüdisch==
Die jüdische Religion, das Judentum, ist eine der ältesten monotheistischen Weltreligionen. Sie basiert auf der Tora und weiteren heiligen Schriften und betont die enge Verbindung zwischen Gott (JHWH) und dem Volk Israel. Religiöse Praxis umfasst Gebet, das Einhalten von Speisegesetzen (Kaschrut), das Feiern von Feiertagen wie Schabbat und Jom Kippur sowie die Pflege von Traditionen und Gemeinschaft. Das Judentum hat eine lange Geschichte in Deutschland, die von Blütezeiten, aber auch von Verfolgung und Zerstörung geprägt ist.
* Jüdische Gemeinde Ahrensburg: Seit 2003 wieder aktiv, mit einem Betraum im Gemeindezentrum Reeshoop 4. Die historische Gemeinde bestand seit 1788; die Synagoge ging verloren. Der heutige Friedhof befindet sich in Bad Segeberg.</text>
      <sha1>tj6fqsoeqdeembxtm6fswl3cymqzkdl</sha1>
    </revision>
    <revision>
      <id>493</id>
      <parentid>492</parentid>
      <timestamp>2025-06-29T01:47:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>493</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4098" sha1="403ac8ble92mrhp81t6wwmr0iwvmlb5" xml:space="preserve">==Evangelisch-Lutherisch==
Die evangelisch-lutherische Kirche ist eine der größten christlichen Konfessionen und geht auf die Reformation Martin Luthers im 16. Jahrhundert zurück. Sie betont die Rechtfertigung des Menschen allein durch den Glauben, die Bedeutung der Bibel als höchste Glaubensquelle und die Verwaltung der Sakramente (Taufe und Abendmahl). In Deutschland ist sie in zahlreichen Landeskirchen organisiert und prägt das religiöse Leben vieler Gemeinden.
* Schlosskirche Ahrensburg und St. Johannes: Denkmalgeschützte Backsteinkirchen, die das Zentrum der evangelisch-lutherischen Kirchengemeinde mit etwa 11.000 Mitgliedern in Ahrensburg und Umgebung bilden.
** [https://www.kirche-ahrensburg.de/ Schlosskirche] (erbaut 1593–94): Prunkvolle Innenausstattung und eine historische Orgel. Adresse: Am Alten Markt 3, 22926 Ahrensburg, Telefon: 04102 52584.
** [https://www.kirche-ahrensburg.de/ St. Johannes]: Moderner Campus, der nach Protesten im Jahr 2014 wieder genutzt wird. Adresse: Rudolf-Kinau-Straße 19, 22926 Ahrensburg.
==Freikirchlich / Evangelisch==
Freikirchliche und evangelische Gemeinden sind eigenständige christliche Gemeinschaften, die unabhängig von den großen Landeskirchen organisiert sind. Sie legen besonderen Wert auf die persönliche Glaubensentscheidung, die freiwillige Mitgliedschaft und ein aktives Gemeindeleben. Die Gottesdienste sind oft zeitgemäß gestaltet, und das Engagement der Mitglieder spielt eine zentrale Rolle. Zu den Freikirchen zählen unter anderem Baptisten, Methodisten und die Freien evangelischen Gemeinden.
* [https://feg-ahrensburg.de/ Freie evangelische Gemeinde Ahrensburg (FeG)]: Lebendige Gemeinschaft. Gottesdienste finden sonntags um 10:30 Uhr mit Kindergottesdienst statt. Adresse: Lübecker Str. 4a, 22926 Ahrensburg, Telefon: 04102 471490.
===Baptistengemeinde===
Baptistengemeinden sind evangelische Freikirchen, die ihren Ursprung in der Täuferbewegung des 17. Jahrhunderts haben. Sie betonen die Glaubenstaufe auf das persönliche Bekenntnis hin, die Selbstständigkeit der einzelnen Gemeinde und die freiwillige Mitgliedschaft. Gottesdienste und Gemeindeleben sind oft von persönlichem Engagement und Gemeinschaftssinn geprägt. Die Bibel gilt als maßgebliche Grundlage für Glauben und Leben.
* [https://www.kreuzkirche.church/ Kreuzkirche Ahrensburg]: Evangelisch-freikirchliche Baptistengemeinde mit ökumenischer Ausrichtung. Die Taufe erfolgt auf persönliche Entscheidung.  
Adresse: Hagener Allee 65-67, 22926 Ahrensburg  
Telefon: 04102 52110

==Katholisch==
Die katholische Kirche ist die größte christliche Glaubensgemeinschaft weltweit und sieht sich in der Nachfolge der Apostel, insbesondere des Apostels Petrus. Sie betont die Bedeutung der Sakramente, insbesondere der Eucharistie, und die Autorität des Papstes als Oberhaupt der Kirche. In Deutschland ist die katholische Kirche in Bistümern organisiert und prägt das religiöse und gesellschaftliche Leben vieler Regionen. Die katholische Lehre basiert auf der Bibel und der kirchlichen Tradition.
* [https://sankt-ansverus.de/ St. Marien]: Römisch-katholische Kirche der Pfarrei St.Ansverus im Erzbistum Hamburg. 1953 erbaut, 2001 im Communio-Modell mit zentralem Altar umgestaltet. Adresse: Adolfstraße 1, 22926 Ahrensburg   Telefon: 04102 52907
==Jüdisch==
Die jüdische Religion, das Judentum, ist eine der ältesten monotheistischen Weltreligionen. Sie basiert auf der Tora und weiteren heiligen Schriften und betont die enge Verbindung zwischen Gott (JHWH) und dem Volk Israel. Religiöse Praxis umfasst Gebet, das Einhalten von Speisegesetzen (Kaschrut), das Feiern von Feiertagen wie Schabbat und Jom Kippur sowie die Pflege von Traditionen und Gemeinschaft. Das Judentum hat eine lange Geschichte in Deutschland, die von Blütezeiten, aber auch von Verfolgung und Zerstörung geprägt ist.
* Jüdische Gemeinde Ahrensburg: Seit 2003 wieder aktiv, mit einem Betraum im Gemeindezentrum Reeshoop 4. Die historische Gemeinde bestand seit 1788; die Synagoge ging verloren. Der heutige Friedhof befindet sich in Bad Segeberg.</text>
      <sha1>403ac8ble92mrhp81t6wwmr0iwvmlb5</sha1>
    </revision>
    <revision>
      <id>494</id>
      <parentid>493</parentid>
      <timestamp>2025-06-29T01:48:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>494</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4096" sha1="77xg9ax01dbnwd8m24le4x9gw4hhmru" xml:space="preserve">==Evangelisch-Lutherisch==
Die evangelisch-lutherische Kirche ist eine der größten christlichen Konfessionen und geht auf die Reformation Martin Luthers im 16. Jahrhundert zurück. Sie betont die Rechtfertigung des Menschen allein durch den Glauben, die Bedeutung der Bibel als höchste Glaubensquelle und die Verwaltung der Sakramente (Taufe und Abendmahl). In Deutschland ist sie in zahlreichen Landeskirchen organisiert und prägt das religiöse Leben vieler Gemeinden.
* Schlosskirche Ahrensburg und St. Johannes: Denkmalgeschützte Backsteinkirchen, die das Zentrum der evangelisch-lutherischen Kirchengemeinde mit etwa 11.000 Mitgliedern in Ahrensburg und Umgebung bilden.
** [https://www.kirche-ahrensburg.de/ Schlosskirche] (erbaut 1593–94): Prunkvolle Innenausstattung und eine historische Orgel. Adresse: Am Alten Markt 3, 22926 Ahrensburg, Telefon: 04102 52584.
** [https://www.kirche-ahrensburg.de/ St. Johannes]: Moderner Campus, der nach Protesten im Jahr 2014 wieder genutzt wird. Adresse: Rudolf-Kinau-Straße 19, 22926 Ahrensburg.
==Freikirchlich / Evangelisch==
Freikirchliche und evangelische Gemeinden sind eigenständige christliche Gemeinschaften, die unabhängig von den großen Landeskirchen organisiert sind. Sie legen besonderen Wert auf die persönliche Glaubensentscheidung, die freiwillige Mitgliedschaft und ein aktives Gemeindeleben. Die Gottesdienste sind oft zeitgemäß gestaltet, und das Engagement der Mitglieder spielt eine zentrale Rolle. Zu den Freikirchen zählen unter anderem Baptisten, Methodisten und die Freien evangelischen Gemeinden.
* [https://feg-ahrensburg.de/ Freie evangelische Gemeinde Ahrensburg (FeG)]: Lebendige Gemeinschaft. Gottesdienste finden sonntags um 10:30 Uhr mit Kindergottesdienst statt. Adresse: Lübecker Str. 4a, 22926 Ahrensburg, Telefon: 04102 471490.
===Baptistengemeinde===
Baptistengemeinden sind evangelische Freikirchen, die ihren Ursprung in der Täuferbewegung des 17. Jahrhunderts haben. Sie betonen die Glaubenstaufe auf das persönliche Bekenntnis hin, die Selbstständigkeit der einzelnen Gemeinde und die freiwillige Mitgliedschaft. Gottesdienste und Gemeindeleben sind oft von persönlichem Engagement und Gemeinschaftssinn geprägt. Die Bibel gilt als maßgebliche Grundlage für Glauben und Leben.
* [https://www.kreuzkirche.church/ Kreuzkirche Ahrensburg]: Evangelisch-freikirchliche Baptistengemeinde mit ökumenischer Ausrichtung. Die Taufe erfolgt auf persönliche Entscheidung.  Adresse: Hagener Allee 65-67, 22926 Ahrensburg  Telefon: 04102 52110

==Katholisch==
Die katholische Kirche ist die größte christliche Glaubensgemeinschaft weltweit und sieht sich in der Nachfolge der Apostel, insbesondere des Apostels Petrus. Sie betont die Bedeutung der Sakramente, insbesondere der Eucharistie, und die Autorität des Papstes als Oberhaupt der Kirche. In Deutschland ist die katholische Kirche in Bistümern organisiert und prägt das religiöse und gesellschaftliche Leben vieler Regionen. Die katholische Lehre basiert auf der Bibel und der kirchlichen Tradition.
* [https://sankt-ansverus.de/ St. Marien]: Römisch-katholische Kirche der Pfarrei St.Ansverus im Erzbistum Hamburg. 1953 erbaut, 2001 im Communio-Modell mit zentralem Altar umgestaltet. Adresse: Adolfstraße 1, 22926 Ahrensburg   Telefon: 04102 52907
==Jüdisch==
Die jüdische Religion, das Judentum, ist eine der ältesten monotheistischen Weltreligionen. Sie basiert auf der Tora und weiteren heiligen Schriften und betont die enge Verbindung zwischen Gott (JHWH) und dem Volk Israel. Religiöse Praxis umfasst Gebet, das Einhalten von Speisegesetzen (Kaschrut), das Feiern von Feiertagen wie Schabbat und Jom Kippur sowie die Pflege von Traditionen und Gemeinschaft. Das Judentum hat eine lange Geschichte in Deutschland, die von Blütezeiten, aber auch von Verfolgung und Zerstörung geprägt ist.
* Jüdische Gemeinde Ahrensburg: Seit 2003 wieder aktiv, mit einem Betraum im Gemeindezentrum Reeshoop 4. Die historische Gemeinde bestand seit 1788; die Synagoge ging verloren. Der heutige Friedhof befindet sich in Bad Segeberg.</text>
      <sha1>77xg9ax01dbnwd8m24le4x9gw4hhmru</sha1>
    </revision>
  </page>
  <page>
    <title>Seniorentreff</title>
    <ns>0</ns>
    <id>145</id>
    <revision>
      <id>496</id>
      <timestamp>2025-06-29T02:15:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>496</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1356" sha1="ggmzbzhatkypeulzdsa15yxpsbkcplp" xml:space="preserve">* Das ProgrammCafé im Peter-Rantzau-Haus findet an jedem ersten Montag im Monat ab etwa 15 Uhr im Peter-Rantzau-Haus, Manfred-Samusch-Straße 9, Ahrensburg, statt und bietet Kaffee, Kuchen sowie nette Gespräche mit anderen Senior:innen in gemütlicher Runde. Veranstaltet wird es von der AWO Ahrensburg. Weitere Informationen finden Sie auf der Website: ahrensburg.drk-stormarn.de.
* Senioren-Treff (AWO Ahrensburg): findet regelmäßig statt, zum Beispiel für gemeinsame Aktivitäten, Busfahrten, Spielrunden und mehr. Treffpunkt ist ebenfalls das Peter-Rantzau-Haus oder unterwegs. Ziel ist es, die Lebensqualität im Alter zu fördern und neue Kontakte zu knüpfen.
* Der DRK Ortsverein Ahrensburg bietet aktuell Gesundheits- und Bewegungskurse wie „Tanz-Stuhl-Gymnastik“, „Yoga auf dem Stuhl“ und „Fitness im Alter“ in der Gemeinde- und Schlosskirche Ahrensburg an. Die Anmeldung zu den Kursen erfolgt über das DRK Ahrensburg.
* Die SeniorenLebenshilfe Ahrensburg bietet stundenweise häusliche Begleitung an, unterstützt im Alltag, führt Gespräche, begleitet zu Terminen und Veranstaltungen und übernimmt Aufgaben wie Alltagsbegleitung, Haushalt, Einkäufe und Freizeitgestaltung.
* Der Seniorenbeirat Ahrensburg trifft sich regelmäßig im Peter-Rantzau-Haus. Die Termine sind auf der Website der Stadt Ahrensburg veröffentlicht.</text>
      <sha1>ggmzbzhatkypeulzdsa15yxpsbkcplp</sha1>
    </revision>
  </page>
  <page>
    <title>Gesundheit</title>
    <ns>0</ns>
    <id>146</id>
    <revision>
      <id>498</id>
      <timestamp>2025-06-29T02:54:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Großes Gesundheitszentrum Ahrensburg== Das große Gesundheitszentrum Ahrensburg in der Hamburger Straße 23 vereint Haus- und Fachärzte wie Onkologie, Innere Medizin, Radiologie, Orthopädie, HNO, Neurologie, Psychiatrie, Urologie und Nuklearmedizin unter einem Dach. Direkt angeschlossen sind zudem eine Apotheke, eine Hörgeräteakustik und eine Physiotherapie. Alle Fachbereiche sind zentral und mit kurzen Wegen erreichbar.  ==Internistische &amp; hausär…“</comment>
      <origin>498</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1823" sha1="gftj3oujhwuimxdjc39opo1znt1fj1m" xml:space="preserve">==Großes Gesundheitszentrum Ahrensburg==
Das große Gesundheitszentrum Ahrensburg in der Hamburger Straße 23 vereint Haus- und Fachärzte wie Onkologie, Innere Medizin, Radiologie, Orthopädie, HNO, Neurologie, Psychiatrie, Urologie und Nuklearmedizin unter einem Dach. Direkt angeschlossen sind zudem eine Apotheke, eine Hörgeräteakustik und eine Physiotherapie. Alle Fachbereiche sind zentral und mit kurzen Wegen erreichbar.

==Internistische &amp; hausärztliche Versorgung==
* Das MEDIZINICUM Ahrensburg (im Gesundheitszentrum) bietet Schwerpunkte in Magen-Darm-Endoskopien, Herzuntersuchungen, Schilddrüse, Ultraschall und Vorsorge.
* Die Praxis an der Reitbahn ist eine internistisch-fachärztliche Gemeinschaftspraxis für Kardiologie, Gastroenterologie, hausärztliche Betreuung und Endoskopien.
* Allgemein- &amp; Betriebsmedizin Frenzel &amp; Ziegler bietet umfassende medizinische Betreuung für alle Altersgruppen sowie arbeitsmedizinische Leistungen.

==Kinder- und Jugendmedizin==
* Familien-Gesundheitszentrum (Hagener Allee 70d): Kinderärztinnen sowie eine Fachärztin für Innere Medizin, Anthroposophie und Akupunktur.

==Psychiatrische &amp; psychosoziale Versorgung==
* Heinrich Sengelmann Tagesklinik Ahrensburg (Carl-Barckmann-Straße 5): Teilstationäre Therapie mit Einzel- und Gruppensitzungen, Kunst-, Musik- und Physiotherapie. Für Menschen mit psychischen Erkrankungen und Überweisung durch einen Psychiater.

==Notfallversorgung &amp; Kliniken in der Region==
* Notdienst-Nummer (außerhalb der Sprechzeiten): 116 117
* Rettungsdienst für Notfälle: 112

===In der Umgebung stehen Kliniken zur Verfügung, beispielsweise===

* LungenClinic Großhansdorf (Pneumologie, Onkologie)
* Heinrich Sengelmann Kliniken Bargfeld-Stegen (Psychiatrie)
* Asklepios Klinik Bad Oldesloe (Innere Medizin, Chirurgie etc.)</text>
      <sha1>gftj3oujhwuimxdjc39opo1znt1fj1m</sha1>
    </revision>
  </page>
  <page>
    <title>Familie &amp; Bildung</title>
    <ns>0</ns>
    <id>147</id>
    <revision>
      <id>501</id>
      <timestamp>2025-06-29T09:31:05Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>501</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3016" sha1="pwk238ph7q5w2d77s5u4tea26exjr5w" xml:space="preserve">== Kindertagesstätten und Offene Ganztagsschulen (OGS) ==
* '''Kita Helgolandring (DRK)''': Bietet qualifizierte Kinderbetreuung ab dem Krippenalter mit vielfältigen Spiel-, Lern- und Bewegungsangeboten.
* '''Kita Stadtzwerge (Elbkinder)''': Betreut Kinder im Alter von 8 Wochen bis 6 Jahren und ist ganzjährig, auch während der Schulferien, geöffnet.
* '''OGS Am Aalfang (WABE e.V.)''': Organisiert die Ganztagsbetreuung für Grundschulkinder mit Angeboten am Vor- und Nachmittag.
* '''OGS Am Schloss (Grundschule Am Schloss, WABE Nord)''': Gewährleistet eine zuverlässige Ganztagsbetreuung bis 17:00 Uhr.

== Schulen in Ahrensburg ==
=== Grundschulen ===
* '''Grundschule Am Schloss''': Eine traditionsreiche Schule (gegründet 1595), die vielfältige Bildungsangebote bereitstellt.
* '''Grundschule Am Aalfang''': Eine moderne Grundschule, die den Schwerpunkt auf individuelle Förderung legt.
* '''Grundschule Am Reesenbüttel''': Legt einen besonderen Fokus auf die Entwicklung sozialer Kompetenzen.
* '''Grundschule Am Hagen''': Zeichnet sich durch ein naturnahes Lernumfeld aus.

=== Förderzentren und Förderschulen ===
* '''Woldenhorn-Schule''': Förderzentrum mit dem Schwerpunkt auf geistige Entwicklung.
* '''Fritz-Reuter-Schule''': Förderzentrum für die Bereiche Lernen, Sprache, emotionale Entwicklung und Inklusion.

=== Weiterführende Schulen ===
* '''Stormarnschule''': Ein Gymnasium mit Musikzweig und AbiBac, das seit 2019 als Europaschule zertifiziert ist. Es bietet bilingualen Unterricht und musikalische Förderung für rund 850 Schüler.
* '''Eric-Kandel-Gymnasium''': Seit 1993 eine UNESCO-Projektschule, die ein IQ-Profil für besonders begabte Schüler anbietet.
* '''Selma-Lagerlöf-Gemeinschaftsschule &amp; Schulzentrum Am Heimgarten''': Eine Gesamtschule, die vielfältige Bildungswege und individuelle Förderung ermöglicht.

=== Berufliche Schulen und Volkshochschule ===
* '''Berufliche Schule des Kreises Stormarn in Ahrensburg''' und '''Volkshochschule Ahrensburg''': Bieten Weiterbildungen, Umschulungen und die Möglichkeit zum Nachholen von Schulabschlüssen für Erwachsene an.

=== Familienberatung und Familienzentren ===
* '''AWO Familienzentrum Ahrensburg (Hamburger Str. 16a)''': Bietet Beratung, Kursangebote, Alltagsunterstützung, Dolmetscherdienste und Hilfe bei Anträgen.
* '''AWO Frühe Hilfen &amp; Patenprojekte''': Umfasst Projekte wie „wellcome“ für Neugeborene, „Zeitspender“ für Kinder (1–12 Jahre) und „Rückhalt-Paten“ für Familien in Notlagen.
* '''Familien-Lebensschule Ahrensburg e.V. (Hagener Allee 70d)''': Veranstaltet Kurse und Angebote zur Elternbildung.
* '''pro familia Ahrensburg''': Bietet Beratung zu Schwangerschaft, Partnerschaft, Familienplanung und Sexualität.

Ahrensburg verfügt über ein umfassendes Bildungs- und Betreuungsnetzwerk für Familien, das von Kindertagesstätten über alle Schulformen bis hin zur Erwachsenenbildung reicht und durch vielfältige Beratungs- und Unterstützungsangebote ergänzt wird.</text>
      <sha1>pwk238ph7q5w2d77s5u4tea26exjr5w</sha1>
    </revision>
  </page>
  <page>
    <title>Naherholungsgebiete</title>
    <ns>0</ns>
    <id>148</id>
    <revision>
      <id>503</id>
      <timestamp>2025-06-29T09:45:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>503</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="811" sha1="rn7w0pytmhl824dj81i1qvur5udgjpw" xml:space="preserve">==Naturschutz &amp; Natur erleben==
* '''Stellmoor–Ahrensburger Tunneltal''': Ein großflächiges Naturschutzgebiet (ca. 339 ha) südlich von Ahrensburg. Die Landschaft ist geprägt von Mooren, Teichen sowie Bruchwäldern und eignet sich ideal zum Wandern und zur Vogelbeobachtung.
* '''Heidkoppelmoor und Umgebung''': Ein Niedermoor-Biotop nordöstlich von Ahrensburg mit Wiesen und Moorflächen. Es beheimatet seltene Pflanzen- und Tierarten wie Orchideen und den Moorfrosch.
* '''Ammersbek-Niederung''': Ein Übergangsmoor mit Feuchtgrünland nordwestlich von Ahrensburg, das Teil eines größeren Naturschutzraums ist.

==Gewässer &amp; Open-Air-Spaß==
* '''Bredenbeker Teich''': Ein etwa 35 ha großer Teich mit einem 6 km langen Uferweg, der zum Spazierengehen, Baden (im „Strandbad“) und Angeln einlädt.</text>
      <sha1>rn7w0pytmhl824dj81i1qvur5udgjpw</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Services</title>
    <ns>3002</ns>
    <id>149</id>
    <revision>
      <id>508</id>
      <timestamp>2025-06-29T18:54:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC – Services &amp; Dependency Injection (DI) =  == Was sind Services? == Services sind Klassen, die die zentrale Geschäftslogik der Anwendung kapseln. Sie sind: * Wiederverwendbar * Selbstständig * Von Controllern/VIEWS unabhängig  Typische Aufgaben: * Datenzugriff * Berechnungen * API-Kommunikation * Benachrichtigungen &amp; Logging  == Vorteile == * '''Kapselung''': Geschäftslogik getrennt von Controller/View * '''Wiederverwendbarkeit'''…“</comment>
      <origin>508</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4448" sha1="rqqtp1pfgox946hzpxpc4ls7gmld5ur" xml:space="preserve">= ASP.NET Core MVC – Services &amp; Dependency Injection (DI) =

== Was sind Services? ==
Services sind Klassen, die die zentrale Geschäftslogik der Anwendung kapseln. Sie sind:
* Wiederverwendbar
* Selbstständig
* Von Controllern/VIEWS unabhängig

Typische Aufgaben:
* Datenzugriff
* Berechnungen
* API-Kommunikation
* Benachrichtigungen &amp; Logging

== Vorteile ==
* '''Kapselung''': Geschäftslogik getrennt von Controller/View
* '''Wiederverwendbarkeit'''
* '''Testbarkeit'''
* '''Dependency Injection''' möglich

== Beispielcode – Einfacher Service ohne DI ==
&lt;syntaxhighlight lang="csharp"&gt;
// CitiesService.cs
namespace Services {
  public class CitiesService {
    private List&lt;string&gt; _cities = new List&lt;string&gt; { "London", "Paris", "New York" };
    public List&lt;string&gt; GetCities() =&gt; _cities;
  }
}

// HomeController.cs
public class HomeController : Controller {
  private readonly CitiesService _citiesService = new CitiesService();
  public IActionResult Index() {
    var cities = _citiesService.GetCities();
    return View(cities);
  }
}
&lt;/syntaxhighlight&gt;

'''Hinweis:''' Kein DI – in echten Anwendungen besser über DI realisieren.

== Interface &amp; DIP-Prinzip ==
&lt;syntaxhighlight lang="csharp"&gt;
// ICitiesService.cs
public interface ICitiesService {
  List&lt;string&gt; GetCities();
}

// CitiesService.cs
public class CitiesService : ICitiesService {
  public List&lt;string&gt; GetCities() =&gt; new List&lt;string&gt; { "London", "Berlin", "Tokyo" };
}
&lt;/syntaxhighlight&gt;

== Registrierung in Program.cs ==
&lt;syntaxhighlight lang="csharp"&gt;
builder.Services.AddTransient&lt;ICitiesService, CitiesService&gt;();
&lt;/syntaxhighlight&gt;

== DI im Controller ==
&lt;syntaxhighlight lang="csharp"&gt;
public class HomeController : Controller {
  private readonly ICitiesService _citiesService;
  public HomeController(ICitiesService citiesService) {
    _citiesService = citiesService;
  }
}
&lt;/syntaxhighlight&gt;

== Lebenszyklen von Services ==
* '''Transient''': Neue Instanz bei jeder Anforderung
* '''Scoped''': Eine Instanz pro HTTP-Anfrage
* '''Singleton''': Eine Instanz für gesamte App-Laufzeit

&lt;syntaxhighlight lang="csharp"&gt;
builder.Services.AddTransient&lt;IExample, ExampleTransient&gt;();
builder.Services.AddScoped&lt;IExample, ExampleScoped&gt;();
builder.Services.AddSingleton&lt;IExample, ExampleSingleton&gt;();
&lt;/syntaxhighlight&gt;

== Autofac Integration ==
&lt;syntaxhighlight lang="csharp"&gt;
builder.Host.UseServiceProviderFactory(new AutofacServiceProviderFactory());
builder.Host.ConfigureContainer&lt;ContainerBuilder&gt;(containerBuilder =&gt; {
  containerBuilder.RegisterType&lt;CitiesService&gt;()
                  .As&lt;ICitiesService&gt;()
                  .InstancePerLifetimeScope();
});
&lt;/syntaxhighlight&gt;

== Dependency Injection Techniken ==
* '''Konstruktor-Injektion''' (Standard)
* '''Property-Injektion''' mit [FromServices]
* '''Methoden-Injektion''' direkt im Methodenparameter

&lt;syntaxhighlight lang="csharp"&gt;
// Property
[FromServices]
public ILogger Logger { get; set; }

// Method
public IActionResult Index([FromServices] IUserService service) {
  ...
}
&lt;/syntaxhighlight&gt;

== Beispiel – DIP Prinzip ==
&lt;syntaxhighlight lang="csharp"&gt;
// Ohne DIP
class LightSwitch {
  private SpecificLightBulb bulb = new SpecificLightBulb();
  public void TurnOn() =&gt; bulb.Illuminate();
}

// Mit DIP
interface ILight {
  void Illuminate();
}
class LightBulb : ILight {
  public void Illuminate() { ... }
}
class LightSwitch {
  private ILight light;
  public LightSwitch(ILight light) {
    this.light = light;
  }
  public void TurnOn() =&gt; light.Illuminate();
}
&lt;/syntaxhighlight&gt;

== Best Practices ==
* Verwende Konstruktor-Injektion als Standard
* Verwende Interfaces für lose Kopplung
* Vermeide den '''Service Locator Anti-Pattern'''
* Registriere Abhängigkeiten in '''Program.cs'''
* Achte auf '''kompatible Lebenszyklen'''
* Nutze '''Dekoratoren''' für Logging/Caching
* Nutze das '''Options-Pattern''' für Konfiguration
* Keine Überverwendung von DI

== Interview-Tipps ==
* Erkläre DIP, IoC und DI einfach und präzise
* Begründe die Wahl des richtigen Lebenszyklus
* Zeige Best Practices wie Interface-Nutzung, Constructor DI
* Erwähne Autofac als erweiterbares DI-Tool

== Zusammenfassung ==
* '''DIP''': Hohe Module hängen von Abstraktionen ab
* '''IoC''': Framework verwaltet Abhängigkeits-Erzeugung
* '''DI''': Implementierung von IoC
* '''Lifetimes''': Transient / Scoped / Singleton
* '''Autofac''': Leistungsfähige Alternative zum .NET-Core-DI</text>
      <sha1>rqqtp1pfgox946hzpxpc4ls7gmld5ur</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:View Components</title>
    <ns>3002</ns>
    <id>150</id>
    <revision>
      <id>510</id>
      <timestamp>2025-06-29T19:33:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= View Components in ASP.NET Core MVC (Deutsch) =  == Einführung == View Components sind wiederverwendbare, selbstständige UI-Bausteine in ASP.NET Core MVC. Sie sind stärker als Partial Views und leichter als vollständige Controller + Views.  == Zweck == * '''Komplexität kapseln''': UI-Logik in einer Einheit bündeln * '''Wiederverwendbarkeit''': In mehreren Views einsetzen * '''Testbarkeit''': Einfach zu testen durch Entkopplung * '''Einsatz''': Dyn…“</comment>
      <origin>510</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3598" sha1="fxvari06q31tfpqv3bm2gn0o6lvwsho" xml:space="preserve">= View Components in ASP.NET Core MVC (Deutsch) =

== Einführung ==
View Components sind wiederverwendbare, selbstständige UI-Bausteine in ASP.NET Core MVC. Sie sind stärker als Partial Views und leichter als vollständige Controller + Views.

== Zweck ==
* '''Komplexität kapseln''': UI-Logik in einer Einheit bündeln
* '''Wiederverwendbarkeit''': In mehreren Views einsetzen
* '''Testbarkeit''': Einfach zu testen durch Entkopplung
* '''Einsatz''': Dynamische Widgets, Navigation, Formulare, Mini-Dashboards

== Best Practices ==
* '''Benennung''': Klassenname endet auf '''ViewComponent'''
* '''Struktur''': 
** Klassen: ''ViewComponents/''
** Views: ''Views/Shared/Components/{Name}/{View}.cshtml''
* '''Starke Typisierung''': Übergabe per ViewModel statt ViewBag
* '''Asynchron''': Nutze ''InvokeAsync'' für Datenoperationen
* '''Trennung der Logik''': Nur UI-Logik, keine Geschäftslogik

== Was vermeiden ==
* Übermäßiger Einsatz bei einfachen UI-Teilen
* Direkte Datenbankzugriffe – verwende Services
* Starke Kopplung an bestimmte Controller
* Umfangreiche Businesslogik innerhalb der Komponente

== Struktur eines View Components ==
=== GridViewComponent.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
public class GridViewComponent : ViewComponent
{
    public async Task&lt;IViewComponentResult&gt; InvokeAsync()
    {
        var model = new PersonGridModel
        {
            GridTitle = "Personenliste",
            Persons = new List&lt;Person&gt;
            {
                new Person { PersonName = "John", JobTitle = "Manager" },
                new Person { PersonName = "Jones", JobTitle = "Stellv. Manager" },
                new Person { PersonName = "William", JobTitle = "Sachbearbeiter" }
            }
        };
        return View("Sample", model);
    }
}
&lt;/syntaxhighlight&gt;

=== View aufrufen (z. B. Index.cshtml) ===
&lt;syntaxhighlight lang="razor"&gt;
@await Component.InvokeAsync("Grid")
&lt;/syntaxhighlight&gt;

=== View-Komponente Sample.cshtml ===
&lt;syntaxhighlight lang="razor"&gt;
@model PersonGridModel

&lt;div class="box"&gt;
    &lt;h3&gt;@Model.GridTitle&lt;/h3&gt;
    &lt;table class="table w-100"&gt;
        &lt;thead&gt;&lt;tr&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Job&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;
        &lt;tbody&gt;
        @foreach (var person in Model.Persons)
        {
            &lt;tr&gt;&lt;td&gt;@person.PersonName&lt;/td&gt;&lt;td&gt;@person.JobTitle&lt;/td&gt;&lt;/tr&gt;
        }
        &lt;/tbody&gt;
    &lt;/table&gt;
&lt;/div&gt;
&lt;/syntaxhighlight&gt;

== Übergabe von Parametern ==
=== ViewComponent mit Parameter ===
&lt;syntaxhighlight lang="csharp"&gt;
public async Task&lt;IViewComponentResult&gt; InvokeAsync(PersonGridModel grid)
{
    return View("Sample", grid);
}
&lt;/syntaxhighlight&gt;

=== View (z. B. Index.cshtml) ===
&lt;syntaxhighlight lang="razor"&gt;
@{
    var model = new PersonGridModel { /* ... */ };
}
@await Component.InvokeAsync("Grid", new { grid = model })
&lt;/syntaxhighlight&gt;

=== Alternative mit Tag Helper ===
&lt;syntaxhighlight lang="razor"&gt;
&lt;vc:grid grid="model"&gt;&lt;/vc:grid&gt;
&lt;/syntaxhighlight&gt;

== ViewComponentResult aus Controller ==
&lt;syntaxhighlight lang="csharp"&gt;
[Route("freunde")]
public IActionResult LoadFriendsList()
{
    var model = new PersonGridModel
    {
        GridTitle = "Freunde",
        Persons = new List&lt;Person&gt; { /* ... */ }
    };
    return ViewComponent("Grid", new { grid = model });
}
&lt;/syntaxhighlight&gt;

== Zusammenfassung ==
* '''Struktur''': ViewComponents-Ordner, Razor Views im Shared-Ordner
* '''Aufruf''': @await Component.InvokeAsync("Name", new { ... })
* '''Asynchron''': Immer InvokeAsync verwenden
* '''Starke Typisierung''': Verwende ViewModels
* '''Trennung''': Keine Geschäftslogik oder DB-Zugriff im ViewComponent</text>
      <sha1>fxvari06q31tfpqv3bm2gn0o6lvwsho</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:ASP.NET Core Environments</title>
    <ns>3002</ns>
    <id>151</id>
    <revision>
      <id>512</id>
      <timestamp>2025-06-29T19:47:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core Environments – Spickzettel =  ASP.NET Core verwendet sogenannte '''Environments''' (Umgebungen), um das Verhalten einer Anwendung je nach Bereitstellungsszenario (Development, Staging, Production) anzupassen.  == Übliche Umgebungen ==  * '''Development''': Lokale Entwicklungsumgebung – ideal zum Testen und Debugging. * '''Staging''': Vorproduktionsumgebung – bildet die Produktion möglichst genau ab. * '''Production''': Live-Umgebung…“</comment>
      <origin>512</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3363" sha1="699repyx4vhefe4yuflr2dpqc72fgck" xml:space="preserve">= ASP.NET Core Environments – Spickzettel =

ASP.NET Core verwendet sogenannte '''Environments''' (Umgebungen), um das Verhalten einer Anwendung je nach Bereitstellungsszenario (Development, Staging, Production) anzupassen.

== Übliche Umgebungen ==

* '''Development''': Lokale Entwicklungsumgebung – ideal zum Testen und Debugging.
* '''Staging''': Vorproduktionsumgebung – bildet die Produktion möglichst genau ab.
* '''Production''': Live-Umgebung für Endnutzer.

== Umgebung setzen ==

Die Umgebung wird über die Umgebungsvariable '''ASPNETCORE_ENVIRONMENT''' definiert.

=== Möglichkeiten zum Setzen ===

; '''launchSettings.json'''
: Im Ordner ''Properties'' des Projekts:
&lt;syntaxhighlight lang="json"&gt;
"environmentVariables": {
  "ASPNETCORE_ENVIRONMENT": "Development"
}
&lt;/syntaxhighlight&gt;

; '''Terminal (Windows PowerShell / CMD)'''
&lt;syntaxhighlight lang="powershell"&gt;
$env:ASPNETCORE_ENVIRONMENT = "Development"
dotnet run
&lt;/syntaxhighlight&gt;
&lt;syntaxhighlight lang="cmd"&gt;
set ASPNETCORE_ENVIRONMENT=Production
dotnet run
&lt;/syntaxhighlight&gt;

; '''macOS / Linux'''
&lt;syntaxhighlight lang="bash"&gt;
export ASPNETCORE_ENVIRONMENT=Staging
dotnet run
&lt;/syntaxhighlight&gt;

== Zugriff auf die Umgebung im Code ==

=== Program.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

if (app.Environment.IsDevelopment())
{
    app.UseDeveloperExceptionPage();
}
else
{
    app.UseExceptionHandler("/Error");
}
&lt;/syntaxhighlight&gt;

=== Controller ===
&lt;syntaxhighlight lang="csharp"&gt;
public class HomeController : Controller
{
    private readonly IWebHostEnvironment _env;

    public HomeController(IWebHostEnvironment env)
    {
        _env = env;
    }

    public IActionResult Index()
    {
        ViewBag.CurrentEnvironment = _env.EnvironmentName;
        return View();
    }
}
&lt;/syntaxhighlight&gt;

== Konfigurationsdateien ==

Erstelle Dateien wie:
* ''appsettings.Development.json''
* ''appsettings.Staging.json''
* ''appsettings.Production.json''

Diese überschreiben Einstellungen aus ''appsettings.json'' je nach aktiver Umgebung.

== &lt;environment&gt; Tag Helper ==

In Razor Views:
&lt;syntaxhighlight lang="html"&gt;
&lt;environment include="Development"&gt;
  &lt;script src="~/scripts/dev.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;environment exclude="Development"&gt;
  &lt;script src="~/scripts/prod.min.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;/syntaxhighlight&gt;

== Best Practices ==

* Nutze '''environment-spezifische Dateien''' für getrennte Konfigurationen.
* Verwende '''verschiedene Middleware-Pipelines''':
  &lt;syntaxhighlight lang="csharp"&gt;
  if (app.Environment.IsProduction())
      app.UseExceptionHandler("/Error");
  &lt;/syntaxhighlight&gt;
* '''Logging''' pro Umgebung anpassen.
* '''Feature Flags''' über Umgebungsvariablen oder appsettings aktivieren/deaktivieren.

== launchSettings.json verstehen ==

&lt;syntaxhighlight lang="json"&gt;
{
  "profiles": {
    "MyApp": {
      "commandName": "Project",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}
&lt;/syntaxhighlight&gt;

== Interview-Tipps ==

* Erkläre, warum Environments wichtig sind (z. B. Sicherheit, Flexibilität).
* Zeige, wie man appsettings.{ENV}.json nutzt.
* Beschreibe, wie Middleware sich abhängig von der Umgebung unterscheidet.
* Erkläre, wie man ASPNETCORE_ENVIRONMENT beim Deployment setzt.</text>
      <sha1>699repyx4vhefe4yuflr2dpqc72fgck</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:ASP.NET Core Konfiguration</title>
    <ns>3002</ns>
    <id>152</id>
    <revision>
      <id>514</id>
      <timestamp>2025-06-29T20:04:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core Environments – Spickzettel =  ASP.NET Core verwendet sogenannte '''Environments''' (Umgebungen), um das Verhalten einer Anwendung je nach Bereitstellungsszenario (Development, Staging, Production) anzupassen.  == Übliche Umgebungen ==  * '''Development''': Lokale Entwicklungsumgebung – ideal zum Testen und Debugging. * '''Staging''': Vorproduktionsumgebung – bildet die Produktion möglichst genau ab. * '''Production''': Live-Umgebung…“</comment>
      <origin>514</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3363" sha1="699repyx4vhefe4yuflr2dpqc72fgck" xml:space="preserve">= ASP.NET Core Environments – Spickzettel =

ASP.NET Core verwendet sogenannte '''Environments''' (Umgebungen), um das Verhalten einer Anwendung je nach Bereitstellungsszenario (Development, Staging, Production) anzupassen.

== Übliche Umgebungen ==

* '''Development''': Lokale Entwicklungsumgebung – ideal zum Testen und Debugging.
* '''Staging''': Vorproduktionsumgebung – bildet die Produktion möglichst genau ab.
* '''Production''': Live-Umgebung für Endnutzer.

== Umgebung setzen ==

Die Umgebung wird über die Umgebungsvariable '''ASPNETCORE_ENVIRONMENT''' definiert.

=== Möglichkeiten zum Setzen ===

; '''launchSettings.json'''
: Im Ordner ''Properties'' des Projekts:
&lt;syntaxhighlight lang="json"&gt;
"environmentVariables": {
  "ASPNETCORE_ENVIRONMENT": "Development"
}
&lt;/syntaxhighlight&gt;

; '''Terminal (Windows PowerShell / CMD)'''
&lt;syntaxhighlight lang="powershell"&gt;
$env:ASPNETCORE_ENVIRONMENT = "Development"
dotnet run
&lt;/syntaxhighlight&gt;
&lt;syntaxhighlight lang="cmd"&gt;
set ASPNETCORE_ENVIRONMENT=Production
dotnet run
&lt;/syntaxhighlight&gt;

; '''macOS / Linux'''
&lt;syntaxhighlight lang="bash"&gt;
export ASPNETCORE_ENVIRONMENT=Staging
dotnet run
&lt;/syntaxhighlight&gt;

== Zugriff auf die Umgebung im Code ==

=== Program.cs ===
&lt;syntaxhighlight lang="csharp"&gt;
var builder = WebApplication.CreateBuilder(args);
var app = builder.Build();

if (app.Environment.IsDevelopment())
{
    app.UseDeveloperExceptionPage();
}
else
{
    app.UseExceptionHandler("/Error");
}
&lt;/syntaxhighlight&gt;

=== Controller ===
&lt;syntaxhighlight lang="csharp"&gt;
public class HomeController : Controller
{
    private readonly IWebHostEnvironment _env;

    public HomeController(IWebHostEnvironment env)
    {
        _env = env;
    }

    public IActionResult Index()
    {
        ViewBag.CurrentEnvironment = _env.EnvironmentName;
        return View();
    }
}
&lt;/syntaxhighlight&gt;

== Konfigurationsdateien ==

Erstelle Dateien wie:
* ''appsettings.Development.json''
* ''appsettings.Staging.json''
* ''appsettings.Production.json''

Diese überschreiben Einstellungen aus ''appsettings.json'' je nach aktiver Umgebung.

== &lt;environment&gt; Tag Helper ==

In Razor Views:
&lt;syntaxhighlight lang="html"&gt;
&lt;environment include="Development"&gt;
  &lt;script src="~/scripts/dev.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;environment exclude="Development"&gt;
  &lt;script src="~/scripts/prod.min.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;/syntaxhighlight&gt;

== Best Practices ==

* Nutze '''environment-spezifische Dateien''' für getrennte Konfigurationen.
* Verwende '''verschiedene Middleware-Pipelines''':
  &lt;syntaxhighlight lang="csharp"&gt;
  if (app.Environment.IsProduction())
      app.UseExceptionHandler("/Error");
  &lt;/syntaxhighlight&gt;
* '''Logging''' pro Umgebung anpassen.
* '''Feature Flags''' über Umgebungsvariablen oder appsettings aktivieren/deaktivieren.

== launchSettings.json verstehen ==

&lt;syntaxhighlight lang="json"&gt;
{
  "profiles": {
    "MyApp": {
      "commandName": "Project",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}
&lt;/syntaxhighlight&gt;

== Interview-Tipps ==

* Erkläre, warum Environments wichtig sind (z. B. Sicherheit, Flexibilität).
* Zeige, wie man appsettings.{ENV}.json nutzt.
* Beschreibe, wie Middleware sich abhängig von der Umgebung unterscheidet.
* Erkläre, wie man ASPNETCORE_ENVIRONMENT beim Deployment setzt.</text>
      <sha1>699repyx4vhefe4yuflr2dpqc72fgck</sha1>
    </revision>
    <revision>
      <id>515</id>
      <parentid>514</parentid>
      <timestamp>2025-06-29T20:06:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>515</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4590" sha1="fnvwfp8sgkmw7tdrk9yd4011invirz8" xml:space="preserve">= ASP.NET Core Konfiguration – Spickzettel =

== Grundkonzepte ==
* '''Konfigurationsanbieter''': Laden Konfigurationen aus Quellen (z. B. JSON, Umgebungsvariablen).
* '''Konfigurationsquellen''': Speicherorte (Dateien, Variablen etc.).
* '''Key-Value-Paare''': Konfigurationen als Schlüssel-Wert.

== Häufige Quellen ==
* '''JSON-Dateien''':
  Vorteil: Struktur, leicht lesbar.  
  Beispiel:
  &lt;syntaxhighlight lang="json"&gt;
  {
    "Logging": {
      "LogLevel": {
        "Default": "Information"
      }
    }
  }
  &lt;/syntaxhighlight&gt;

* '''Umgebungsvariablen''':
  Vorteil: Ideal für geheime oder umgebungsspezifische Daten.  
  Mapping: `ASPNETCORE_Logging__LogLevel__Default` → `Logging:LogLevel:Default`

* '''User-Secrets (Entwicklung)''':
  Initialisierung:
  &lt;syntaxhighlight lang="bash"&gt;
  dotnet user-secrets init
  dotnet user-secrets set "MySecret" "123"
  &lt;/syntaxhighlight&gt;

* '''Azure Key Vault''': Für sichere Produktionsgeheimnisse.

== Konfiguration einbinden ==
'''Program.cs'''
&lt;syntaxhighlight lang="csharp"&gt;
var builder = WebApplication.CreateBuilder(args);
var configuration = builder.Configuration;

builder.Configuration
    .AddJsonFile("appsettings.json", optional: false)
    .AddJsonFile($"appsettings.{builder.Environment.EnvironmentName}.json", optional: true)
    .AddEnvironmentVariables()
    .AddUserSecrets&lt;Program&gt;();
&lt;/syntaxhighlight&gt;

== Zugriff auf Konfiguration ==
&lt;syntaxhighlight lang="csharp"&gt;
var port = configuration.GetValue&lt;int&gt;("Server:Port");
var logLevel = configuration["Logging:LogLevel:Default"];
var section = configuration.GetSection("Logging");
&lt;/syntaxhighlight&gt;

== Injection in Controller/Service ==
&lt;syntaxhighlight lang="csharp"&gt;
public class HomeController : Controller
{
    private readonly IConfiguration _config;

    public HomeController(IConfiguration config)
    {
        _config = config;
    }

    public IActionResult Index()
    {
        var value = _config["MyKey"];
        return View();
    }
}
&lt;/syntaxhighlight&gt;

== Options Pattern ==
* Vorteile: Starke Typisierung, IntelliSense, Validierung

'''Beispiel:'''
&lt;syntaxhighlight lang="csharp"&gt;
// MyOptions.cs
public class MyOptions
{
    public string Option1 { get; set; }
    public int Option2 { get; set; }
}

// Program.cs
builder.Services.Configure&lt;MyOptions&gt;(builder.Configuration.GetSection("MyOptions"));

// Service
public class MyService
{
    private readonly IOptions&lt;MyOptions&gt; _options;

    public MyService(IOptions&lt;MyOptions&gt; options)
    {
        _options = options;
    }
}
&lt;/syntaxhighlight&gt;

== Hierarchische Konfiguration ==
'''Beispiel (JSON):'''
&lt;syntaxhighlight lang="json"&gt;
{
  "Inventory": {
    "StockAlertThreshold": 20,
    "WarehouseLocations": [ "New York", "London" ]
  }
}
&lt;/syntaxhighlight&gt;

'''Zugriff:'''
&lt;syntaxhighlight lang="csharp"&gt;
var threshold = configuration.GetValue&lt;int&gt;("Inventory:StockAlertThreshold");
var locations = configuration.GetSection("Inventory:WarehouseLocations").Get&lt;string[]&gt;();
&lt;/syntaxhighlight&gt;

== Umgebungsspezifische Konfiguration ==
* `appsettings.{Environment}.json` z. B.:
  - appsettings.Development.json
  - appsettings.Production.json

== Umgebungsvariable setzen ==
&lt;syntaxhighlight lang="bash"&gt;
# Bash
export ASPNETCORE_Logging__LogLevel__Default="Debug"
&lt;/syntaxhighlight&gt;

&lt;syntaxhighlight lang="powershell"&gt;
# PowerShell
$env:ASPNETCORE_Logging__LogLevel__Default = "Debug"
&lt;/syntaxhighlight&gt;

== Zugriff in Code ==
&lt;syntaxhighlight lang="csharp"&gt;
var env = builder.Environment;
if (env.IsDevelopment())
{
    app.UseDeveloperExceptionPage();
}
&lt;/syntaxhighlight&gt;

== HttpClient (mit IHttpClientFactory) ==
* Registrierung:
&lt;syntaxhighlight lang="csharp"&gt;
builder.Services.AddHttpClient("finnhub", client =&gt;
{
    client.BaseAddress = new Uri("https://finnhub.io/api/v1/");
});
&lt;/syntaxhighlight&gt;

* Verwendung:
&lt;syntaxhighlight lang="csharp"&gt;
public class FinnhubService
{
    private readonly HttpClient _client;

    public FinnhubService(IHttpClientFactory factory)
    {
        _client = factory.CreateClient("finnhub");
    }

    public async Task&lt;string&gt; GetQuote()
    {
        var response = await _client.GetAsync("quote?symbol=AAPL&amp;token=API_KEY");
        return await response.Content.ReadAsStringAsync();
    }
}
&lt;/syntaxhighlight&gt;

== Best Practices ==
* Verwende '''Options Pattern''' für strukturierte Konfiguration.
* '''appsettings.{env}.json''' für Umgebungen.
* '''User Secrets''' oder '''Azure Key Vault''' für sensible Daten.
* '''reloadOnChange: true''' für dynamische Updates.
* Kombiniere mehrere Quellen mit klarer Priorität.</text>
      <sha1>fnvwfp8sgkmw7tdrk9yd4011invirz8</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Crud Operations</title>
    <ns>3002</ns>
    <id>153</id>
    <revision>
      <id>517</id>
      <timestamp>2025-06-29T20:13:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET MVC – Controller und Views für Read &amp; Create =  == Controller ==  === Index (Read) === * Liest Daten (z. B. Liste von Objekten) aus dem Service. * Übergibt Daten an die View zur Anzeige. * Typischer Rückgabewert: &lt;code&gt;IActionResult&lt;/code&gt; → &lt;code&gt;return View(model);&lt;/code&gt;  &lt;syntaxhighlight lang="csharp"&gt; public IActionResult Index(string sortBy, string searchBy, string searchString) {     var persons = _personService.GetFilteredPerson…“</comment>
      <origin>517</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3120" sha1="7r5ha63h9pqnvojzw79nvtll0wzzngn" xml:space="preserve">= ASP.NET MVC – Controller und Views für Read &amp; Create =

== Controller ==

=== Index (Read) ===
* Liest Daten (z. B. Liste von Objekten) aus dem Service.
* Übergibt Daten an die View zur Anzeige.
* Typischer Rückgabewert: &lt;code&gt;IActionResult&lt;/code&gt; → &lt;code&gt;return View(model);&lt;/code&gt;

&lt;syntaxhighlight lang="csharp"&gt;
public IActionResult Index(string sortBy, string searchBy, string searchString)
{
    var persons = _personService.GetFilteredPersons(sortBy, searchBy, searchString);
    return View(persons);
}
&lt;/syntaxhighlight&gt;

=== Create (Form anzeigen + speichern) ===

* GET: Gibt leere Formular-View zurück.
* POST: Validiert Eingabe, erstellt Objekt, leitet weiter zu Index.

&lt;syntaxhighlight lang="csharp"&gt;
[HttpGet]
public IActionResult Create()
{
    return View();
}

[HttpPost]
public IActionResult Create(PersonAddRequest person)
{
    if (ModelState.IsValid)
    {
        _personService.AddPerson(person);
        return RedirectToAction("Index");
    }
    return View(person);
}
&lt;/syntaxhighlight&gt;

== Views ==

=== Index.cshtml (Lesen) ===
* Starke Typisierung: &lt;code&gt;@model IEnumerable&amp;lt;PersonResponse&amp;gt;&lt;/code&gt;
* Tabellenanzeige mit Sortierung und Suche.

&lt;syntaxhighlight lang="html"&gt;
&lt;form asp-controller="Persons" asp-action="Index" method="get"&gt;
    &lt;select name="searchBy"&gt;
        &lt;option value="Name"&gt;Name&lt;/option&gt;
        &lt;option value="Email"&gt;Email&lt;/option&gt;
    &lt;/select&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;input type="submit" value="Suchen" /&gt;
&lt;/form&gt;

&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;
                @Html.ActionLink("Name", "Index", new { sortBy = "Name" })
            &lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        @foreach (var person in Model)
        {
            &lt;tr&gt;&lt;td&gt;@person.Name&lt;/td&gt;&lt;/tr&gt;
        }
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/syntaxhighlight&gt;

=== Create.cshtml (Erstellen) ===
* Formular mit Tag Helpers
* Modelbindung + Validierung

&lt;syntaxhighlight lang="html"&gt;
@model PersonAddRequest

&lt;form asp-action="Create" method="post"&gt;
    &lt;div asp-validation-summary="ModelOnly"&gt;&lt;/div&gt;

    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/syntaxhighlight&gt;

== Best Practices ==
* **Stark typisierte Views** statt ViewBag.
* **Trennung von Anliegen** (Services für Logik, Views für UI).
* **Teilansichten** für wiederverwendbare UI-Komponenten.
* **Validierung mit DataAnnotations** (z. B. &lt;code&gt;[Required]&lt;/code&gt;).
* **Redirect nach POST** zur Vermeidung von doppelten Einreichungen.

== Dinge, die man vermeiden sollte ==
* Komplexe Logik in Views.
* Zu starke Kopplung zwischen View und Controller.
* Übermäßige Nutzung von &lt;code&gt;ViewBag&lt;/code&gt; statt ViewModels.
* Feste Strings für Sortierung – besser Konstanten oder Enums.
* Unvalidierte Benutzereingaben – immer sanitizen.

== Interview-Fokus ==
* Verständnis von MVC-Architektur.
* Anwendung von Model Binding und Validierung.
* Verwendung von Razor-Syntax.
* Fehlerbehandlung und Weiterleitungen.
* Beachtung von Clean Code und Best Practices.</text>
      <sha1>7r5ha63h9pqnvojzw79nvtll0wzzngn</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Tag Helpers</title>
    <ns>3002</ns>
    <id>154</id>
    <revision>
      <id>519</id>
      <timestamp>2025-06-29T20:21:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core MVC Tag Helpers – Code Spickzettel =  == Allgemeine Verwendung ==  &lt;code&gt; &lt;a asp-controller="Home" asp-action="Index"&gt;Startseite&lt;/a&gt; &lt;!-- Link zur Index-Aktion im HomeController --&gt;  &lt;form asp-controller="Products" asp-action="Create" method="post"&gt; &lt;/form&gt; &lt;!-- Formular zur Create-Aktion --&gt;  &lt;input asp-for="ProductName" class="form-control" /&gt; &lt;!-- Bindet an das Model-Property ProductName --&gt;  &lt;select asp-for="CategoryId" asp-items="Mod…“</comment>
      <origin>519</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2465" sha1="r2qfddewwcfwhdwm9gcoddln8oy5mew" xml:space="preserve">= ASP.NET Core MVC Tag Helpers – Code Spickzettel =

== Allgemeine Verwendung ==

&lt;code&gt;
&lt;a asp-controller="Home" asp-action="Index"&gt;Startseite&lt;/a&gt;
&lt;!-- Link zur Index-Aktion im HomeController --&gt;

&lt;form asp-controller="Products" asp-action="Create" method="post"&gt;
&lt;/form&gt;
&lt;!-- Formular zur Create-Aktion --&gt;

&lt;input asp-for="ProductName" class="form-control" /&gt;
&lt;!-- Bindet an das Model-Property ProductName --&gt;

&lt;select asp-for="CategoryId" asp-items="Model.Categories"&gt;&lt;/select&gt;
&lt;!-- Dropdown-Liste mit Kategorien --&gt;

&lt;label asp-for="ProductName"&gt;&lt;/label&gt;
&lt;!-- Label für ProductName-Eingabefeld --&gt;

&lt;cache expires-after="@TimeSpan.FromMinutes(10)"&gt;
    Inhalt zum Zwischenspeichern
&lt;/cache&gt;
&lt;!-- Caching des Inhalts für 10 Minuten --&gt;

&lt;environment names="Development"&gt;
    &lt;script src="~/lib/dev-only.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;!-- Nur im Entwicklungsmodus geladen --&gt;

&lt;link rel="stylesheet" href="~/css/site.css" asp-append-version="true" /&gt;
&lt;!-- Cache-Busting mit Versions-Query --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;code&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/code&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;</text>
      <sha1>r2qfddewwcfwhdwm9gcoddln8oy5mew</sha1>
    </revision>
    <revision>
      <id>520</id>
      <parentid>519</parentid>
      <timestamp>2025-06-29T20:22:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Allgemeine Verwendung */</comment>
      <origin>520</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3979" sha1="snstt5cpjg7gp20052wottlx3qwxx32" xml:space="preserve">= ASP.NET Core MVC Tag Helpers – Code Spickzettel =

= ASP.NET Core MVC Tag Helpers – Code Spickzettel =

== Allgemeine Verwendung ==

&lt;code&gt;
&lt;a asp-controller="Home" asp-action="Index"&gt;Startseite&lt;/a&gt;
&lt;!-- Link zur Index-Aktion im HomeController --&gt;

&lt;form asp-controller="Products" asp-action="Create" method="post"&gt;
&lt;/form&gt;
&lt;!-- Formular zur Create-Aktion --&gt;

&lt;input asp-for="ProductName" class="form-control" /&gt;
&lt;!-- Bindet an das Model-Property ProductName --&gt;

&lt;select asp-for="CategoryId" asp-items="Model.Categories"&gt;&lt;/select&gt;
&lt;!-- Dropdown-Liste mit Kategorien --&gt;

&lt;label asp-for="ProductName"&gt;&lt;/label&gt;
&lt;!-- Label für ProductName-Eingabefeld --&gt;

&lt;cache expires-after="@TimeSpan.FromMinutes(10)"&gt;
    Inhalt zum Zwischenspeichern
&lt;/cache&gt;
&lt;!-- Caching des Inhalts für 10 Minuten --&gt;

&lt;environment names="Development"&gt;
    &lt;script src="~/lib/dev-only.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;!-- Nur im Entwicklungsmodus geladen --&gt;

&lt;link rel="stylesheet" href="~/css/site.css" asp-append-version="true" /&gt;
&lt;!-- Cache-Busting mit Versions-Query --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;code&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/code&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;code&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/code&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;</text>
      <sha1>snstt5cpjg7gp20052wottlx3qwxx32</sha1>
    </revision>
    <revision>
      <id>521</id>
      <parentid>520</parentid>
      <timestamp>2025-06-29T20:23:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Validierung */</comment>
      <origin>521</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3977" sha1="prudt2o20coahc0jfm2f2atxwprzrcd" xml:space="preserve">= ASP.NET Core MVC Tag Helpers – Code Spickzettel =

= ASP.NET Core MVC Tag Helpers – Code Spickzettel =

== Allgemeine Verwendung ==

&lt;code&gt;
&lt;a asp-controller="Home" asp-action="Index"&gt;Startseite&lt;/a&gt;
&lt;!-- Link zur Index-Aktion im HomeController --&gt;

&lt;form asp-controller="Products" asp-action="Create" method="post"&gt;
&lt;/form&gt;
&lt;!-- Formular zur Create-Aktion --&gt;

&lt;input asp-for="ProductName" class="form-control" /&gt;
&lt;!-- Bindet an das Model-Property ProductName --&gt;

&lt;select asp-for="CategoryId" asp-items="Model.Categories"&gt;&lt;/select&gt;
&lt;!-- Dropdown-Liste mit Kategorien --&gt;

&lt;label asp-for="ProductName"&gt;&lt;/label&gt;
&lt;!-- Label für ProductName-Eingabefeld --&gt;

&lt;cache expires-after="@TimeSpan.FromMinutes(10)"&gt;
    Inhalt zum Zwischenspeichern
&lt;/cache&gt;
&lt;!-- Caching des Inhalts für 10 Minuten --&gt;

&lt;environment names="Development"&gt;
    &lt;script src="~/lib/dev-only.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;!-- Nur im Entwicklungsmodus geladen --&gt;

&lt;link rel="stylesheet" href="~/css/site.css" asp-append-version="true" /&gt;
&lt;!-- Cache-Busting mit Versions-Query --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;pre&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/pre&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;code&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/code&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;</text>
      <sha1>prudt2o20coahc0jfm2f2atxwprzrcd</sha1>
    </revision>
    <revision>
      <id>522</id>
      <parentid>521</parentid>
      <timestamp>2025-06-29T20:23:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Validierung */</comment>
      <origin>522</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3975" sha1="9pmtjenu0o8ue7nxmq6tjn6zu3vb1lb" xml:space="preserve">= ASP.NET Core MVC Tag Helpers – Code Spickzettel =

= ASP.NET Core MVC Tag Helpers – Code Spickzettel =

== Allgemeine Verwendung ==

&lt;code&gt;
&lt;a asp-controller="Home" asp-action="Index"&gt;Startseite&lt;/a&gt;
&lt;!-- Link zur Index-Aktion im HomeController --&gt;

&lt;form asp-controller="Products" asp-action="Create" method="post"&gt;
&lt;/form&gt;
&lt;!-- Formular zur Create-Aktion --&gt;

&lt;input asp-for="ProductName" class="form-control" /&gt;
&lt;!-- Bindet an das Model-Property ProductName --&gt;

&lt;select asp-for="CategoryId" asp-items="Model.Categories"&gt;&lt;/select&gt;
&lt;!-- Dropdown-Liste mit Kategorien --&gt;

&lt;label asp-for="ProductName"&gt;&lt;/label&gt;
&lt;!-- Label für ProductName-Eingabefeld --&gt;

&lt;cache expires-after="@TimeSpan.FromMinutes(10)"&gt;
    Inhalt zum Zwischenspeichern
&lt;/cache&gt;
&lt;!-- Caching des Inhalts für 10 Minuten --&gt;

&lt;environment names="Development"&gt;
    &lt;script src="~/lib/dev-only.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;!-- Nur im Entwicklungsmodus geladen --&gt;

&lt;link rel="stylesheet" href="~/css/site.css" asp-append-version="true" /&gt;
&lt;!-- Cache-Busting mit Versions-Query --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;pre&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/pre&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;pre&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/pre&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;</text>
      <sha1>9pmtjenu0o8ue7nxmq6tjn6zu3vb1lb</sha1>
    </revision>
    <revision>
      <id>523</id>
      <parentid>522</parentid>
      <timestamp>2025-06-29T20:28:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* ASP.NET Core MVC Tag Helpers – Code Spickzettel */</comment>
      <origin>523</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3920" sha1="46a6to49h1kuyair1waobm1k7a3ce8h" xml:space="preserve">= ASP.NET Core MVC Tag Helpers – Code Spickzettel =

== Allgemeine Verwendung ==

&lt;code&gt;
&lt;a asp-controller="Home" asp-action="Index"&gt;Startseite&lt;/a&gt;
&lt;!-- Link zur Index-Aktion im HomeController --&gt;

&lt;form asp-controller="Products" asp-action="Create" method="post"&gt;
&lt;/form&gt;
&lt;!-- Formular zur Create-Aktion --&gt;

&lt;input asp-for="ProductName" class="form-control" /&gt;
&lt;!-- Bindet an das Model-Property ProductName --&gt;

&lt;select asp-for="CategoryId" asp-items="Model.Categories"&gt;&lt;/select&gt;
&lt;!-- Dropdown-Liste mit Kategorien --&gt;

&lt;label asp-for="ProductName"&gt;&lt;/label&gt;
&lt;!-- Label für ProductName-Eingabefeld --&gt;

&lt;cache expires-after="@TimeSpan.FromMinutes(10)"&gt;
    Inhalt zum Zwischenspeichern
&lt;/cache&gt;
&lt;!-- Caching des Inhalts für 10 Minuten --&gt;

&lt;environment names="Development"&gt;
    &lt;script src="~/lib/dev-only.js"&gt;&lt;/script&gt;
&lt;/environment&gt;
&lt;!-- Nur im Entwicklungsmodus geladen --&gt;

&lt;link rel="stylesheet" href="~/css/site.css" asp-append-version="true" /&gt;
&lt;!-- Cache-Busting mit Versions-Query --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;pre&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/pre&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;

== CRUD Beispiele ==

=== Index (Lesen) ===

&lt;code&gt;
&lt;!-- Links zu Create, Edit, Delete --&gt;
&lt;a asp-action="Create"&gt;Erstellen&lt;/a&gt;
&lt;a asp-action="Edit" asp-route-id="@item.Id"&gt;Bearbeiten&lt;/a&gt;
&lt;a asp-action="Delete" asp-route-id="@item.Id"&gt;Löschen&lt;/a&gt;

&lt;!-- Suchformular --&gt;
&lt;form asp-action="Index" method="get"&gt;
    &lt;input type="text" name="searchString" /&gt;
    &lt;button type="submit"&gt;Suchen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Create / Edit (Erstellen / Bearbeiten) ===

&lt;code&gt;
&lt;form asp-action="Create" method="post"&gt;
    &lt;label asp-for="Name"&gt;&lt;/label&gt;
    &lt;input asp-for="Name" /&gt;
    
    &lt;label asp-for="Description"&gt;&lt;/label&gt;
    &lt;textarea asp-for="Description"&gt;&lt;/textarea&gt;
    
    &lt;label asp-for="CategoryId"&gt;&lt;/label&gt;
    &lt;select asp-for="CategoryId" asp-items="ViewBag.Categories"&gt;&lt;/select&gt;
    
    &lt;span asp-validation-for="Name"&gt;&lt;/span&gt;
    &lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
    
    &lt;button type="submit"&gt;Speichern&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

=== Delete (Löschen) ===

&lt;code&gt;
&lt;form asp-action="Delete" asp-route-id="@Model.Id" method="post"&gt;
    &lt;button type="submit"&gt;Löschen&lt;/button&gt;
&lt;/form&gt;
&lt;/code&gt;

== Validierung ==

&lt;pre&gt;
&lt;!-- Feld-spezifische Fehlermeldung --&gt;
&lt;span asp-validation-for="Name"&gt;&lt;/span&gt;

&lt;!-- Zusammenfassung aller Validierungsfehler --&gt;
&lt;div asp-validation-summary="All"&gt;&lt;/div&gt;
&lt;/pre&gt;

== Partial Views ==

&lt;code&gt;
&lt;partial name="_GridColumnHeader" /&gt;
&lt;!-- Rendert eine partielle View, z. B. für Tabellenköpfe --&gt;
&lt;/code&gt;</text>
      <sha1>46a6to49h1kuyair1waobm1k7a3ce8h</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:ASP.NET Core Identity &amp; Authorization</title>
    <ns>3002</ns>
    <id>155</id>
    <revision>
      <id>528</id>
      <timestamp>2025-06-30T04:32:27Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „= ASP.NET Core Identity &amp; Authorization – Codebeispiele =  == Benutzerregistrierung == &lt;syntaxhighlight lang="csharp"&gt; [HttpPost] [AllowAnonymous] public async Task&lt;IActionResult&gt; Register(RegisterDTO registerDTO) {     if (ModelState.IsValid)     {         var user = new ApplicationUser         {             UserName = registerDTO.Email,             Email = registerDTO.Email,             PersonName = registerDTO.PersonName         };          var resul…“</comment>
      <origin>528</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4270" sha1="psvcbyl89cnqon5g4qvrz4hzfgbbcdt" xml:space="preserve">= ASP.NET Core Identity &amp; Authorization – Codebeispiele =

== Benutzerregistrierung ==
&lt;syntaxhighlight lang="csharp"&gt;
[HttpPost]
[AllowAnonymous]
public async Task&lt;IActionResult&gt; Register(RegisterDTO registerDTO)
{
    if (ModelState.IsValid)
    {
        var user = new ApplicationUser
        {
            UserName = registerDTO.Email,
            Email = registerDTO.Email,
            PersonName = registerDTO.PersonName
        };

        var result = await _userManager.CreateAsync(user, registerDTO.Password);

        if (result.Succeeded)
        {
            if (!await _roleManager.RoleExistsAsync(registerDTO.Role))
                await _roleManager.CreateAsync(new ApplicationRole(registerDTO.Role));

            await _userManager.AddToRoleAsync(user, registerDTO.Role);
            await _signInManager.SignInAsync(user, isPersistent: false);

            return RedirectToAction("Index", "Persons");
        }

        foreach (var error in result.Errors)
            ModelState.AddModelError("", error.Description);
    }

    return View(registerDTO);
}
&lt;/syntaxhighlight&gt;

== Benutzeranmeldung ==
&lt;syntaxhighlight lang="csharp"&gt;
[HttpPost]
[AllowAnonymous]
public async Task&lt;IActionResult&gt; Login(LoginDTO loginDTO, string returnUrl = null)
{
    if (ModelState.IsValid)
    {
        var result = await _signInManager.PasswordSignInAsync(
            loginDTO.Email, loginDTO.Password, false, false);

        if (result.Succeeded)
        {
            var user = await _userManager.FindByEmailAsync(loginDTO.Email);
            if (await _userManager.IsInRoleAsync(user, "Admin"))
                return RedirectToAction("Index", "Home", new { area = "Admin" });

            return RedirectToLocal(returnUrl);
        }

        ModelState.AddModelError(string.Empty, "Ungültiger Login-Versuch.");
    }

    return View(loginDTO);
}
&lt;/syntaxhighlight&gt;

== Benutzerabmeldung ==
&lt;syntaxhighlight lang="csharp"&gt;
[Authorize]
public async Task&lt;IActionResult&gt; Logout()
{
    await _signInManager.SignOutAsync();
    return RedirectToAction("Index", "Persons");
}
&lt;/syntaxhighlight&gt;

== E-Mail-Verfügbarkeit prüfen ==
&lt;syntaxhighlight lang="csharp"&gt;
[AcceptVerbs("Get", "Post")]
[AllowAnonymous]
public async Task&lt;IActionResult&gt; IsEmailAlreadyRegistered(string email)
{
    var user = await _userManager.FindByEmailAsync(email);
    return Json(user == null);
}
&lt;/syntaxhighlight&gt;

== Program.cs – Identity-Konfiguration ==
&lt;syntaxhighlight lang="csharp"&gt;
builder.Services.AddIdentity&lt;ApplicationUser, ApplicationRole&gt;(options =&gt;
{
    options.Password.RequireDigit = true;
    options.Password.RequiredLength = 6;
    options.Password.RequireUppercase = true;
    options.Password.RequireLowercase = true;
})
.AddEntityFrameworkStores&lt;ApplicationDbContext&gt;()
.AddDefaultTokenProviders();

builder.Services.ConfigureApplicationCookie(options =&gt;
{
    options.LoginPath = "/Account/Login";
});

builder.Services.AddAuthorization(options =&gt;
{
    options.FallbackPolicy = new AuthorizationPolicyBuilder()
        .RequireAuthenticatedUser()
        .Build();

    options.AddPolicy("NotAuthorized", policy =&gt;
        policy.RequireAssertion(context =&gt; !context.User.Identity.IsAuthenticated));
});
&lt;/syntaxhighlight&gt;

== Benutzerrolle prüfen ==
&lt;syntaxhighlight lang="csharp"&gt;
if (await _userManager.IsInRoleAsync(user, "Admin"))
{
    // Zugriff für Admin
}
&lt;/syntaxhighlight&gt;

== Zwei-Faktor-Authentifizierung aktivieren ==
&lt;syntaxhighlight lang="csharp"&gt;
var token = await _userManager.GenerateTwoFactorTokenAsync(user, "Email");
await _userManager.VerifyTwoFactorTokenAsync(user, "Email", token);
&lt;/syntaxhighlight&gt;

== CSRF-Schutz (XSRF) in View ==
&lt;syntaxhighlight lang="html"&gt;
&lt;form asp-action="Register" method="post"&gt;
    @Html.AntiForgeryToken()
    &lt;!-- Formularfelder --&gt;
&lt;/form&gt;
&lt;/syntaxhighlight&gt;

== Tag Helpers in Razor Views ==
&lt;syntaxhighlight lang="html"&gt;
&lt;a asp-controller="Account" asp-action="Login"&gt;Login&lt;/a&gt;

&lt;input asp-for="Email" /&gt;
&lt;span asp-validation-for="Email"&gt;&lt;/span&gt;
&lt;/syntaxhighlight&gt;

== Remote Validation in DTO ==
&lt;syntaxhighlight lang="csharp"&gt;
public class RegisterDTO
{
    [Remote(action: "IsEmailAlreadyRegistered", controller: "Account")]
    public string Email { get; set; }
}
&lt;/syntaxhighlight&gt;</text>
      <sha1>psvcbyl89cnqon5g4qvrz4hzfgbbcdt</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Installieren</title>
    <ns>3008</ns>
    <id>156</id>
    <revision>
      <id>540</id>
      <timestamp>2025-06-30T23:29:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Aktualisieren ==  * Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop * Führen Sie folgenden Befehl aus,um System zu aktualisieren.   &lt;code&gt;sudo apt-get update   sudo apt-get upgrade  sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;  == Google Chrome Installieren ==    &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;  sudo dpkg -i google-chrome-stable_current_a…“</comment>
      <origin>540</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3601" sha1="5knhajmb1rkm70tvtuee3mper7mj2mr" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;</text>
      <sha1>5knhajmb1rkm70tvtuee3mper7mj2mr</sha1>
    </revision>
    <revision>
      <id>568</id>
      <parentid>540</parentid>
      <timestamp>2025-07-01T21:34:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* dotnet */</comment>
      <origin>568</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3833" sha1="ctt32cdbxyx2ffqn0k752xx1h9nnh2v" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;</text>
      <sha1>ctt32cdbxyx2ffqn0k752xx1h9nnh2v</sha1>
    </revision>
    <revision>
      <id>600</id>
      <parentid>568</parentid>
      <timestamp>2025-07-05T16:51:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>600</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4334" sha1="ifvzj54lnttnamqu2hqdlph2m1xfzxc" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>ifvzj54lnttnamqu2hqdlph2m1xfzxc</sha1>
    </revision>
    <revision>
      <id>602</id>
      <parentid>600</parentid>
      <timestamp>2025-07-05T22:29:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>602</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4820" sha1="hzxz6f2jcp9tke1almob08updlw7vkr" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;

== Spring Boot in Visual Studio Code ==

=== Voraussetzungen ===
* Java JDK installieren:
 &lt;code&gt;sudo apt-get install openjdk-17-jdk&lt;/code&gt;
* Überprüfen Sie die Java-Version:
 &lt;code&gt;java -version&lt;/code&gt;
* Maven installieren:
 &lt;code&gt;sudo apt-get install maven&lt;/code&gt;
* Überprüfen Sie die Maven-Version:
 &lt;code&gt;mvn -version&lt;/code&gt;

=== Erweiterungen installieren ===
&lt;pre&gt;
code --install-extension vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;</text>
      <sha1>hzxz6f2jcp9tke1almob08updlw7vkr</sha1>
    </revision>
    <revision>
      <id>608</id>
      <parentid>602</parentid>
      <timestamp>2025-07-08T07:40:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Spring Boot in Visual Studio Code */</comment>
      <origin>608</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4334" sha1="ifvzj54lnttnamqu2hqdlph2m1xfzxc" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION hstore;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION vector;" # Erweiterung hinzufügen
psql -d thorsten -c "ALTER TABLE geometry_columns OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "ALTER TABLE spatial_ref_sys OWNER TO thorsten;" # Rechte setzen
psql -d thorsten -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>ifvzj54lnttnamqu2hqdlph2m1xfzxc</sha1>
    </revision>
    <revision>
      <id>614</id>
      <parentid>608</parentid>
      <timestamp>2025-07-09T12:22:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Postgis Installation in Ubuntu 23.04 */</comment>
      <origin>614</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3932" sha1="5jjzt9ubbvkabvtoqxam85xynqqzk30" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten

psql -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>5jjzt9ubbvkabvtoqxam85xynqqzk30</sha1>
    </revision>
    <revision>
      <id>615</id>
      <parentid>614</parentid>
      <timestamp>2025-07-09T12:23:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Postgis Installation in Ubuntu 23.04 */</comment>
      <origin>615</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3931" sha1="2sx7catwy2ru1rs9eohjmng6d5m26x9" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.4.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.4.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>2sx7catwy2ru1rs9eohjmng6d5m26x9</sha1>
    </revision>
    <revision>
      <id>616</id>
      <parentid>615</parentid>
      <timestamp>2025-07-09T12:27:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Golang */</comment>
      <origin>616</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3931" sha1="slvkoa1vi8qgkr27its7iehtjmb3itm" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>slvkoa1vi8qgkr27its7iehtjmb3itm</sha1>
    </revision>
    <revision>
      <id>618</id>
      <parentid>616</parentid>
      <timestamp>2025-07-09T14:07:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* dotnet */</comment>
      <origin>618</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3970" sha1="j30zgo49bq4rzx9oxydtlofobujlv1b" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
dotnet tool install --global dotnet-ef
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>j30zgo49bq4rzx9oxydtlofobujlv1b</sha1>
    </revision>
    <revision>
      <id>619</id>
      <parentid>618</parentid>
      <timestamp>2025-07-09T14:09:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* dotnet */</comment>
      <origin>619</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3971" sha1="7gg6ftvl9ge86o9jjmu3dht82ltykov" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>7gg6ftvl9ge86o9jjmu3dht82ltykov</sha1>
    </revision>
    <revision>
      <id>620</id>
      <parentid>619</parentid>
      <timestamp>2025-07-09T14:15:26Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* dotnet */</comment>
      <origin>620</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4029" sha1="la9vs79i6hkawcj24lqipsscagiai2y" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;</text>
      <sha1>la9vs79i6hkawcj24lqipsscagiai2y</sha1>
    </revision>
    <revision>
      <id>624</id>
      <parentid>620</parentid>
      <timestamp>2025-07-09T21:19:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>624</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4120" sha1="3ams65hsgxzwy2nna1ircp1u2vnnsxf" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;</text>
      <sha1>3ams65hsgxzwy2nna1ircp1u2vnnsxf</sha1>
    </revision>
    <revision>
      <id>702</id>
      <parentid>624</parentid>
      <timestamp>2025-07-27T20:16:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Postgis Installation in Ubuntu 23.04 */</comment>
      <origin>702</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4169" sha1="hxjb06nej38jeeyylrgrr5dcb9wjs9u" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;code&gt;sudo apt-get install postgresql-all&lt;/code&gt;

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
 sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;</text>
      <sha1>hxjb06nej38jeeyylrgrr5dcb9wjs9u</sha1>
    </revision>
    <revision>
      <id>703</id>
      <parentid>702</parentid>
      <timestamp>2025-07-28T08:04:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>703</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4383" sha1="0b3kxkn5c7ksjq1x6jyuhm5bvvmfb1s" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen

=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;</text>
      <sha1>0b3kxkn5c7ksjq1x6jyuhm5bvvmfb1s</sha1>
    </revision>
    <revision>
      <id>704</id>
      <parentid>703</parentid>
      <timestamp>2025-07-28T08:06:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>704</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4389" sha1="g9t51rr78r4if32063qea5doru00ld0" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension ckolkman.vscode-postgres
 code --install-extension  ms-ossdata.vscode-postgresql
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;</text>
      <sha1>g9t51rr78r4if32063qea5doru00ld0</sha1>
    </revision>
    <revision>
      <id>705</id>
      <parentid>704</parentid>
      <timestamp>2025-07-28T12:12:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>705</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4282" sha1="1l1uzrs2lznasdjwyqdur2asrt6ghju" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.5.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.5.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;</text>
      <sha1>1l1uzrs2lznasdjwyqdur2asrt6ghju</sha1>
    </revision>
    <revision>
      <id>721</id>
      <parentid>705</parentid>
      <timestamp>2025-08-07T20:28:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Golang */</comment>
      <origin>721</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4282" sha1="8im6su8sbq6715cpjs9pcc2z4hxcrng" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.6.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.6.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;</text>
      <sha1>8im6su8sbq6715cpjs9pcc2z4hxcrng</sha1>
    </revision>
    <revision>
      <id>727</id>
      <parentid>721</parentid>
      <timestamp>2025-08-13T19:52:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* nginx */</comment>
      <origin>727</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4336" sha1="nlunsywyjnkvme0ty9yylpz0u2srbyq" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.6.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.6.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
&lt;/pre&gt;</text>
      <sha1>nlunsywyjnkvme0ty9yylpz0u2srbyq</sha1>
    </revision>
    <revision>
      <id>728</id>
      <parentid>727</parentid>
      <timestamp>2025-08-13T19:55:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java */</comment>
      <origin>728</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4360" sha1="48iig3c2no53p4vncti6kpix3tvnxsp" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.6.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.6.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
&lt;/pre&gt;</text>
      <sha1>48iig3c2no53p4vncti6kpix3tvnxsp</sha1>
    </revision>
    <revision>
      <id>729</id>
      <parentid>728</parentid>
      <timestamp>2025-08-13T20:03:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java */</comment>
      <origin>729</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4397" sha1="jhvjckzj4rr48khcfpun4zdt52zm1pm" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.6.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.6.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
ext install vscjava.vscode-java-pack
&lt;/pre&gt;</text>
      <sha1>jhvjckzj4rr48khcfpun4zdt52zm1pm</sha1>
    </revision>
    <revision>
      <id>730</id>
      <parentid>729</parentid>
      <timestamp>2025-08-13T20:07:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java */</comment>
      <origin>730</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4437" sha1="9x4n4kwfpht17us0h0g2buq3xkisc0u" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.6.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.6.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
ext install vscjava.vscode-java-pack
ext install vmware.vscode-boot-dev-pack
&lt;/pre&gt;</text>
      <sha1>9x4n4kwfpht17us0h0g2buq3xkisc0u</sha1>
    </revision>
    <revision>
      <id>731</id>
      <parentid>730</parentid>
      <timestamp>2025-08-13T20:08:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java */</comment>
      <origin>731</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4464" sha1="79qlh4cu50w9unif6mcf53z9p2jh4pq" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.24.6.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.24.6.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;</text>
      <sha1>79qlh4cu50w9unif6mcf53z9p2jh4pq</sha1>
    </revision>
    <revision>
      <id>774</id>
      <parentid>731</parentid>
      <timestamp>2025-09-06T22:08:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Golang */</comment>
      <origin>774</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4464" sha1="bxiqg3lscdvt4z9m1kaop06bmnpzplx" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.25.1.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.25.1.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;</text>
      <sha1>bxiqg3lscdvt4z9m1kaop06bmnpzplx</sha1>
    </revision>
    <revision>
      <id>780</id>
      <parentid>774</parentid>
      <timestamp>2025-09-16T09:01:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>780</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5047" sha1="r0o5v6c3zm5z96d5oqhf7tg6oyacl2i" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.25.1.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.25.1.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;

== Avalonia Installieren ==

=== Voraussetzungen ===
Stellen Sie sicher, dass .NET SDK installiert ist (siehe Abschnitt "dotnet").

=== Avalonia Templates installieren ===
&lt;code&gt;
dotnet new install Avalonia.Templates
&lt;/code&gt;

=== Neues Avalonia-Projekt erstellen ===
&lt;code&gt;
dotnet new avalonia.app -o MeinAvaloniaApp
cd MeinAvaloniaApp
dotnet run
&lt;/code&gt;

=== Visual Studio Code Extensions ===
Installieren Sie folgende Erweiterungen für die Entwicklung mit Avalonia:
&lt;code&gt;
code --install-extension ms-dotnettools.csdevkit
code --install-extension AvaloniaTeam.AvaloniaVS
&lt;/code&gt;</text>
      <sha1>r0o5v6c3zm5z96d5oqhf7tg6oyacl2i</sha1>
    </revision>
    <revision>
      <id>781</id>
      <parentid>780</parentid>
      <timestamp>2025-09-16T09:02:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Avalonia Installieren */</comment>
      <origin>781</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5045" sha1="h5hjxn0nltcey15pbk4lvuxtaxgww3w" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.25.1.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.25.1.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;

== Avalonia Installieren ==

=== Voraussetzungen ===
Stellen Sie sicher, dass .NET SDK installiert ist (siehe Abschnitt "dotnet").

=== Avalonia Templates installieren ===
&lt;code&gt;
dotnet new install Avalonia.Templates
&lt;/code&gt;

=== Neues Avalonia-Projekt erstellen ===
&lt;code&gt;
dotnet new avalonia.app -o MeinAvaloniaApp
cd MeinAvaloniaApp
dotnet run
&lt;/code&gt;

=== Visual Studio Code Extensions ===
Installieren Sie folgende Erweiterungen für die Entwicklung mit Avalonia:
&lt;pre&gt;
code --install-extension ms-dotnettools.csdevkit
code --install-extension AvaloniaTeam.AvaloniaVS
&lt;/pre&gt;</text>
      <sha1>h5hjxn0nltcey15pbk4lvuxtaxgww3w</sha1>
    </revision>
    <revision>
      <id>782</id>
      <parentid>781</parentid>
      <timestamp>2025-09-16T09:06:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Visual Studio Code Extensions */</comment>
      <origin>782</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5050" sha1="nru80ctkfdhy01xapaszyvzggnlyh8b" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.25.1.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.25.1.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;

== Avalonia Installieren ==

=== Voraussetzungen ===
Stellen Sie sicher, dass .NET SDK installiert ist (siehe Abschnitt "dotnet").

=== Avalonia Templates installieren ===
&lt;code&gt;
dotnet new install Avalonia.Templates
&lt;/code&gt;

=== Neues Avalonia-Projekt erstellen ===
&lt;code&gt;
dotnet new avalonia.app -o MeinAvaloniaApp
cd MeinAvaloniaApp
dotnet run
&lt;/code&gt;

=== Visual Studio Code Extensions ===
Installieren Sie folgende Erweiterungen für die Entwicklung mit Avalonia:
&lt;pre&gt;
code --install-extension ms-dotnettools.csdevkit
code --install-extension AvaloniaTeam.vscode-avalonia
&lt;/pre&gt;</text>
      <sha1>nru80ctkfdhy01xapaszyvzggnlyh8b</sha1>
    </revision>
    <revision>
      <id>783</id>
      <parentid>782</parentid>
      <timestamp>2025-09-19T07:34:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Avalonia Installieren */</comment>
      <origin>783</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4464" sha1="bxiqg3lscdvt4z9m1kaop06bmnpzplx" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.25.1.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.25.1.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;</text>
      <sha1>bxiqg3lscdvt4z9m1kaop06bmnpzplx</sha1>
    </revision>
    <revision>
      <id>784</id>
      <parentid>783</parentid>
      <timestamp>2025-09-19T09:42:39Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>784</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5050" sha1="nru80ctkfdhy01xapaszyvzggnlyh8b" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.25.1.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.25.1.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;

== Avalonia Installieren ==

=== Voraussetzungen ===
Stellen Sie sicher, dass .NET SDK installiert ist (siehe Abschnitt "dotnet").

=== Avalonia Templates installieren ===
&lt;code&gt;
dotnet new install Avalonia.Templates
&lt;/code&gt;

=== Neues Avalonia-Projekt erstellen ===
&lt;code&gt;
dotnet new avalonia.app -o MeinAvaloniaApp
cd MeinAvaloniaApp
dotnet run
&lt;/code&gt;

=== Visual Studio Code Extensions ===
Installieren Sie folgende Erweiterungen für die Entwicklung mit Avalonia:
&lt;pre&gt;
code --install-extension ms-dotnettools.csdevkit
code --install-extension AvaloniaTeam.vscode-avalonia
&lt;/pre&gt;</text>
      <sha1>nru80ctkfdhy01xapaszyvzggnlyh8b</sha1>
    </revision>
    <revision>
      <id>798</id>
      <parentid>784</parentid>
      <timestamp>2025-09-28T12:41:39Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* dotnet */</comment>
      <origin>798</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5106" sha1="nrtfuux523iiu4tf0pwt9m52xpzs9bm" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.25.1.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.25.1.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
dotnet tool install -g Microsoft.Web.LibraryManager.Cli
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;

== Avalonia Installieren ==

=== Voraussetzungen ===
Stellen Sie sicher, dass .NET SDK installiert ist (siehe Abschnitt "dotnet").

=== Avalonia Templates installieren ===
&lt;code&gt;
dotnet new install Avalonia.Templates
&lt;/code&gt;

=== Neues Avalonia-Projekt erstellen ===
&lt;code&gt;
dotnet new avalonia.app -o MeinAvaloniaApp
cd MeinAvaloniaApp
dotnet run
&lt;/code&gt;

=== Visual Studio Code Extensions ===
Installieren Sie folgende Erweiterungen für die Entwicklung mit Avalonia:
&lt;pre&gt;
code --install-extension ms-dotnettools.csdevkit
code --install-extension AvaloniaTeam.vscode-avalonia
&lt;/pre&gt;</text>
      <sha1>nrtfuux523iiu4tf0pwt9m52xpzs9bm</sha1>
    </revision>
    <revision>
      <id>799</id>
      <parentid>798</parentid>
      <timestamp>2025-09-28T12:42:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>799</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5107" sha1="p4nywvznjfp1pbrhruoweed0tus3fte" xml:space="preserve">== Aktualisieren ==

* Öffne Sie das Terminal und auf ihrem Ubuntu-Desktop
* Führen Sie folgenden Befehl aus,um System zu aktualisieren.

 &lt;code&gt;sudo apt-get update 
 sudo apt-get upgrade
 sudo apt install libsecret-1-0 libsecret-tools libsecret-1-dev libglib2.0-dev&lt;/code&gt;

== Google Chrome Installieren ==
 
 &lt;code&gt;wget &lt;nowiki&gt;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&lt;/nowiki&gt;
 sudo dpkg -i google-chrome-stable_current_amd64.deb&lt;/code&gt;

== Git Installieren ==
 &lt;code&gt;sudo apt-get install git  gh
 git config --global user.email "you@example.com"
 git config --global user.name "Your Name"&lt;/code&gt;

== gh Konfigurieren ==
 &lt;code&gt;gh auth login&lt;/code&gt;

== Nodejs Installieren ==
 &lt;code&gt;sudo apt-get install curl
 curl -o- &lt;nowiki&gt;https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh&lt;/nowiki&gt; | bash
 source ~/.bashrc
 nvm install 22
 # Verify the Node.js version:
 node -v # Should print "v22.12.0".
 nvm current # Should print "v22.12.0".
 # Verify npm version:
 npm -v # Should print "10.9.0".&lt;/code&gt;

== Visual Studio Code ==

=== Installieren ===
 &lt;code&gt;sudo snap install code --classic&lt;/code&gt;

=== Pflugin ===
In Visual Studio Code, öffnen Sie das Terminal und führen Sie folgende Befehle aus.
 &lt;code&gt;code --install-extension GitHub.copilot
 code --install-extension RoweWilsonFrederiskHolme.wikitext
 code --install-extension ms-windows-ai-studio.windows-ai-studio&lt;/code&gt;

== Datenbank ==

=== PostgreSQL ===

==== Installation ====
 &lt;pre&gt;sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
&lt;/pre&gt;
=== PosgreSQL Version zeigen ===
 &lt;code&gt;psql --version&lt;/code&gt;

=== Postgis Installation in Ubuntu 23.04 ===
&lt;pre&gt;
sudo apt-get install postgis postgresql-16-postgis-3
sudo -u postgres -i
psql -d thorsten -c "CREATE EXTENSION postgis;" # Erweiterung hinzufügen
psql -d thorsten -c "CREATE EXTENSION postgis_topology;"
exit # Ausloggen
&lt;/pre&gt;

== C und C++ Installieren ==
 &lt;code&gt;sudo apt  install curl 
 sudo apt install build-essential
 code --install-extension  ms-vscode.cpptools-extension-pack
 sudo apt-get install cmake
 sudo apt-get install gdb&lt;/code&gt;

== Python Installieren ==
 &lt;code&gt;sudo apt install python3 python3-pip python3-venv  python-is-python3
 code --install-extension  ms-python.python&lt;/code&gt;

== Rust ==
 &lt;code&gt;curl --proto '=https' --tlsv1.2 -sSf &lt;nowiki&gt;https://sh.rustup.rs&lt;/nowiki&gt; | sh
 code --install-extension rust-lang.rust-analyzer&lt;/code&gt;

== Golang ==
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://go.dev/dl/go1.25.1.linux-amd64.tar.gz&lt;/nowiki&gt;
 sudo tar -C /usr/local -xzf go1.25.1.linux-amd64.tar.gz
 echo 'export PATH=$PATH:/usr/local/go/bin' &gt;&gt; ~/.bashrc
 echo 'export GOPATH=$HOME/go' &gt;&gt; ~/.bashrc
 echo 'export PATH=$PATH:$GOPATH/bin' &gt;&gt; ~/.bashrc
 source ~/.bashrc&lt;/code&gt;

== dotnet ==
 &lt;code&gt;sudo apt-get update # Aktualisiert die Paketliste
 sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
 sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
 dotnet tool install --global dotnet-ef
 dotnet tool install --global dotnet-aspnet-codegenerator
 dotnet tool install -g Microsoft.Web.LibraryManager.Cli
 echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
 source ~/.bashrc  # Aktualisierung der .bashrc
 code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung&lt;/code&gt;

==PHP Installieren==
&lt;pre&gt;
sudo apt install php-fpm php-pgsql php-xml php-curl php-gd php-mbstring php-xmlrpc php-zip php-intl php-json php-cli php-common php-apcu php-bcmath php-soap php-ldap php-imagick php-zip php-gmp -y
&lt;/pre&gt;
==Composer Installieren==
&lt;pre&gt;
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'dac665fdc30fdd8ec78b38b9800061b4150413ff2e3b6f88543c636f7cd84f6db9189d43a81e5503cda447da73c7e5b6') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer
&lt;/pre&gt;
==nginx==
&lt;pre&gt;
sudo apt-get install nginx
sudo rm /etc/nginx/sites-enabled/default
&lt;/pre&gt;
==Java==
&lt;pre&gt;
sudo apt install openjdk-21-jdk
sudo apt install maven 
code --install-extension  vscjava.vscode-java-pack
code --install-extension vmware.vscode-boot-dev-pack
&lt;/pre&gt;

== Avalonia Installieren ==

=== Voraussetzungen ===
Stellen Sie sicher, dass .NET SDK installiert ist (siehe Abschnitt "dotnet").

=== Avalonia Templates installieren ===
&lt;code&gt;
dotnet new install Avalonia.Templates
&lt;/code&gt;

=== Neues Avalonia-Projekt erstellen ===
&lt;code&gt;
dotnet new avalonia.app -o MeinAvaloniaApp
cd MeinAvaloniaApp
dotnet run
&lt;/code&gt;

=== Visual Studio Code Extensions ===
Installieren Sie folgende Erweiterungen für die Entwicklung mit Avalonia:
&lt;pre&gt;
code --install-extension ms-dotnettools.csdevkit
code --install-extension AvaloniaTeam.vscode-avalonia
&lt;/pre&gt;</text>
      <sha1>p4nywvznjfp1pbrhruoweed0tus3fte</sha1>
    </revision>
  </page>
  <page>
    <title>Verkehrsanbindung</title>
    <ns>0</ns>
    <id>157</id>
    <revision>
      <id>546</id>
      <timestamp>2025-07-01T15:32:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>546</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1221" sha1="bl61p475x1yc1oampd3az2z2ai8ebqo" xml:space="preserve">Verkehrsanbindung in Ahrensburg
== Bahn &amp; Regionalverkehr ==
Der Bahnhof Ahrensburg (AAHR) liegt an der Lübeck–Hamburg-Strecke, ist ein wichtiger Verkehrsknotenpunkt mit vier Gleisen, Park+Ride-Funktion sowie zusätzlichem Haltepunkt Ahrensburg-Gartenholz (bedient von RB 81) und wird regelmäßig von den Linien RE 8 (stündlich nach Lübeck) und RB 81 (halbstündlich nach Bargteheide, stündlich weiter nach Bad Oldesloe, zu Verstärkerzeiten nach Hamburg) angefahren.

== U-Bahn (Hamburger U1) ==
In Ahrensburg gibt es zwei U-Bahnhöfe: Ahrensburg West (seit 1921, barrierefrei, Park+Ride mit 80 Plätzen) und Ahrensburg Ost (seit 1922, barrierefrei, Park+Ride mit 56 Plätzen). Beide liegen an der früheren Walddörferbahn und sind Teil der U1 nach Hamburg.

== Stadt- &amp; Regionalbusse ==
Ahrensburg verfügt über ein dichtes Netz aus fünf Stadtbuslinien und sechs Regionallinien, die Bahnhöfe, U-Bahnhöfe sowie umliegende Gemeinden verbinden.

== Auto &amp; Autobahn ==
Ahrensburg ist über die südöstlich verlaufende A1 (Vogelfluglinie) mit eigener Abfahrt „Ahrensburg“ sowie über die frühere B 75 (heute L 82), die einst das Stadtzentrum durchzog, gut an das überregionale Straßennetz angebunden.</text>
      <sha1>bl61p475x1yc1oampd3az2z2ai8ebqo</sha1>
    </revision>
  </page>
  <page>
    <title>Wichtige Unternehmen &amp; Arbeitgeber</title>
    <ns>0</ns>
    <id>158</id>
    <revision>
      <id>548</id>
      <timestamp>2025-07-01T15:49:25Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>548</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1999" sha1="lmul16mh22nkhswdwhc0us2o3mzq845" xml:space="preserve">==Wichtige Unternehmen &amp; Arbeitgeber in Ahrensburg==

Ahrensburg ist ein bedeutender Wirtschaftsstandort in Schleswig-Holstein und beheimatet zahlreiche namhafte Unternehmen aus verschiedenen Branchen. Hier finden Sie eine Übersicht wichtiger Arbeitgeber, die die Wirtschaft der Region prägen:

* **Acer Computer GmbH (IT/Hardware)** – Umsatz ca. 686 Mio. € (2018), etwa 250 Mitarbeitende; Teil des internationalen Acer-Konzerns aus Taiwan.
* **GHD GesundHeits GmbH Deutschland (Gesundheit)** – Umsatz rund 580 Mio. €, etwa 2.000 Mitarbeitende; größter ambulanter Gesundheitsdienst Deutschlands mit Zentrale in Ahrensburg.
* **Basler AG (Bildverarbeitung/Industriekameras)** – Umsatz ca. 203 Mio. €, rund 1.000 Mitarbeitende; weltweit führender Anbieter von Industriekameras.
* **edding AG / Legamaster GmbH (Schreibwaren &amp; visuelle Kommunikation)** – Umsatz ca. 160 Mio. €, ca. 730–726 Mitarbeitende; international bekannt für Marker und Präsentationslösungen.
* **Christoph Kroschke GmbH (Automotive/Zulassungssysteme)** – Umsatz ca. 100–150 Mio. €, rund 1.800 Mitarbeitende, über 400 Filialen deutschlandweit; Spezialist für Kfz-Dienstleistungen.
* **Hela Gewürzwerk Hermann Laue GmbH (Lebensmittel, Gewürze/Ketchup)** – Umsatz etwa 118–151 Mio. €, ca. 485 Mitarbeitende; traditionsreiches Unternehmen für Gewürze und Feinkost.
* **Rosenhof Seniorenwohnanlagen** – Seniorenpflegeeinrichtungen mit Sitz in Ahrensburg; ca. 1.700 Mitarbeitende deutschlandweit; führend im Bereich Seniorenwohnen.
* **SOEX Group (Textilrecycling)** – Rund 1.350 Mitarbeitende weltweit; einer der führenden Anbieter im Textilrecycling und nachhaltigen Wertstoffkreislauf.

Diese Unternehmen bieten attraktive Arbeitsplätze und vielfältige Karrieremöglichkeiten in Ahrensburg und Umgebung. Die Stadt zeichnet sich durch eine starke Wirtschaft, innovative Unternehmen und eine hohe Lebensqualität aus – ideale Voraussetzungen für Fachkräfte und Berufseinsteiger.</text>
      <sha1>lmul16mh22nkhswdwhc0us2o3mzq845</sha1>
    </revision>
    <revision>
      <id>549</id>
      <parentid>548</parentid>
      <timestamp>2025-07-01T15:50:01Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>549</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1999" sha1="0q2ktrk6l5zicpgb7rw6prue5sxuoui" xml:space="preserve">==Wichtige Unternehmen &amp; Arbeitgeber in Ahrensburg==

Ahrensburg ist ein bedeutender Wirtschaftsstandort in Schleswig-Holstein und beheimatet zahlreiche namhafte Unternehmen aus verschiedenen Branchen. Hier finden Sie eine Übersicht wichtiger Arbeitgeber, die die Wirtschaft der Region prägen:

* ''Acer Computer GmbH (IT/Hardware)'' – Umsatz ca. 686 Mio. € (2018), etwa 250 Mitarbeitende; Teil des internationalen Acer-Konzerns aus Taiwan.
* **GHD GesundHeits GmbH Deutschland (Gesundheit)** – Umsatz rund 580 Mio. €, etwa 2.000 Mitarbeitende; größter ambulanter Gesundheitsdienst Deutschlands mit Zentrale in Ahrensburg.
* **Basler AG (Bildverarbeitung/Industriekameras)** – Umsatz ca. 203 Mio. €, rund 1.000 Mitarbeitende; weltweit führender Anbieter von Industriekameras.
* **edding AG / Legamaster GmbH (Schreibwaren &amp; visuelle Kommunikation)** – Umsatz ca. 160 Mio. €, ca. 730–726 Mitarbeitende; international bekannt für Marker und Präsentationslösungen.
* **Christoph Kroschke GmbH (Automotive/Zulassungssysteme)** – Umsatz ca. 100–150 Mio. €, rund 1.800 Mitarbeitende, über 400 Filialen deutschlandweit; Spezialist für Kfz-Dienstleistungen.
* **Hela Gewürzwerk Hermann Laue GmbH (Lebensmittel, Gewürze/Ketchup)** – Umsatz etwa 118–151 Mio. €, ca. 485 Mitarbeitende; traditionsreiches Unternehmen für Gewürze und Feinkost.
* **Rosenhof Seniorenwohnanlagen** – Seniorenpflegeeinrichtungen mit Sitz in Ahrensburg; ca. 1.700 Mitarbeitende deutschlandweit; führend im Bereich Seniorenwohnen.
* **SOEX Group (Textilrecycling)** – Rund 1.350 Mitarbeitende weltweit; einer der führenden Anbieter im Textilrecycling und nachhaltigen Wertstoffkreislauf.

Diese Unternehmen bieten attraktive Arbeitsplätze und vielfältige Karrieremöglichkeiten in Ahrensburg und Umgebung. Die Stadt zeichnet sich durch eine starke Wirtschaft, innovative Unternehmen und eine hohe Lebensqualität aus – ideale Voraussetzungen für Fachkräfte und Berufseinsteiger.</text>
      <sha1>0q2ktrk6l5zicpgb7rw6prue5sxuoui</sha1>
    </revision>
    <revision>
      <id>550</id>
      <parentid>549</parentid>
      <timestamp>2025-07-01T15:50:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>550</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2001" sha1="815d6qkj2d1oinpn5molr7tmvykdlu6" xml:space="preserve">==Wichtige Unternehmen &amp; Arbeitgeber in Ahrensburg==

Ahrensburg ist ein bedeutender Wirtschaftsstandort in Schleswig-Holstein und beheimatet zahlreiche namhafte Unternehmen aus verschiedenen Branchen. Hier finden Sie eine Übersicht wichtiger Arbeitgeber, die die Wirtschaft der Region prägen:

* '''Acer Computer GmbH (IT/Hardware)''' – Umsatz ca. 686 Mio. € (2018), etwa 250 Mitarbeitende; Teil des internationalen Acer-Konzerns aus Taiwan.
* **GHD GesundHeits GmbH Deutschland (Gesundheit)** – Umsatz rund 580 Mio. €, etwa 2.000 Mitarbeitende; größter ambulanter Gesundheitsdienst Deutschlands mit Zentrale in Ahrensburg.
* **Basler AG (Bildverarbeitung/Industriekameras)** – Umsatz ca. 203 Mio. €, rund 1.000 Mitarbeitende; weltweit führender Anbieter von Industriekameras.
* **edding AG / Legamaster GmbH (Schreibwaren &amp; visuelle Kommunikation)** – Umsatz ca. 160 Mio. €, ca. 730–726 Mitarbeitende; international bekannt für Marker und Präsentationslösungen.
* **Christoph Kroschke GmbH (Automotive/Zulassungssysteme)** – Umsatz ca. 100–150 Mio. €, rund 1.800 Mitarbeitende, über 400 Filialen deutschlandweit; Spezialist für Kfz-Dienstleistungen.
* **Hela Gewürzwerk Hermann Laue GmbH (Lebensmittel, Gewürze/Ketchup)** – Umsatz etwa 118–151 Mio. €, ca. 485 Mitarbeitende; traditionsreiches Unternehmen für Gewürze und Feinkost.
* **Rosenhof Seniorenwohnanlagen** – Seniorenpflegeeinrichtungen mit Sitz in Ahrensburg; ca. 1.700 Mitarbeitende deutschlandweit; führend im Bereich Seniorenwohnen.
* **SOEX Group (Textilrecycling)** – Rund 1.350 Mitarbeitende weltweit; einer der führenden Anbieter im Textilrecycling und nachhaltigen Wertstoffkreislauf.

Diese Unternehmen bieten attraktive Arbeitsplätze und vielfältige Karrieremöglichkeiten in Ahrensburg und Umgebung. Die Stadt zeichnet sich durch eine starke Wirtschaft, innovative Unternehmen und eine hohe Lebensqualität aus – ideale Voraussetzungen für Fachkräfte und Berufseinsteiger.</text>
      <sha1>815d6qkj2d1oinpn5molr7tmvykdlu6</sha1>
    </revision>
    <revision>
      <id>551</id>
      <parentid>550</parentid>
      <timestamp>2025-07-01T15:51:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>551</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2015" sha1="ey0bpetawpf3reu2al5lex5vk6d9oe2" xml:space="preserve">==Wichtige Unternehmen &amp; Arbeitgeber in Ahrensburg==

Ahrensburg ist ein bedeutender Wirtschaftsstandort in Schleswig-Holstein und beheimatet zahlreiche namhafte Unternehmen aus verschiedenen Branchen. Hier finden Sie eine Übersicht wichtiger Arbeitgeber, die die Wirtschaft der Region prägen:

* '''Acer Computer GmbH (IT/Hardware)''' – Umsatz ca. 686 Mio. € (2018), etwa 250 Mitarbeitende; Teil des internationalen Acer-Konzerns aus Taiwan.
* '''GHD GesundHeits GmbH Deutschland (Gesundheit)''' – Umsatz rund 580 Mio. €, etwa 2.000 Mitarbeitende; größter ambulanter Gesundheitsdienst Deutschlands mit Zentrale in Ahrensburg.
* '''Basler AG (Bildverarbeitung/Industriekameras)''' – Umsatz ca. 203 Mio. €, rund 1.000 Mitarbeitende; weltweit führender Anbieter von Industriekameras.
* '''edding AG / Legamaster GmbH (Schreibwaren &amp; visuelle Kommunikation)''' – Umsatz ca. 160 Mio. €, ca. 730–726 Mitarbeitende; international bekannt für Marker und Präsentationslösungen.
* '''Christoph Kroschke GmbH (Automotive/Zulassungssysteme)''' – Umsatz ca. 100–150 Mio. €, rund 1.800 Mitarbeitende, über 400 Filialen deutschlandweit; Spezialist für Kfz-Dienstleistungen.
* '''Hela Gewürzwerk Hermann Laue GmbH (Lebensmittel, Gewürze/Ketchup)''' – Umsatz etwa 118–151 Mio. €, ca. 485 Mitarbeitende; traditionsreiches Unternehmen für Gewürze und Feinkost.
* '''Rosenhof Seniorenwohnanlagen''' – Seniorenpflegeeinrichtungen mit Sitz in Ahrensburg; ca. 1.700 Mitarbeitende deutschlandweit; führend im Bereich Seniorenwohnen.
* '''SOEX Group (Textilrecycling)''' – Rund 1.350 Mitarbeitende weltweit; einer der führenden Anbieter im Textilrecycling und nachhaltigen Wertstoffkreislauf.

Diese Unternehmen bieten attraktive Arbeitsplätze und vielfältige Karrieremöglichkeiten in Ahrensburg und Umgebung. Die Stadt zeichnet sich durch eine starke Wirtschaft, innovative Unternehmen und eine hohe Lebensqualität aus – ideale Voraussetzungen für Fachkräfte und Berufseinsteiger.</text>
      <sha1>ey0bpetawpf3reu2al5lex5vk6d9oe2</sha1>
    </revision>
  </page>
  <page>
    <title>Gewerbegebiete</title>
    <ns>0</ns>
    <id>159</id>
    <revision>
      <id>554</id>
      <timestamp>2025-07-01T16:14:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>554</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1344" sha1="apwk12x0372y68e93xaamf20m5t5289" xml:space="preserve">Ahrensburg verfügt über drei große Gewerbegebiete, die sich durch ihre verkehrsgünstige Lage und hervorragende Anbindung an Autobahn, Bahn und die Hamburger Infrastruktur auszeichnen.

==Gewerbegebiete in Ahrensburg==

===Gewerbegebiet Nord===
Das '''Gewerbegebiet Nord''' ist mit einer Fläche von rund 214 Hektar das größte Gewerbegebiet Ahrensburgs. Es bietet:
* Exzellente Verkehrsanbindung an die Autobahnen A1 und A21
* Moderne Infrastruktur für Unternehmen verschiedener Branchen
* Optimale Lage für Logistik und produzierendes Gewerbe

===Gewerbegebiet Beimoor-Süd===
Das '''Gewerbegebiet Beimoor-Süd''' befindet sich südlich des Beimoorwegs und wird kontinuierlich ausgebaut:
* Erweiterungsfläche von etwa 21 Hektar (Gesamtfläche: ca. 30 Hektar)
* Moderne Infrastruktur und zukunftsorientierte Planung
* Sehr gute Verkehrsanbindung an die Autobahnen A1 und A21
* Direkte Anbindung an den öffentlichen Nahverkehr

===Gewerbegebiet West===
Das '''Gewerbegebiet West''' erstreckt sich entlang der Bogenstraße und zeichnet sich durch folgende Merkmale aus:
* Dezentrale Besiedlungsstruktur mit individuellen Gestaltungsmöglichkeiten
* Hervorragende ÖPNV-Anbindung durch Bus und U-Bahn (Station Ahrensburg-West)
* Standort namhafter Unternehmen wie BeA (Spezialist für Drucklufttacker) und Baker Hughes (Softwarelösungen)</text>
      <sha1>apwk12x0372y68e93xaamf20m5t5289</sha1>
    </revision>
  </page>
  <page>
    <title>Ai:Modelle</title>
    <ns>3004</ns>
    <id>160</id>
    <revision>
      <id>557</id>
      <timestamp>2025-07-01T16:29:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „GPT-4.1					 GPT-4.5					 GPT-4o					 o1					 o3					 o3-mini					 o4-mini					 Claude Opus 4					 Claude Sonnet 3.5					 Claude Sonnet 3.7					 Denken in Claude Sonnet 3.7					 Claude Sonnet 4					 Gemini 2.5 Pro					 Gemini 2.0 Flash“</comment>
      <origin>557</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="235" sha1="karmnwu1937ole6xf74wusnk36gd1lf" xml:space="preserve">GPT-4.1					
GPT-4.5					
GPT-4o					
o1					
o3					
o3-mini					
o4-mini					
Claude Opus 4					
Claude Sonnet 3.5					
Claude Sonnet 3.7					
Denken in Claude Sonnet 3.7					
Claude Sonnet 4					
Gemini 2.5 Pro					
Gemini 2.0 Flash</text>
      <sha1>karmnwu1937ole6xf74wusnk36gd1lf</sha1>
    </revision>
    <revision>
      <id>558</id>
      <parentid>557</parentid>
      <timestamp>2025-07-01T16:30:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>558</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="263" sha1="s60h2pgngauk7zw5b8zincebfpsmfbw" xml:space="preserve">* GPT-4.1					
* GPT-4.5					
* GPT-4o					
* o1					
* o3					
* o3-mini					
* o4-mini					
* Claude Opus 4					
* Claude Sonnet 3.5					
* Claude Sonnet 3.7					
* Denken in Claude Sonnet 3.7					
* Claude Sonnet 4					
* Gemini 2.5 Pro					
* Gemini 2.0 Flash</text>
      <sha1>s60h2pgngauk7zw5b8zincebfpsmfbw</sha1>
    </revision>
    <revision>
      <id>559</id>
      <parentid>558</parentid>
      <timestamp>2025-07-01T16:36:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>559</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3558" sha1="mxb9z03goe3gde7tgs3qtbby1unzelq" xml:space="preserve">* '''GPT-4.1''' – Fortschrittliches Sprachmodell von OpenAI, optimiert für komplexe Textgenerierung und Dialogsysteme. Einsatz: Chatbots, Textgenerierung, Inhaltszusammenfassung.
* '''GPT-4.5''' – Verbesserte Version von GPT-4.1 mit höherer Genauigkeit und Kontextverständnis. Einsatz: Hochpräzise Dialogsysteme, kreative Textgenerierung, automatisierte Inhaltsanalyse.
* '''GPT-4o''' – Multimodales Modell von OpenAI, kombiniert Text- und Bildverarbeitung. Einsatz: Multimodale Anwendungen, visuelle Dialogsysteme, Bildbeschreibung.
* '''o1''' – Kompaktes Sprachmodell, optimiert für schnelle Antworten und einfache Aufgaben. Einsatz: Einfache Chatbots, schnelle Textklassifikation, kurze Antworten.
* '''o3''' – Mittelgroßes Sprachmodell mit ausgewogenem Verhältnis zwischen Leistung und Geschwindigkeit. Einsatz: Chatbots, automatisierte Kundenbetreuung, Textanalyse.
* '''o3-mini''' – Kleinere Version von o3, optimiert für ressourcenschonende Anwendungen. Einsatz: Mobile Anwendungen, schnelle Textklassifikation, einfache Dialogsysteme.
* '''o4-mini''' – Kompaktes, leistungsfähiges Modell mit verbesserter Genauigkeit gegenüber o3-mini. Einsatz: Mobile Assistenten, schnelle Textgenerierung, kompakte Dialogsysteme.
* '''Claude Opus 4''' – Hochleistungsfähiges Sprachmodell von Anthropic, spezialisiert auf komplexe und ethische Dialoge. Einsatz: Kundenservice, ethische KI-Anwendungen, komplexe Textgenerierung.
* '''Claude Sonnet 3.5''' – Mittelgroßes Modell von Anthropic, optimiert für kreative und nuancierte Texte. Einsatz: Kreatives Schreiben, Marketingtexte, Inhaltszusammenfassung.
* '''Claude Sonnet 3.7''' – Verbesserte Version von Sonnet 3.5 mit höherer Genauigkeit und Kontextverständnis. Einsatz: Hochwertige Textgenerierung, kreative Anwendungen, detaillierte Inhaltsanalyse.
* '''Denken in Claude Sonnet 3.7''' – Erweiterte Version von Sonnet 3.7, spezialisiert auf logische Schlussfolgerungen und komplexe Argumentationen. Einsatz: Entscheidungsunterstützung, logische Analysen, komplexe Dialogsysteme.
* '''Claude Sonnet 4''' – Neueste Generation von Anthropic, optimiert für höchste Genauigkeit und Kontextverständnis. Einsatz: Anspruchsvolle Dialogsysteme, komplexe Textgenerierung, ethische KI-Anwendungen.
* '''Gemini 2.5 Pro''' – Hochleistungsfähiges multimodales Modell von Google DeepMind, spezialisiert auf komplexe multimodale Aufgaben. Einsatz: Multimodale Assistenten, visuelle und textuelle Analysen, komplexe Dialogsysteme.
* '''Gemini 2.0 Flash''' – Schnelles, ressourcenschonendes multimodales Modell, optimiert für Echtzeitanwendungen. Einsatz: Mobile Anwendungen, schnelle multimodale Interaktionen, Echtzeitdialoge.

==Open Sources Sprachmodell Sortiert==
* '''Llama 3''' – Open-Source-Sprachmodell von Meta, leistungsfähig und vielseitig einsetzbar. Einsatz: Chatbots, Textgenerierung, Forschung, Inhaltsanalyse.
* '''Mixtral''' – Multimodales Open-Source-Modell, kombiniert verschiedene Modellarchitekturen. Einsatz: Multimodale Anwendungen, kreative Textgenerierung, Forschung.
* '''Phi-3''' – Kompaktes Open-Source-Modell von Microsoft, optimiert für ressourcenschonende Anwendungen. Einsatz: Mobile Assistenten, schnelle Textgenerierung, einfache Dialogsysteme.
* '''Gemma''' – Open-Source-Modell von Google, spezialisiert auf Textgenerierung und Analyse. Einsatz: Forschung, Chatbots, Inhaltszusammenfassung.
* '''OpenHermes''' – Community-getriebenes Open-Source-Modell, vielseitig einsetzbar. Einsatz: Chatbots, Textanalyse, kreative Anwendungen.</text>
      <sha1>mxb9z03goe3gde7tgs3qtbby1unzelq</sha1>
    </revision>
    <revision>
      <id>726</id>
      <parentid>559</parentid>
      <timestamp>2025-08-13T19:34:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>726</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3796" sha1="17yu78jfatcmqustswaixf31c14b0eo" xml:space="preserve">* '''GPT-5 mini''' – Kompaktes Sprachmodell der GPT-5-Reihe, optimiert für schnelle und ressourcenschonende Textgenerierung. Einsatz: Mobile Anwendungen, einfache Chatbots, schnelle Textklassifikation.
* '''GPT-5''' – Modernes Sprachmodell der GPT-5-Reihe, entwickelt für höchste Genauigkeit, Kontextverständnis und Vielseitigkeit. Einsatz: Komplexe Dialogsysteme, kreative Textgenerierung, automatisierte Analyse, Forschung.
* '''GPT-4.1''' – Fortschrittliches Sprachmodell von OpenAI, optimiert für komplexe Textgenerierung und Dialogsysteme. Einsatz: Chatbots, Textgenerierung, Inhaltszusammenfassung.
* '''GPT-4o''' – Multimodales Modell von OpenAI, kombiniert Text- und Bildverarbeitung. Einsatz: Multimodale Anwendungen, visuelle Dialogsysteme, Bildbeschreibung.
* '''o1''' – Kompaktes Sprachmodell, optimiert für schnelle Antworten und einfache Aufgaben. Einsatz: Einfache Chatbots, schnelle Textklassifikation, kurze Antworten.
* '''o3''' – Mittelgroßes Sprachmodell mit ausgewogenem Verhältnis zwischen Leistung und Geschwindigkeit. Einsatz: Chatbots, automatisierte Kundenbetreuung, Textanalyse.
* '''o3-mini''' – Kleinere Version von o3, optimiert für ressourcenschonende Anwendungen. Einsatz: Mobile Anwendungen, schnelle Textklassifikation, einfache Dialogsysteme.
* '''o4-mini''' – Kompaktes, leistungsfähiges Modell mit verbesserter Genauigkeit gegenüber o3-mini. Einsatz: Mobile Assistenten, schnelle Textgenerierung, kompakte Dialogsysteme.
* '''Claude Opus 4''' – Hochleistungsfähiges Sprachmodell von Anthropic, spezialisiert auf komplexe und ethische Dialoge. Einsatz: Kundenservice, ethische KI-Anwendungen, komplexe Textgenerierung.
* '''Claude Sonnet 3.5''' – Mittelgroßes Modell von Anthropic, optimiert für kreative und nuancierte Texte. Einsatz: Kreatives Schreiben, Marketingtexte, Inhaltszusammenfassung.
* '''Claude Sonnet 3.7''' – Verbesserte Version von Sonnet 3.5 mit höherer Genauigkeit und Kontextverständnis. Einsatz: Hochwertige Textgenerierung, kreative Anwendungen, detaillierte Inhaltsanalyse.
* '''Denken in Claude Sonnet 3.7''' – Erweiterte Version von Sonnet 3.7, spezialisiert auf logische Schlussfolgerungen und komplexe Argumentationen. Einsatz: Entscheidungsunterstützung, logische Analysen, komplexe Dialogsysteme.
* '''Claude Sonnet 4''' – Neueste Generation von Anthropic, optimiert für höchste Genauigkeit und Kontextverständnis. Einsatz: Anspruchsvolle Dialogsysteme, komplexe Textgenerierung, ethische KI-Anwendungen.
* '''Gemini 2.5 Pro''' – Hochleistungsfähiges multimodales Modell von Google DeepMind, spezialisiert auf komplexe multimodale Aufgaben. Einsatz: Multimodale Assistenten, visuelle und textuelle Analysen, komplexe Dialogsysteme.
* '''Gemini 2.0 Flash''' – Schnelles, ressourcenschonendes multimodales Modell, optimiert für Echtzeitanwendungen. Einsatz: Mobile Anwendungen, schnelle multimodale Interaktionen, Echtzeitdialoge.

==Open Sources Sprachmodell Sortiert==
* '''Llama 3''' – Open-Source-Sprachmodell von Meta, leistungsfähig und vielseitig einsetzbar. Einsatz: Chatbots, Textgenerierung, Forschung, Inhaltsanalyse.
* '''Mixtral''' – Multimodales Open-Source-Modell, kombiniert verschiedene Modellarchitekturen. Einsatz: Multimodale Anwendungen, kreative Textgenerierung, Forschung.
* '''Phi-3''' – Kompaktes Open-Source-Modell von Microsoft, optimiert für ressourcenschonende Anwendungen. Einsatz: Mobile Assistenten, schnelle Textgenerierung, einfache Dialogsysteme.
* '''Gemma''' – Open-Source-Modell von Google, spezialisiert auf Textgenerierung und Analyse. Einsatz: Forschung, Chatbots, Inhaltszusammenfassung.
* '''OpenHermes''' – Community-getriebenes Open-Source-Modell, vielseitig einsetzbar. Einsatz: Chatbots, Textanalyse, kreative Anwendungen.</text>
      <sha1>17yu78jfatcmqustswaixf31c14b0eo</sha1>
    </revision>
  </page>
  <page>
    <title>Stadtverwaltung</title>
    <ns>0</ns>
    <id>161</id>
    <revision>
      <id>561</id>
      <timestamp>2025-07-01T19:09:40Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>561</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2005" sha1="qz7y9hftih4m8qgz5638nz615xfer19" xml:space="preserve">== Stadtverwaltung Ahrensburg – Kontakt, Öffnungszeiten und Services ==

Die Stadtverwaltung Ahrensburg bietet Bürgerinnen und Bürgern umfassende Dienstleistungen und Informationen.

=== Kontaktdaten ===
* '''Adresse:''' Manfred-Samusch-Straße 5, 22926 Ahrensburg
* '''Telefon:''' 04102 77-0 (Zentrale)
* '''Fax:''' 04102 77-232
* '''E-Mail:''' rathaus@ahrensburg.de
* '''Webseite:''' [https://www.ahrensburg.de ahrensburg.de]
* Die Behördennummer 115 steht Ihnen ebenfalls zur Verfügung.

=== Öffnungszeiten (Rathaus und Bürgerbüro) ===
* Montag, Dienstag, Mittwoch und Freitag: 08:00–12:00 Uhr
* Donnerstag: 14:00–18:00 Uhr

Für Anliegen im Einwohnermeldeamt oder Standesamt ist in der Regel eine Terminvereinbarung erforderlich. Bitte vereinbaren Sie Termine online oder telefonisch.

=== Fachbereiche und Services ===
* '''Bürger- und Einwohnermeldeamt:'''
** Öffnungszeiten: Mo–Mi und Fr 08:00–12:00 Uhr, Do 14:00–18:00 Uhr
** Räume 1–3 im Rathaus, Tel. 04102 77-0, -149, -152
* '''Standesamt, Ordnungsamt, Fundbüro:'''
** Zentrale im Rathaus, es gelten die gleichen Öffnungszeiten.
** Für das Fundbüro fragen Sie bitte gesondert an.
* '''Rathaus Nord (An der Strusbek 23):'''
** Nur mit Termin, keine allgemeinen Öffnungszeiten.

=== Online-Dienste ===
Viele Anliegen können bequem über das [https://ahrensburg.buergerportal.sh Bürgerportal] digital erledigt werden, z. B. Wohnsitzanmeldung, Meldebescheinigung oder Wohngeldantrag.

=== Kurzinfo ===
* '''Zentrale und Fachstellen:''' Manfred-Samusch-Str. 5, Tel. 04102 77-0
* '''Öffnungszeiten:''' Mo–Mi, Fr 8–12 Uhr | Do 14–18 Uhr
* '''Termine:''' Für bestimmte Ämter (z. B. Einwohnermeldeamt, Standesamt) notwendig
* '''Digital:''' Vielfältige Online-Formulare über das Bürgerportal

'''Hinweis:''' Für spezielle Anliegen wie Passanträge, Bauangelegenheiten oder weitere Fachbereiche stehen Ihnen die jeweiligen Ansprechpartner zur Verfügung. Kontaktieren Sie uns gerne für weitere Informationen!</text>
      <sha1>qz7y9hftih4m8qgz5638nz615xfer19</sha1>
    </revision>
    <revision>
      <id>562</id>
      <parentid>561</parentid>
      <timestamp>2025-07-01T19:11:14Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Kurzinfo */</comment>
      <origin>562</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1950" sha1="lpdcen2bxqqpkebv6jk3kjzt86a3ysk" xml:space="preserve">== Stadtverwaltung Ahrensburg – Kontakt, Öffnungszeiten und Services ==

Die Stadtverwaltung Ahrensburg bietet Bürgerinnen und Bürgern umfassende Dienstleistungen und Informationen.

=== Kontaktdaten ===
* '''Adresse:''' Manfred-Samusch-Straße 5, 22926 Ahrensburg
* '''Telefon:''' 04102 77-0 (Zentrale)
* '''Fax:''' 04102 77-232
* '''E-Mail:''' rathaus@ahrensburg.de
* '''Webseite:''' [https://www.ahrensburg.de ahrensburg.de]
* Die Behördennummer 115 steht Ihnen ebenfalls zur Verfügung.

=== Öffnungszeiten (Rathaus und Bürgerbüro) ===
* Montag, Dienstag, Mittwoch und Freitag: 08:00–12:00 Uhr
* Donnerstag: 14:00–18:00 Uhr

Für Anliegen im Einwohnermeldeamt oder Standesamt ist in der Regel eine Terminvereinbarung erforderlich. Bitte vereinbaren Sie Termine online oder telefonisch.

=== Fachbereiche und Services ===
* '''Bürger- und Einwohnermeldeamt:'''
** Öffnungszeiten: Mo–Mi und Fr 08:00–12:00 Uhr, Do 14:00–18:00 Uhr
** Räume 1–3 im Rathaus, Tel. 04102 77-0, -149, -152
* '''Standesamt, Ordnungsamt, Fundbüro:'''
** Zentrale im Rathaus, es gelten die gleichen Öffnungszeiten.
** Für das Fundbüro fragen Sie bitte gesondert an.
* '''Rathaus Nord (An der Strusbek 23):'''
** Nur mit Termin, keine allgemeinen Öffnungszeiten.

=== Online-Dienste ===
Viele Anliegen können bequem über das [https://ahrensburg.buergerportal.sh Bürgerportal] digital erledigt werden, z. B. Wohnsitzanmeldung, Meldebescheinigung oder Wohngeldantrag.

=== Kurzinfo ===
* '''Zentrale und Fachstellen:''' Manfred-Samusch-Str. 5, Tel. 04102 77-0
* '''Öffnungszeiten:''' Mo–Mi, Fr 8–12 Uhr | Do 14–18 Uhr
* '''Termine:''' Für bestimmte Ämter (z. B. Einwohnermeldeamt, Standesamt) notwendig
* '''Digital:''' Vielfältige Online-Formulare über das Bürgerportal

'''Hinweis:''' Für spezielle Anliegen wie Passanträge, Bauangelegenheiten oder weitere Fachbereiche stehen Ihnen die jeweiligen Ansprechpartner zur Verfügung.</text>
      <sha1>lpdcen2bxqqpkebv6jk3kjzt86a3ysk</sha1>
    </revision>
  </page>
  <page>
    <title>Freiwillige Feuerwehr Ahrensburg</title>
    <ns>0</ns>
    <id>162</id>
    <revision>
      <id>564</id>
      <timestamp>2025-07-01T20:22:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>564</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1980" sha1="dnxdr7ra7ryderri27uqm7mfvvhyjpi" xml:space="preserve">== Freiwillige Feuerwehr Ahrensburg – Überblick ==

{{Infobox Feuerwehr
| Name         = Freiwillige Feuerwehr Ahrensburg
| Adresse      = Am Weinberg 2, 22926 Ahrensburg
| Telefon      = 04102 44 799
| Notruf       = 112
| Webseite     = [https://feuerwehr-ahrensburg.de feuerwehr-ahrensburg.de]
| E-Mail       = mitmachen@feuerwehr-ahrensburg.de
| Leitung      = Florian Stephani (Gemeindewehrleiter)&lt;br /&gt;Stellvertreter: Michael Mey, Konstantin Pfnister
| Ortswehrführung = Jan Haarländer&lt;br /&gt;Stellvertreter: Tim Moormann
}}

=== Allgemeines &amp; Kontakt ===
* Freiwillig und unentgeltlich im Einsatz – rund um die Uhr, an 365 Tagen im Jahr
* [https://facebook.com Facebook], [https://ahrensburg.de Stadt Ahrensburg], [https://feuerwehr-ahrensburg.de Webseite]
* Adresse: Am Weinberg 2, 22926 Ahrensburg
* Telefon (Zentrale/Info): 04102 44 799 / Notruf: 112
* E-Mail für Mitgliedschaft: mitmachen@feuerwehr-ahrensburg.de

=== Organisation &amp; Wachen ===
* Gemeindefeuerwehr Ahrensburg mit mehreren Einheiten:
** Ortswehr Ahrensburg – Wachen Am Weinberg und Am Hagen
** Löschgruppe Wulfsdorf (seit Mai 2021)
** Ortswehr Ahrensfelde
* Gerätehaus „Am Weinberg“ mit diversen Einsatzfahrzeugen:
** ELW 1 (Einsatzleitwagen), GW (Gerätewagen), MTF (Mannschafts-Transportfahrzeug)
** Drehleiter DLK 23-12, Löschgruppenfahrzeuge (LF 20/16, HLF 20)
** Rüstwagen RW 2, Gerätewagen Logistik GW-L1, GW-L2, Kommandowagen u. v. m.
* Fahrzeugeinsatz: ca. 450 Einsätze pro Jahr, rund 90 aktive Mitglieder

=== Aufgaben &amp; Öffentlichkeitsarbeit ===
* Zuständig für Brandschutz und technische Hilfeleistung in Ahrensburg
* Brandschutzerziehung, z. B. in Schulen und Kindergärten
* Aktives Social Media-Profil auf Facebook &amp; Instagram – Einsatz-Updates und Rückblicke

=== Jugendfeuerwehr &amp; Nachwuchs ===
* Jugendfeuerwehr: ca. 40 Mitglieder, Fokus auf Teamwork, Technik und Gemeinschaft
* Unterstützung durch Spendenaktionen (z. B. Kino-Sommer, 6.500€ für Jugendarbeit)</text>
      <sha1>dnxdr7ra7ryderri27uqm7mfvvhyjpi</sha1>
    </revision>
    <revision>
      <id>565</id>
      <parentid>564</parentid>
      <timestamp>2025-07-01T20:24:24Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>565</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1984" sha1="m3frayospgx72bi7uel79ubg5rzcq43" xml:space="preserve">== Freiwillige Feuerwehr Ahrensburg – Überblick ==

&lt;!-- Infobox entfernt --&gt;
| Name         = Freiwillige Feuerwehr Ahrensburg
| Adresse      = Am Weinberg 2, 22926 Ahrensburg
| Telefon      = 04102 44 799
| Notruf       = 112
| Webseite     = [https://feuerwehr-ahrensburg.de feuerwehr-ahrensburg.de]
| E-Mail       = mitmachen@feuerwehr-ahrensburg.de
| Leitung      = Florian Stephani (Gemeindewehrleiter)&lt;br /&gt;Stellvertreter: Michael Mey, Konstantin Pfnister
| Ortswehrführung = Jan Haarländer&lt;br /&gt;Stellvertreter: Tim Moormann


=== Allgemeines &amp; Kontakt ===
* Freiwillig und unentgeltlich im Einsatz – rund um die Uhr, an 365 Tagen im Jahr
* [https://facebook.com Facebook], [https://ahrensburg.de Stadt Ahrensburg], [https://feuerwehr-ahrensburg.de Webseite]
* Adresse: Am Weinberg 2, 22926 Ahrensburg
* Telefon (Zentrale/Info): 04102 44 799 / Notruf: 112
* E-Mail für Mitgliedschaft: mitmachen@feuerwehr-ahrensburg.de

=== Organisation &amp; Wachen ===
* Gemeindefeuerwehr Ahrensburg mit mehreren Einheiten:
** Ortswehr Ahrensburg – Wachen Am Weinberg und Am Hagen
** Löschgruppe Wulfsdorf (seit Mai 2021)
** Ortswehr Ahrensfelde
* Gerätehaus „Am Weinberg“ mit diversen Einsatzfahrzeugen:
** ELW 1 (Einsatzleitwagen), GW (Gerätewagen), MTF (Mannschafts-Transportfahrzeug)
** Drehleiter DLK 23-12, Löschgruppenfahrzeuge (LF 20/16, HLF 20)
** Rüstwagen RW 2, Gerätewagen Logistik GW-L1, GW-L2, Kommandowagen u. v. m.
* Fahrzeugeinsatz: ca. 450 Einsätze pro Jahr, rund 90 aktive Mitglieder

=== Aufgaben &amp; Öffentlichkeitsarbeit ===
* Zuständig für Brandschutz und technische Hilfeleistung in Ahrensburg
* Brandschutzerziehung, z. B. in Schulen und Kindergärten
* Aktives Social Media-Profil auf Facebook &amp; Instagram – Einsatz-Updates und Rückblicke

=== Jugendfeuerwehr &amp; Nachwuchs ===
* Jugendfeuerwehr: ca. 40 Mitglieder, Fokus auf Teamwork, Technik und Gemeinschaft
* Unterstützung durch Spendenaktionen (z. B. Kino-Sommer, 6.500€ für Jugendarbeit)</text>
      <sha1>m3frayospgx72bi7uel79ubg5rzcq43</sha1>
    </revision>
    <revision>
      <id>566</id>
      <parentid>565</parentid>
      <timestamp>2025-07-01T20:25:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>566</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1965" sha1="kfph6iv5nfkzjzkrp6w77kxz37mln8j" xml:space="preserve">== Freiwillige Feuerwehr Ahrensburg – Überblick ==
{| class="wikitable"
|-
! Name
| Freiwillige Feuerwehr Ahrensburg
|-
! Adresse
| Am Weinberg 2, 22926 Ahrensburg
|-
! Telefon
| 04102 44 799
|-
! Notruf
| 112
|-
! Webseite
| [https://feuerwehr-ahrensburg.de feuerwehr-ahrensburg.de]
|-
! E-Mail
| mitmachen@feuerwehr-ahrensburg.de
|-
! Leitung
| Florian Stephani (Gemeindewehrleiter)&lt;br /&gt;Stellvertreter: Michael Mey, Konstantin Pfnister
|-
! Ortswehrführung
| Jan Haarländer&lt;br /&gt;Stellvertreter: Tim Moormann
|}

=== Allgemeines &amp; Kontakt ===
* Freiwillig und unentgeltlich im Einsatz – rund um die Uhr, an 365 Tagen im Jahr
* [https://facebook.com Facebook], [https://ahrensburg.de Stadt Ahrensburg], [https://feuerwehr-ahrensburg.de Webseite]
* Adresse: Am Weinberg 2, 22926 Ahrensburg
* Telefon (Zentrale/Info): 04102 44 799 / Notruf: 112
* E-Mail für Mitgliedschaft: mitmachen@feuerwehr-ahrensburg.de

=== Organisation &amp; Wachen ===
* Gemeindefeuerwehr Ahrensburg mit mehreren Einheiten:
** Ortswehr Ahrensburg – Wachen Am Weinberg und Am Hagen
** Löschgruppe Wulfsdorf (seit Mai 2021)
** Ortswehr Ahrensfelde
* Gerätehaus „Am Weinberg“ mit diversen Einsatzfahrzeugen:
** ELW 1 (Einsatzleitwagen), GW (Gerätewagen), MTF (Mannschafts-Transportfahrzeug)
** Drehleiter DLK 23-12, Löschgruppenfahrzeuge (LF 20/16, HLF 20)
** Rüstwagen RW 2, Gerätewagen Logistik GW-L1, GW-L2, Kommandowagen u. v. m.
* Fahrzeugeinsatz: ca. 450 Einsätze pro Jahr, rund 90 aktive Mitglieder

=== Aufgaben &amp; Öffentlichkeitsarbeit ===
* Zuständig für Brandschutz und technische Hilfeleistung in Ahrensburg
* Brandschutzerziehung, z. B. in Schulen und Kindergärten
* Aktives Social Media-Profil auf Facebook &amp; Instagram – Einsatz-Updates und Rückblicke

=== Jugendfeuerwehr &amp; Nachwuchs ===
* Jugendfeuerwehr: ca. 40 Mitglieder, Fokus auf Teamwork, Technik und Gemeinschaft
* Unterstützung durch Spendenaktionen (z. B. Kino-Sommer, 6.500€ für Jugendarbeit)</text>
      <sha1>kfph6iv5nfkzjzkrp6w77kxz37mln8j</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Mediawiki Installieren</title>
    <ns>3008</ns>
    <id>163</id>
    <revision>
      <id>571</id>
      <timestamp>2025-07-01T22:08:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ == Postgres Datenbank erstellen ==  &lt;code&gt;sudo -u postgres -i  createdb -E UTF8 -O thorsten mediawiki  psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten    exit&lt;/code&gt;   == Mediawiki installieren ==  &lt;code&gt;cd /var/www  sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki  sudo cd mediawiki  sudo git tag -l | sort -V  sudo git checkout 1.41.0  sudo git submodule update --init --recursive  s…“</comment>
      <origin>571</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="902" sha1="47d7hnbnfx04duap33fgobyglbkmcvl" xml:space="preserve">
== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 psql -d mediawiki -c "GRANT ALL PRIVILEGES ON DATABASE mediawiki TO thorsten
 
 exit&lt;/code&gt;


== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Lesbare URLs konfiguriern in mediawiki ==
 &lt;code&gt;sudo nano /var/www/mediawiki/LocalSettings.php&lt;/code&gt;

 &lt;code&gt;$wgScriptPath = "";
 $wgArticlePath = "/$1";
 $wgUsePathInfo = true;&lt;/code&gt;</text>
      <sha1>47d7hnbnfx04duap33fgobyglbkmcvl</sha1>
    </revision>
    <revision>
      <id>621</id>
      <parentid>571</parentid>
      <timestamp>2025-07-09T14:33:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>621</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="825" sha1="0ni5p107c1rsdksfiih9jfrwqea9x5f" xml:space="preserve">
== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki

 
 exit&lt;/code&gt;


== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Lesbare URLs konfiguriern in mediawiki ==
 &lt;code&gt;sudo nano /var/www/mediawiki/LocalSettings.php&lt;/code&gt;

 &lt;code&gt;$wgScriptPath = "";
 $wgArticlePath = "/$1";
 $wgUsePathInfo = true;&lt;/code&gt;</text>
      <sha1>0ni5p107c1rsdksfiih9jfrwqea9x5f</sha1>
    </revision>
    <revision>
      <id>622</id>
      <parentid>621</parentid>
      <timestamp>2025-07-09T14:33:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>622</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="822" sha1="klrjos3e6yrep3pjpth5p96f3m4xopv" xml:space="preserve">
== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 exit&lt;/code&gt;


== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Lesbare URLs konfiguriern in mediawiki ==
 &lt;code&gt;sudo nano /var/www/mediawiki/LocalSettings.php&lt;/code&gt;

 &lt;code&gt;$wgScriptPath = "";
 $wgArticlePath = "/$1";
 $wgUsePathInfo = true;&lt;/code&gt;</text>
      <sha1>klrjos3e6yrep3pjpth5p96f3m4xopv</sha1>
    </revision>
    <revision>
      <id>623</id>
      <parentid>622</parentid>
      <timestamp>2025-07-09T14:33:33Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>623</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="819" sha1="ih0tcherxif7nzp467amt4wwu5ktyol" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 exit&lt;/code&gt;
== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Lesbare URLs konfiguriern in mediawiki ==
 &lt;code&gt;sudo nano /var/www/mediawiki/LocalSettings.php&lt;/code&gt;

 &lt;code&gt;$wgScriptPath = "";
 $wgArticlePath = "/$1";
 $wgUsePathInfo = true;&lt;/code&gt;</text>
      <sha1>ih0tcherxif7nzp467amt4wwu5ktyol</sha1>
    </revision>
    <revision>
      <id>625</id>
      <parentid>623</parentid>
      <timestamp>2025-07-09T21:46:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>625</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1333" sha1="cdtxqn980ms31au5b626wnvfuvr478i" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 exit&lt;/code&gt;
== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Nginx Konfiguration für lokale MediaWiki-Installation ==
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/start.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
    listen 80;
    server_name localhost;
    root /var/www/mediawiki;

    server_name ahrensburg.city;
    
     root /var/www/mediawiki;
    index index.php index.html index.htm;
  
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}
&lt;/pre&gt;

Aktiviere die Konfiguration und starte Nginx neu:

&lt;code&gt;
sudo systemctl reload nginx
&lt;/code&gt;</text>
      <sha1>cdtxqn980ms31au5b626wnvfuvr478i</sha1>
    </revision>
    <revision>
      <id>626</id>
      <parentid>625</parentid>
      <timestamp>2025-07-09T21:54:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Nginx Konfiguration für lokale MediaWiki-Installation */</comment>
      <origin>626</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1264" sha1="akgxsnu0rs5imifdjjw12qvnzd44spb" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten mediawiki
 exit&lt;/code&gt;
== Mediawiki installieren ==
 &lt;code&gt;cd /var/www
 sudo git clone &lt;nowiki&gt;https://gerrit.wikimedia.org/r/mediawiki/core.git&lt;/nowiki&gt; mediawiki
 sudo cd mediawiki
 sudo git tag -l | sort -V
 sudo git checkout 1.41.0
 sudo git submodule update --init --recursive
 sudo chown -R www-data:www-data /var/www/mediawiki
 sudo chmod -R 755 /var/www/mediawiki&lt;/code&gt;
 
Hochladen der Konfiguration
 &lt;code&gt;sudo scp /home/thorsten/Downloads/LocalSettings.php thorsten@ahrensburg.city:/var/www/mediawiki/LocalSettings.php&lt;/code&gt;

== Nginx Konfiguration für lokale MediaWiki-Installation ==
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/start.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
    listen 80;
    server_name localhost;
    root /var/www/mediawiki;
    index index.php index.html index.htm;
  
 location / {
        try_files $uri $uri/ /index.php?$args;
    }
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
    }

    location ~ /\.ht {

           deny all;
    }

}
&lt;/pre&gt;

Aktiviere die Konfiguration und starte Nginx neu:

&lt;code&gt;
sudo systemctl reload nginx
&lt;/code&gt;</text>
      <sha1>akgxsnu0rs5imifdjjw12qvnzd44spb</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Mediawiki Extensions</title>
    <ns>3008</ns>
    <id>164</id>
    <revision>
      <id>573</id>
      <timestamp>2025-07-01T22:28:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==dpl== sudo composer update --no-dev“</comment>
      <origin>573</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="37" sha1="ma6gblmnron6nqja3ssme7o7cdi76e9" xml:space="preserve">==dpl==
sudo composer update --no-dev</text>
      <sha1>ma6gblmnron6nqja3ssme7o7cdi76e9</sha1>
    </revision>
    <revision>
      <id>574</id>
      <parentid>573</parentid>
      <timestamp>2025-07-01T22:42:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde geleert.</comment>
      <origin>574</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="0" sha1="phoiac9h4m842xq45sp7s6u21eteeq1" xml:space="preserve" />
      <sha1>phoiac9h4m842xq45sp7s6u21eteeq1</sha1>
    </revision>
  </page>
  <page>
    <title>Qgis Installieren</title>
    <ns>0</ns>
    <id>165</id>
    <revision>
      <id>577</id>
      <timestamp>2025-07-02T00:26:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>577</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2679" sha1="77ctk3b9s8f7iz31k0oe2v6vm8p8bkt" xml:space="preserve">== QGIS unter Ubuntu installieren ==

Um QGIS auf einem Ubuntu-Rechner zu installieren, folge diesen Schritten:

=== 1. Repository hinzufügen ===
Öffne ein Terminal und füge das offizielle QGIS-Repository hinzu:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt update
sudo apt install gnupg software-properties-common
sudo mkdir -m755 -p /etc/apt/keyrings
wget -qO - https://qgis.org/downloads/qgis-2023.gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/qgis-archive-keyring.gpg &gt; /dev/null
echo "deb [signed-by=/etc/apt/keyrings/qgis-archive-keyring.gpg] https://qgis.org/ubuntu $(lsb_release -c -s) main" | sudo tee /etc/apt/sources.list.d/qgis.sources
&lt;/syntaxhighlight&gt;

=== 2. Paketliste aktualisieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt update
&lt;/syntaxhighlight&gt;

=== 3. QGIS installieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install qgis qgis-plugin-grass
&lt;/syntaxhighlight&gt;

=== 4. QGIS starten ===
Im Terminal:
&lt;syntaxhighlight lang="bash"&gt;
qgis
&lt;/syntaxhighlight&gt;

Oder über das Anwendungsmenü.

'''Hinweis:''' Für weitere Informationen siehe die offizielle [https://qgis.org/de/site/forusers/alldownloads.html QGIS-Dokumentation].
== QGIS Server mit Nginx einrichten ==

Um QGIS Server unter Ubuntu mit Nginx bereitzustellen, folge diesen Schritten:

=== 1. QGIS Server installieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install qgis-server
&lt;/syntaxhighlight&gt;

=== 2. Nginx installieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install nginx
&lt;/syntaxhighlight&gt;

=== 3. FastCGI Wrapper installieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install fcgiwrap
sudo systemctl enable --now fcgiwrap
&lt;/syntaxhighlight&gt;

=== 4. Nginx für QGIS Server konfigurieren ===
Erstelle oder bearbeite eine Konfigurationsdatei, z.B. &lt;code&gt;/etc/nginx/sites-available/qgis-server&lt;/code&gt;:

&lt;syntaxhighlight lang="nginx"&gt;
server {
    listen 80;
    server_name your-server-domain-or-ip;

    location /qgis/ {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/fcgiwrap.socket;
        fastcgi_param SCRIPT_FILENAME /usr/lib/cgi-bin/qgis_mapserv.fcgi;
        fastcgi_param QGIS_SERVER_LOG_STDERR 1;
        fastcgi_param QGIS_SERVER_LOG_LEVEL 0;
    }
}
&lt;/syntaxhighlight&gt;

Aktiviere die Konfiguration:
&lt;syntaxhighlight lang="bash"&gt;
sudo ln -s /etc/nginx/sites-available/qgis-server /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx
&lt;/syntaxhighlight&gt;

=== 5. Testen ===
Rufe im Browser auf:
&lt;syntaxhighlight lang="text"&gt;
http://your-server-domain-or-ip/qgis/?SERVICE=WMS&amp;REQUEST=GetCapabilities
&lt;/syntaxhighlight&gt;

Weitere Informationen findest du in der [https://docs.qgis.org/de/site/server/index.html QGIS Server Dokumentation].</text>
      <sha1>77ctk3b9s8f7iz31k0oe2v6vm8p8bkt</sha1>
    </revision>
    <revision>
      <id>578</id>
      <parentid>577</parentid>
      <timestamp>2025-07-02T10:41:09Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>578</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="982" sha1="8jhgan8kimrh4ejbg0pr1m5drx0n9q3" xml:space="preserve">== QGIS unter Ubuntu installieren ==

Um QGIS auf einem Ubuntu-Rechner zu installieren, folge diesen Schritten:

=== 1. Repository hinzufügen ===
Öffne ein Terminal und füge das offizielle QGIS-Repository hinzu:
&lt;syntaxhighlight lang="bash"&gt;
sudo apt update
sudo apt install gnupg software-properties-common
sudo mkdir -m755 -p /etc/apt/keyrings
wget -qO - https://qgis.org/downloads/qgis-2023.gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/qgis-archive-keyring.gpg &gt; /dev/null
echo "deb [signed-by=/etc/apt/keyrings/qgis-archive-keyring.gpg] https://qgis.org/ubuntu $(lsb_release -c -s) main" | sudo tee /etc/apt/sources.list.d/qgis.sources
&lt;/syntaxhighlight&gt;

=== 2. Paketliste aktualisieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt update
&lt;/syntaxhighlight&gt;

=== 3. QGIS installieren ===
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install qgis qgis-plugin-grass
&lt;/syntaxhighlight&gt;

=== 4. QGIS starten ===
Im Terminal:
&lt;syntaxhighlight lang="bash"&gt;
qgis
&lt;/syntaxhighlight&gt;</text>
      <sha1>8jhgan8kimrh4ejbg0pr1m5drx0n9q3</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:News Site erstellen</title>
    <ns>3002</ns>
    <id>166</id>
    <revision>
      <id>580</id>
      <timestamp>2025-07-02T11:21:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>580</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1766" sha1="jjlqart1nmipqcbajhlx5mgvhdxmw33" xml:space="preserve">Um ein neues News-Projekt mit ASP.NET Core MVC und individueller Authentifizierung zu erstellen, führe folgenden Befehl in der Kommandozeile aus:
&lt;pre&gt;
dotnet new mvc --auth Individual -n News
&lt;/pre&gt;

Dadurch wird ein neues ASP.NET Core MVC-Projekt mit individueller Benutzer-Authentifizierung im Ordner `News` erstellt.  
Wechsle anschließend in das Projektverzeichnis:

&lt;pre&gt;
cd News
&lt;/pre&gt;

Wir müssen jetzt eine Datenbank einrichten:  
&lt;pre&gt;
&lt;!-- Installiere das Entity Framework Core CLI-Tool --&gt;
dotnet tool install --global dotnet-ef
&lt;/pre&gt;

Nun erstellen wir die SQLite-Datenbank und führen die Migrationen aus:

&lt;pre&gt;
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet ef database update
&lt;/pre&gt;

Dadurch wird die SQLite-Datenbank entsprechend der aktuellen Migrationen erstellt.

Jetzt installieren wir das Tool `dotnet aspnet-codegenerator`, das für die Gerüstgenerierung (Scaffolding) benötigt wird:

&lt;pre&gt;
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
&lt;/pre&gt;

Diese Tools werden benötigt, um automatisch Code für Controller, Views und andere Komponenten zu generieren. Das erleichtert die Entwicklung und spart Zeit, besonders wenn du die Benutzeroberfläche (z.B. Formulare für Benutzerverwaltung) anpassen oder übersetzen möchtest.
Um die Login-Seite für die Benutzeranmeldung zu generieren und anschließend ins Deutsche zu übersetzen, führe folgenden Befehl aus:

&lt;pre&gt;
dotnet aspnet-codegenerator identity -dc ApplicationDbContext --files "Account.Login"
&lt;/pre&gt;

Dadurch wird die Datei `Login.cshtml` im Verzeichnis `Areas/Identity/Pages/Account` erstellt.  
Öffne diese Datei und passe die Texte an, um sie ins Deutsche zu übersetzen, z.B.:</text>
      <sha1>jjlqart1nmipqcbajhlx5mgvhdxmw33</sha1>
    </revision>
    <revision>
      <id>581</id>
      <parentid>580</parentid>
      <timestamp>2025-07-02T11:24:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>581</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1773" sha1="shg6sfrvzcskjpsr6yk3u0ap4i6o13g" xml:space="preserve">Um ein neues News-Projekt mit ASP.NET Core MVC und individueller Authentifizierung zu erstellen, führe folgenden Befehl in der Kommandozeile aus:
&lt;pre&gt;
dotnet new mvc --auth Individual -n News
&lt;/pre&gt;

Dadurch wird ein neues ASP.NET Core MVC-Projekt mit individueller Benutzer-Authentifizierung im Ordner `News` erstellt.  
Wechsle anschließend in das Projektverzeichnis:

&lt;pre&gt;
cd News
code .
&lt;/pre&gt;

Wir müssen jetzt eine Datenbank einrichten:  
&lt;pre&gt;
&lt;!-- Installiere das Entity Framework Core CLI-Tool --&gt;
dotnet tool install --global dotnet-ef
&lt;/pre&gt;

Nun erstellen wir die SQLite-Datenbank und führen die Migrationen aus:

&lt;pre&gt;
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet ef database update
&lt;/pre&gt;

Dadurch wird die SQLite-Datenbank entsprechend der aktuellen Migrationen erstellt.

Jetzt installieren wir das Tool `dotnet aspnet-codegenerator`, das für die Gerüstgenerierung (Scaffolding) benötigt wird:

&lt;pre&gt;
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
&lt;/pre&gt;

Diese Tools werden benötigt, um automatisch Code für Controller, Views und andere Komponenten zu generieren. Das erleichtert die Entwicklung und spart Zeit, besonders wenn du die Benutzeroberfläche (z.B. Formulare für Benutzerverwaltung) anpassen oder übersetzen möchtest.
Um die Login-Seite für die Benutzeranmeldung zu generieren und anschließend ins Deutsche zu übersetzen, führe folgenden Befehl aus:

&lt;pre&gt;
dotnet aspnet-codegenerator identity -dc ApplicationDbContext --files "Account.Login"
&lt;/pre&gt;

Dadurch wird die Datei `Login.cshtml` im Verzeichnis `Areas/Identity/Pages/Account` erstellt.  
Öffne diese Datei und passe die Texte an, um sie ins Deutsche zu übersetzen, z.B.:</text>
      <sha1>shg6sfrvzcskjpsr6yk3u0ap4i6o13g</sha1>
    </revision>
    <revision>
      <id>582</id>
      <parentid>581</parentid>
      <timestamp>2025-07-02T13:57:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>582</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3908" sha1="pobp7x3tc2jo80jzod9p86d16rhdz9f" xml:space="preserve">Um ein neues News-Projekt mit ASP.NET Core MVC und individueller Authentifizierung zu erstellen, führe folgenden Befehl in der Kommandozeile aus:
&lt;pre&gt;
dotnet new mvc --auth Individual -n News
&lt;/pre&gt;

Dadurch wird ein neues ASP.NET Core MVC-Projekt mit individueller Benutzer-Authentifizierung im Ordner `News` erstellt.  
Wechsle anschließend in das Projektverzeichnis:

&lt;pre&gt;
cd News
code .
&lt;/pre&gt;

Jetzt müssen wir eine Datenbank einrichten:  
&lt;pre&gt;
&lt;!-- Installiere das Entity Framework Core CLI-Tool --&gt;
dotnet tool install --global dotnet-ef
&lt;/pre&gt;

Nun erstellen wir die SQLite-Datenbank und führen die Migrationen aus:

&lt;pre&gt;
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet ef database update
&lt;/pre&gt;

Dadurch wird die SQLite-Datenbank entsprechend der aktuellen Migrationen erstellt.

Jetzt installieren wir das Tool `dotnet aspnet-codegenerator`, das für die Gerüstgenerierung (Scaffolding) benötigt wird:

&lt;pre&gt;
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
&lt;/pre&gt;

Diese Tools werden benötigt, um automatisch Code für Controller, Views und andere Komponenten zu generieren. Das erleichtert die Entwicklung und spart Zeit, besonders wenn du die Benutzeroberfläche (z.B. Formulare für die Benutzerverwaltung) anpassen oder übersetzen möchtest.
Um die Login-Seite für die Benutzeranmeldung zu generieren und anschließend ins Deutsche zu übersetzen, führe folgenden Befehl aus:

&lt;pre&gt;
dotnet aspnet-codegenerator identity -dc ApplicationDbContext --files "Account.Login"
&lt;/pre&gt;

Dadurch wird die Datei `Login.cshtml` im Verzeichnis `Areas/Identity/Pages/Account` erstellt.  
Öffne diese Datei und passe die Texte an, um sie ins Deutsche zu übersetzen, z.B.:

&lt;pre&gt;
dotnet aspnet-codegenerator identity -dc ApplicationDbContext --files "Account.Register"
&lt;/pre&gt;

Dadurch wird die Datei `Register.cshtml` im Verzeichnis `Areas/Identity/Pages/Account` erstellt.  
Öffne diese Datei und passe die Texte an, um sie ins Deutsche zu übersetzen, z.B.:

Gehe zu Views/Shared/_Layout.cshtml und Views/Shared/_LoginPartial.cshtml, um diese ins Deutsche zu übersetzen.

== Modell für News-Artikel erstellen ==

Um ein Modell für News-Artikel zu erstellen, füge im Projektordner `Models` eine neue Datei namens `Artikel.cs` hinzu mit folgendem Inhalt:
&lt;pre&gt;
using System.ComponentModel.DataAnnotations;

namespace News.Models
{
    public class Artikel
    {
        public int Id { get; set; }
        [Required(ErrorMessage = "Der Titel ist erforderlich.")]
        [StringLength(200, ErrorMessage = "Der Titel darf maximal 200 Zeichen lang sein.")]
        [RegularExpression(@"^(?!.*(&lt;|&gt;|script|iframe|object|embed|form|input|button|link|style|svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", ErrorMessage = "Der Titel darf keinen HTML-, JavaScript- oder SQL-Code enthalten.")]
        public string Titel { get; set; }

        [Required(ErrorMessage = "Der Inhalt ist erforderlich.")]
        [DataType(DataType.MultilineText)]
        [RegularExpression(@"^(?!.*(&lt;script|&lt;iframe|&lt;object|&lt;embed|&lt;form|&lt;input|&lt;button|&lt;link|&lt;style|&lt;svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", 
            ErrorMessage = "Der Inhalt darf keinen JavaScript-Code, keine SQL-Befehle und keine gefährlichen HTML-Tags enthalten.")]
        public string Inhalt { get; set; }

        [DataType(DataType.DateTime)]
        public DateTime VeröffentlichtAm { get; set; }

        [StringLength(100, ErrorMessage = "Der Autor darf maximal 100 Zeichen lang sein.")]
        [RegularExpression(@"^(?!.*(&lt;|&gt;|script|iframe|object|embed|form|input|button|link|style|svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", ErrorMessage = "Der Autor darf keinen HTML-, JavaScript- oder SQL-Code enthalten.")]
        public string Autor { get; set; }
    }
}

&lt;/pre&gt;</text>
      <sha1>pobp7x3tc2jo80jzod9p86d16rhdz9f</sha1>
    </revision>
    <revision>
      <id>583</id>
      <parentid>582</parentid>
      <timestamp>2025-07-02T14:05:56Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>583</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4418" sha1="jyvvirbwmu525nbptcvjzl4d4uja27z" xml:space="preserve">Um ein neues News-Projekt mit ASP.NET Core MVC und individueller Authentifizierung zu erstellen, führe folgenden Befehl in der Kommandozeile aus:
&lt;pre&gt;
dotnet new mvc --auth Individual -n News
&lt;/pre&gt;

Dadurch wird ein neues ASP.NET Core MVC-Projekt mit individueller Benutzer-Authentifizierung im Ordner `News` erstellt.  
Wechsle anschließend in das Projektverzeichnis:

&lt;pre&gt;
cd News
code .
&lt;/pre&gt;

Jetzt müssen wir eine Datenbank einrichten:  
&lt;pre&gt;
&lt;!-- Installiere das Entity Framework Core CLI-Tool --&gt;
dotnet tool install --global dotnet-ef
&lt;/pre&gt;

Nun erstellen wir die SQLite-Datenbank und führen die Migrationen aus:

&lt;pre&gt;
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet ef database update
&lt;/pre&gt;

Dadurch wird die SQLite-Datenbank entsprechend der aktuellen Migrationen erstellt.

Jetzt installieren wir das Tool `dotnet aspnet-codegenerator`, das für die Gerüstgenerierung (Scaffolding) benötigt wird:

&lt;pre&gt;
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
&lt;/pre&gt;

Diese Tools werden benötigt, um automatisch Code für Controller, Views und andere Komponenten zu generieren. Das erleichtert die Entwicklung und spart Zeit, besonders wenn du die Benutzeroberfläche (z.B. Formulare für die Benutzerverwaltung) anpassen oder übersetzen möchtest.
Um die Login-Seite für die Benutzeranmeldung zu generieren und anschließend ins Deutsche zu übersetzen, führe folgenden Befehl aus:

&lt;pre&gt;
dotnet aspnet-codegenerator identity -dc ApplicationDbContext --files "Account.Login"
&lt;/pre&gt;

Dadurch wird die Datei `Login.cshtml` im Verzeichnis `Areas/Identity/Pages/Account` erstellt.  
Öffne diese Datei und passe die Texte an, um sie ins Deutsche zu übersetzen, z.B.:

&lt;pre&gt;
dotnet aspnet-codegenerator identity -dc ApplicationDbContext --files "Account.Register"
&lt;/pre&gt;

Dadurch wird die Datei `Register.cshtml` im Verzeichnis `Areas/Identity/Pages/Account` erstellt.  
Öffne diese Datei und passe die Texte an, um sie ins Deutsche zu übersetzen, z.B.:

Gehe zu Views/Shared/_Layout.cshtml und Views/Shared/_LoginPartial.cshtml, um diese ins Deutsche zu übersetzen.

== Modell für News-Artikel erstellen ==

Um ein Modell für News-Artikel zu erstellen, füge im Projektordner `Models` eine neue Datei namens `Artikel.cs` hinzu mit folgendem Inhalt:
&lt;pre&gt;
using System.ComponentModel.DataAnnotations;

namespace News.Models
{
    public class Artikel
    {
        public int Id { get; set; }
        [Required(ErrorMessage = "Der Titel ist erforderlich.")]
        [StringLength(200, ErrorMessage = "Der Titel darf maximal 200 Zeichen lang sein.")]
        [RegularExpression(@"^(?!.*(&lt;|&gt;|script|iframe|object|embed|form|input|button|link|style|svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", ErrorMessage = "Der Titel darf keinen HTML-, JavaScript- oder SQL-Code enthalten.")]
        public string Titel { get; set; }

        [Required(ErrorMessage = "Der Inhalt ist erforderlich.")]
        [DataType(DataType.MultilineText)]
        [RegularExpression(@"^(?!.*(&lt;script|&lt;iframe|&lt;object|&lt;embed|&lt;form|&lt;input|&lt;button|&lt;link|&lt;style|&lt;svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", 
            ErrorMessage = "Der Inhalt darf keinen JavaScript-Code, keine SQL-Befehle und keine gefährlichen HTML-Tags enthalten.")]
        public string Inhalt { get; set; }

        [DataType(DataType.DateTime)]
        public DateTime VeröffentlichtAm { get; set; }

        [StringLength(100, ErrorMessage = "Der Autor darf maximal 100 Zeichen lang sein.")]
        [RegularExpression(@"^(?!.*(&lt;|&gt;|script|iframe|object|embed|form|input|button|link|style|svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", ErrorMessage = "Der Autor darf keinen HTML-, JavaScript- oder SQL-Code enthalten.")]
        public string Autor { get; set; }
    }
}

&lt;/pre&gt;

==Ergänze auf Data/ApplicationDbContext.cs ergänze==
&lt;pre&gt;
using News.Models;

public DbSet&lt;Artikel&gt; Artikel { get; set; }

&lt;/pre&gt;


&lt;pre&gt;

using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using News.Models;
namespace News.Data;

public class ApplicationDbContext : IdentityDbContext
{
    public ApplicationDbContext(DbContextOptions&lt;ApplicationDbContext&gt; options)
        : base(options)
    {
    }

    public DbSet&lt;Artikel&gt; Artikel { get; set; }
}


&lt;/pre&gt;</text>
      <sha1>jyvvirbwmu525nbptcvjzl4d4uja27z</sha1>
    </revision>
    <revision>
      <id>584</id>
      <parentid>583</parentid>
      <timestamp>2025-07-02T14:42:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>584</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5400" sha1="glie7c6da3gco2kq9238c9u1hjpkgi0" xml:space="preserve">Um ein neues News-Projekt mit ASP.NET Core MVC und individueller Authentifizierung zu erstellen, führe folgenden Befehl in der Kommandozeile aus:
&lt;pre&gt;
dotnet new mvc --auth Individual -n News
&lt;/pre&gt;

Dadurch wird ein neues ASP.NET Core MVC-Projekt mit individueller Benutzer-Authentifizierung im Ordner `News` erstellt.  
Wechsle anschließend in das Projektverzeichnis:

&lt;pre&gt;
cd News
code .
&lt;/pre&gt;

Jetzt müssen wir eine Datenbank einrichten:  
&lt;pre&gt;
&lt;!-- Installiere das Entity Framework Core CLI-Tool --&gt;
dotnet tool install --global dotnet-ef
&lt;/pre&gt;

Nun erstellen wir die SQLite-Datenbank und führen die Migrationen aus:

&lt;pre&gt;
dotnet add package Microsoft.EntityFrameworkCore.Sqlite
dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet ef database update
&lt;/pre&gt;

Dadurch wird die SQLite-Datenbank entsprechend der aktuellen Migrationen erstellt.

Jetzt installieren wir das Tool `dotnet aspnet-codegenerator`, das für die Gerüstgenerierung (Scaffolding) benötigt wird:

&lt;pre&gt;
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet add package Microsoft.VisualStudio.Web.CodeGeneration.Design
&lt;/pre&gt;

Diese Tools werden benötigt, um automatisch Code für Controller, Views und andere Komponenten zu generieren. Das erleichtert die Entwicklung und spart Zeit, besonders wenn du die Benutzeroberfläche (z.B. Formulare für die Benutzerverwaltung) anpassen oder übersetzen möchtest.
Um die Login-Seite für die Benutzeranmeldung zu generieren und anschließend ins Deutsche zu übersetzen, führe folgenden Befehl aus:

&lt;pre&gt;
dotnet aspnet-codegenerator identity -dc ApplicationDbContext --files "Account.Login"
&lt;/pre&gt;

Dadurch wird die Datei `Login.cshtml` im Verzeichnis `Areas/Identity/Pages/Account` erstellt.  
Öffne diese Datei und passe die Texte an, um sie ins Deutsche zu übersetzen, z.B.:

&lt;pre&gt;
dotnet aspnet-codegenerator identity -dc ApplicationDbContext --files "Account.Register"
&lt;/pre&gt;

Dadurch wird die Datei `Register.cshtml` im Verzeichnis `Areas/Identity/Pages/Account` erstellt.  
Öffne diese Datei und passe die Texte an, um sie ins Deutsche zu übersetzen, z.B.:

Gehe zu Views/Shared/_Layout.cshtml und Views/Shared/_LoginPartial.cshtml, um diese ins Deutsche zu übersetzen.

== Modell für News-Artikel erstellen ==

Um ein Modell für News-Artikel zu erstellen, füge im Projektordner `Models` eine neue Datei namens `Artikel.cs` hinzu mit folgendem Inhalt:
&lt;pre&gt;
using System.ComponentModel.DataAnnotations;

namespace News.Models
{
    public class Artikel
    {
        public int Id { get; set; }
        [Required(ErrorMessage = "Der Titel ist erforderlich.")]
        [StringLength(200, ErrorMessage = "Der Titel darf maximal 200 Zeichen lang sein.")]
        [RegularExpression(@"^(?!.*(&lt;|&gt;|script|iframe|object|embed|form|input|button|link|style|svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", ErrorMessage = "Der Titel darf keinen HTML-, JavaScript- oder SQL-Code enthalten.")]
        public string Titel { get; set; }

        [Required(ErrorMessage = "Der Inhalt ist erforderlich.")]
        [DataType(DataType.MultilineText)]
        [RegularExpression(@"^(?!.*(&lt;script|&lt;iframe|&lt;object|&lt;embed|&lt;form|&lt;input|&lt;button|&lt;link|&lt;style|&lt;svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", 
            ErrorMessage = "Der Inhalt darf keinen JavaScript-Code, keine SQL-Befehle und keine gefährlichen HTML-Tags enthalten.")]
        public string Inhalt { get; set; }

        [DataType(DataType.DateTime)]
        public DateTime VeröffentlichtAm { get; set; }

        [StringLength(100, ErrorMessage = "Der Autor darf maximal 100 Zeichen lang sein.")]
        [RegularExpression(@"^(?!.*(&lt;|&gt;|script|iframe|object|embed|form|input|button|link|style|svg|on\w+=|javascript:|data:|SELECT |INSERT |UPDATE |DELETE )).*$", ErrorMessage = "Der Autor darf keinen HTML-, JavaScript- oder SQL-Code enthalten.")]
        public string Autor { get; set; }
    }
}

&lt;/pre&gt;

==Ergänze auf Data/ApplicationDbContext.cs ergänze==
&lt;pre&gt;
using News.Models;

public DbSet&lt;Artikel&gt; Artikel { get; set; }

&lt;/pre&gt;


&lt;pre&gt;

using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using News.Models;
namespace News.Data;

public class ApplicationDbContext : IdentityDbContext
{
    public ApplicationDbContext(DbContextOptions&lt;ApplicationDbContext&gt; options)
        : base(options)
    {
    }

    public DbSet&lt;Artikel&gt; Artikel { get; set; }
}


&lt;/pre&gt;

==Jetzt müssen wir folgende Migrations-Befehle ausführen==
&lt;pre&gt;
dotnet ef migrations add ArtikelErstellen
dotnet ef database update
&lt;/pre&gt;

==Grud Operations==
Um CRUD-Operationen für das Modell `Artikel` zu ermöglichen, generiere einen Controller und die zugehörigen Views mit Scaffolding:

&lt;pre&gt;
dotnet aspnet-codegenerator controller -name ArtikelController -m Artikel -dc ApplicationDbContext --relativeFolderPath Controllers --useDefaultLayout --referenceScriptLibraries
&lt;/pre&gt;

Dadurch werden der Controller `ArtikelController` im Ordner `Controllers` und die Views im Ordner `Views/Artikel` erstellt.

Jetzt kannst du im Browser unter `/Artikel` die Übersicht, Details, Erstellen-, Bearbeiten- und Löschen-Seiten für News-Artikel aufrufen und verwenden.

Passe die generierten Views (`Views/Artikel/*.cshtml`) an, um die Texte ins Deutsche zu übersetzen und das Layout nach deinen Wünschen zu gestalten.</text>
      <sha1>glie7c6da3gco2kq9238c9u1hjpkgi0</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Lernplan für Asp net Core nach einzelnen Schritten</title>
    <ns>3002</ns>
    <id>167</id>
    <revision>
      <id>586</id>
      <timestamp>2025-07-03T19:20:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>586</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1603" sha1="e0zpot8ox3n44zmr131ebp142xun8z7" xml:space="preserve">= Lernplan für ASP.NET Core nach einzelnen Schritten =

== 1. Einführung in ASP.NET Core ==
* Was ist ASP.NET Core?
* Unterschiede zu klassischem ASP.NET
* Installation von .NET SDK und Visual Studio Code/Visual Studio

== 2. Grundlagen von C# auffrischen ==
* Datentypen, Variablen, Kontrollstrukturen
* Objektorientierte Programmierung (Klassen, Vererbung, Interfaces)

== 3. Erstes ASP.NET Core Projekt ==
* Neues Projekt erstellen (Webanwendung)
* Projektstruktur verstehen (Program.cs, Startup.cs, wwwroot, etc.)
* Starten und Testen der Anwendung

== 4. MVC-Architektur verstehen ==
* Model-View-Controller Prinzip
* Routing und Controller
* Views mit Razor

== 5. Arbeiten mit Datenbanken ==
* Entity Framework Core Grundlagen
* Migrationen und Datenbankanbindung
* CRUD-Operationen (Create, Read, Update, Delete)

== 6. Abhängigkeiten und Services ==
* Dependency Injection in ASP.NET Core
* Eigene Services erstellen und verwenden

== 7. Authentifizierung und Autorisierung ==
* Benutzerverwaltung mit Identity
* Rollen und Rechte

== 8. Web API mit ASP.NET Core ==
* REST-API erstellen
* JSON-Serialisierung
* Swagger/OpenAPI Dokumentation

== 9. Fehlerbehandlung und Logging ==
* Exception Handling
* Logging mit integrierten Tools

== 10. Deployment und Hosting ==
* Veröffentlichung auf IIS, Azure oder Linux
* Konfiguration für Produktion

== Weiterführende Themen ==
* SignalR für Echtzeitkommunikation
* Blazor für interaktive Webanwendungen
* Unit Testing und Testautomatisierung

'''Tipp:''' Zu jedem Schritt kleine Projekte oder Übungen umsetzen, um das Gelernte zu festigen.</text>
      <sha1>e0zpot8ox3n44zmr131ebp142xun8z7</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Lernplan für Jakarta EE nach einzelnen Schritten</title>
    <ns>3002</ns>
    <id>168</id>
    <revision>
      <id>588</id>
      <timestamp>2025-07-03T20:21:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>588</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1403" sha1="qp6yvv1njugfaq9mr81qwy332o4t3qt" xml:space="preserve">= Lernplan für Jakarta EE nach einzelnen Schritten =

== 1. Einführung in Jakarta EE ==
* Überblick über Jakarta EE und seine Geschichte
* Unterschiede zu Java EE
* Installation und Einrichtung einer Entwicklungsumgebung (z.B. Eclipse, IntelliJ IDEA)

== 2. Grundlagen von Servlets und JSP ==
* Was sind Servlets?
* Einführung in JSP (JavaServer Pages)
* Einfache Webanwendung erstellen

== 3. Jakarta EE Komponenten ==
* Überblick über wichtige Spezifikationen (z.B. CDI, JPA, JAX-RS, EJB)
* Lebenszyklus und Einsatzgebiete

== 4. Persistenz mit JPA ==
* Einführung in die Java Persistence API (JPA)
* Entity-Klassen und Datenbankzugriff
* CRUD-Operationen

== 5. Dependency Injection mit CDI ==
* Was ist Contexts and Dependency Injection (CDI)?
* Annotations und Scopes
* Praxisbeispiele

== 6. RESTful Webservices mit JAX-RS ==
* Grundlagen von REST
* Erstellen eines einfachen REST-Services
* JSON-Verarbeitung

== 7. Sicherheit in Jakarta EE ==
* Authentifizierung und Autorisierung
* Sicherheitsmechanismen in Jakarta EE

== 8. Testen von Jakarta EE Anwendungen ==
* Unit-Tests und Integrationstests
* Tools und Frameworks (z.B. Arquillian, JUnit)

== 9. Deployment und Betrieb ==
* Deployment auf einem Jakarta EE Server (z.B. Payara, WildFly)
* Konfiguration und Monitoring

== 10. Weiterführende Themen ==
* MicroProfile und Cloud-Native Ansätze
* Migration von Java EE zu Jakarta EE</text>
      <sha1>qp6yvv1njugfaq9mr81qwy332o4t3qt</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Lernplan für Spring Boot 3 und Spring Framework 6</title>
    <ns>3002</ns>
    <id>169</id>
    <revision>
      <id>590</id>
      <timestamp>2025-07-03T20:34:07Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>590</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1356" sha1="ga6n5rhxwgsknvwzse3tsorfv9dizdm" xml:space="preserve">= Lernplan für Spring Boot 3 und Spring Framework 6 =

Hier findest du einen strukturierten Lernplan, um Spring Boot 3 und das Spring Framework 6 zu erlernen.

== 1. Grundlagen von Spring und Spring Boot ==
* Einführung in das Spring Framework
* Unterschiede zwischen Spring und Spring Boot
* Einrichtung einer Entwicklungsumgebung

== 2. Spring Boot Projekte erstellen ==
* Erstes Spring Boot Projekt mit Spring Initializr
* Projektstruktur und wichtige Dateien

== 3. Dependency Injection und Konfiguration ==
* Komponenten, Beans und Dependency Injection
* Konfiguration mit application.properties/yaml

== 4. Webentwicklung mit Spring Boot ==
* REST-Controller erstellen
* Request Mapping und Response Handling

== 5. Datenzugriff mit Spring Data JPA ==
* Einführung in JPA und Hibernate
* Repository Pattern und CRUD-Operationen

== 6. Sicherheit mit Spring Security ==
* Grundlagen der Authentifizierung und Autorisierung
* Einfache Security-Konfiguration

== 7. Testing in Spring Boot ==
* Unit- und Integrationstests
* Testen von REST-APIs

== 8. Weiterführende Themen ==
* Microservices mit Spring Boot
* Spring Cloud Grundlagen

== Ressourcen ==
* [https://spring.io/guides Offizielle Spring Guides]
* [https://docs.spring.io/spring-boot/docs/current/reference/html/ Spring Boot Dokumentation]
* [https://www.baeldung.com/ Baeldung Tutorials]</text>
      <sha1>ga6n5rhxwgsknvwzse3tsorfv9dizdm</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Lernplan für Drupal 11 einzelnen Schritten</title>
    <ns>3002</ns>
    <id>170</id>
    <revision>
      <id>592</id>
      <timestamp>2025-07-04T03:53:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>592</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="880" sha1="jyipawwlghb6qg7h5osgj0l1tu48d9g" xml:space="preserve">= Lernplan für Drupal 11 in einzelnen Schritten =

== 1. Einführung in Drupal 11 ==
* Was ist Drupal?
* Unterschiede zu früheren Versionen
* Systemanforderungen und Installation

== 2. Erste Schritte ==
* Backend-Oberfläche kennenlernen
* Benutzer und Berechtigungen verwalten
* Grundlegende Konfiguration

== 3. Inhalte erstellen und verwalten ==
* Inhaltstypen und Felder
* Taxonomien und Kategorien
* Medienverwaltung

== 4. Layout und Design ==
* Themes installieren und anpassen
* Layout Builder verwenden

== 5. Module und Erweiterungen ==
* Module installieren und konfigurieren
* Wichtige Module für den Einstieg

== 6. Sicherheit und Updates ==
* Benutzerrechte und Rollen
* Sicherheitsupdates durchführen

== 7. Praxisprojekt ==
* Beispielprojekt Schritt für Schritt umsetzen

== 8. Weiterführende Ressourcen ==
* Offizielle Dokumentation
* Community und Support</text>
      <sha1>jyipawwlghb6qg7h5osgj0l1tu48d9g</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Lernplan für Moodle 5 einzelnen Schritten</title>
    <ns>3002</ns>
    <id>171</id>
    <revision>
      <id>593</id>
      <timestamp>2025-07-04T04:08:46Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>593</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="695" sha1="lvka9bp70mer3vogzaa95w9z1qiwloi" xml:space="preserve">= Lernplan für Moodle 5 in einzelnen Schritten =

== 1. Kurs anlegen ==
Erstellen Sie einen neuen Kurs in Moodle und legen Sie die grundlegenden Einstellungen fest.

== 2. Themen oder Wochenstruktur wählen ==
Wählen Sie die passende Kursstruktur (Themen- oder Wochenformat) für Ihren Kurs.

== 3. Materialien und Aktivitäten hinzufügen ==
Fügen Sie Lernmaterialien (Dateien, Seiten, Links) und Aktivitäten (Aufgaben, Tests, Foren) hinzu.

== 4. Teilnehmer einschreiben ==
Schreiben Sie die Teilnehmer in den Kurs ein oder ermöglichen Sie die Selbsteinschreibung.

== 5. Kurs veröffentlichen und testen ==
Überprüfen Sie den Kurs aus Sicht der Teilnehmer und veröffentlichen Sie ihn.</text>
      <sha1>lvka9bp70mer3vogzaa95w9z1qiwloi</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Lernplan für Mediawiki einzelnen Schritten</title>
    <ns>3002</ns>
    <id>172</id>
    <revision>
      <id>594</id>
      <timestamp>2025-07-04T04:46:39Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>594</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1209" sha1="oou9a6rdxujuevpu6bd9nremczs9pya" xml:space="preserve">= Lernplan für MediaWiki in einzelnen Schritten =

== 1. Einführung in MediaWiki ==
* Was ist MediaWiki?
* Anwendungsbereiche und Beispiele
* Grundlegende Begriffe (Artikel, Seiten, Kategorien, Vorlagen)

== 2. Erste Schritte ==
* Benutzerkonto anlegen
* Anmelden und Benutzerprofil bearbeiten
* Navigation im Wiki

== 3. Seiten erstellen und bearbeiten ==
* Neue Seite anlegen
* Seiten bearbeiten (Bearbeitungsmodus, Vorschau, Änderungen speichern)
* Versionsgeschichte und Änderungen nachverfolgen

== 4. Wikitext-Grundlagen ==
* Überschriften und Absätze
* Listen (nummeriert und unnummeriert)
* Links (interne und externe)
* Formatierungen (fett, kursiv, Zitate)

== 5. Erweiterte Bearbeitung ==
* Tabellen erstellen
* Dateien und Bilder einbinden
* Kategorien und Vorlagen nutzen

== 6. Zusammenarbeit und Kommunikation ==
* Diskussionsseiten verwenden
* Beobachtungsliste und Benachrichtigungen
* Richtlinien und Netiquette

== 7. Weiterführende Themen ==
* Benutzerrechte und Rollen
* Erweiterungen und Anpassungen
* Häufige Fehler und Problemlösungen

== 8. Ressourcen ==
* Offizielle MediaWiki-Dokumentation
* Hilfeseiten im eigenen Wiki
* Community-Foren und Support

[[Kategorie:Lernplan]]</text>
      <sha1>oou9a6rdxujuevpu6bd9nremczs9pya</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Moodle</title>
    <ns>3002</ns>
    <id>173</id>
    <revision>
      <id>596</id>
      <timestamp>2025-07-04T21:22:32Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* CodeRunner * VPL (Virtual Programming Lab)“</comment>
      <origin>596</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="44" sha1="ki8nir7s803um2sd75kf50itntqket1" xml:space="preserve">* CodeRunner
* VPL (Virtual Programming Lab)</text>
      <sha1>ki8nir7s803um2sd75kf50itntqket1</sha1>
    </revision>
    <revision>
      <id>597</id>
      <parentid>596</parentid>
      <timestamp>2025-07-04T21:24:22Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>597</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="58" sha1="rgbap3xf2debsw77gn4aduse4us2ex6" xml:space="preserve">* CodeRunner
* VPL (Virtual Programming Lab)
* Lückentext</text>
      <sha1>rgbap3xf2debsw77gn4aduse4us2ex6</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Asp Net Core</title>
    <ns>3008</ns>
    <id>174</id>
    <revision>
      <id>605</id>
      <timestamp>2025-07-06T20:14:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>605</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2235" sha1="c65rmrdtkj3tqo1z1afxwy7smm696d8" xml:space="preserve">== Migrations löschen in ASP.NET Core ==

=== Begründung für das Löschen von Migrationen in ASP.NET Core ===

Es kann verschiedene Gründe geben, warum man alle Migrationen in einem ASP.NET Core-Projekt löschen möchte:

* '''Fehlerhafte Migrationen:''' Wenn Migrationen fehlerhaft erstellt wurden oder die Datenbankstruktur nicht wie gewünscht abbilden, ist es oft einfacher, alle Migrationen zu löschen und von vorne zu beginnen.
* '''Strukturelle Änderungen:''' Bei grundlegenden Änderungen am Datenmodell (z.B. Umbenennung von Tabellen, Entfernen vieler Entitäten) kann es sinnvoll sein, die Migrationen zurückzusetzen, um eine saubere Ausgangsbasis zu schaffen.
* '''Projekt-Neustart:''' In frühen Entwicklungsphasen, wenn sich das Datenmodell noch häufig ändert, ist das Löschen und Neuerstellen der Migrationen ein gängiger Schritt.
* '''Synchronisation mit der Datenbank:''' Wenn die Datenbank und die Migrationen nicht mehr synchron sind, kann ein Reset helfen, Inkonsistenzen zu beheben.

Beachte, dass beim Löschen der Migrationen alle bisherigen Änderungen verloren gehen. Daher sollte dieser Schritt nur durchgeführt werden, wenn keine produktiven Daten betroffen sind oder ein Backup existiert.


Um alle Migrationen im Ordner '''Migrations''' zu löschen, kannst du das folgende Kommando im Terminal ausführen:

&lt;syntaxhighlight lang="bash"&gt;
rm -rf Migrations
&lt;/syntaxhighlight&gt;

Dadurch wird der gesamte Migrations-Ordner und alle darin enthaltenen Dateien entfernt.

'''Achtung:''' Stelle sicher, dass du ein Backup hast, bevor du diesen Befehl ausführst, da alle Migrationen unwiderruflich gelöscht werden.

Um eine neue Migration mit dem Namen '''InitialCreate''' zu erstellen, verwende folgenden Befehl im Terminal:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;

Dadurch wird eine neue Migration im '''Migrations'''-Ordner angelegt, die die aktuelle Datenbankschema-Änderung beschreibt.

Um die Datenbank auf den neuesten Stand der Migrationen zu bringen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Damit wird die Datenbank entsprechend der aktuellen Migration aktualisiert.</text>
      <sha1>c65rmrdtkj3tqo1z1afxwy7smm696d8</sha1>
    </revision>
    <revision>
      <id>606</id>
      <parentid>605</parentid>
      <timestamp>2025-07-07T09:06:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>606</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3663" sha1="12yo3ui5mb94ofxo4whwbmppwvgehft" xml:space="preserve">== Löschen der Datenbank in PostgreSQL ==
&lt;pre&gt;
sudo -u postgres -i
psql -c "drop database asp;"
&lt;/pre&gt;

== Erstelle neue Datenbank==
&lt;pre&gt;
createdb -E UTF8 -O thorsten asp;
exit;
&lt;/pre&gt;
== ASP.NET Core MVC mit Individual-Authentifizierung installieren ==

Um ein neues ASP.NET Core MVC-Projekt mit Benutzerverwaltung (Individual User Accounts) zu erstellen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet new mvc --auth Individual -o MeinMvcProjekt
cd MeinMvcProjekt
&lt;/syntaxhighlight&gt;

Dadurch wird ein neues MVC-Projekt mit integrierter Benutzerregistrierung, Anmeldung und Rollenverwaltung erstellt.

==PostgreSQL==
Um die benötigten Pakete für die Identitätsverwaltung und die Datenbankanbindung zu installieren, führe folgende Befehle aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL
dotnet add package Microsoft.EntityFrameworkCore.Tools
&lt;/syntaxhighlight&gt;

Das erste Paket integriert die Identitätsverwaltung in Entity Framework Core, das zweite Paket stellt die PostgreSQL-Unterstützung bereit.

=== Migrationen für die Identitätsdatenbank anwenden ===

Führe anschließend die Migrationen aus, um die benötigten Tabellen für die Benutzerverwaltung in der Datenbank zu erstellen:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Jetzt ist die Benutzerregistrierung und -anmeldung im Projekt verfügbar.
== Migrations löschen in ASP.NET Core ==

=== Begründung für das Löschen von Migrationen in ASP.NET Core ===

Es kann verschiedene Gründe geben, warum man alle Migrationen in einem ASP.NET Core-Projekt löschen möchte:

* '''Fehlerhafte Migrationen:''' Wenn Migrationen fehlerhaft erstellt wurden oder die Datenbankstruktur nicht wie gewünscht abbilden, ist es oft einfacher, alle Migrationen zu löschen und von vorne zu beginnen.
* '''Strukturelle Änderungen:''' Bei grundlegenden Änderungen am Datenmodell (z.B. Umbenennung von Tabellen, Entfernen vieler Entitäten) kann es sinnvoll sein, die Migrationen zurückzusetzen, um eine saubere Ausgangsbasis zu schaffen.
* '''Projekt-Neustart:''' In frühen Entwicklungsphasen, wenn sich das Datenmodell noch häufig ändert, ist das Löschen und Neuerstellen der Migrationen ein gängiger Schritt.
* '''Synchronisation mit der Datenbank:''' Wenn die Datenbank und die Migrationen nicht mehr synchron sind, kann ein Reset helfen, Inkonsistenzen zu beheben.

Beachte, dass beim Löschen der Migrationen alle bisherigen Änderungen verloren gehen. Daher sollte dieser Schritt nur durchgeführt werden, wenn keine produktiven Daten betroffen sind oder ein Backup existiert.


Um alle Migrationen im Ordner '''Migrations''' zu löschen, kannst du das folgende Kommando im Terminal ausführen:

&lt;syntaxhighlight lang="bash"&gt;
rm -rf Migrations
&lt;/syntaxhighlight&gt;

Dadurch wird der gesamte Migrations-Ordner und alle darin enthaltenen Dateien entfernt.

'''Achtung:''' Stelle sicher, dass du ein Backup hast, bevor du diesen Befehl ausführst, da alle Migrationen unwiderruflich gelöscht werden.

Um eine neue Migration mit dem Namen '''InitialCreate''' zu erstellen, verwende folgenden Befehl im Terminal:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;

Dadurch wird eine neue Migration im '''Migrations'''-Ordner angelegt, die die aktuelle Datenbankschema-Änderung beschreibt.

Um die Datenbank auf den neuesten Stand der Migrationen zu bringen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Damit wird die Datenbank entsprechend der aktuellen Migration aktualisiert.</text>
      <sha1>12yo3ui5mb94ofxo4whwbmppwvgehft</sha1>
    </revision>
    <revision>
      <id>607</id>
      <parentid>606</parentid>
      <timestamp>2025-07-07T20:44:22Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>607</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5151" sha1="ptbq0svmx57d5yud7qvwx4r3nv34crp" xml:space="preserve">== Löschen der Datenbank in PostgreSQL ==
&lt;pre&gt;
sudo -u postgres -i
psql -c "drop database asp;"
&lt;/pre&gt;

== Erstelle neue Datenbank==
&lt;pre&gt;
createdb -E UTF8 -O thorsten asp;
exit;
&lt;/pre&gt;
== ASP.NET Core MVC mit Individual-Authentifizierung installieren ==

Um ein neues ASP.NET Core MVC-Projekt mit Benutzerverwaltung (Individual User Accounts) zu erstellen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet new mvc --auth Individual -o MeinMvcProjekt
cd MeinMvcProjekt
&lt;/syntaxhighlight&gt;

Dadurch wird ein neues MVC-Projekt mit integrierter Benutzerregistrierung, Anmeldung und Rollenverwaltung erstellt.

==PostgreSQL==
Um die benötigten Pakete für die Identitätsverwaltung und die Datenbankanbindung zu installieren, führe folgende Befehle aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL
dotnet add package Microsoft.EntityFrameworkCore.Tools
&lt;/syntaxhighlight&gt;

Das erste Paket integriert die Identitätsverwaltung in Entity Framework Core, das zweite Paket stellt die PostgreSQL-Unterstützung bereit.

=== Migrationen für die Identitätsdatenbank anwenden ===

Führe anschließend die Migrationen aus, um die benötigten Tabellen für die Benutzerverwaltung in der Datenbank zu erstellen:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Jetzt ist die Benutzerregistrierung und -anmeldung im Projekt verfügbar.
== Migrations löschen in ASP.NET Core ==

=== Begründung für das Löschen von Migrationen in ASP.NET Core ===

Es kann verschiedene Gründe geben, warum man alle Migrationen in einem ASP.NET Core-Projekt löschen möchte:

* '''Fehlerhafte Migrationen:''' Wenn Migrationen fehlerhaft erstellt wurden oder die Datenbankstruktur nicht wie gewünscht abbilden, ist es oft einfacher, alle Migrationen zu löschen und von vorne zu beginnen.
* '''Strukturelle Änderungen:''' Bei grundlegenden Änderungen am Datenmodell (z.B. Umbenennung von Tabellen, Entfernen vieler Entitäten) kann es sinnvoll sein, die Migrationen zurückzusetzen, um eine saubere Ausgangsbasis zu schaffen.
* '''Projekt-Neustart:''' In frühen Entwicklungsphasen, wenn sich das Datenmodell noch häufig ändert, ist das Löschen und Neuerstellen der Migrationen ein gängiger Schritt.
* '''Synchronisation mit der Datenbank:''' Wenn die Datenbank und die Migrationen nicht mehr synchron sind, kann ein Reset helfen, Inkonsistenzen zu beheben.

Beachte, dass beim Löschen der Migrationen alle bisherigen Änderungen verloren gehen. Daher sollte dieser Schritt nur durchgeführt werden, wenn keine produktiven Daten betroffen sind oder ein Backup existiert.


Um alle Migrationen im Ordner '''Migrations''' zu löschen, kannst du das folgende Kommando im Terminal ausführen:

&lt;syntaxhighlight lang="bash"&gt;
rm -rf Migrations
&lt;/syntaxhighlight&gt;

Dadurch wird der gesamte Migrations-Ordner und alle darin enthaltenen Dateien entfernt.

'''Achtung:''' Stelle sicher, dass du ein Backup hast, bevor du diesen Befehl ausführst, da alle Migrationen unwiderruflich gelöscht werden.

Um eine neue Migration mit dem Namen '''InitialCreate''' zu erstellen, verwende folgenden Befehl im Terminal:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;

Dadurch wird eine neue Migration im '''Migrations'''-Ordner angelegt, die die aktuelle Datenbankschema-Änderung beschreibt.

Um die Datenbank auf den neuesten Stand der Migrationen zu bringen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Damit wird die Datenbank entsprechend der aktuellen Migration aktualisiert.
==Seed==
&lt;pre&gt;
// Notfall-Admin-Benutzer anlegen (Seed)
if (builder.Configuration.GetValue&lt;bool&gt;("AdminSeed:Enabled"))
{
    using (var scope = app.Services.CreateScope())
    {
        var userManager = scope.ServiceProvider.GetRequiredService&lt;UserManager&lt;IdentityUser&gt;&gt;();
        // Keine Ausgabe der Zugangsdaten im Log
          var adminEmail = Environment.GetEnvironmentVariable("ADMINSEED_EMAIL"); 
                         
        var adminPassword = Environment.GetEnvironmentVariable("ADMINSEED_PASSWORD"); 
                            
// ..

        var adminUser = await userManager.FindByEmailAsync(adminEmail);
        if (adminUser == null)
        {
            var user = new IdentityUser { UserName = adminEmail, Email = adminEmail, EmailConfirmed = true };
            var result = await userManager.CreateAsync(user, adminPassword);
            if (result.Succeeded)
            {
                Console.WriteLine("Notfall-Admin wurde angelegt.");
            }
            else
            {
                Console.WriteLine("Fehler beim Anlegen des Notfall-Admins:");
                foreach (var error in result.Errors)
                    Console.WriteLine(error.Description);
            }
        }
        else
        {
            Console.WriteLine("Notfall-Admin existiert bereits.");
        }
    }
}
&lt;/pre&gt;

==UmgebungsVariable Nutzen==
&lt;pre&gt;
export ADMINSEED_EMAIL=admin@example.com
export ADMINSEED_PASSWORD=SicheresPasswort123
dotnet run


&lt;/pre&gt;</text>
      <sha1>ptbq0svmx57d5yud7qvwx4r3nv34crp</sha1>
    </revision>
    <revision>
      <id>648</id>
      <parentid>607</parentid>
      <timestamp>2025-07-11T06:59:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Erstelle neue Datenbank */</comment>
      <origin>648</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5208" sha1="gyasmpn8qgrv9ldeodhzk8tnnflkiq4" xml:space="preserve">== Löschen der Datenbank in PostgreSQL ==
&lt;pre&gt;
sudo -u postgres -i
psql -c "drop database asp;"
&lt;/pre&gt;

== Erstelle neue Datenbank==
&lt;pre&gt;
createdb -E UTF8 -O thorsten asp;

GRANT ALL PRIVILEGES ON DATABASE thorsten TO postgres;
exit;
&lt;/pre&gt;

== ASP.NET Core MVC mit Individual-Authentifizierung installieren ==

Um ein neues ASP.NET Core MVC-Projekt mit Benutzerverwaltung (Individual User Accounts) zu erstellen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet new mvc --auth Individual -o MeinMvcProjekt
cd MeinMvcProjekt
&lt;/syntaxhighlight&gt;

Dadurch wird ein neues MVC-Projekt mit integrierter Benutzerregistrierung, Anmeldung und Rollenverwaltung erstellt.

==PostgreSQL==
Um die benötigten Pakete für die Identitätsverwaltung und die Datenbankanbindung zu installieren, führe folgende Befehle aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL
dotnet add package Microsoft.EntityFrameworkCore.Tools
&lt;/syntaxhighlight&gt;

Das erste Paket integriert die Identitätsverwaltung in Entity Framework Core, das zweite Paket stellt die PostgreSQL-Unterstützung bereit.

=== Migrationen für die Identitätsdatenbank anwenden ===

Führe anschließend die Migrationen aus, um die benötigten Tabellen für die Benutzerverwaltung in der Datenbank zu erstellen:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Jetzt ist die Benutzerregistrierung und -anmeldung im Projekt verfügbar.
== Migrations löschen in ASP.NET Core ==

=== Begründung für das Löschen von Migrationen in ASP.NET Core ===

Es kann verschiedene Gründe geben, warum man alle Migrationen in einem ASP.NET Core-Projekt löschen möchte:

* '''Fehlerhafte Migrationen:''' Wenn Migrationen fehlerhaft erstellt wurden oder die Datenbankstruktur nicht wie gewünscht abbilden, ist es oft einfacher, alle Migrationen zu löschen und von vorne zu beginnen.
* '''Strukturelle Änderungen:''' Bei grundlegenden Änderungen am Datenmodell (z.B. Umbenennung von Tabellen, Entfernen vieler Entitäten) kann es sinnvoll sein, die Migrationen zurückzusetzen, um eine saubere Ausgangsbasis zu schaffen.
* '''Projekt-Neustart:''' In frühen Entwicklungsphasen, wenn sich das Datenmodell noch häufig ändert, ist das Löschen und Neuerstellen der Migrationen ein gängiger Schritt.
* '''Synchronisation mit der Datenbank:''' Wenn die Datenbank und die Migrationen nicht mehr synchron sind, kann ein Reset helfen, Inkonsistenzen zu beheben.

Beachte, dass beim Löschen der Migrationen alle bisherigen Änderungen verloren gehen. Daher sollte dieser Schritt nur durchgeführt werden, wenn keine produktiven Daten betroffen sind oder ein Backup existiert.


Um alle Migrationen im Ordner '''Migrations''' zu löschen, kannst du das folgende Kommando im Terminal ausführen:

&lt;syntaxhighlight lang="bash"&gt;
rm -rf Migrations
&lt;/syntaxhighlight&gt;

Dadurch wird der gesamte Migrations-Ordner und alle darin enthaltenen Dateien entfernt.

'''Achtung:''' Stelle sicher, dass du ein Backup hast, bevor du diesen Befehl ausführst, da alle Migrationen unwiderruflich gelöscht werden.

Um eine neue Migration mit dem Namen '''InitialCreate''' zu erstellen, verwende folgenden Befehl im Terminal:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;

Dadurch wird eine neue Migration im '''Migrations'''-Ordner angelegt, die die aktuelle Datenbankschema-Änderung beschreibt.

Um die Datenbank auf den neuesten Stand der Migrationen zu bringen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Damit wird die Datenbank entsprechend der aktuellen Migration aktualisiert.
==Seed==
&lt;pre&gt;
// Notfall-Admin-Benutzer anlegen (Seed)
if (builder.Configuration.GetValue&lt;bool&gt;("AdminSeed:Enabled"))
{
    using (var scope = app.Services.CreateScope())
    {
        var userManager = scope.ServiceProvider.GetRequiredService&lt;UserManager&lt;IdentityUser&gt;&gt;();
        // Keine Ausgabe der Zugangsdaten im Log
          var adminEmail = Environment.GetEnvironmentVariable("ADMINSEED_EMAIL"); 
                         
        var adminPassword = Environment.GetEnvironmentVariable("ADMINSEED_PASSWORD"); 
                            
// ..

        var adminUser = await userManager.FindByEmailAsync(adminEmail);
        if (adminUser == null)
        {
            var user = new IdentityUser { UserName = adminEmail, Email = adminEmail, EmailConfirmed = true };
            var result = await userManager.CreateAsync(user, adminPassword);
            if (result.Succeeded)
            {
                Console.WriteLine("Notfall-Admin wurde angelegt.");
            }
            else
            {
                Console.WriteLine("Fehler beim Anlegen des Notfall-Admins:");
                foreach (var error in result.Errors)
                    Console.WriteLine(error.Description);
            }
        }
        else
        {
            Console.WriteLine("Notfall-Admin existiert bereits.");
        }
    }
}
&lt;/pre&gt;

==UmgebungsVariable Nutzen==
&lt;pre&gt;
export ADMINSEED_EMAIL=admin@example.com
export ADMINSEED_PASSWORD=SicheresPasswort123
dotnet run


&lt;/pre&gt;</text>
      <sha1>gyasmpn8qgrv9ldeodhzk8tnnflkiq4</sha1>
    </revision>
    <revision>
      <id>649</id>
      <parentid>648</parentid>
      <timestamp>2025-07-11T07:01:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>649</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5217" sha1="oyntzrgjscs4xx1hv81jac4omncijy5" xml:space="preserve">== Löschen der Datenbank in PostgreSQL ==
&lt;pre&gt;
sudo -u postgres -i
psql -c "GRANT ALL PRIVILEGES ON DATABASE thorsten TO postgres;"
psql -c "drop database asp;"
&lt;/pre&gt;

== Erstelle neue Datenbank==
&lt;pre&gt;
createdb -E UTF8 -O thorsten asp;
exit;
&lt;/pre&gt;

== ASP.NET Core MVC mit Individual-Authentifizierung installieren ==

Um ein neues ASP.NET Core MVC-Projekt mit Benutzerverwaltung (Individual User Accounts) zu erstellen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet new mvc --auth Individual -o MeinMvcProjekt
cd MeinMvcProjekt
&lt;/syntaxhighlight&gt;

Dadurch wird ein neues MVC-Projekt mit integrierter Benutzerregistrierung, Anmeldung und Rollenverwaltung erstellt.

==PostgreSQL==
Um die benötigten Pakete für die Identitätsverwaltung und die Datenbankanbindung zu installieren, führe folgende Befehle aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL
dotnet add package Microsoft.EntityFrameworkCore.Tools
&lt;/syntaxhighlight&gt;

Das erste Paket integriert die Identitätsverwaltung in Entity Framework Core, das zweite Paket stellt die PostgreSQL-Unterstützung bereit.

=== Migrationen für die Identitätsdatenbank anwenden ===

Führe anschließend die Migrationen aus, um die benötigten Tabellen für die Benutzerverwaltung in der Datenbank zu erstellen:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Jetzt ist die Benutzerregistrierung und -anmeldung im Projekt verfügbar.
== Migrations löschen in ASP.NET Core ==

=== Begründung für das Löschen von Migrationen in ASP.NET Core ===

Es kann verschiedene Gründe geben, warum man alle Migrationen in einem ASP.NET Core-Projekt löschen möchte:

* '''Fehlerhafte Migrationen:''' Wenn Migrationen fehlerhaft erstellt wurden oder die Datenbankstruktur nicht wie gewünscht abbilden, ist es oft einfacher, alle Migrationen zu löschen und von vorne zu beginnen.
* '''Strukturelle Änderungen:''' Bei grundlegenden Änderungen am Datenmodell (z.B. Umbenennung von Tabellen, Entfernen vieler Entitäten) kann es sinnvoll sein, die Migrationen zurückzusetzen, um eine saubere Ausgangsbasis zu schaffen.
* '''Projekt-Neustart:''' In frühen Entwicklungsphasen, wenn sich das Datenmodell noch häufig ändert, ist das Löschen und Neuerstellen der Migrationen ein gängiger Schritt.
* '''Synchronisation mit der Datenbank:''' Wenn die Datenbank und die Migrationen nicht mehr synchron sind, kann ein Reset helfen, Inkonsistenzen zu beheben.

Beachte, dass beim Löschen der Migrationen alle bisherigen Änderungen verloren gehen. Daher sollte dieser Schritt nur durchgeführt werden, wenn keine produktiven Daten betroffen sind oder ein Backup existiert.


Um alle Migrationen im Ordner '''Migrations''' zu löschen, kannst du das folgende Kommando im Terminal ausführen:

&lt;syntaxhighlight lang="bash"&gt;
rm -rf Migrations
&lt;/syntaxhighlight&gt;

Dadurch wird der gesamte Migrations-Ordner und alle darin enthaltenen Dateien entfernt.

'''Achtung:''' Stelle sicher, dass du ein Backup hast, bevor du diesen Befehl ausführst, da alle Migrationen unwiderruflich gelöscht werden.

Um eine neue Migration mit dem Namen '''InitialCreate''' zu erstellen, verwende folgenden Befehl im Terminal:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;

Dadurch wird eine neue Migration im '''Migrations'''-Ordner angelegt, die die aktuelle Datenbankschema-Änderung beschreibt.

Um die Datenbank auf den neuesten Stand der Migrationen zu bringen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Damit wird die Datenbank entsprechend der aktuellen Migration aktualisiert.
==Seed==
&lt;pre&gt;
// Notfall-Admin-Benutzer anlegen (Seed)
if (builder.Configuration.GetValue&lt;bool&gt;("AdminSeed:Enabled"))
{
    using (var scope = app.Services.CreateScope())
    {
        var userManager = scope.ServiceProvider.GetRequiredService&lt;UserManager&lt;IdentityUser&gt;&gt;();
        // Keine Ausgabe der Zugangsdaten im Log
          var adminEmail = Environment.GetEnvironmentVariable("ADMINSEED_EMAIL"); 
                         
        var adminPassword = Environment.GetEnvironmentVariable("ADMINSEED_PASSWORD"); 
                            
// ..

        var adminUser = await userManager.FindByEmailAsync(adminEmail);
        if (adminUser == null)
        {
            var user = new IdentityUser { UserName = adminEmail, Email = adminEmail, EmailConfirmed = true };
            var result = await userManager.CreateAsync(user, adminPassword);
            if (result.Succeeded)
            {
                Console.WriteLine("Notfall-Admin wurde angelegt.");
            }
            else
            {
                Console.WriteLine("Fehler beim Anlegen des Notfall-Admins:");
                foreach (var error in result.Errors)
                    Console.WriteLine(error.Description);
            }
        }
        else
        {
            Console.WriteLine("Notfall-Admin existiert bereits.");
        }
    }
}
&lt;/pre&gt;

==UmgebungsVariable Nutzen==
&lt;pre&gt;
export ADMINSEED_EMAIL=admin@example.com
export ADMINSEED_PASSWORD=SicheresPasswort123
dotnet run


&lt;/pre&gt;</text>
      <sha1>oyntzrgjscs4xx1hv81jac4omncijy5</sha1>
    </revision>
    <revision>
      <id>650</id>
      <parentid>649</parentid>
      <timestamp>2025-07-11T07:02:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>650</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5212" sha1="0cquy4rhe3h66lpzsxwtm1v4ljb5t32" xml:space="preserve">== Löschen der Datenbank in PostgreSQL ==
&lt;pre&gt;
sudo -u postgres -i
psql -c "GRANT ALL PRIVILEGES ON DATABASE asp TO postgres;"
psql -c "drop database asp;"
&lt;/pre&gt;

== Erstelle neue Datenbank==
&lt;pre&gt;
createdb -E UTF8 -O thorsten asp;
exit;
&lt;/pre&gt;

== ASP.NET Core MVC mit Individual-Authentifizierung installieren ==

Um ein neues ASP.NET Core MVC-Projekt mit Benutzerverwaltung (Individual User Accounts) zu erstellen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet new mvc --auth Individual -o MeinMvcProjekt
cd MeinMvcProjekt
&lt;/syntaxhighlight&gt;

Dadurch wird ein neues MVC-Projekt mit integrierter Benutzerregistrierung, Anmeldung und Rollenverwaltung erstellt.

==PostgreSQL==
Um die benötigten Pakete für die Identitätsverwaltung und die Datenbankanbindung zu installieren, führe folgende Befehle aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL
dotnet add package Microsoft.EntityFrameworkCore.Tools
&lt;/syntaxhighlight&gt;

Das erste Paket integriert die Identitätsverwaltung in Entity Framework Core, das zweite Paket stellt die PostgreSQL-Unterstützung bereit.

=== Migrationen für die Identitätsdatenbank anwenden ===

Führe anschließend die Migrationen aus, um die benötigten Tabellen für die Benutzerverwaltung in der Datenbank zu erstellen:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Jetzt ist die Benutzerregistrierung und -anmeldung im Projekt verfügbar.
== Migrations löschen in ASP.NET Core ==

=== Begründung für das Löschen von Migrationen in ASP.NET Core ===

Es kann verschiedene Gründe geben, warum man alle Migrationen in einem ASP.NET Core-Projekt löschen möchte:

* '''Fehlerhafte Migrationen:''' Wenn Migrationen fehlerhaft erstellt wurden oder die Datenbankstruktur nicht wie gewünscht abbilden, ist es oft einfacher, alle Migrationen zu löschen und von vorne zu beginnen.
* '''Strukturelle Änderungen:''' Bei grundlegenden Änderungen am Datenmodell (z.B. Umbenennung von Tabellen, Entfernen vieler Entitäten) kann es sinnvoll sein, die Migrationen zurückzusetzen, um eine saubere Ausgangsbasis zu schaffen.
* '''Projekt-Neustart:''' In frühen Entwicklungsphasen, wenn sich das Datenmodell noch häufig ändert, ist das Löschen und Neuerstellen der Migrationen ein gängiger Schritt.
* '''Synchronisation mit der Datenbank:''' Wenn die Datenbank und die Migrationen nicht mehr synchron sind, kann ein Reset helfen, Inkonsistenzen zu beheben.

Beachte, dass beim Löschen der Migrationen alle bisherigen Änderungen verloren gehen. Daher sollte dieser Schritt nur durchgeführt werden, wenn keine produktiven Daten betroffen sind oder ein Backup existiert.


Um alle Migrationen im Ordner '''Migrations''' zu löschen, kannst du das folgende Kommando im Terminal ausführen:

&lt;syntaxhighlight lang="bash"&gt;
rm -rf Migrations
&lt;/syntaxhighlight&gt;

Dadurch wird der gesamte Migrations-Ordner und alle darin enthaltenen Dateien entfernt.

'''Achtung:''' Stelle sicher, dass du ein Backup hast, bevor du diesen Befehl ausführst, da alle Migrationen unwiderruflich gelöscht werden.

Um eine neue Migration mit dem Namen '''InitialCreate''' zu erstellen, verwende folgenden Befehl im Terminal:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;

Dadurch wird eine neue Migration im '''Migrations'''-Ordner angelegt, die die aktuelle Datenbankschema-Änderung beschreibt.

Um die Datenbank auf den neuesten Stand der Migrationen zu bringen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Damit wird die Datenbank entsprechend der aktuellen Migration aktualisiert.
==Seed==
&lt;pre&gt;
// Notfall-Admin-Benutzer anlegen (Seed)
if (builder.Configuration.GetValue&lt;bool&gt;("AdminSeed:Enabled"))
{
    using (var scope = app.Services.CreateScope())
    {
        var userManager = scope.ServiceProvider.GetRequiredService&lt;UserManager&lt;IdentityUser&gt;&gt;();
        // Keine Ausgabe der Zugangsdaten im Log
          var adminEmail = Environment.GetEnvironmentVariable("ADMINSEED_EMAIL"); 
                         
        var adminPassword = Environment.GetEnvironmentVariable("ADMINSEED_PASSWORD"); 
                            
// ..

        var adminUser = await userManager.FindByEmailAsync(adminEmail);
        if (adminUser == null)
        {
            var user = new IdentityUser { UserName = adminEmail, Email = adminEmail, EmailConfirmed = true };
            var result = await userManager.CreateAsync(user, adminPassword);
            if (result.Succeeded)
            {
                Console.WriteLine("Notfall-Admin wurde angelegt.");
            }
            else
            {
                Console.WriteLine("Fehler beim Anlegen des Notfall-Admins:");
                foreach (var error in result.Errors)
                    Console.WriteLine(error.Description);
            }
        }
        else
        {
            Console.WriteLine("Notfall-Admin existiert bereits.");
        }
    }
}
&lt;/pre&gt;

==UmgebungsVariable Nutzen==
&lt;pre&gt;
export ADMINSEED_EMAIL=admin@example.com
export ADMINSEED_PASSWORD=SicheresPasswort123
dotnet run


&lt;/pre&gt;</text>
      <sha1>0cquy4rhe3h66lpzsxwtm1v4ljb5t32</sha1>
    </revision>
    <revision>
      <id>651</id>
      <parentid>650</parentid>
      <timestamp>2025-07-11T07:08:22Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Löschen der Datenbank in PostgreSQL */</comment>
      <origin>651</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5251" sha1="7h94d7shw77wtbhv89rqlvx2dvft3vd" xml:space="preserve">== Löschen der Datenbank in PostgreSQL ==
&lt;pre&gt;
sudo -u postgres -i
psql -c "GRANT ALL PRIVILEGES ON DATABASE asp TO postgres;"
exit
sudo systemctl restart postgresql
psql -c "drop database asp;"
&lt;/pre&gt;

== Erstelle neue Datenbank==
&lt;pre&gt;
createdb -E UTF8 -O thorsten asp;
exit;
&lt;/pre&gt;

== ASP.NET Core MVC mit Individual-Authentifizierung installieren ==

Um ein neues ASP.NET Core MVC-Projekt mit Benutzerverwaltung (Individual User Accounts) zu erstellen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet new mvc --auth Individual -o MeinMvcProjekt
cd MeinMvcProjekt
&lt;/syntaxhighlight&gt;

Dadurch wird ein neues MVC-Projekt mit integrierter Benutzerregistrierung, Anmeldung und Rollenverwaltung erstellt.

==PostgreSQL==
Um die benötigten Pakete für die Identitätsverwaltung und die Datenbankanbindung zu installieren, führe folgende Befehle aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL
dotnet add package Microsoft.EntityFrameworkCore.Tools
&lt;/syntaxhighlight&gt;

Das erste Paket integriert die Identitätsverwaltung in Entity Framework Core, das zweite Paket stellt die PostgreSQL-Unterstützung bereit.

=== Migrationen für die Identitätsdatenbank anwenden ===

Führe anschließend die Migrationen aus, um die benötigten Tabellen für die Benutzerverwaltung in der Datenbank zu erstellen:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Jetzt ist die Benutzerregistrierung und -anmeldung im Projekt verfügbar.
== Migrations löschen in ASP.NET Core ==

=== Begründung für das Löschen von Migrationen in ASP.NET Core ===

Es kann verschiedene Gründe geben, warum man alle Migrationen in einem ASP.NET Core-Projekt löschen möchte:

* '''Fehlerhafte Migrationen:''' Wenn Migrationen fehlerhaft erstellt wurden oder die Datenbankstruktur nicht wie gewünscht abbilden, ist es oft einfacher, alle Migrationen zu löschen und von vorne zu beginnen.
* '''Strukturelle Änderungen:''' Bei grundlegenden Änderungen am Datenmodell (z.B. Umbenennung von Tabellen, Entfernen vieler Entitäten) kann es sinnvoll sein, die Migrationen zurückzusetzen, um eine saubere Ausgangsbasis zu schaffen.
* '''Projekt-Neustart:''' In frühen Entwicklungsphasen, wenn sich das Datenmodell noch häufig ändert, ist das Löschen und Neuerstellen der Migrationen ein gängiger Schritt.
* '''Synchronisation mit der Datenbank:''' Wenn die Datenbank und die Migrationen nicht mehr synchron sind, kann ein Reset helfen, Inkonsistenzen zu beheben.

Beachte, dass beim Löschen der Migrationen alle bisherigen Änderungen verloren gehen. Daher sollte dieser Schritt nur durchgeführt werden, wenn keine produktiven Daten betroffen sind oder ein Backup existiert.


Um alle Migrationen im Ordner '''Migrations''' zu löschen, kannst du das folgende Kommando im Terminal ausführen:

&lt;syntaxhighlight lang="bash"&gt;
rm -rf Migrations
&lt;/syntaxhighlight&gt;

Dadurch wird der gesamte Migrations-Ordner und alle darin enthaltenen Dateien entfernt.

'''Achtung:''' Stelle sicher, dass du ein Backup hast, bevor du diesen Befehl ausführst, da alle Migrationen unwiderruflich gelöscht werden.

Um eine neue Migration mit dem Namen '''InitialCreate''' zu erstellen, verwende folgenden Befehl im Terminal:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;

Dadurch wird eine neue Migration im '''Migrations'''-Ordner angelegt, die die aktuelle Datenbankschema-Änderung beschreibt.

Um die Datenbank auf den neuesten Stand der Migrationen zu bringen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Damit wird die Datenbank entsprechend der aktuellen Migration aktualisiert.
==Seed==
&lt;pre&gt;
// Notfall-Admin-Benutzer anlegen (Seed)
if (builder.Configuration.GetValue&lt;bool&gt;("AdminSeed:Enabled"))
{
    using (var scope = app.Services.CreateScope())
    {
        var userManager = scope.ServiceProvider.GetRequiredService&lt;UserManager&lt;IdentityUser&gt;&gt;();
        // Keine Ausgabe der Zugangsdaten im Log
          var adminEmail = Environment.GetEnvironmentVariable("ADMINSEED_EMAIL"); 
                         
        var adminPassword = Environment.GetEnvironmentVariable("ADMINSEED_PASSWORD"); 
                            
// ..

        var adminUser = await userManager.FindByEmailAsync(adminEmail);
        if (adminUser == null)
        {
            var user = new IdentityUser { UserName = adminEmail, Email = adminEmail, EmailConfirmed = true };
            var result = await userManager.CreateAsync(user, adminPassword);
            if (result.Succeeded)
            {
                Console.WriteLine("Notfall-Admin wurde angelegt.");
            }
            else
            {
                Console.WriteLine("Fehler beim Anlegen des Notfall-Admins:");
                foreach (var error in result.Errors)
                    Console.WriteLine(error.Description);
            }
        }
        else
        {
            Console.WriteLine("Notfall-Admin existiert bereits.");
        }
    }
}
&lt;/pre&gt;

==UmgebungsVariable Nutzen==
&lt;pre&gt;
export ADMINSEED_EMAIL=admin@example.com
export ADMINSEED_PASSWORD=SicheresPasswort123
dotnet run


&lt;/pre&gt;</text>
      <sha1>7h94d7shw77wtbhv89rqlvx2dvft3vd</sha1>
    </revision>
    <revision>
      <id>652</id>
      <parentid>651</parentid>
      <timestamp>2025-07-11T07:08:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Löschen der Datenbank in PostgreSQL */</comment>
      <origin>652</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="5271" sha1="3015sq0ti4q14uy6gy1tweum74uzk6z" xml:space="preserve">== Löschen der Datenbank in PostgreSQL ==
&lt;pre&gt;
sudo -u postgres -i
psql -c "GRANT ALL PRIVILEGES ON DATABASE asp TO postgres;"
exit
sudo systemctl restart postgresql
sudo -u postgres -i
psql -c "drop database asp;"
&lt;/pre&gt;

== Erstelle neue Datenbank==
&lt;pre&gt;
createdb -E UTF8 -O thorsten asp;
exit;
&lt;/pre&gt;

== ASP.NET Core MVC mit Individual-Authentifizierung installieren ==

Um ein neues ASP.NET Core MVC-Projekt mit Benutzerverwaltung (Individual User Accounts) zu erstellen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet new mvc --auth Individual -o MeinMvcProjekt
cd MeinMvcProjekt
&lt;/syntaxhighlight&gt;

Dadurch wird ein neues MVC-Projekt mit integrierter Benutzerregistrierung, Anmeldung und Rollenverwaltung erstellt.

==PostgreSQL==
Um die benötigten Pakete für die Identitätsverwaltung und die Datenbankanbindung zu installieren, führe folgende Befehle aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet add package Npgsql.EntityFrameworkCore.PostgreSQL
dotnet add package Microsoft.EntityFrameworkCore.Tools
&lt;/syntaxhighlight&gt;

Das erste Paket integriert die Identitätsverwaltung in Entity Framework Core, das zweite Paket stellt die PostgreSQL-Unterstützung bereit.

=== Migrationen für die Identitätsdatenbank anwenden ===

Führe anschließend die Migrationen aus, um die benötigten Tabellen für die Benutzerverwaltung in der Datenbank zu erstellen:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Jetzt ist die Benutzerregistrierung und -anmeldung im Projekt verfügbar.
== Migrations löschen in ASP.NET Core ==

=== Begründung für das Löschen von Migrationen in ASP.NET Core ===

Es kann verschiedene Gründe geben, warum man alle Migrationen in einem ASP.NET Core-Projekt löschen möchte:

* '''Fehlerhafte Migrationen:''' Wenn Migrationen fehlerhaft erstellt wurden oder die Datenbankstruktur nicht wie gewünscht abbilden, ist es oft einfacher, alle Migrationen zu löschen und von vorne zu beginnen.
* '''Strukturelle Änderungen:''' Bei grundlegenden Änderungen am Datenmodell (z.B. Umbenennung von Tabellen, Entfernen vieler Entitäten) kann es sinnvoll sein, die Migrationen zurückzusetzen, um eine saubere Ausgangsbasis zu schaffen.
* '''Projekt-Neustart:''' In frühen Entwicklungsphasen, wenn sich das Datenmodell noch häufig ändert, ist das Löschen und Neuerstellen der Migrationen ein gängiger Schritt.
* '''Synchronisation mit der Datenbank:''' Wenn die Datenbank und die Migrationen nicht mehr synchron sind, kann ein Reset helfen, Inkonsistenzen zu beheben.

Beachte, dass beim Löschen der Migrationen alle bisherigen Änderungen verloren gehen. Daher sollte dieser Schritt nur durchgeführt werden, wenn keine produktiven Daten betroffen sind oder ein Backup existiert.


Um alle Migrationen im Ordner '''Migrations''' zu löschen, kannst du das folgende Kommando im Terminal ausführen:

&lt;syntaxhighlight lang="bash"&gt;
rm -rf Migrations
&lt;/syntaxhighlight&gt;

Dadurch wird der gesamte Migrations-Ordner und alle darin enthaltenen Dateien entfernt.

'''Achtung:''' Stelle sicher, dass du ein Backup hast, bevor du diesen Befehl ausführst, da alle Migrationen unwiderruflich gelöscht werden.

Um eine neue Migration mit dem Namen '''InitialCreate''' zu erstellen, verwende folgenden Befehl im Terminal:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef migrations add InitialCreate
&lt;/syntaxhighlight&gt;

Dadurch wird eine neue Migration im '''Migrations'''-Ordner angelegt, die die aktuelle Datenbankschema-Änderung beschreibt.

Um die Datenbank auf den neuesten Stand der Migrationen zu bringen, führe folgenden Befehl im Terminal aus:

&lt;syntaxhighlight lang="bash"&gt;
dotnet ef database update
&lt;/syntaxhighlight&gt;

Damit wird die Datenbank entsprechend der aktuellen Migration aktualisiert.
==Seed==
&lt;pre&gt;
// Notfall-Admin-Benutzer anlegen (Seed)
if (builder.Configuration.GetValue&lt;bool&gt;("AdminSeed:Enabled"))
{
    using (var scope = app.Services.CreateScope())
    {
        var userManager = scope.ServiceProvider.GetRequiredService&lt;UserManager&lt;IdentityUser&gt;&gt;();
        // Keine Ausgabe der Zugangsdaten im Log
          var adminEmail = Environment.GetEnvironmentVariable("ADMINSEED_EMAIL"); 
                         
        var adminPassword = Environment.GetEnvironmentVariable("ADMINSEED_PASSWORD"); 
                            
// ..

        var adminUser = await userManager.FindByEmailAsync(adminEmail);
        if (adminUser == null)
        {
            var user = new IdentityUser { UserName = adminEmail, Email = adminEmail, EmailConfirmed = true };
            var result = await userManager.CreateAsync(user, adminPassword);
            if (result.Succeeded)
            {
                Console.WriteLine("Notfall-Admin wurde angelegt.");
            }
            else
            {
                Console.WriteLine("Fehler beim Anlegen des Notfall-Admins:");
                foreach (var error in result.Errors)
                    Console.WriteLine(error.Description);
            }
        }
        else
        {
            Console.WriteLine("Notfall-Admin existiert bereits.");
        }
    }
}
&lt;/pre&gt;

==UmgebungsVariable Nutzen==
&lt;pre&gt;
export ADMINSEED_EMAIL=admin@example.com
export ADMINSEED_PASSWORD=SicheresPasswort123
dotnet run


&lt;/pre&gt;</text>
      <sha1>3015sq0ti4q14uy6gy1tweum74uzk6z</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Lumi</title>
    <ns>3002</ns>
    <id>175</id>
    <revision>
      <id>612</id>
      <timestamp>2025-07-08T22:13:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>612</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="798" sha1="4jyu1f9f6f9p9u7d523x4gp0y6h23yn" xml:space="preserve">'''Lumi H5P''' ist eine Open-Source-Software, mit der interaktive Lerninhalte im H5P-Format erstellt, bearbeitet und exportiert werden können. H5P steht für "HTML5 Package" und ermöglicht die Erstellung von interaktiven Übungen wie Quiz, Präsentationen, Videos mit eingebetteten Fragen und mehr. Lumi bietet eine benutzerfreundliche Oberfläche, um H5P-Inhalte lokal auf dem eigenen Computer zu erstellen, ohne dass ein Learning Management System (LMS) oder eine Internetverbindung erforderlich ist.

== Funktionen ==
* Erstellung und Bearbeitung von H5P-Inhalten
* Export als HTML, SCORM oder H5P-Datei
* Plattformübergreifend (Windows, macOS, Linux)
* Keine Registrierung notwendig

== Weblinks ==
* [https://lumi.education/de/ Offizielle Lumi-Website]
* [https://h5p.org/ H5P-Projektseite]</text>
      <sha1>4jyu1f9f6f9p9u7d523x4gp0y6h23yn</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Moodle Installieren</title>
    <ns>3000</ns>
    <id>176</id>
    <revision>
      <id>613</id>
      <timestamp>2025-07-09T11:29:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>613</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="213" sha1="k8yyo27vzkwjhax2n0qisr7xd0qfsrm" xml:space="preserve">==Moodle Installieren==
Um Moodle 5 mit Git zu installieren, folge diesen Schritten:

# Voraussetzungen
* Git ist installiert (`git --version`)
* PHP, Webserver (Nginx), und Datenbank (Postgrsql) sind eingerichtet</text>
      <sha1>k8yyo27vzkwjhax2n0qisr7xd0qfsrm</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Moodle</title>
    <ns>3008</ns>
    <id>177</id>
    <revision>
      <id>629</id>
      <timestamp>2025-07-10T09:24:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>629</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="592" sha1="tbyiaoy1lyewic228jcaw5exwp9cyae" xml:space="preserve">==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;</text>
      <sha1>tbyiaoy1lyewic228jcaw5exwp9cyae</sha1>
    </revision>
    <revision>
      <id>630</id>
      <parentid>629</parentid>
      <timestamp>2025-07-10T11:04:16Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>630</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1318" sha1="0pp9fdwl876d053y9c8esl4qm3mnx2c" xml:space="preserve">==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;

&lt;pre&gt;

Moodle Einstellungen für Nginx auf dem lokalen Rechner
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:

server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>0pp9fdwl876d053y9c8esl4qm3mnx2c</sha1>
    </revision>
    <revision>
      <id>631</id>
      <parentid>630</parentid>
      <timestamp>2025-07-10T11:09:19Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>631</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1322" sha1="dusoz17os8m1uqhfhdixz5ybrnihyma" xml:space="preserve">==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;

&lt;pre&gt;

==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:

server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>dusoz17os8m1uqhfhdixz5ybrnihyma</sha1>
    </revision>
    <revision>
      <id>632</id>
      <parentid>631</parentid>
      <timestamp>2025-07-10T11:09:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>632</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1322" sha1="1qh1mimvq5kskkxynrzk1ndyzitlip6" xml:space="preserve">==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>1qh1mimvq5kskkxynrzk1ndyzitlip6</sha1>
    </revision>
    <revision>
      <id>633</id>
      <parentid>632</parentid>
      <timestamp>2025-07-10T11:22:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle Einstellungen für Nginx auf dem lokalen Rechner */</comment>
      <origin>633</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1413" sha1="dkqsiw1zvweia8vytgr5rlqjwuj1brr" xml:space="preserve">==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.1-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>dkqsiw1zvweia8vytgr5rlqjwuj1brr</sha1>
    </revision>
    <revision>
      <id>634</id>
      <parentid>633</parentid>
      <timestamp>2025-07-10T11:23:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle Einstellungen für Nginx auf dem lokalen Rechner */</comment>
      <origin>634</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1413" sha1="3wtmzslr0agx35w4z4cak8sbkfunmyi" xml:space="preserve">==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>3wtmzslr0agx35w4z4cak8sbkfunmyi</sha1>
    </revision>
    <revision>
      <id>635</id>
      <parentid>634</parentid>
      <timestamp>2025-07-10T11:26:43Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>635</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1525" sha1="q5do6wa9h88fqrmci5g01ci82erukjd" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten moodle
 exit&lt;/code&gt;
==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>q5do6wa9h88fqrmci5g01ci82erukjd</sha1>
    </revision>
    <revision>
      <id>636</id>
      <parentid>635</parentid>
      <timestamp>2025-07-10T11:34:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle Einstellungen für Nginx auf dem lokalen Rechner */</comment>
      <origin>636</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1532" sha1="m92rp2sxm9vh65eq4djtq3tnbpu1ycu" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten moodle
 exit&lt;/code&gt;
==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name lernen.localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>m92rp2sxm9vh65eq4djtq3tnbpu1ycu</sha1>
    </revision>
    <revision>
      <id>637</id>
      <parentid>636</parentid>
      <timestamp>2025-07-10T11:59:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>637</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2781" sha1="henbq1lg8epgwc96sxpg7349zwkn0v9" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten moodle
 exit&lt;/code&gt;
==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name lernen.localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

Starte Nginx neu, um die Änderungen zu übernehmen:
&lt;pre&gt;
sudo systemctl restart nginx
&lt;/pre&gt;
==Moodle Konfiguration==
Rufe die Moodle-Installation im Browser auf:
&lt;pre&gt;
http://lernen.localhost
&lt;/pre&gt;
==moodledata-Verzeichnis erstellen und Berechtigungen setzen==
Erstelle das Verzeichnis für moodledata und setze die passenden Rechte:
&lt;pre&gt;
sudo mkdir /var/www/moodledata
sudo chown -R www-data:www-data /var/www/moodledata
sudo chmod 770 -R /var/www/moodledata
&lt;/pre&gt;
Das Verzeichnis &lt;code&gt;moodledata&lt;/code&gt; sollte sich außerhalb des Webroots befinden und für den Webserver-Benutzer (z.B. &lt;code&gt;www-data&lt;/code&gt;) beschreibbar sein.
==PHP-FPM Einstellungen anpassen==
Öffne die Konfigurationsdatei für PHP-FPM, um Einstellungen wie z.B. die maximale Dateigröße für Uploads oder die Speicherlimits zu ändern:
&lt;pre&gt;
sudo nano /etc/php/8.4/fpm/php.ini
&lt;/pre&gt;
Empfohlene Einstellungen für Moodle:
&lt;pre&gt;
; Mit Strg+W (bzw. Ctrl+W) kannst du im Editor nach allen Werten suchen, um die Einstellung schnell zu finden.
max_input_vars = 5000
upload_max_filesize = 100M
post_max_size = 100M
max_execution_time = 300
memory_limit = 512M
&lt;/pre&gt;
Starte PHP-FPM neu, damit die Änderungen wirksam werden:
&lt;pre&gt;
sudo systemctl restart php8.4-fpm
&lt;/pre&gt;</text>
      <sha1>henbq1lg8epgwc96sxpg7349zwkn0v9</sha1>
    </revision>
    <revision>
      <id>638</id>
      <parentid>637</parentid>
      <timestamp>2025-07-10T12:01:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>638</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3474" sha1="j3dpfmc2nle6r5emft982p3ux6pb9pn" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten moodle
 exit&lt;/code&gt;
==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name lernen.localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

Starte Nginx neu, um die Änderungen zu übernehmen:
&lt;pre&gt;
sudo systemctl restart nginx
&lt;/pre&gt;
==PHP und erforderliche Erweiterungen installieren==
==moodledata-Verzeichnis erstellen und Berechtigungen setzen==
Erstelle das Verzeichnis für moodledata und setze die passenden Rechte:
&lt;pre&gt;
sudo mkdir /var/www/moodledata
sudo chown -R www-data:www-data /var/www/moodledata
sudo chmod 770 -R /var/www/moodledata
&lt;/pre&gt;
Das Verzeichnis &lt;code&gt;moodledata&lt;/code&gt; sollte sich außerhalb des Webroots befinden und für den Webserver-Benutzer (z.B. &lt;code&gt;www-data&lt;/code&gt;) beschreibbar sein.
==PHP-FPM Einstellungen anpassen==
Öffne die Konfigurationsdatei für PHP-FPM, um Einstellungen wie z.B. die maximale Dateigröße für Uploads oder die Speicherlimits zu ändern:
&lt;pre&gt;
sudo nano /etc/php/8.4/fpm/php.ini
&lt;/pre&gt;
Empfohlene Einstellungen für Moodle:
&lt;pre&gt;
; Mit Strg+W (bzw. Ctrl+W) kannst du im Editor nach allen Werten suchen, um die Einstellung schnell zu finden.
max_input_vars = 5000
upload_max_filesize = 100M
post_max_size = 100M
max_execution_time = 300
memory_limit = 512M
&lt;/pre&gt;
Starte PHP-FPM neu, damit die Änderungen wirksam werden:
&lt;pre&gt;
sudo systemctl restart php8.4-fpm
&lt;/pre&gt;
==Moodle Installation abschließen==
Nachdem du die Nginx-Konfiguration und die PHP-Einstellungen angepasst hast, kannst du die Moodle-Installation im Browser aufrufen.
Öffne deinen Webbrowser und gehe zu &lt;code&gt;http://lernen.localhost&lt;/code&gt;.
Wenn du die Domain &lt;code&gt;lernen.localhost&lt;/code&gt; noch nicht eingerichtet hast, kannst du dies tun, indem du die Datei &lt;code&gt;/etc/hosts&lt;/code&gt; bearbeitest:
&lt;pre&gt;
lernen.localhost
&lt;/pre&gt;
Nachdem du die oben genannten Schritte durchgeführt hast, kannst du die Moodle-Installation im Browser abschließen
und die erforderlichen Daten eingeben, wie z.B. die Datenbankverbindung, den Administrator-Benutzernamen und das Passwort.
Folge den Anweisungen auf dem Bildschirm, um die Installation abzuschließen.</text>
      <sha1>j3dpfmc2nle6r5emft982p3ux6pb9pn</sha1>
    </revision>
    <revision>
      <id>639</id>
      <parentid>638</parentid>
      <timestamp>2025-07-10T12:25:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle Installation abschließen */</comment>
      <origin>639</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3398" sha1="4sw45kpshi656rte8vim1gks0th3wxx" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten moodle
 exit&lt;/code&gt;
==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name lernen.localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

Starte Nginx neu, um die Änderungen zu übernehmen:
&lt;pre&gt;
sudo systemctl restart nginx
&lt;/pre&gt;
==PHP und erforderliche Erweiterungen installieren==
==moodledata-Verzeichnis erstellen und Berechtigungen setzen==
Erstelle das Verzeichnis für moodledata und setze die passenden Rechte:
&lt;pre&gt;
sudo mkdir /var/www/moodledata
sudo chown -R www-data:www-data /var/www/moodledata
sudo chmod 770 -R /var/www/moodledata
&lt;/pre&gt;
Das Verzeichnis &lt;code&gt;moodledata&lt;/code&gt; sollte sich außerhalb des Webroots befinden und für den Webserver-Benutzer (z.B. &lt;code&gt;www-data&lt;/code&gt;) beschreibbar sein.
==PHP-FPM Einstellungen anpassen==
Öffne die Konfigurationsdatei für PHP-FPM, um Einstellungen wie z.B. die maximale Dateigröße für Uploads oder die Speicherlimits zu ändern:
&lt;pre&gt;
sudo nano /etc/php/8.4/fpm/php.ini
&lt;/pre&gt;
Empfohlene Einstellungen für Moodle:
&lt;pre&gt;
; Mit Strg+W (bzw. Ctrl+W) kannst du im Editor nach allen Werten suchen, um die Einstellung schnell zu finden.
max_input_vars = 5000
upload_max_filesize = 100M
post_max_size = 100M
max_execution_time = 300
memory_limit = 512M
&lt;/pre&gt;
Starte PHP-FPM neu, damit die Änderungen wirksam werden:
&lt;pre&gt;
sudo systemctl restart php8.4-fpm
&lt;/pre&gt;
==Moodle Installation abschließen==
Nachdem du die Nginx-Konfiguration und die PHP-Einstellungen angepasst hast, kannst du die Moodle-Installation im Browser aufrufen.
Öffne deinen Webbrowser und gehe zu &lt;code&gt;http://lernen.localhost&lt;/code&gt;.
Wenn du die Domain &lt;code&gt;lernen.localhost&lt;/code&gt; noch nicht eingerichtet hast,
&lt;pre&gt;
lernen.localhost
&lt;/pre&gt;
Nachdem du die oben genannten Schritte durchgeführt hast, kannst du die Moodle-Installation im Browser abschließen
und die erforderlichen Daten eingeben, wie z.B. die Datenbankverbindung, den Administrator-Benutzernamen und das Passwort.
Folge den Anweisungen auf dem Bildschirm, um die Installation abzuschließen.</text>
      <sha1>4sw45kpshi656rte8vim1gks0th3wxx</sha1>
    </revision>
    <revision>
      <id>640</id>
      <parentid>639</parentid>
      <timestamp>2025-07-10T12:26:13Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle Installation abschließen */</comment>
      <origin>640</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3314" sha1="hqbo3slvmip0ew85fys86v0v638kdju" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten moodle
 exit&lt;/code&gt;
==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name lernen.localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

Starte Nginx neu, um die Änderungen zu übernehmen:
&lt;pre&gt;
sudo systemctl restart nginx
&lt;/pre&gt;
==PHP und erforderliche Erweiterungen installieren==
==moodledata-Verzeichnis erstellen und Berechtigungen setzen==
Erstelle das Verzeichnis für moodledata und setze die passenden Rechte:
&lt;pre&gt;
sudo mkdir /var/www/moodledata
sudo chown -R www-data:www-data /var/www/moodledata
sudo chmod 770 -R /var/www/moodledata
&lt;/pre&gt;
Das Verzeichnis &lt;code&gt;moodledata&lt;/code&gt; sollte sich außerhalb des Webroots befinden und für den Webserver-Benutzer (z.B. &lt;code&gt;www-data&lt;/code&gt;) beschreibbar sein.
==PHP-FPM Einstellungen anpassen==
Öffne die Konfigurationsdatei für PHP-FPM, um Einstellungen wie z.B. die maximale Dateigröße für Uploads oder die Speicherlimits zu ändern:
&lt;pre&gt;
sudo nano /etc/php/8.4/fpm/php.ini
&lt;/pre&gt;
Empfohlene Einstellungen für Moodle:
&lt;pre&gt;
; Mit Strg+W (bzw. Ctrl+W) kannst du im Editor nach allen Werten suchen, um die Einstellung schnell zu finden.
max_input_vars = 5000
upload_max_filesize = 100M
post_max_size = 100M
max_execution_time = 300
memory_limit = 512M
&lt;/pre&gt;
Starte PHP-FPM neu, damit die Änderungen wirksam werden:
&lt;pre&gt;
sudo systemctl restart php8.4-fpm
&lt;/pre&gt;
==Moodle Installation abschließen==
Nachdem du die Nginx-Konfiguration und die PHP-Einstellungen angepasst hast, kannst du die Moodle-Installation im Browser aufrufen.
Öffne deinen Webbrowser und gehe zu &lt;code&gt;http://lernen.localhost&lt;/code&gt;.

lernen.localhost
&lt;/pre&gt;
Nachdem du die oben genannten Schritte durchgeführt hast, kannst du die Moodle-Installation im Browser abschließen
und die erforderlichen Daten eingeben, wie z.B. die Datenbankverbindung, den Administrator-Benutzernamen und das Passwort.
Folge den Anweisungen auf dem Bildschirm, um die Installation abzuschließen.</text>
      <sha1>hqbo3slvmip0ew85fys86v0v638kdju</sha1>
    </revision>
    <revision>
      <id>641</id>
      <parentid>640</parentid>
      <timestamp>2025-07-10T12:26:57Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Moodle Installation abschließen */</comment>
      <origin>641</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3296" sha1="oq2xsjj88oe5f8e4o3j4j69b6kuv05h" xml:space="preserve">== Postgres Datenbank erstellen ==
 &lt;code&gt;sudo -u postgres -i
 createdb -E UTF8 -O thorsten moodle
 exit&lt;/code&gt;
==Moodle IDE==
&lt;pre&gt;
# Wechsle in das Webserver-Verzeichnis
cd /var/www

# Klone das Moodle-Repository von der offiziellen Quelle
git clone git://git.moodle.org/moodle.git                       

# Wechsle in das geklonte moodle-Verzeichnis
cd moodle

# Zeige alle verfügbaren Branches an
git branch -a                                                   

# Erstelle einen lokalen Branch, der dem Remote-Branch MOODLE_500_STABLE folgt
git branch --track MOODLE_500_STABLE origin/MOODLE_500_STABLE     

# Wechsle auf den neuen Branch MOODLE_500_STABLE
git checkout MOODLE_500_STABLE   
&lt;/pre&gt;



==Moodle Einstellungen für Nginx auf dem lokalen Rechner==
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem lokalen Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;
Füge die folgende Konfiguration ein:
&lt;pre&gt;
server {
  listen 80;
  server_name lernen.localhost;
  root /var/www/moodle;

  index index.php index.html index.htm;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

Starte Nginx neu, um die Änderungen zu übernehmen:
&lt;pre&gt;
sudo systemctl restart nginx
&lt;/pre&gt;
==PHP und erforderliche Erweiterungen installieren==
==moodledata-Verzeichnis erstellen und Berechtigungen setzen==
Erstelle das Verzeichnis für moodledata und setze die passenden Rechte:
&lt;pre&gt;
sudo mkdir /var/www/moodledata
sudo chown -R www-data:www-data /var/www/moodledata
sudo chmod 770 -R /var/www/moodledata
&lt;/pre&gt;
Das Verzeichnis &lt;code&gt;moodledata&lt;/code&gt; sollte sich außerhalb des Webroots befinden und für den Webserver-Benutzer (z.B. &lt;code&gt;www-data&lt;/code&gt;) beschreibbar sein.
==PHP-FPM Einstellungen anpassen==
Öffne die Konfigurationsdatei für PHP-FPM, um Einstellungen wie z.B. die maximale Dateigröße für Uploads oder die Speicherlimits zu ändern:
&lt;pre&gt;
sudo nano /etc/php/8.4/fpm/php.ini
&lt;/pre&gt;
Empfohlene Einstellungen für Moodle:
&lt;pre&gt;
; Mit Strg+W (bzw. Ctrl+W) kannst du im Editor nach allen Werten suchen, um die Einstellung schnell zu finden.
max_input_vars = 5000
upload_max_filesize = 100M
post_max_size = 100M
max_execution_time = 300
memory_limit = 512M
&lt;/pre&gt;
Starte PHP-FPM neu, damit die Änderungen wirksam werden:
&lt;pre&gt;
sudo systemctl restart php8.4-fpm
&lt;/pre&gt;
==Moodle Installation abschließen==
Nachdem du die Nginx-Konfiguration und die PHP-Einstellungen angepasst hast, kannst du die Moodle-Installation im Browser aufrufen.
Öffne deinen Webbrowser und gehe zu &lt;code&gt;http://lernen.localhost&lt;/code&gt;.
&lt;/pre&gt;
Nachdem du die oben genannten Schritte durchgeführt hast, kannst du die Moodle-Installation im Browser abschließen
und die erforderlichen Daten eingeben, wie z.B. die Datenbankverbindung, den Administrator-Benutzernamen und das Passwort.
Folge den Anweisungen auf dem Bildschirm, um die Installation abzuschließen.</text>
      <sha1>oq2xsjj88oe5f8e4o3j4j69b6kuv05h</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Moodle</title>
    <ns>3000</ns>
    <id>178</id>
    <revision>
      <id>643</id>
      <timestamp>2025-07-10T14:19:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>643</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="557" sha1="7lz5g8jxihnb8bw5ngjgdh2zgbandsw" xml:space="preserve">== Deployment-Skript: Rsync für Moodle ==
Ersten Mal Installation von Moodle auf einem Produktionsserver.
Der folgende `rsync`-Befehl wird verwendet, um eine Moodle-Installation von einem lokalen Server auf einen Produktionsserver zu übertragen. Dabei werden sensible und unnötige Dateien ausgeschlossen:

&lt;syntaxhighlight lang="bash"&gt;
rsync -avz --delete /var/www/moodle\
    --perms --times \
     --exclude '.git/' \
     --exclude '.gitignore' \
        --exclude 'config.php' \
    /var/www/moodle \
    user@prod:/var/www/moodle

&lt;/syntaxhighlight&gt;</text>
      <sha1>7lz5g8jxihnb8bw5ngjgdh2zgbandsw</sha1>
    </revision>
    <revision>
      <id>644</id>
      <parentid>643</parentid>
      <timestamp>2025-07-10T14:40:11Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>644</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1553" sha1="jf0cln5m46p7f1mv9mlfhj5y9jhj0e9" xml:space="preserve">== Deployment-Skript: Rsync für Moodle ==
Ersten Mal Installation von Moodle auf einem Produktionsserver.
Der folgende `rsync`-Befehl wird verwendet, um eine Moodle-Installation von einem lokalen Server auf einen Produktionsserver zu übertragen. Dabei werden sensible und unnötige Dateien ausgeschlossen:

&lt;syntaxhighlight lang="bash"&gt;
rsync -avz --delete /var/www/moodle\
    --perms --times \
     --exclude '.git/' \
     --exclude '.gitignore' \
        --exclude 'config.php' \
    /var/www/moodle \
    user@prod:/var/www/moodle

&lt;/syntaxhighlight&gt;

== nginx-Konfiguration für Moodle ==
Die folgende Konfiguration für den Nginx-Webserver ist für die Bereitstellung von Moodle
&lt;pre&gt;
sudo certbot certonly --standalone -d ahrensburg.city -d lernen.ahrensburg.city
&lt;/pre&gt;
&lt;pre&gt;


server {
    listen 443 ssl;
    server_name  lernen.ahrensburg.city;
    root /var/www/moodle/moodle;
    index index.php index.html index.htm;
    ssl_certificate /etc/letsencrypt/live/lernen.ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lernen.ahrensburg.city/privkey.pem;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>jf0cln5m46p7f1mv9mlfhj5y9jhj0e9</sha1>
    </revision>
    <revision>
      <id>645</id>
      <parentid>644</parentid>
      <timestamp>2025-07-10T15:14:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>645</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1763" sha1="k605zsrst18v0e1f704hgzshrjix715" xml:space="preserve">== Deployment-Skript: Rsync für Moodle ==
Ersten Mal Installation von Moodle auf einem Produktionsserver.
Der folgende `rsync`-Befehl wird verwendet, um eine Moodle-Installation von einem lokalen Server auf einen Produktionsserver zu übertragen. Dabei werden sensible und unnötige Dateien ausgeschlossen:

&lt;syntaxhighlight lang="bash"&gt;
rsync -avz --delete /var/www/moodle\
    --perms --times \
     --exclude '.git/' \
     --exclude '.gitignore' \
        --exclude 'config.php' \
    /var/www/moodle \
    user@prod:/var/www/moodle

&lt;/syntaxhighlight&gt;

== nginx-Konfiguration für Moodle ==
Die folgende Konfiguration für den Nginx-Webserver ist für die Bereitstellung von Moodle
&lt;pre&gt;
sudo systemctl stop nginx
sudo certbot certonly --standalone -d lernen.ahrensburg.city
&lt;/pre&gt;
&lt;pre&gt;
Moodle Einstellungen für Nginx auf dem Server Rechner
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem Server Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;

&lt;pre&gt;
server {
    listen 443 ssl;
    server_name  lernen.ahrensburg.city;
    root /var/www/moodle/moodle;
    index index.php index.html index.htm;
    ssl_certificate /etc/letsencrypt/live/lernen.ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lernen.ahrensburg.city/privkey.pem;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;</text>
      <sha1>k605zsrst18v0e1f704hgzshrjix715</sha1>
    </revision>
    <revision>
      <id>647</id>
      <parentid>645</parentid>
      <timestamp>2025-07-10T16:26:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>647</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2434" sha1="ic3mlz7ahd9jexoljixjyvq5h1k4hg4" xml:space="preserve">== Deployment-Skript: Rsync für Moodle ==
Ersten Mal Installation von Moodle auf einem Produktionsserver.
Der folgende `rsync`-Befehl wird verwendet, um eine Moodle-Installation von einem lokalen Server auf einen Produktionsserver zu übertragen. Dabei werden sensible und unnötige Dateien ausgeschlossen:

&lt;syntaxhighlight lang="bash"&gt;
rsync -avz --dry-run


rsync -avz --delete \
    --perms --times \
    --exclude '.git/' \
    --exclude '.gitignore' \
    --exclude 'config.php' \
    --exclude 'cache/' \
    --exclude 'localcache/' \
    --exclude 'muc/' \
    --exclude 'sessions/' \
    /var/www/moodle/ \
    user@prod:/var/www/moodle/


&lt;/syntaxhighlight&gt;

== nginx-Konfiguration für Moodle ==
Die folgende Konfiguration für den Nginx-Webserver ist für die Bereitstellung von Moodle
&lt;pre&gt;
sudo systemctl stop nginx
sudo certbot certonly --standalone -d lernen.ahrensburg.city
&lt;/pre&gt;
&lt;pre&gt;
Moodle Einstellungen für Nginx auf dem Server Rechner
Ein Beispiel für eine einfache Nginx-Konfiguration für Moodle auf einem Server Rechner:
&lt;pre&gt;
sudo nano /etc/nginx/conf.d/moodle.conf
&lt;/pre&gt;

&lt;pre&gt;
server {
    listen 443 ssl;
    server_name  lernen.ahrensburg.city;
    root /var/www/moodle/moodle;
    index index.php index.html index.htm;
    ssl_certificate /etc/letsencrypt/live/lernen.ahrensburg.city/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lernen.ahrensburg.city/privkey.pem;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/run/php/php8.4-fpm.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
  }

  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
    expires max;
    log_not_found off;
  }
}
&lt;/pre&gt;

== Moodledata-Verzeichnis erstellen ==

Das Verzeichnis `moodledata` ist für Moodle zwingend erforderlich und sollte außerhalb des Webroots liegen. Erstellen Sie das Verzeichnis und passen Sie die Berechtigungen an:

&lt;syntaxhighlight lang="bash"&gt;
sudo mkdir -p /var/www/moodle/moodledata
sudo chown -R www-data:www-data /var/www/moodle/moodledata
sudo chmod -R 770 /var/www/moodle/moodledata
&lt;/syntaxhighlight&gt;

Achten Sie darauf, dass das Verzeichnis nicht über den Webserver erreichbar ist, um die Sicherheit Ihrer Moodle-Installation zu gewährleisten.</text>
      <sha1>ic3mlz7ahd9jexoljixjyvq5h1k4hg4</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Qgis Installieren</title>
    <ns>3008</ns>
    <id>179</id>
    <revision>
      <id>665</id>
      <timestamp>2025-07-16T22:50:59Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>665</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1899" sha1="kz56h7nl4ekmm1zhqilns2d0ncy7e2h" xml:space="preserve">&lt;%-- [PAGE_INFO]
    comment = #Please do not remove this struct. It's record contains some important information of edit. This struct will be removed automatically after you push edits.#
    pageTitle = #IDE:Qgis Installieren#
    pageID = ##
    revisionID = ##
    contentModel = ##
    contentFormat = ##
== QGIS auf Ubuntu 24.04 installieren ==

Folge diesen Schritten, um QGIS auf einem Ubuntu 24.04 Rechner zu installieren:

=== 1. Paketquellen aktualisieren ===
Öffne ein Terminal und führe aus:
 sudo apt update

=== 2. QGIS-Repository hinzufügen ===
Füge das offizielle QGIS-Repository hinzu:
 sudo apt install gnupg software-properties-common
sudo mkdir -m755 -p /etc/apt/keyrings  # not needed since apt version 2.4.0 like Debian 12 and Ubuntu 22 or newer
sudo wget -O /etc/apt/keyrings/qgis-archive-keyring.gpg https://download.qgis.org/downloads/qgis-archive-keyring.gpg

=== 3. Paketquellen erneut aktualisieren ===
 sudo apt update

=== 4. QGIS installieren ===
 sudo apt install qgis qgis-plugin-grass

=== 5. QGIS starten ===
Starte QGIS über das Terminal:
 qgis

Weitere Informationen findest du auf der offiziellen QGIS-Webseite: https://qgis.org/de/site/forusers/alldownloads.html

==Osm Quick==
Um die Stadtgrenze von Ahrensburg in QGIS anzuzeigen, kannst du die OSM-Daten (OpenStreetMap) verwenden:

1. Öffne QGIS und lade das OSM-Plugin, falls noch nicht installiert.
2. Gehe zu „Layer“ &gt; „Datenquelle verwalten“ &gt; „OpenStreetMap“.
3. Suche nach „Ahrensburg“ und lade die relevanten Daten.
4. Filtere die Grenzlinien mit dem Attribut „boundary=administrative“ und „name=Ahrensburg“.
5. Die Stadtgrenze wird als Polygon angezeigt.

Alternativ kannst du die Grenzdaten direkt von [Geofabrik](https://download.geofabrik.de/europe/germany/schleswig-holstein.html) als Shapefile herunterladen und in QGIS importieren.

==QuickOSM==
==Overpass Turbo==</text>
      <sha1>kz56h7nl4ekmm1zhqilns2d0ncy7e2h</sha1>
    </revision>
    <revision>
      <id>666</id>
      <parentid>665</parentid>
      <timestamp>2025-07-16T22:52:10Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>666</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1591" sha1="ewjk9hg82b7rz4z2kfayaeopeez67ak" xml:space="preserve">
== QGIS auf Ubuntu 24.04 installieren ==

Folge diesen Schritten, um QGIS auf einem Ubuntu 24.04 Rechner zu installieren:

=== 1. Paketquellen aktualisieren ===
Öffne ein Terminal und führe aus:
 sudo apt update

=== 2. QGIS-Repository hinzufügen ===
Füge das offizielle QGIS-Repository hinzu:
 sudo apt install gnupg software-properties-common
sudo mkdir -m755 -p /etc/apt/keyrings  # not needed since apt version 2.4.0 like Debian 12 and Ubuntu 22 or newer
sudo wget -O /etc/apt/keyrings/qgis-archive-keyring.gpg https://download.qgis.org/downloads/qgis-archive-keyring.gpg

=== 3. Paketquellen erneut aktualisieren ===
 sudo apt update

=== 4. QGIS installieren ===
 sudo apt install qgis qgis-plugin-grass

=== 5. QGIS starten ===
Starte QGIS über das Terminal:
 qgis

Weitere Informationen findest du auf der offiziellen QGIS-Webseite: https://qgis.org/de/site/forusers/alldownloads.html

==Osm Quick==
Um die Stadtgrenze von Ahrensburg in QGIS anzuzeigen, kannst du die OSM-Daten (OpenStreetMap) verwenden:

1. Öffne QGIS und lade das OSM-Plugin, falls noch nicht installiert.
2. Gehe zu „Layer“ &gt; „Datenquelle verwalten“ &gt; „OpenStreetMap“.
3. Suche nach „Ahrensburg“ und lade die relevanten Daten.
4. Filtere die Grenzlinien mit dem Attribut „boundary=administrative“ und „name=Ahrensburg“.
5. Die Stadtgrenze wird als Polygon angezeigt.

Alternativ kannst du die Grenzdaten direkt von [Geofabrik](https://download.geofabrik.de/europe/germany/schleswig-holstein.html) als Shapefile herunterladen und in QGIS importieren.

==QuickOSM==
==Overpass Turbo==</text>
      <sha1>ewjk9hg82b7rz4z2kfayaeopeez67ak</sha1>
    </revision>
    <revision>
      <id>667</id>
      <parentid>666</parentid>
      <timestamp>2025-07-16T22:52:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* QGIS auf Ubuntu 24.04 installieren */</comment>
      <origin>667</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1603" sha1="8x8k1n18gh5a69g9a5t0rvr9v6ec1pm" xml:space="preserve">
== QGIS auf Ubuntu 24.04 installieren ==

Folge diesen Schritten, um QGIS auf einem Ubuntu 24.04 Rechner zu installieren:

=== 1. Paketquellen aktualisieren ===
Öffne ein Terminal und führe aus:
 sudo apt update

=== 2. QGIS-Repository hinzufügen ===
Füge das offizielle QGIS-Repository hinzu:
&lt;pre&gt;
 sudo apt install gnupg software-properties-common
sudo mkdir -m755 -p /etc/apt/keyrings  # not needed since apt version 2.4.0 like Debian 12 and Ubuntu 22 or newer
sudo wget -O /etc/apt/keyrings/qgis-archive-keyring.gpg https://download.qgis.org/downloads/qgis-archive-keyring.gpg
&lt;/pre&gt;
=== 3. Paketquellen erneut aktualisieren ===
 sudo apt update

=== 4. QGIS installieren ===
 sudo apt install qgis qgis-plugin-grass

=== 5. QGIS starten ===
Starte QGIS über das Terminal:
 qgis

Weitere Informationen findest du auf der offiziellen QGIS-Webseite: https://qgis.org/de/site/forusers/alldownloads.html

==Osm Quick==
Um die Stadtgrenze von Ahrensburg in QGIS anzuzeigen, kannst du die OSM-Daten (OpenStreetMap) verwenden:

1. Öffne QGIS und lade das OSM-Plugin, falls noch nicht installiert.
2. Gehe zu „Layer“ &gt; „Datenquelle verwalten“ &gt; „OpenStreetMap“.
3. Suche nach „Ahrensburg“ und lade die relevanten Daten.
4. Filtere die Grenzlinien mit dem Attribut „boundary=administrative“ und „name=Ahrensburg“.
5. Die Stadtgrenze wird als Polygon angezeigt.

Alternativ kannst du die Grenzdaten direkt von [Geofabrik](https://download.geofabrik.de/europe/germany/schleswig-holstein.html) als Shapefile herunterladen und in QGIS importieren.

==QuickOSM==
==Overpass Turbo==</text>
      <sha1>8x8k1n18gh5a69g9a5t0rvr9v6ec1pm</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Asp Net Core Übung 1</title>
    <ns>3002</ns>
    <id>180</id>
    <revision>
      <id>671</id>
      <timestamp>2025-07-17T01:21:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „ Program.cs &lt;pre&gt; builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultContext")));// using Microsoft.EntityFrameworkCore; &lt;/pre&gt;“</comment>
      <origin>671</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="207" sha1="mzs8ct5korbydhrehjtwy7x93ffwpeu" xml:space="preserve">
Program.cs
&lt;pre&gt;
builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultContext")));// using Microsoft.EntityFrameworkCore;
&lt;/pre&gt;</text>
      <sha1>mzs8ct5korbydhrehjtwy7x93ffwpeu</sha1>
    </revision>
    <revision>
      <id>672</id>
      <parentid>671</parentid>
      <timestamp>2025-07-17T01:24:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>672</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="316" sha1="ce9lags28qf9wzhodqzsa6qysplhacn" xml:space="preserve">
Program.cs
&lt;pre&gt;
builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultContext")));
&lt;/pre&gt;
appsettings.json
&lt;pre&gt;
"ConnectionStrings": {"DefaultContext" : "Host=localhost;Port=5432;Database=thorsten;Username=thorsten;Password=Test"
&lt;/pre&gt;</text>
      <sha1>ce9lags28qf9wzhodqzsa6qysplhacn</sha1>
    </revision>
    <revision>
      <id>673</id>
      <parentid>672</parentid>
      <timestamp>2025-07-17T01:34:53Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>673</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="316" sha1="ayrd3f4haktl95og8dblk7o39j76ach" xml:space="preserve">appsettings.json
&lt;pre&gt;
"ConnectionStrings": {"DefaultContext" : "Host=localhost;Port=5432;Database=thorsten;Username=thorsten;Password=Test"
&lt;/pre&gt;

Program.cs
&lt;pre&gt;
builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultContext")));
&lt;/pre&gt;</text>
      <sha1>ayrd3f4haktl95og8dblk7o39j76ach</sha1>
    </revision>
    <revision>
      <id>674</id>
      <parentid>673</parentid>
      <timestamp>2025-07-17T01:37:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>674</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="550" sha1="bp598tlymaj7kuk3s3wh88bq0mknh98" xml:space="preserve">appsettings.json
&lt;pre&gt;
"ConnectionStrings": {"DefaultContext" : "Host=localhost;Port=5432;Database=thorsten;Username=thorsten;Password=Test"
&lt;/pre&gt;
ApplicationDbContext
&lt;pre&gt;
public class ApplicationDbContext : DbContext
{

public ApplicationDbContext(DbContextOptions&lt;ApplicationDbContext&gt;options)
:base (options) {}
    public DbSet&lt;Sexmachine&gt; Sexmaschines { get; set; }
}
&lt;/pre&gt;
Program.cs
&lt;pre&gt;
builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultContext")));
&lt;/pre&gt;</text>
      <sha1>bp598tlymaj7kuk3s3wh88bq0mknh98</sha1>
    </revision>
    <revision>
      <id>675</id>
      <parentid>674</parentid>
      <timestamp>2025-07-17T01:38:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>675</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="498" sha1="ik3p4ru21nkt692ah3j6ua70gssfs2s" xml:space="preserve">appsettings.json
&lt;pre&gt;
"ConnectionStrings": {"DefaultContext" : "Host=localhost;Port=5432;Database=thorsten;Username=thorsten;Password=Test"
&lt;/pre&gt;
ApplicationDbContext
&lt;pre&gt;
public class ApplicationDbContext : DbContext
{

public ApplicationDbContext(DbContextOptions&lt;ApplicationDbContext&gt;options)
:base (options) {}
   
}
&lt;/pre&gt;
Program.cs
&lt;pre&gt;
builder.Services.AddDbContext&lt;ApplicationDbContext&gt;(options =&gt; options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultContext")));
&lt;/pre&gt;</text>
      <sha1>ik3p4ru21nkt692ah3j6ua70gssfs2s</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Udemy.com</title>
    <ns>3002</ns>
    <id>181</id>
    <revision>
      <id>677</id>
      <timestamp>2025-07-17T18:57:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==asp net core==  * ASP.NET Core | Projects | Bootcamp    * .NET Core MVC - The Complete Guide [E-commerce]“</comment>
      <origin>677</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="108" sha1="7h1a95anfuhjroejixwmp942nmfopog" xml:space="preserve">==asp net core==

* ASP.NET Core | Projects | Bootcamp   
* .NET Core MVC - The Complete Guide [E-commerce]</text>
      <sha1>7h1a95anfuhjroejixwmp942nmfopog</sha1>
    </revision>
    <revision>
      <id>678</id>
      <parentid>677</parentid>
      <timestamp>2025-07-17T18:59:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* asp net core */</comment>
      <origin>678</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="165" sha1="6c27f86y7jz7io1n0s4c3017lj09lej" xml:space="preserve">==asp net core==

* ASP.NET Core | Projects | Bootcamp   
* .NET Core MVC - The Complete Guide [E-commerce]
* The complete ASP.NET Core 9 course for busy developers</text>
      <sha1>6c27f86y7jz7io1n0s4c3017lj09lej</sha1>
    </revision>
    <revision>
      <id>679</id>
      <parentid>678</parentid>
      <timestamp>2025-07-17T19:05:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* asp net core */</comment>
      <origin>679</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="217" sha1="nnvlbtv0qcy16nihxr5k1ujfsyzr6f5" xml:space="preserve">==asp net core==

* ASP.NET Core | Projects | Bootcamp   Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Patel
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta</text>
      <sha1>nnvlbtv0qcy16nihxr5k1ujfsyzr6f5</sha1>
    </revision>
    <revision>
      <id>680</id>
      <parentid>679</parentid>
      <timestamp>2025-07-17T19:08:19Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>680</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="217" sha1="aw3e47ac1c4x5vsxsr1dit9hfz5iis1" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp   Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Patel
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta</text>
      <sha1>aw3e47ac1c4x5vsxsr1dit9hfz5iis1</sha1>
    </revision>
    <revision>
      <id>681</id>
      <parentid>680</parentid>
      <timestamp>2025-07-17T22:34:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>681</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="460" sha1="rizhqzcmuyvo5xdx07etdbsc75odnug" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Patel
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Golang==
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru
==Rust==</text>
      <sha1>rizhqzcmuyvo5xdx07etdbsc75odnug</sha1>
    </revision>
    <revision>
      <id>682</id>
      <parentid>681</parentid>
      <timestamp>2025-07-17T23:58:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>682</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="705" sha1="hggimnq95ez0jpayp449ljrxvol50ly" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Patel
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Golang==
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru
==Rust==

==C++==
* Drogon C++ Web Framework: Vom Anfänger zum Profi

==Lernkurve: Vom Anfänger zum Profi==
Die Lernkurve für Web-Frameworks wie ASP.NET Core, Spring Boot, Echo (Golang), Actix Web (Rust) oder Drogon (C++) – vom Anfänger zum Profi.</text>
      <sha1>hggimnq95ez0jpayp449ljrxvol50ly</sha1>
    </revision>
    <revision>
      <id>683</id>
      <parentid>682</parentid>
      <timestamp>2025-07-18T11:12:57Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>683</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="371" sha1="dtsb7nya28z9om6wgro1gy9twdl5vsq" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru</text>
      <sha1>dtsb7nya28z9om6wgro1gy9twdl5vsq</sha1>
    </revision>
    <revision>
      <id>684</id>
      <parentid>683</parentid>
      <timestamp>2025-07-18T12:09:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>684</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="439" sha1="4uzlw6cjlqe82fq0jgzql3zilekfz7y" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* * The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru</text>
      <sha1>4uzlw6cjlqe82fq0jgzql3zilekfz7y</sha1>
    </revision>
    <revision>
      <id>685</id>
      <parentid>684</parentid>
      <timestamp>2025-07-18T23:26:19Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Spring Boot */</comment>
      <origin>685</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="669" sha1="lml9efvo87cs4qlmyumdbzx5ny987gn" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* * The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)</text>
      <sha1>lml9efvo87cs4qlmyumdbzx5ny987gn</sha1>
    </revision>
    <revision>
      <id>686</id>
      <parentid>685</parentid>
      <timestamp>2025-07-18T23:45:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Web Gis */</comment>
      <origin>686</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="730" sha1="2l49q0kx97wmiu3owbn9mb0fpe7x12u" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* * The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)
* Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet</text>
      <sha1>2l49q0kx97wmiu3owbn9mb0fpe7x12u</sha1>
    </revision>
    <revision>
      <id>687</id>
      <parentid>686</parentid>
      <timestamp>2025-07-19T00:04:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Web Gis */</comment>
      <origin>687</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="783" sha1="4qb8txwnyru5j1svoqwhquiy8q304ws" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* * The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)
* Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet
* QGIS 3.10 LTR for GIS Professionals Michael Miller</text>
      <sha1>4qb8txwnyru5j1svoqwhquiy8q304ws</sha1>
    </revision>
    <revision>
      <id>688</id>
      <parentid>687</parentid>
      <timestamp>2025-07-19T11:07:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>688</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="781" sha1="06ocgmhnzjg5z5rrjtwf8bd4fccghg6" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)
* Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet
* QGIS 3.10 LTR for GIS Professionals Michael Miller</text>
      <sha1>06ocgmhnzjg5z5rrjtwf8bd4fccghg6</sha1>
    </revision>
    <revision>
      <id>689</id>
      <parentid>688</parentid>
      <timestamp>2025-07-19T13:13:00Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>689</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="942" sha1="ngj9tiik17ucpgmolvw845djv47akmw" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)
* Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet
* QGIS 3.10 LTR for GIS Professionals Michael Miller
==Java==
*  Christian Gestys "Java leicht gemacht
* Jannis Seemanns "Das Java - Bootcamp"
* Christian Ullenbooms "Der moderne Java-Kurs, vom Anfänger zum Profi</text>
      <sha1>ngj9tiik17ucpgmolvw845djv47akmw</sha1>
    </revision>
    <revision>
      <id>690</id>
      <parentid>689</parentid>
      <timestamp>2025-07-19T13:18:30Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java */</comment>
      <origin>690</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1046" sha1="sdmsuhkg33vbnaflkxhtmaa9o7bptxh" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)
* Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet
* QGIS 3.10 LTR for GIS Professionals Michael Miller
==Java==
*  Christian Gestys "Java leicht gemacht
* Jannis Seemanns "Das Java - Bootcamp"
* Christian Ullenbooms "Der moderne Java-Kurs, vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta</text>
      <sha1>sdmsuhkg33vbnaflkxhtmaa9o7bptxh</sha1>
    </revision>
    <revision>
      <id>700</id>
      <parentid>690</parentid>
      <timestamp>2025-07-23T22:48:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>700</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1124" sha1="55z11kjhi6udrnkew2ntaoclfxe05ne" xml:space="preserve">==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)
* Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet
* QGIS 3.10 LTR for GIS Professionals Michael Miller
==Java==
*  Christian Gestys "Java leicht gemacht
* Jannis Seemanns "Das Java - Bootcamp"
* Christian Ullenbooms "Der moderne Java-Kurs, vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>55z11kjhi6udrnkew2ntaoclfxe05ne</sha1>
    </revision>
    <revision>
      <id>701</id>
      <parentid>700</parentid>
      <timestamp>2025-07-24T13:00:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>701</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1231" sha1="o3vhbwqc4heujjyzfijzeoy0lc1gtue" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==

* Spring &amp; Hibernate for Beginners (includes Spring Boot) by Chad Darby
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* John Thompsons Spring Boot 3, Spring Framework 6: Beginner to Guru

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)
* Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet
* QGIS 3.10 LTR for GIS Professionals Michael Miller
==Java==
*  Christian Gestys "Java leicht gemacht
* Jannis Seemanns "Das Java - Bootcamp"
* Christian Ullenbooms "Der moderne Java-Kurs, vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>o3vhbwqc4heujjyzfijzeoy0lc1gtue</sha1>
    </revision>
    <revision>
      <id>732</id>
      <parentid>701</parentid>
      <timestamp>2025-08-13T21:04:20Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Spring Boot */</comment>
      <origin>732</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1091" sha1="q8f07yubj4idzrsdj15ie27unwbc2dz" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java

==Web Gis==
* Web GIS development course (Krishna Lodha)
* Intro to web programming for GIS... (Michael Miller)
* Display and analyze... with Leaflet (Michael Miller)
* Intro to Spatial Databases with PostGIS... (Michael Miller)
* Building Web GIS Apps with C# ASP.NET CORE MVC and Leaflet
* QGIS 3.10 LTR for GIS Professionals Michael Miller
==Java==
*  Christian Gestys "Java leicht gemacht
* Jannis Seemanns "Das Java - Bootcamp"
* Christian Ullenbooms "Der moderne Java-Kurs, vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>q8f07yubj4idzrsdj15ie27unwbc2dz</sha1>
    </revision>
    <revision>
      <id>733</id>
      <parentid>732</parentid>
      <timestamp>2025-08-13T21:05:09Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>733</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="747" sha1="3wg68smz54pilb51z5r940b7208g7al" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
*  Christian Gestys "Java leicht gemacht
* Jannis Seemanns "Das Java - Bootcamp"
* Christian Ullenbooms "Der moderne Java-Kurs, vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>3wg68smz54pilb51z5r940b7208g7al</sha1>
    </revision>
    <revision>
      <id>734</id>
      <parentid>733</parentid>
      <timestamp>2025-08-13T21:56:30Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java */</comment>
      <origin>734</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="767" sha1="5eqqfntsnlddsaepjutm9hjvpzez6de" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>5eqqfntsnlddsaepjutm9hjvpzez6de</sha1>
    </revision>
    <revision>
      <id>735</id>
      <parentid>734</parentid>
      <timestamp>2025-08-13T22:29:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C# */</comment>
      <origin>735</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="787" sha1="sz0infcuhw871tvt7thxn3eccqmbsn6" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==C++==
==Python==

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>sz0infcuhw871tvt7thxn3eccqmbsn6</sha1>
    </revision>
    <revision>
      <id>736</id>
      <parentid>735</parentid>
      <timestamp>2025-08-13T23:07:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C++ */</comment>
      <origin>736</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="864" sha1="ecwtb18xzhsp8qlgop2fosno6vfs4ye" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>ecwtb18xzhsp8qlgop2fosno6vfs4ye</sha1>
    </revision>
    <revision>
      <id>737</id>
      <parentid>736</parentid>
      <timestamp>2025-08-13T23:20:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C++ */</comment>
      <origin>737</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="935" sha1="m1myovsg8yl6cv8gtpgbinz0ku9f2lp" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond
* The C++20 Masterclass : From Fundamentals to Advanced	Daniel Gakwaya

==Python==

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>m1myovsg8yl6cv8gtpgbinz0ku9f2lp</sha1>
    </revision>
    <revision>
      <id>738</id>
      <parentid>737</parentid>
      <timestamp>2025-08-14T00:04:41Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C++ */</comment>
      <origin>738</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="937" sha1="afb1o4n2wki896zcc5l1xi5epuj7da6" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond
* The C++20 Masterclass : From Fundamentals to Advanced (Daniel Gakwaya)

==Python==

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>afb1o4n2wki896zcc5l1xi5epuj7da6</sha1>
    </revision>
    <revision>
      <id>739</id>
      <parentid>738</parentid>
      <timestamp>2025-08-14T00:41:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C# */</comment>
      <origin>739</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="989" sha1="qeyb7p33fzygux8i8mppamgn2pgl9m0" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond
* The C++20 Masterclass : From Fundamentals to Advanced (Daniel Gakwaya)

==Python==

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>qeyb7p33fzygux8i8mppamgn2pgl9m0</sha1>
    </revision>
    <revision>
      <id>740</id>
      <parentid>739</parentid>
      <timestamp>2025-08-14T01:06:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Python */</comment>
      <origin>740</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1067" sha1="6azvsf1vydcu8r0azfz8v68e8i236g5" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond
* The C++20 Masterclass : From Fundamentals to Advanced (Daniel Gakwaya)

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>6azvsf1vydcu8r0azfz8v68e8i236g5</sha1>
    </revision>
    <revision>
      <id>741</id>
      <parentid>740</parentid>
      <timestamp>2025-08-14T01:08:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Python */</comment>
      <origin>741</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1082" sha1="8xli7ifhb8nqq59gj3llzj7x6efihl4" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond
* The C++20 Masterclass : From Fundamentals to Advanced (Daniel Gakwaya)

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>8xli7ifhb8nqq59gj3llzj7x6efihl4</sha1>
    </revision>
    <revision>
      <id>742</id>
      <parentid>741</parentid>
      <timestamp>2025-08-14T01:12:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Javascript */</comment>
      <origin>742</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1090" sha1="803th101bxdasscyc5ueegu7jk9ral0" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond
* The C++20 Masterclass : From Fundamentals to Advanced (Daniel Gakwaya)

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
===C===

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>803th101bxdasscyc5ueegu7jk9ral0</sha1>
    </revision>
    <revision>
      <id>743</id>
      <parentid>742</parentid>
      <timestamp>2025-08-14T01:20:51Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Javascript */</comment>
      <origin>743</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1169" sha1="snfg3ig9uw63mcdrqxfdf1nhwgbzbfm" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond
* The C++20 Masterclass : From Fundamentals to Advanced (Daniel Gakwaya)

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
===C===

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>snfg3ig9uw63mcdrqxfdf1nhwgbzbfm</sha1>
    </revision>
    <revision>
      <id>744</id>
      <parentid>743</parentid>
      <timestamp>2025-08-14T01:39:08Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C++ */</comment>
      <origin>744</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1096" sha1="k56u1tvtvf0hvju5p1uoij1rwz21dj1" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
===C===

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>k56u1tvtvf0hvju5p1uoij1rwz21dj1</sha1>
    </revision>
    <revision>
      <id>745</id>
      <parentid>744</parentid>
      <timestamp>2025-08-14T01:56:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C */</comment>
      <origin>745</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1167" sha1="lmqi3gwl8dp852zcql1cw8w6u2xpb3j" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
===C===
C Programming Bootcamp - The Complete C Language Course	Vlad Budnitski

==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>lmqi3gwl8dp852zcql1cw8w6u2xpb3j</sha1>
    </revision>
    <revision>
      <id>746</id>
      <parentid>745</parentid>
      <timestamp>2025-08-14T02:24:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C */</comment>
      <origin>746</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1087" sha1="7kna2xnptmmx699rpz4wo5zaxhbs5ey" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"</text>
      <sha1>7kna2xnptmmx699rpz4wo5zaxhbs5ey</sha1>
    </revision>
    <revision>
      <id>747</id>
      <parentid>746</parentid>
      <timestamp>2025-08-14T12:59:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* html+css */</comment>
      <origin>747</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1162" sha1="5gwusyinci3yjpv7n37ahn5fvxc6o2p" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS</text>
      <sha1>5gwusyinci3yjpv7n37ahn5fvxc6o2p</sha1>
    </revision>
    <revision>
      <id>748</id>
      <parentid>747</parentid>
      <timestamp>2025-08-14T14:40:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Visual Studio Code */</comment>
      <origin>748</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1248" sha1="ogorpekl90cywcjuymaxcmhntulcvd1" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Golang Website==
* Trevor Sawler Building Modern Web Applications with Go (Golang)

==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS</text>
      <sha1>ogorpekl90cywcjuymaxcmhntulcvd1</sha1>
    </revision>
    <revision>
      <id>749</id>
      <parentid>748</parentid>
      <timestamp>2025-08-14T14:42:12Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Golang Website */</comment>
      <origin>749</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1300" sha1="0meiied2yj3x0teajsvvs5dm9bh37rm" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Golang Website==
* Trevor Sawler Building Modern Web Applications with Go (Golang)
* Maximilian Schwarzmüller Go - The Complete Guide

==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS</text>
      <sha1>0meiied2yj3x0teajsvvs5dm9bh37rm</sha1>
    </revision>
    <revision>
      <id>750</id>
      <parentid>749</parentid>
      <timestamp>2025-08-14T14:43:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C++ */</comment>
      <origin>750</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1359" sha1="l9m4z3tklet09b26haavm0v5cyorsxj" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Golang Website==
* Trevor Sawler Building Modern Web Applications with Go (Golang)
* Maximilian Schwarzmüller Go - The Complete Guide

==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==Go==
* Maximilian Schwarzmüller Go - The Complete Guide
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS</text>
      <sha1>l9m4z3tklet09b26haavm0v5cyorsxj</sha1>
    </revision>
    <revision>
      <id>751</id>
      <parentid>750</parentid>
      <timestamp>2025-08-14T14:43:23Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Golang Website */</comment>
      <origin>751</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1307" sha1="sgop8cbjpdqsxh4v7x71uiw9e284p6i" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Golang Website==
* Trevor Sawler Building Modern Web Applications with Go (Golang)

==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==Go==
* Maximilian Schwarzmüller Go - The Complete Guide
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS</text>
      <sha1>sgop8cbjpdqsxh4v7x71uiw9e284p6i</sha1>
    </revision>
    <revision>
      <id>752</id>
      <parentid>751</parentid>
      <timestamp>2025-08-15T14:13:29Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>752</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1335" sha1="jg2ew1ntobf70iaqv6mdj8fbgzadt51" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Golang Website==
* Trevor Sawler Building Modern Web Applications with Go (Golang)

==Asp Net Core==

* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==


* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==Go==
* Maximilian Schwarzmüller Go - The Complete Guide
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

==Python==
* The Complete Python Bootcamp From Zero to Hero in Python" von Jose Portilla
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS

* [[Kurse:Später lernen]]</text>
      <sha1>jg2ew1ntobf70iaqv6mdj8fbgzadt51</sha1>
    </revision>
    <revision>
      <id>756</id>
      <parentid>752</parentid>
      <timestamp>2025-08-15T19:44:35Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>756</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="959" sha1="cy4cp52as1kf638zuvvl1ksthex05we" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi
==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* [[Kurse:Später lernen]]</text>
      <sha1>cy4cp52as1kf638zuvvl1ksthex05we</sha1>
    </revision>
    <revision>
      <id>757</id>
      <parentid>756</parentid>
      <timestamp>2025-08-15T20:04:11Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Spring Boot */</comment>
      <origin>757</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1026" sha1="kzti3v7voiv9fnohh6a23zpc4demj8w" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* Chad Darby  Spring Boot 3, Spring 6 &amp; Hibernate for Beginners**

==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Der komplette Java 21 Meisterkurs: Vom Anfänger zum Profi
==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* [[Kurse:Später lernen]]</text>
      <sha1>kzti3v7voiv9fnohh6a23zpc4demj8w</sha1>
    </revision>
    <revision>
      <id>758</id>
      <parentid>757</parentid>
      <timestamp>2025-08-15T21:20:58Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java */</comment>
      <origin>758</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="966" sha1="k13mdc46f41nyj2hoshqy7jk9pnrilv" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* Chad Darby  Spring Boot 3, Spring 6 &amp; Hibernate for Beginners**

==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Ruben Winklers „Der ultimative HTML5 und CSS3 Komplettkurs"
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* [[Kurse:Später lernen]]</text>
      <sha1>k13mdc46f41nyj2hoshqy7jk9pnrilv</sha1>
    </revision>
    <revision>
      <id>759</id>
      <parentid>758</parentid>
      <timestamp>2025-08-15T23:07:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* html+css */</comment>
      <origin>759</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1026" sha1="4df6xlilcm7cnqag532c3jmwzmc2use" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* Chad Darby  Spring Boot 3, Spring 6 &amp; Hibernate for Beginners**

==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Brad Traversy Modern HTML &amp; CSS From The Beginning 2.0
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* Anthony Alicea Understanding HTML and CSS
==Weiter Information==
* [[Kurse:Später lernen]]</text>
      <sha1>4df6xlilcm7cnqag532c3jmwzmc2use</sha1>
    </revision>
    <revision>
      <id>760</id>
      <parentid>759</parentid>
      <timestamp>2025-08-17T09:43:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Java */</comment>
      <origin>760</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1095" sha1="a8t5finu8zjgxgl1grgl0q98lvp6qms" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
* Chad Darby  Spring Boot 3, Spring 6 &amp; Hibernate for Beginners**

==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Denis Panjuta: 60 Days of Java: The Complete Java Masterclass
* Christian Ullenboom Der moderne Java-Kurs, vom Anfänger zum Profi

==C#==
* Ultimate C# Masterclass for 2025 Krystyna Ślusarczyk
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Brad Traversy Modern HTML &amp; CSS From The Beginning 2.0
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* Anthony Alicea Understanding HTML and CSS
==Weiter Information==
* [[Kurse:Später lernen]]</text>
      <sha1>a8t5finu8zjgxgl1grgl0q98lvp6qms</sha1>
    </revision>
    <revision>
      <id>761</id>
      <parentid>760</parentid>
      <timestamp>2025-08-19T01:00:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>761</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="907" sha1="8g7heiiudwrymr6nk03u85svipibzup" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Christian Ullenboom Der moderne Java-Kurs, vom Anfänger zum Profi
==C#==
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
==html+css==
*  Brad Traversy Modern HTML &amp; CSS From The Beginning 2.0
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* Anthony Alicea Understanding HTML and CSS
==Weiter Information==
* [[Kurse:Später lernen]]</text>
      <sha1>8g7heiiudwrymr6nk03u85svipibzup</sha1>
    </revision>
    <revision>
      <id>785</id>
      <parentid>761</parentid>
      <timestamp>2025-09-23T07:21:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Javascript */</comment>
      <origin>785</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1046" sha1="a6wmyyyi28fmfbmmnfpdgmvb0e0hwpj" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Christian Ullenboom Der moderne Java-Kurs, vom Anfänger zum Profi
==C#==
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
* Die komplette JavaScript Masterclass: Vom Anfänger zum Profi (Jannis Seemann)
* Der ultimative JavaScript Komplettkurs (Ruben Winkler)

==html+css==
*  Brad Traversy Modern HTML &amp; CSS From The Beginning 2.0
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* Anthony Alicea Understanding HTML and CSS
==Weiter Information==
* [[Kurse:Später lernen]]</text>
      <sha1>a6wmyyyi28fmfbmmnfpdgmvb0e0hwpj</sha1>
    </revision>
    <revision>
      <id>786</id>
      <parentid>785</parentid>
      <timestamp>2025-09-23T07:36:42Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* html+css */</comment>
      <origin>786</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1238" sha1="ociravf7f7q0h00r0bouxo70lxw9rk4" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Christian Ullenboom Der moderne Java-Kurs, vom Anfänger zum Profi
==C#==
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
* Die komplette JavaScript Masterclass: Vom Anfänger zum Profi (Jannis Seemann)
* Der ultimative JavaScript Komplettkurs (Ruben Winkler)

==html+css==
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* Der ultimative HTML5 und CSS3 Komplettkurs“
Ruben Winkler
* „HTML &amp; CSS High-Level-Masterclass – Vom Grundwissen zur Perfektion“ BytersLab
* „HTML5 &amp; CSS3 – Modernes Webdesign Meisterkurs“ Lourny
* „Baue Webseiten mit HTML5 &amp; CSS3: Vom Anfänger zum Profi!“ Jannis Seemann

==Weiter Information==
* [[Kurse:Später lernen]]</text>
      <sha1>ociravf7f7q0h00r0bouxo70lxw9rk4</sha1>
    </revision>
    <revision>
      <id>787</id>
      <parentid>786</parentid>
      <timestamp>2025-09-23T07:43:47Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* html+css */</comment>
      <origin>787</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1238" sha1="708sz7j1kpj7utlv8sqk17jaba21cdo" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Asp Net Core==
* ASP.NET Core | Projects | Bootcamp  Web Academy by Harsha Vardhan
* .NET Core MVC - The Complete Guide [E-commerce] Bhrugen Pa
* The complete ASP.NET Core 9 course for busy devel Denis Panjuta
==Spring Boot==
* in28Minutes' Master Spring Boot 3 &amp; Spring Framework 6 with Java
==Java==
* Tim Buchalka: The Complete Java Masterclass 
* Christian Ullenboom Der moderne Java-Kurs, vom Anfänger zum Profi
==C#==
* Complete C# Masterclass Denis Panjuta
==Javascript==
*  Jonas Schmedtmann The Complete JavaScript Course 2025: From Zero to Expert!
* Die komplette JavaScript Masterclass: Vom Anfänger zum Profi (Jannis Seemann)
* Der ultimative JavaScript Komplettkurs (Ruben Winkler)

==html+css==
* Jonas Schmedtmann Build Responsive Real-World Websites with HTML and CSS
* Der ultimative HTML5 und CSS3 Komplettkurs“ Ruben Winkler
* „HTML &amp; CSS High-Level-Masterclass – Vom Grundwissen zur Perfektion“ BytersLab
* „HTML5 &amp; CSS3 – Modernes Webdesign Meisterkurs“ Lourny
* „Baue Webseiten mit HTML5 &amp; CSS3: Vom Anfänger zum Profi!“ Jannis Seemann

==Weiter Information==
* [[Kurse:Später lernen]]</text>
      <sha1>708sz7j1kpj7utlv8sqk17jaba21cdo</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Anki</title>
    <ns>3008</ns>
    <id>182</id>
    <revision>
      <id>692</id>
      <timestamp>2025-07-23T02:04:36Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos. ==“</comment>
      <origin>692</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="249" sha1="ac1j10yh69lv307n2jap4d77eabaq0j" xml:space="preserve">== Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos. ==</text>
      <sha1>ac1j10yh69lv307n2jap4d77eabaq0j</sha1>
    </revision>
    <revision>
      <id>693</id>
      <parentid>692</parentid>
      <timestamp>2025-07-23T02:04:48Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>693</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="247" sha1="hynfikw1g82iyp2hhpum6qcx3z0ksak" xml:space="preserve"> Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos. ==</text>
      <sha1>hynfikw1g82iyp2hhpum6qcx3z0ksak</sha1>
    </revision>
    <revision>
      <id>694</id>
      <parentid>693</parentid>
      <timestamp>2025-07-23T02:05:50Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>694</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="243" sha1="rlzqjs19v6bg8b087ftnv5z0fzzx1tt" xml:space="preserve">Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos.</text>
      <sha1>rlzqjs19v6bg8b087ftnv5z0fzzx1tt</sha1>
    </revision>
    <revision>
      <id>695</id>
      <parentid>694</parentid>
      <timestamp>2025-07-23T02:08:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>695</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="338" sha1="j2fh54zxazvk9wx59u5lduc0h5f71f5" xml:space="preserve">Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos.


=== Anforderungen ===
 &lt;code&gt;sudo apt install libxcb-xinerama0 libxcb-cursor0 libnss3&lt;/code&gt;</text>
      <sha1>j2fh54zxazvk9wx59u5lduc0h5f71f5</sha1>
    </revision>
    <revision>
      <id>696</id>
      <parentid>695</parentid>
      <timestamp>2025-07-23T02:08:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>696</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="500" sha1="440291np61pkbzs2mjmweflmavztq5e" xml:space="preserve">Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos.


=== Anforderungen ===
 &lt;code&gt;sudo apt install libxcb-xinerama0 libxcb-cursor0 libnss3&lt;/code&gt;


=== Anki herunterladen ===
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://github.com/ankitects/anki/releases/download/25.02/anki-25.02-linux-qt6.tar.zst&lt;/nowiki&gt;&lt;/code&gt;</text>
      <sha1>440291np61pkbzs2mjmweflmavztq5e</sha1>
    </revision>
    <revision>
      <id>697</id>
      <parentid>696</parentid>
      <timestamp>2025-07-23T02:10:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>697</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="504" sha1="m07m0qxirilxksruskhpa99eo51azr6" xml:space="preserve">Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos.


=== Anforderungen ===
 &lt;code&gt;sudo apt install libxcb-xinerama0 libxcb-cursor0 libnss3&lt;/code&gt;


=== Anki herunterladen ===
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://github.com/ankitects/anki/releases/download/25.02.7/anki-25.02.7-linux-qt6.tar.zst&lt;/nowiki&gt;&lt;/code&gt;</text>
      <sha1>m07m0qxirilxksruskhpa99eo51azr6</sha1>
    </revision>
    <revision>
      <id>698</id>
      <parentid>697</parentid>
      <timestamp>2025-07-23T02:19:55Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>698</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="758" sha1="h5bqnlruahfaetnres4oj3u1s0pzv1y" xml:space="preserve">Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos.


=== Anforderungen ===
 &lt;code&gt;sudo apt install libxcb-xinerama0 libxcb-cursor0 libnss3&lt;/code&gt;


=== Anki herunterladen ===
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://github.com/ankitects/anki/releases/download/25.02.7/anki-25.02.7-linux-qt6.tar.zst&lt;/nowiki&gt;&lt;/code&gt;


 &lt;code&gt;tar xaf anki-25.02.7-linux-qt6.tar.zst
 cd  anki-25.02.7-linux-qt6.tar.zst
 sudo ./install.sh
 QT_DEBUG_PLUGINS=1 anki&lt;/code&gt;

=== Erweiterungen ===

==== Erweiterungen installieren ====
 &lt;code&gt;1436550454 1933645497 1463041493 1190756458&lt;/code&gt;</text>
      <sha1>h5bqnlruahfaetnres4oj3u1s0pzv1y</sha1>
    </revision>
    <revision>
      <id>699</id>
      <parentid>698</parentid>
      <timestamp>2025-07-23T12:19:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Anki herunterladen */</comment>
      <origin>699</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="750" sha1="dxyzihxtx2lmbehfb7jqgegido5xa8s" xml:space="preserve">Anki ist ein Programm zum Lernen von Vokabeln und anderen Inhalten. Es ist für Windows, Linux und Mac OS X verfügbar. Anki ist Open Source und kostenlos. Es ist auch für Android und iOS verfügbar, aber diese Versionen sind nicht kostenlos.


=== Anforderungen ===
 &lt;code&gt;sudo apt install libxcb-xinerama0 libxcb-cursor0 libnss3&lt;/code&gt;


=== Anki herunterladen ===
 &lt;code&gt;cd $HOME
 wget &lt;nowiki&gt;https://github.com/ankitects/anki/releases/download/25.02.7/anki-25.02.7-linux-qt6.tar.zst&lt;/nowiki&gt;&lt;/code&gt;


 &lt;code&gt;tar xaf anki-25.02.7-linux-qt6.tar.zst
 cd  anki-25.02.7-linux-qt6
 sudo ./install.sh
 QT_DEBUG_PLUGINS=1 anki&lt;/code&gt;

=== Erweiterungen ===

==== Erweiterungen installieren ====
 &lt;code&gt;1436550454 1933645497 1463041493 1190756458&lt;/code&gt;</text>
      <sha1>dxyzihxtx2lmbehfb7jqgegido5xa8s</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Mailfix</title>
    <ns>3000</ns>
    <id>183</id>
    <revision>
      <id>707</id>
      <timestamp>2025-07-30T13:57:44Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „&lt;pre&gt; sudo apt update &amp;&amp; sudo apt install -y postfix certbot &lt;/pre&gt;“</comment>
      <origin>707</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="67" sha1="5hwzw0ceyx3lzchwa92r3jkzvi4julk" xml:space="preserve">&lt;pre&gt;
sudo apt update &amp;&amp; sudo apt install -y postfix certbot
&lt;/pre&gt;</text>
      <sha1>5hwzw0ceyx3lzchwa92r3jkzvi4julk</sha1>
    </revision>
  </page>
  <page>
    <title>Server:Postfix</title>
    <ns>3000</ns>
    <id>184</id>
    <revision>
      <id>713</id>
      <timestamp>2025-08-01T12:29:10Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>713</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3451" sha1="jeymvjaw8bgmaw46kormj7l25nnl927" xml:space="preserve">= Postfix Installation auf Ubuntu mit Let's Encrypt SSL =

== Voraussetzungen ==
* Ubuntu Server (20.04 LTS oder neuer)
* Root- oder sudo-Zugriff
* Öffentliche Domain mit DNS-Eintrag auf Server-IP
* Ports 25, 587, 465 in Firewall geöffnet

== Schritt 1: System aktualisieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt update
sudo apt upgrade -y
&lt;/syntaxhighlight&gt;

== Schritt 2: Postfix installieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install postfix -y
&lt;/syntaxhighlight&gt;

Bei der Installation wählen:
* General type: '''Internet Site'''
* System mail name: '''ihre-domain.de'''

== Schritt 3: Postfix Grundkonfiguration ==
&lt;syntaxhighlight lang="bash"&gt;
sudo nano /etc/postfix/main.cf
&lt;/syntaxhighlight&gt;

Wichtige Einstellungen anpassen:
&lt;syntaxhighlight lang="text"&gt;
myhostname = mail.ihre-domain.de
mydomain = ihre-domain.de
myorigin = $mydomain
mydestination = $myhostname, localhost.$mydomain, localhost, $mydomain
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
home_mailbox = Maildir/
&lt;/syntaxhighlight&gt;

== Schritt 4: Certbot für Let's Encrypt installieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install certbot -y
&lt;/syntaxhighlight&gt;

== Schritt 5: SSL-Zertifikat erstellen ==
&lt;syntaxhighlight lang="bash"&gt;
sudo certbot certonly --standalone -d mail.ihre-domain.de
&lt;/syntaxhighlight&gt;

E-Mail-Adresse eingeben und Bedingungen akzeptieren.

== Schritt 6: Postfix für SSL konfigurieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo nano /etc/postfix/main.cf
&lt;/syntaxhighlight&gt;

SSL-Einstellungen hinzufügen:
&lt;syntaxhighlight lang="text"&gt;
# TLS parameters
smtpd_tls_cert_file=/etc/letsencrypt/live/mail.ihre-domain.de/fullchain.pem
smtpd_tls_key_file=/etc/letsencrypt/live/mail.ihre-domain.de/privkey.pem
smtpd_use_tls=yes
smtpd_tls_security_level=may
smtpd_tls_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
smtpd_tls_mandatory_protocols = !SSLv2, !SSLv3, !TLSv1, !TLSv1.1
smtp_tls_security_level=may
smtp_tls_note_starttls_offer=yes
&lt;/syntaxhighlight&gt;

== Schritt 7: Submission Port aktivieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo nano /etc/postfix/master.cf
&lt;/syntaxhighlight&gt;

Folgende Zeilen auskommentieren/hinzufügen:
&lt;syntaxhighlight lang="text"&gt;
submission inet n       -       y       -       -       smtpd
    -o syslog_name=postfix/submission
    -o smtpd_tls_security_level=encrypt
    -o smtpd_sasl_auth_enable=yes
    -o smtpd_recipient_restrictions=permit_sasl_authenticated,reject
&lt;/syntaxhighlight&gt;

== Schritt 8: Postfix neu starten ==
&lt;syntaxhighlight lang="bash"&gt;
sudo systemctl restart postfix
sudo systemctl enable postfix
&lt;/syntaxhighlight&gt;

== Schritt 9: Automatische Zertifikatserneuerung ==
&lt;syntaxhighlight lang="bash"&gt;
sudo crontab -e
&lt;/syntaxhighlight&gt;

Hinzufügen:
&lt;syntaxhighlight lang="text"&gt;
0 2 * * * /usr/bin/certbot renew --quiet --post-hook "systemctl reload postfix"
&lt;/syntaxhighlight&gt;

== Testen ==
&lt;syntaxhighlight lang="bash"&gt;
# Postfix Status prüfen
sudo systemctl status postfix

# SSL-Verbindung testen
openssl s_client -connect mail.ihre-domain.de:587 -starttls smtp
&lt;/syntaxhighlight&gt;



== Test-Mail senden ==

Mit dem folgenden Befehl kann eine Test-Mail über die Kommandozeile versendet werden:

&lt;syntaxhighlight lang="bash"&gt;
echo "Dies ist eine Test-Mail von Postfix." | mail -s "Postfix Test" empfaenger@beispiel.de
&lt;/syntaxhighlight&gt;

Falls das Paket '''mailutils''' noch nicht installiert ist:

&lt;syntaxhighlight lang="bash"&gt;
sudo apt install mailutils -y
&lt;/syntaxhighlight&gt;</text>
      <sha1>jeymvjaw8bgmaw46kormj7l25nnl927</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Postfix</title>
    <ns>3008</ns>
    <id>185</id>
    <revision>
      <id>715</id>
      <timestamp>2025-08-01T22:50:31Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>715</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1425" sha1="foqfhjez5k2smth5wthmao0x2xig0qt" xml:space="preserve">= Postfix mit MailHog auf Ubuntu einrichten =

== Schritt 1: System aktualisieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt update
sudo apt upgrade -y
&lt;/syntaxhighlight&gt;

== Schritt 2: Postfix installieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install postfix -y
&lt;/syntaxhighlight&gt;

Bei der Installation:
* "Internet Site" auswählen
* System mail name: localhost oder gewünschter Hostname

== Schritt 3: Mailutils installieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install mailutils -y
&lt;/syntaxhighlight&gt;

== Schritt 4: MailHog installieren ==
&lt;syntaxhighlight lang="bash"&gt;
wget https://github.com/mailhog/MailHog/releases/download/v1.0.1/MailHog_linux_amd64
sudo chmod +x MailHog_linux_amd64
sudo mv MailHog_linux_amd64 /usr/local/bin/mailhog
&lt;/syntaxhighlight&gt;

== Schritt 5: Postfix für MailHog konfigurieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo nano /etc/postfix/main.cf
&lt;/syntaxhighlight&gt;

Folgende Zeilen hinzufügen/ändern:
&lt;syntaxhighlight lang="text"&gt;
relayhost = [127.0.0.1]:1025
&lt;/syntaxhighlight&gt;

== Schritt 6: Postfix neustarten ==
&lt;syntaxhighlight lang="bash"&gt;
sudo systemctl restart postfix
&lt;/syntaxhighlight&gt;

== Schritt 7: MailHog starten ==
&lt;syntaxhighlight lang="bash"&gt;
mailhog
&lt;/syntaxhighlight&gt;

MailHog läuft auf:
* SMTP: localhost:1025
* Web UI: http://localhost:8025

== Test ==
&lt;syntaxhighlight lang="bash"&gt;
echo "Test Mail" | mail -s "Test Subject" test@example.com
&lt;/syntaxhighlight&gt;</text>
      <sha1>foqfhjez5k2smth5wthmao0x2xig0qt</sha1>
    </revision>
    <revision>
      <id>716</id>
      <parentid>715</parentid>
      <timestamp>2025-08-01T23:02:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>716</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1300" sha1="ja4lqrlqqp4m6w7wf60bwsqvvt8vsla" xml:space="preserve">= Postfix mit MailHog auf Ubuntu einrichten =

== Schritt 1: System aktualisieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt update
sudo apt upgrade -y
&lt;/syntaxhighlight&gt;

== Schritt 2: Postfix installieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install postfix -y
&lt;/syntaxhighlight&gt;

Bei der Installation:
* "Internet Site" auswählen
* System mail name: localhost oder gewünschter Hostname

== Schritt 3: Mailutils installieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install mailutils -y
&lt;/syntaxhighlight&gt;

== Schritt 4: MailHog installieren ==
&lt;syntaxhighlight lang="bash"&gt;
go install github.com/mailhog/MailHog@latest
&lt;/syntaxhighlight&gt;

== Schritt 5: Postfix für MailHog konfigurieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo nano /etc/postfix/main.cf
&lt;/syntaxhighlight&gt;

Folgende Zeilen hinzufügen/ändern:
&lt;syntaxhighlight lang="text"&gt;
relayhost = [127.0.0.1]:1025
&lt;/syntaxhighlight&gt;

== Schritt 6: Postfix neustarten ==
&lt;syntaxhighlight lang="bash"&gt;
sudo systemctl restart postfix
&lt;/syntaxhighlight&gt;

== Schritt 7: MailHog starten ==
&lt;syntaxhighlight lang="bash"&gt;
mailhog
&lt;/syntaxhighlight&gt;

MailHog läuft auf:
* SMTP: localhost:1025
* Web UI: http://localhost:8025

== Test ==
&lt;syntaxhighlight lang="bash"&gt;
echo "Test Mail" | mail -s "Test Subject" test@example.com
&lt;/syntaxhighlight&gt;</text>
      <sha1>ja4lqrlqqp4m6w7wf60bwsqvvt8vsla</sha1>
    </revision>
    <revision>
      <id>717</id>
      <parentid>716</parentid>
      <timestamp>2025-08-02T03:03:06Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>717</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1300" sha1="bh1axf450zub2jopyzfgbcbwsmzbne3" xml:space="preserve">= Postfix mit MailHog auf Ubuntu einrichten =

== Schritt 1: System aktualisieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt update
sudo apt upgrade -y
&lt;/syntaxhighlight&gt;

== Schritt 2: Postfix installieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install postfix -y
&lt;/syntaxhighlight&gt;

Bei der Installation:
* "Internet Site" auswählen
* System mail name: localhost oder gewünschter Hostname

== Schritt 3: Mailutils installieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo apt install mailutils -y
&lt;/syntaxhighlight&gt;

== Schritt 4: MailHog installieren ==
&lt;syntaxhighlight lang="bash"&gt;
go install github.com/mailhog/MailHog@latest
&lt;/syntaxhighlight&gt;

== Schritt 5: Postfix für MailHog konfigurieren ==
&lt;syntaxhighlight lang="bash"&gt;
sudo nano /etc/postfix/main.cf
&lt;/syntaxhighlight&gt;

Folgende Zeilen hinzufügen/ändern:
&lt;syntaxhighlight lang="text"&gt;
relayhost = [127.0.0.1]:1025
&lt;/syntaxhighlight&gt;

== Schritt 6: Postfix neustarten ==
&lt;syntaxhighlight lang="bash"&gt;
sudo systemctl restart postfix
&lt;/syntaxhighlight&gt;

== Schritt 7: MailHog starten ==
&lt;syntaxhighlight lang="bash"&gt;
MailHog
&lt;/syntaxhighlight&gt;

MailHog läuft auf:
* SMTP: localhost:1025
* Web UI: http://localhost:8025

== Test ==
&lt;syntaxhighlight lang="bash"&gt;
echo "Test Mail" | mail -s "Test Subject" test@example.com
&lt;/syntaxhighlight&gt;</text>
      <sha1>bh1axf450zub2jopyzfgbcbwsmzbne3</sha1>
    </revision>
  </page>
  <page>
    <title>IDE:Asp identity</title>
    <ns>3008</ns>
    <id>186</id>
    <revision>
      <id>719</id>
      <timestamp>2025-08-03T20:03:04Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>719</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1794" sha1="ndywig6i2n7by7xc0i5obzbqmvqa75t" xml:space="preserve">= ASP.NET Core Identity in Visual Studio Code auf Ubuntu installieren =

== Voraussetzungen ==
* Ubuntu (20.04 oder höher)
* Visual Studio Code installiert
* .NET SDK installiert

== Schritt 1: .NET SDK installieren ==
&lt;syntaxhighlight lang="bash"&gt;
# Microsoft Paket-Repository hinzufügen
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0

# .NET SDK installieren
sudo apt-get update
sudo apt-get install -y dotnet-sdk-9.0
&lt;/syntaxhighlight&gt;

== Schritt 2: Neues ASP.NET Core MVC Projekt erstellen ==
&lt;syntaxhighlight lang="bash"&gt;
# Projektordner erstellen
mkdir AspIdentityApp
cd AspIdentityApp

# MVC Projekt mit Individual Authentication erstellen
dotnet new mvc --auth Individual -n MyIdentityApp
cd MyIdentityApp
&lt;/syntaxhighlight&gt;

== Schritt 3: Entity Framework Tools installieren ==
&lt;syntaxhighlight lang="bash"&gt;
# EF Core Tools global installieren
dotnet tool install --global dotnet-ef
&lt;/syntaxhighlight&gt;

== Schritt 4: Datenbank migrieren ==
&lt;syntaxhighlight lang="bash"&gt;
# Datenbank-Migration ausführen
dotnet ef database update
&lt;/syntaxhighlight&gt;

== Schritt 5: Projekt in VS Code öffnen ==
&lt;syntaxhighlight lang="bash"&gt;
# VS Code öffnen
code .
&lt;/syntaxhighlight&gt;

== Schritt 6: Erforderliche VS Code Extensions installieren ==
* C# Dev Kit
* C# Extensions
* NuGet Package Manager (von jmrog)


== Schritt 7: Projekt ausführen ==
&lt;syntaxhighlight lang="bash"&gt;
# Anwendung starten
dotnet run
&lt;/syntaxhighlight&gt;

Die Anwendung läuft nun unter https://localhost:5001

== Schritt 8: Login-Seite auf Deutsch anpassen ==

1. Öffne die Datei `Areas/Identity/Pages/Account/Login.cshtml` in Visual Studio Code.
2. Ändere die englischen Texte in deutsche Übersetzungen, z.B.:</text>
      <sha1>ndywig6i2n7by7xc0i5obzbqmvqa75t</sha1>
    </revision>
    <revision>
      <id>720</id>
      <parentid>719</parentid>
      <timestamp>2025-08-03T23:01:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Schritt 8: Login-Seite auf Deutsch anpassen */</comment>
      <origin>720</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1714" sha1="61ufvk0q8yq7hap09047ejpww0zoy1q" xml:space="preserve">= ASP.NET Core Identity in Visual Studio Code auf Ubuntu installieren =

== Voraussetzungen ==
* Ubuntu (20.04 oder höher)
* Visual Studio Code installiert
* .NET SDK installiert

== Schritt 1: .NET SDK installieren ==
&lt;syntaxhighlight lang="bash"&gt;
# Microsoft Paket-Repository hinzufügen
sudo apt install software-properties-common
sudo add-apt-repository ppa:dotnet/backports
sudo apt-get update
sudo apt-get install -y aspnetcore-runtime-9.0

# .NET SDK installieren
sudo apt-get update
sudo apt-get install -y dotnet-sdk-9.0
&lt;/syntaxhighlight&gt;

== Schritt 2: Neues ASP.NET Core MVC Projekt erstellen ==
&lt;syntaxhighlight lang="bash"&gt;
# Projektordner erstellen
mkdir AspIdentityApp
cd AspIdentityApp

# MVC Projekt mit Individual Authentication erstellen
dotnet new mvc --auth Individual -n MyIdentityApp
cd MyIdentityApp
&lt;/syntaxhighlight&gt;

== Schritt 3: Entity Framework Tools installieren ==
&lt;syntaxhighlight lang="bash"&gt;
# EF Core Tools global installieren
dotnet tool install --global dotnet-ef
&lt;/syntaxhighlight&gt;

== Schritt 4: Datenbank migrieren ==
&lt;syntaxhighlight lang="bash"&gt;
# Datenbank-Migration ausführen
dotnet ef database update
&lt;/syntaxhighlight&gt;

== Schritt 5: Projekt in VS Code öffnen ==
&lt;syntaxhighlight lang="bash"&gt;
# VS Code öffnen
code .
&lt;/syntaxhighlight&gt;

== Schritt 6: Erforderliche VS Code Extensions installieren ==
* C# Dev Kit
* C# Extensions
* NuGet Package Manager (von jmrog)


== Schritt 7: Projekt ausführen ==
&lt;syntaxhighlight lang="bash"&gt;
# Anwendung starten
dotnet run
&lt;/syntaxhighlight&gt;

Die Anwendung läuft nun unter https://localhost:5001

== Schritt 8: Login-Seite auf Deutsch anpassen ==

dotnet aspnet-codegenerator identity -dc otto2.Data.ApplicationDbContext</text>
      <sha1>61ufvk0q8yq7hap09047ejpww0zoy1q</sha1>
    </revision>
  </page>
  <page>
    <title>C Sharp gibt es folgende Kategorien von Datentypen</title>
    <ns>0</ns>
    <id>187</id>
    <revision>
      <id>725</id>
      <timestamp>2025-08-11T22:27:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>725</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2012" sha1="i5tossqmk8l094312mcw19cykvss4e7" xml:space="preserve">== Kategorien von Datentypen in C# ==

; 1. Werttypen (Value Types)
* Einfache numerische Typen: sbyte, byte, short, ushort, int, uint, long, ulong
* Gleitkomma / Präzision: float, double, decimal
* Sonstige eingebaute: bool, char
* Aufzählungen: enum
* Strukturen: struct
* Nullable-Werttypen: T? (z.B. int?)
* Tupel: (int x, string name)
* record struct (immutable Werttyp ab C# 10)

; 2. Referenztypen (Reference Types)
* Klassen: class
* Records: record (Referenztyp)
* Schnittstellen: interface
* Arrays: int[], string[,], Span&lt;T&gt; (stackref, aber als Konzept zugehörig)
* Delegates (inkl. Action, Func)
* String: string (immutable)
* Objektbasis: object
* dynamic (späte Bindung)

; 3. Zeigertypen (Pointer Types, unsafe)
* T* (nur im unsafe-Kontext)
* Funktionzeiger: delegate*&lt;...&gt; (ab C# 9)

; 4. Weitere Konzepte
* Generische Typen: List&lt;T&gt;, Dictionary&lt;TKey,TValue&gt;
* Anonyme Typen: var person = new { Name = "Anna", Alter = 30 };
* Iterators / Enumerables: IEnumerable&lt;T&gt;
* Task / Task&lt;T&gt; (asynchrone Referenztypen)
* Span&lt;T&gt; / ReadOnlySpan&lt;T&gt; (ref struct, stapelbasiert, kein Heap)

=== Hinweise ===
* Werttypen werden standardmäßig auf dem Stack (oder inline in Objekten) gespeichert und per Kopie übergeben.
* Referenztypen liegen auf dem Heap; Variablen halten Referenzen.
* Nullable für Referenztypen (string?) aktiviert Nullabilitätsanalyse (ab C# 8).
* Unsichere Zeigertypen erfordern /unsafe und werden selten benötigt.
* Records erleichtern unveränderliche (immutable) Datenmodelle.

=== Kurze Zuordnung (Beispiele) ===
{| class="wikitable"
! Kategorie !! Beispiel !! Beschreibung
|-
| Werttyp || int || 32-bit Ganzzahl
|-
| Referenztyp || string || Immutable Zeichenkette
|-
| Referenztyp || List&lt;int&gt; || Generische Liste
|-
| Werttyp (nullable) || int? || Ganzzahl mit Nullbarkeit
|-
| Zeigertyp || int* || Direkter Speicherzeiger (unsafe)
|}

'''Tipp:''' Verwende nach Möglichkeit sichere Referenz- und Werttypen; setze unsafe nur für Hochleistungs- oder Interop-Szenarien ein.</text>
      <sha1>i5tossqmk8l094312mcw19cykvss4e7</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Später lernen</title>
    <ns>3002</ns>
    <id>188</id>
    <revision>
      <id>753</id>
      <timestamp>2025-08-15T14:19:37Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „==Visual Studio Code== * „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone ==Golang Website== * Trevor Sawler Building Modern Web Applications with Go (Golang) ==Rust== * Learn to Code with Rust	Boris Paskhaver  ==Go== * Maximilian Schwarzmüller Go - The Complete Guide ==C++== * Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond  * [[Kurse:Später lernen]]“</comment>
      <origin>753</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="414" sha1="ihkv75z3s05sqfbsa8k7pxmaalqygbj" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Golang Website==
* Trevor Sawler Building Modern Web Applications with Go (Golang)
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==Go==
* Maximilian Schwarzmüller Go - The Complete Guide
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond

* [[Kurse:Später lernen]]</text>
      <sha1>ihkv75z3s05sqfbsa8k7pxmaalqygbj</sha1>
    </revision>
    <revision>
      <id>754</id>
      <parentid>753</parentid>
      <timestamp>2025-08-15T14:20:22Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* C++ */</comment>
      <origin>754</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="386" sha1="ku08gc65q609nzyx9uvoc1hrvmlbbap" xml:space="preserve">==Visual Studio Code==
* „Visual Studio Code for Developers 2025“ (Navone) Estefania Cassingena Navone
==Golang Website==
* Trevor Sawler Building Modern Web Applications with Go (Golang)
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==Go==
* Maximilian Schwarzmüller Go - The Complete Guide
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond</text>
      <sha1>ku08gc65q609nzyx9uvoc1hrvmlbbap</sha1>
    </revision>
    <revision>
      <id>755</id>
      <parentid>754</parentid>
      <timestamp>2025-08-15T14:20:45Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>755</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="279" sha1="9028kw2nxkazuas2g1pghpv75ci0iuo" xml:space="preserve">==Golang Website==
* Trevor Sawler Building Modern Web Applications with Go (Golang)
==Rust==
* Learn to Code with Rust	Boris Paskhaver

==Go==
* Maximilian Schwarzmüller Go - The Complete Guide
==C++==
* Dr. Frank Mitropoulos Beginning C++ Programming - From Beginner to Beyond</text>
      <sha1>9028kw2nxkazuas2g1pghpv75ci0iuo</sha1>
    </revision>
  </page>
  <page>
    <title>Tv</title>
    <ns>0</ns>
    <id>189</id>
    <revision>
      <id>762</id>
      <timestamp>2025-08-22T02:03:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „* https://www.dailymotion.com/video/x8etr0c“</comment>
      <origin>762</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="43" sha1="j5zr9sd2u5ks9rqzy2dbbbos3lp2iox" xml:space="preserve">* https://www.dailymotion.com/video/x8etr0c</text>
      <sha1>j5zr9sd2u5ks9rqzy2dbbbos3lp2iox</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Variable-Datentypen</title>
    <ns>3002</ns>
    <id>190</id>
    <revision>
      <id>765</id>
      <timestamp>2025-08-26T04:22:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>765</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2557" sha1="13kpir6sp8h4nprt0mxgj5tia0qhn31" xml:space="preserve">== Datentypen in JavaScript ==

JavaScript unterstützt verschiedene Datentypen. Die wichtigsten sind:

* '''String''' – Zeichenketten, z.B. &lt;code&gt;"Hallo Welt"&lt;/code&gt;
* '''Number''' – Zahlen, z.B. &lt;code&gt;42&lt;/code&gt; oder &lt;code&gt;3.14&lt;/code&gt;
* '''Boolean''' – Wahrheitswerte, &lt;code&gt;true&lt;/code&gt; oder &lt;code&gt;false&lt;/code&gt;
* '''Undefined''' – Ein Wert, der nicht definiert ist
* '''Null''' – Ein explizit gesetzter "kein Wert"
* '''Object''' – Komplexe Datentypen wie Arrays, Funktionen oder eigene Objekte
* '''Symbol''' – Einzigartige und unveränderliche Werte (ab ES6)
* '''BigInt''' – Für sehr große Ganzzahlen (ab ES2020)

== Datentypen in Java ==

Java verwendet verschiedene Datentypen, die in zwei Hauptkategorien unterteilt werden:

* '''Primitive Datentypen''':
** &lt;code&gt;byte&lt;/code&gt; – 8 Bit, Ganzzahlen von -128 bis 127
** &lt;code&gt;short&lt;/code&gt; – 16 Bit, Ganzzahlen von -32.768 bis 32.767
** &lt;code&gt;int&lt;/code&gt; – 32 Bit, Ganzzahlen von -2.147.483.648 bis 2.147.483.647
** &lt;code&gt;long&lt;/code&gt; – 64 Bit, Ganzzahlen von -9.223.372.036.854.775.808 bis 9.223.372.036.854.775.807
** &lt;code&gt;float&lt;/code&gt; – 32 Bit, Fließkommazahlen
** &lt;code&gt;double&lt;/code&gt; – 64 Bit, Fließkommazahlen mit doppelter Genauigkeit
** &lt;code&gt;char&lt;/code&gt; – 16 Bit, einzelne Unicode-Zeichen
** &lt;code&gt;boolean&lt;/code&gt; – Wahrheitswerte: &lt;code&gt;true&lt;/code&gt; oder &lt;code&gt;false&lt;/code&gt;

* '''Referenzdatentypen''':
** &lt;code&gt;String&lt;/code&gt; – Zeichenketten
** Arrays – z.B. &lt;code&gt;int[]&lt;/code&gt;
** Eigene Klassen und Objekte

Jeder Datentyp hat spezifische Eigenschaften und Verwendungszwecke.

== Datentypen in C# ==

C# bietet verschiedene Datentypen, die in zwei Hauptgruppen unterteilt werden:

* '''Werttypen''':
** &lt;code&gt;byte&lt;/code&gt; – 8 Bit, Ganzzahlen von 0 bis 255
** &lt;code&gt;short&lt;/code&gt; – 16 Bit, Ganzzahlen von -32.768 bis 32.767
** &lt;code&gt;int&lt;/code&gt; – 32 Bit, Ganzzahlen von -2.147.483.648 bis 2.147.483.647
** &lt;code&gt;long&lt;/code&gt; – 64 Bit, Ganzzahlen von -9.223.372.036.854.775.808 bis 9.223.372.036.854.775.807
** &lt;code&gt;float&lt;/code&gt; – 32 Bit, Fließkommazahlen
** &lt;code&gt;double&lt;/code&gt; – 64 Bit, Fließkommazahlen mit doppelter Genauigkeit
** &lt;code&gt;decimal&lt;/code&gt; – 128 Bit, Dezimalzahlen mit hoher Genauigkeit
** &lt;code&gt;char&lt;/code&gt; – 16 Bit, einzelne Unicode-Zeichen
** &lt;code&gt;bool&lt;/code&gt; – Wahrheitswerte: &lt;code&gt;true&lt;/code&gt; oder &lt;code&gt;false&lt;/code&gt;

* '''Referenztypen''':
** &lt;code&gt;string&lt;/code&gt; – Zeichenketten
** Arrays – z.B. &lt;code&gt;int[]&lt;/code&gt;
** Eigene Klassen und Objekte

Jeder Datentyp in C# hat bestimmte Eigenschaften und Einsatzbereiche.</text>
      <sha1>13kpir6sp8h4nprt0mxgj5tia0qhn31</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Datentypen-C-Sharp</title>
    <ns>3002</ns>
    <id>191</id>
    <revision>
      <id>767</id>
      <timestamp>2025-09-01T23:05:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>767</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4491" sha1="jagylb2maj6c4k8s8nqefoczm4rv9gx" xml:space="preserve">= C# String-Operationen und wichtige Methoden =

== Grundlagen ==
; Deklaration
&lt;syntaxhighlight lang="csharp"&gt;
string name = "Alice";
string leer = string.Empty;
&lt;/syntaxhighlight&gt;

; Verkettung
&lt;syntaxhighlight lang="csharp"&gt;
string full = vorname + " " + nachname;
string interp = $"{vorname} {nachname}";
var builder = new StringBuilder().Append(vorname).Append(' ').Append(nachname).ToString();
&lt;/syntaxhighlight&gt;

== Häufig genutzte Eigenschaften ==
* Length – Anzahl der UTF-16 Codeeinheiten (nicht zwingend Benutzer-grafeme)

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Equals(a, b);                     // Ordinal, case-sensitiv
string.Equals(a, b, StringComparison.OrdinalIgnoreCase);
a.Equals(b, StringComparison.Ordinal);
a == b;                                  // Wertvergleich
string.Compare(a, b, StringComparison.Ordinal);
&lt;/syntaxhighlight&gt;

== Suchen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Contains("abc", StringComparison.Ordinal);
str.StartsWith("pre", StringComparison.OrdinalIgnoreCase);
str.EndsWith("suf", StringComparison.Ordinal);
str.IndexOf("x", StringComparison.Ordinal);
str.LastIndexOf('.');
&lt;/syntaxhighlight&gt;

== Extrahieren ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Substring(startIndex);
str.Substring(startIndex, length);
str[startIndex];         // einzelnes char
&lt;/syntaxhighlight&gt;

== Teilstrings moderner (Span-Slicing) ==
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = str.AsSpan();
var teil = span.Slice(5, 3); // vermeidet Kopie
&lt;/syntaxhighlight&gt;

== Aufteilen &amp; Zusammenfügen ==
&lt;syntaxhighlight lang="csharp"&gt;
var parts = str.Split('.', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
string joined = string.Join(";", parts);
&lt;/syntaxhighlight&gt;

== Trimmen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Trim();      // Whitespace
str.TrimStart();
str.TrimEnd();
str.Trim('0');   // spezifische Zeichen
&lt;/syntaxhighlight&gt;

== Ersetzen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Replace("alt", "neu");
str.Replace('a', 'b');
Regex.Replace(str, "[0-9]+", "#");
&lt;/syntaxhighlight&gt;

== Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Format("Wert: {0:N2}", value);
$"Wert: {value:N2}";
value.ToString("N2", CultureInfo.InvariantCulture);
&lt;/syntaxhighlight&gt;

== Groß/Kleinschreibung ==
&lt;syntaxhighlight lang="csharp"&gt;
str.ToUpperInvariant();
str.ToLower(CultureInfo.CurrentCulture);
&lt;/syntaxhighlight&gt;

== Einfügen &amp; Entfernen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Insert(index, "XYZ");
str.Remove(startIndex);
str.Remove(startIndex, count);
&lt;/syntaxhighlight&gt;

== Pad (Auffüllen) ==
&lt;syntaxhighlight lang="csharp"&gt;
"42".PadLeft(5, '0');   // 00042
"42".PadRight(5, '.');  // 42...
&lt;/syntaxhighlight&gt;

== Zeichenprüfung ==
&lt;syntaxhighlight lang="csharp"&gt;
char.IsLetterOrDigit(ch);
char.IsWhiteSpace(ch);
&lt;/syntaxhighlight&gt;

== Immutable Hinweis ==
Strings sind unveränderlich. Viele Operationen erzeugen neue Instanzen. Für viele Verkettungen: StringBuilder.

== StringBuilder ==
&lt;syntaxhighlight lang="csharp"&gt;
var sb = new StringBuilder(capacity:256)
    .Append("Zeile ").AppendLine("1")
    .AppendFormat("Wert={0}", 123);
string result = sb.ToString();
&lt;/syntaxhighlight&gt;

== Sicherheitsrelevante Vergleiche ==
&lt;syntaxhighlight lang="csharp"&gt;
CryptographicOperations.FixedTimeEquals(
    MemoryMarshal.AsBytes("secret"u8),
    MemoryMarshal.AsBytes(eingabe.AsSpan()));
&lt;/syntaxhighlight&gt;

== Null / Empty / WhiteSpace ==
&lt;syntaxhighlight lang="csharp"&gt;
string.IsNullOrEmpty(str);
string.IsNullOrWhiteSpace(str);
&lt;/syntaxhighlight&gt;

== Interpolated String Handler (Performance) ==
&lt;syntaxhighlight lang="csharp"&gt;
[InterpolatedStringHandler]
public ref struct LogHandler {
    // eigener Handler für Logging
}
&lt;/syntaxhighlight&gt;

== Raw String Literals (C# 11) ==
&lt;syntaxhighlight lang="csharp"&gt;
string json = """
{
  "id": 1,
  "name": "Alice"
}
""";
&lt;/syntaxhighlight&gt;

== Escapes ==
&lt;syntaxhighlight lang="csharp"&gt;
string pfad = @"C:\Temp\log.txt";
string zeile = "Text\nNeue Zeile\tTab";
&lt;/syntaxhighlight&gt;

== Normalisierung (Unicode) ==
&lt;syntaxhighlight lang="csharp"&gt;
string norm = str.Normalize(NormalizationForm.FormC);
&lt;/syntaxhighlight&gt;

== Split vs Span ==
Für Hochleistung: str.AsSpan().Split(...) (ab .NET 8: MemoryExtensions.Split)

== Zusammenfassung ==
Kurzliste: Length, Indexer, Substring, Contains, StartsWith, EndsWith, IndexOf, Split, Join, Trim*, Replace, Insert, Remove, PadLeft/Right, ToUpper*/ToLower*, Format/$-Interpolation, Equals/Compare, Normalize, StringBuilder.</text>
      <sha1>jagylb2maj6c4k8s8nqefoczm4rv9gx</sha1>
    </revision>
    <revision>
      <id>768</id>
      <parentid>767</parentid>
      <timestamp>2025-09-01T23:25:18Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>768</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="17263" sha1="tm0qksimnnw5st2ikzn127n35ap0b8l" xml:space="preserve">= C# String-Operationen und wichtige Methoden =

== Grundlagen ==
; Deklaration
&lt;syntaxhighlight lang="csharp"&gt;
string name = "Alice";
string leer = string.Empty;
&lt;/syntaxhighlight&gt;

; Verkettung
&lt;syntaxhighlight lang="csharp"&gt;
string full = vorname + " " + nachname;
string interp = $"{vorname} {nachname}";
var builder = new StringBuilder().Append(vorname).Append(' ').Append(nachname).ToString();
&lt;/syntaxhighlight&gt;

== Häufig genutzte Eigenschaften ==
* Length – Anzahl der UTF-16 Codeeinheiten (nicht zwingend Benutzer-grafeme)

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Equals(a, b);                     // Ordinal, case-sensitiv
string.Equals(a, b, StringComparison.OrdinalIgnoreCase);
a.Equals(b, StringComparison.Ordinal);
a == b;                                  // Wertvergleich
string.Compare(a, b, StringComparison.Ordinal);
&lt;/syntaxhighlight&gt;

== Suchen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Contains("abc", StringComparison.Ordinal);
str.StartsWith("pre", StringComparison.OrdinalIgnoreCase);
str.EndsWith("suf", StringComparison.Ordinal);
str.IndexOf("x", StringComparison.Ordinal);
str.LastIndexOf('.');
&lt;/syntaxhighlight&gt;

== Extrahieren ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Substring(startIndex);
str.Substring(startIndex, length);
str[startIndex];         // einzelnes char
&lt;/syntaxhighlight&gt;

== Teilstrings moderner (Span-Slicing) ==
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = str.AsSpan();
var teil = span.Slice(5, 3); // vermeidet Kopie
&lt;/syntaxhighlight&gt;

== Aufteilen &amp; Zusammenfügen ==
&lt;syntaxhighlight lang="csharp"&gt;
var parts = str.Split('.', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
string joined = string.Join(";", parts);
&lt;/syntaxhighlight&gt;

== Trimmen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Trim();      // Whitespace
str.TrimStart();
str.TrimEnd();
str.Trim('0');   // spezifische Zeichen
&lt;/syntaxhighlight&gt;

== Ersetzen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Replace("alt", "neu");
str.Replace('a', 'b');
Regex.Replace(str, "[0-9]+", "#");
&lt;/syntaxhighlight&gt;

== Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Format("Wert: {0:N2}", value);
$"Wert: {value:N2}";
value.ToString("N2", CultureInfo.InvariantCulture);
&lt;/syntaxhighlight&gt;

== Groß/Kleinschreibung ==
&lt;syntaxhighlight lang="csharp"&gt;
str.ToUpperInvariant();
str.ToLower(CultureInfo.CurrentCulture);
&lt;/syntaxhighlight&gt;

== Einfügen &amp; Entfernen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Insert(index, "XYZ");
str.Remove(startIndex);
str.Remove(startIndex, count);
&lt;/syntaxhighlight&gt;

== Pad (Auffüllen) ==
&lt;syntaxhighlight lang="csharp"&gt;
"42".PadLeft(5, '0');   // 00042
"42".PadRight(5, '.');  // 42...
&lt;/syntaxhighlight&gt;

== Zeichenprüfung ==
&lt;syntaxhighlight lang="csharp"&gt;
char.IsLetterOrDigit(ch);
char.IsWhiteSpace(ch);
&lt;/syntaxhighlight&gt;

== Immutable Hinweis ==
Strings sind unveränderlich. Viele Operationen erzeugen neue Instanzen. Für viele Verkettungen: StringBuilder.

== StringBuilder ==
&lt;syntaxhighlight lang="csharp"&gt;
var sb = new StringBuilder(capacity:256)
    .Append("Zeile ").AppendLine("1")
    .AppendFormat("Wert={0}", 123);
string result = sb.ToString();
&lt;/syntaxhighlight&gt;

== Sicherheitsrelevante Vergleiche ==
&lt;syntaxhighlight lang="csharp"&gt;
CryptographicOperations.FixedTimeEquals(
    MemoryMarshal.AsBytes("secret"u8),
    MemoryMarshal.AsBytes(eingabe.AsSpan()));
&lt;/syntaxhighlight&gt;

== Null / Empty / WhiteSpace ==
&lt;syntaxhighlight lang="csharp"&gt;
string.IsNullOrEmpty(str);
string.IsNullOrWhiteSpace(str);
&lt;/syntaxhighlight&gt;

== Interpolated String Handler (Performance) ==
&lt;syntaxhighlight lang="csharp"&gt;
[InterpolatedStringHandler]
public ref struct LogHandler {
    // eigener Handler für Logging
}
&lt;/syntaxhighlight&gt;

== Raw String Literals (C# 11) ==
&lt;syntaxhighlight lang="csharp"&gt;
string json = """
{
  "id": 1,
  "name": "Alice"
}
""";
&lt;/syntaxhighlight&gt;

== Escapes ==
&lt;syntaxhighlight lang="csharp"&gt;
string pfad = @"C:\Temp\log.txt";
string zeile = "Text\nNeue Zeile\tTab";
&lt;/syntaxhighlight&gt;

== Normalisierung (Unicode) ==
&lt;syntaxhighlight lang="csharp"&gt;
string norm = str.Normalize(NormalizationForm.FormC);
&lt;/syntaxhighlight&gt;

== Split vs Span ==
Für Hochleistung: str.AsSpan().Split(...) (ab .NET 8: MemoryExtensions.Split)

== Zusammenfassung ==
Kurzliste: Length, Indexer, Substring, Contains, StartsWith, EndsWith, IndexOf, Split, Join, Trim*, Replace, Insert, Remove, PadLeft/Right, ToUpper*/ToLower*, Format/$-Interpolation, Equals/Compare, Normalize, StringBuilder.

== Ganzzahlen: Operationen und wichtige Methoden ==

=== Basis-Typen ===
* sbyte / byte (8 Bit), short / ushort (16), int / uint (32), long / ulong (64)
* nint / nuint (plattformabhängig), BigInteger (beliebig groß, System.Numerics)

=== Deklaration &amp; Literale ===
&lt;syntaxhighlight lang="csharp"&gt;
int a = 42;
long b = 1_000_000_000L;
uint c = 0u;
nint p = 123n;
int bin = 0b1010_1100;
int hex = 0xFF_A0;
&lt;/syntaxhighlight&gt;

=== Konvertierung / Casting ===
&lt;syntaxhighlight lang="csharp"&gt;
long l = a;              // implizit (erweiternd)
int k = (int)l;          // explizit (evtl. Datenverlust)
int parsed = int.Parse("123", CultureInfo.InvariantCulture);
if (int.TryParse("123", out var val)) { /* ok */ }
&lt;/syntaxhighlight&gt;

=== Rechenoperationen ===
&lt;syntaxhighlight lang="csharp"&gt;
int sum = x + y;
int diff = x - y;
int prod = x * y;
int quot = x / y;        // ganzzahlig, Rest abgeschnitten
int mod = x % y;
int neg = -x;
&lt;/syntaxhighlight&gt;

=== Division: Ganzzahl vs Gleitkomma ===
&lt;syntaxhighlight lang="csharp"&gt;
int r1 = 5 / 2;      // 2
double r2 = 5 / 2.0; // 2.5
&lt;/syntaxhighlight&gt;

=== Inkrement / Dekrement ===
&lt;syntaxhighlight lang="csharp"&gt;
i++;
++i;
i--;
&lt;/syntaxhighlight&gt;

=== Overflow-Kontrolle ===
&lt;syntaxhighlight lang="csharp"&gt;
checked {
    int o = int.MaxValue;
    // int p = o + 1;  // OverflowException
}
unchecked {
    int wrap = int.MaxValue + 1; // Wrap-around
}
bool ok = int.TryParse("9999999999", out _); // false wenn außerhalb Range
&lt;/syntaxhighlight&gt;

=== Vergleich &amp; Relationen ===
&lt;syntaxhighlight lang="csharp"&gt;
bool eq = a == b;
bool ne = a != b;
bool lt = a &lt; b;
bool between = x &gt;= min &amp;&amp; x &lt;= max;
&lt;/syntaxhighlight&gt;

=== Bitoperationen ===
&lt;syntaxhighlight lang="csharp"&gt;
int and = flags &amp; mask;
int or  = flags | mask;
int xor = flags ^ mask;
int not = ~flags;
int shiftedL = value &lt;&lt; 3;
int shiftedR = value &gt;&gt; 2;
bool has = (flags &amp; mask) != 0;
&lt;/syntaxhighlight&gt;

=== BitHelpers (.NET) ===
&lt;syntaxhighlight lang="csharp"&gt;
int pop = System.Numerics.BitOperations.PopCount((uint)value);
int leading = BitOperations.LeadingZeroCount((uint)value);
int rot = BitOperations.RotateLeft(value, 5);
&lt;/syntaxhighlight&gt;

=== Math / Numerik ===
&lt;syntaxhighlight lang="csharp"&gt;
int abs = Math.Abs(v);
int clamped = Math.Clamp(v, 0, 100);
int max = Math.Max(a, b);
int min = Math.Min(a, b);
int sign = Math.Sign(v);
long pow2 = 1L &lt;&lt; n;
&lt;/syntaxhighlight&gt;

=== Zufallszahlen ===
&lt;syntaxhighlight lang="csharp"&gt;
int r = Random.Shared.Next(0, 100);          // 0..99
int rr = RandomNumberGenerator.GetInt32(0, 100); // kryptographisch
&lt;/syntaxhighlight&gt;

=== Parsing / Formatierung ===
&lt;syntaxhighlight lang="csharp"&gt;
int n = int.Parse("42");
if (int.TryParse("42", NumberStyles.Integer, CultureInfo.InvariantCulture, out var num)) {}
string s1 = num.ToString();          // kulturabhängig
string s2 = num.ToString("D6");      // führende Nullen
string hexStr = num.ToString("X");   // Hex
&lt;/syntaxhighlight&gt;

=== Performance / Span Parsing ===
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = "12345".AsSpan();
if (int.TryParse(span, out int fast)) { }
&lt;/syntaxhighlight&gt;

=== Checked Arithmetik Helpers (C# 11+) ===
&lt;syntaxhighlight lang="csharp"&gt;
int safe = int.CreateChecked((long)other);
int trunc = int.CreateTruncating(big);
int sat = int.CreateSaturating(big);
&lt;/syntaxhighlight&gt;

=== Pattern Matching / Ranges ===
&lt;syntaxhighlight lang="csharp"&gt;
bool ok = value is &gt;= 0 and &lt;= 10;
&lt;/syntaxhighlight&gt;

=== Flags Enum Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
[Flags]
enum Perm { None=0, Read=1, Write=2, Exec=4 }
Perm p = Perm.Read | Perm.Write;
bool canWrite = p.HasFlag(Perm.Write); // langsamer
bool canWriteFast = (p &amp; Perm.Write) != 0;
&lt;/syntaxhighlight&gt;

=== Häufige Fehlerquellen ===
* Ganzzahldivision statt Gleitkomma
* Overflow bei Multiplikation (checked nutzen)
* Parse ohne Fehlerprüfung
* Bitmasken falsch (Klammern, Vorzeichen)

=== Zusammenfassung Ganzzahlen ===
Kurzliste: + - * / % ++ -- Vergleiche, Bit: &amp; | ^ ~ &lt;&lt; &gt;&gt;, Parse/TryParse, ToString("D"/"X"), Math.* (Abs, Clamp, Min, Max, Sign), Random.Shared.Next, BitOperations (PopCount/Rotate/LeadingZeroCount), checked/unchecked, Flags-Enums.

== Fließkommazahlen: Operationen und wichtige Methoden ==

=== Typen &amp; Eigenschaften ===
* float (Single, 32 Bit IEEE 754, ca. 7 Dezimalstellen)
* double (64 Bit IEEE 754, ca. 15–17 Dezimalstellen) – Standard
* decimal (128 Bit, Basis-10, 28–29 signifikante Stellen, langsamer, für Geld/Buchhaltung)
&lt;syntaxhighlight lang="csharp"&gt;
float f = 1.5f;
double d = 1.5;
decimal m = 1.5m;
&lt;/syntaxhighlight&gt;

=== Basis-Operationen ===
&lt;syntaxhighlight lang="csharp"&gt;
double sum = a + b;
double diff = a - b;
double prod = a * b;
double quot = a / b;
double neg = -a;
&lt;/syntaxhighlight&gt;

=== Vergleich (Toleranz) ===
Direkter == Vergleich problematisch wegen Rundungsfehlern.
&lt;syntaxhighlight lang="csharp"&gt;
bool AreClose(double x, double y, double relEps = 1e-12, double absEps = 1e-15) {
    double diff = Math.Abs(x - y);
    if (diff &lt;= absEps) return true;
    return diff &lt;= relEps * Math.Max(Math.Abs(x), Math.Abs(y));
}
&lt;/syntaxhighlight&gt;

=== Spezielle Werte ===
&lt;syntaxhighlight lang="csharp"&gt;
double nan = double.NaN;
double posInf = double.PositiveInfinity;
double negInf = double.NegativeInfinity;
bool isNan = double.IsNaN(nan);
bool isInf = double.IsInfinity(posInf);
bool isFinite = double.IsFinite(1.0);
double eps = double.Epsilon; // kleinste &gt;0 Subnormal bei double
&lt;/syntaxhighlight&gt;

=== Decimal Besonderheiten ===
&lt;syntaxhighlight lang="csharp"&gt;
decimal preis = 12.34m;
decimal sum = preis * 3; // exakte Dezimalarithmetik (Basis 10)
&lt;/syntaxhighlight&gt;

=== Casting / Konvertierung ===
&lt;syntaxhighlight lang="csharp"&gt;
double dd = (double)f;           // implizit float -&gt; double
float ff = (float)dd;            // explizit (Präzisionsverlust)
decimal dm = (decimal)dd;        // kann Overflow werfen
double back = (double)dm;
&lt;/syntaxhighlight&gt;

=== Rundung ===
&lt;syntaxhighlight lang="csharp"&gt;
double r1 = Math.Round(2.345, 2); // Banker's (ToEven)
double r2 = Math.Round(2.345, 2, MidpointRounding.AwayFromZero);
double ceil = Math.Ceiling(x);
double floor = Math.Floor(x);
double trunc = Math.Truncate(x);
&lt;/syntaxhighlight&gt;

=== Math Funktionen ===
&lt;syntaxhighlight lang="csharp"&gt;
double abs = Math.Abs(x);
double pow = Math.Pow(2.0, 10);
double sq = Math.Sqrt(v);
double c = Math.Cos(a);
double s = Math.Sin(a);
double t = Math.Tan(a);
double exp = Math.Exp(a);
double ln = Math.Log(a);
double log10 = Math.Log10(a);
double clamped = Math.Clamp(x, 0.0, 1.0);
double min = Math.Min(a, b);
double max = Math.Max(a, b);
double copySign = Math.CopySign(magnitude:5.0, sign:-2.0);
&lt;/syntaxhighlight&gt;

=== MathF für float ===
&lt;syntaxhighlight lang="csharp"&gt;
float sf = MathF.Sqrt(3f);
&lt;/syntaxhighlight&gt;

=== Fused Multiply-Add (FMA) ===
&lt;syntaxhighlight lang="csharp"&gt;
double fma = Math.FusedMultiplyAdd(a, b, c); // a*b + c mit geringerer Rundung
&lt;/syntaxhighlight&gt;

=== Parsing &amp; Formatierung ===
&lt;syntaxhighlight lang="csharp"&gt;
double v = double.Parse("1.23", CultureInfo.InvariantCulture);
if (double.TryParse("1.23", NumberStyles.Float, CultureInfo.InvariantCulture, out var parsed)) { }
string sG = v.ToString("G17", CultureInfo.InvariantCulture); // max Genauigkeit double
string sF = v.ToString("F2");       // 2 Nachkommastellen
string sE = v.ToString("E3");       // wissenschaftlich
string sR = v.ToString("R");        // Round-trip
&lt;/syntaxhighlight&gt;

=== Span Parsing (Performance) ===
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = "3.14159".AsSpan();
if (double.TryParse(span, NumberStyles.Float, CultureInfo.InvariantCulture, out double pi)) { }
&lt;/syntaxhighlight&gt;

=== Interop / Bit-Ebene ===
&lt;syntaxhighlight lang="csharp"&gt;
long bits = BitConverter.DoubleToInt64Bits(d);
double again = BitConverter.Int64BitsToDouble(bits);
int floatBits = BitConverter.SingleToInt32Bits(f);
&lt;/syntaxhighlight&gt;

=== NaN Verhalten ===
&lt;syntaxhighlight lang="csharp"&gt;
bool eqNaN = double.NaN == double.NaN;        // false
bool notEq = double.NaN != double.NaN;        // true
bool ordered = double.NaN &lt; 1.0;              // false
&lt;/syntaxhighlight&gt;

=== Aggregationen / Summe (Stabilität) ===
&lt;syntaxhighlight lang="csharp"&gt;
double StableSum(double[] data) {
    double sum = 0, c = 0; // Kahan
    foreach (var x in data) {
        double y = x - c;
        double t = sum + y;
        c = (t - sum) - y;
        sum = t;
    }
    return sum;
}
&lt;/syntaxhighlight&gt;

=== Random Gleitkomma ===
&lt;syntaxhighlight lang="csharp"&gt;
double r = Random.Shared.NextDouble();      // [0,1)
double rRange = Random.Shared.NextDouble() * (max - min) + min;
&lt;/syntaxhighlight&gt;

=== Performance Hinweise ===
* double schneller als decimal
* float spart Speicher (Arrays, GPU), aber geringere Präzision
* Avoid boxing bei Formatierung durch Span-basierte APIs (TryFormat)

=== Tolerante Sortierung Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
Array.Sort(values, (x,y) =&gt; Math.Abs(x-y) &lt; 1e-12 ? 0 : x.CompareTo(y));
&lt;/syntaxhighlight&gt;

=== Exceptions vermeiden ===
Verwendung von TryParse, keine Annahme auf exakte Darstellung (0.1 + 0.2 != 0.3 exakt).

=== Häufige Fehlerquellen ===
* Direkter == Vergleich ohne Toleranz
* decimal mit Math.* (gibt nur double-Überladungen für viele Funktionen)
* Kulturabhängige Dezimaltrennzeichen beim Parse
* Rundung (MidpointRounding falsch gewählt)
* Überlauf in decimal (Casting von sehr großen double)

=== Auswahlhilfe ===
* Wissenschaft / Grafik: float (wenn Speicher wichtig) oder double
* Standard: double
* Geld / Finanzen (exakte Dezimalstellen): decimal

=== Zusammenfassung Fließkomma ===
Kurzliste: + - * / Vergleich mit Toleranz, Math (Sqrt, Pow, Sin, Cos, Log, Exp, Clamp, Min/Max, CopySign, FusedMultiplyAdd), Round/Ceiling/Floor/Truncate, double.IsNaN/IsInfinity/IsFinite, Parse/TryParse, ToString("G17","F","E","R"), BitConverter.*Bits, Random.Shared.NextDouble, Kahan-Summe, decimal für Geld.

= C# bool-Operationen und wichtige Methoden =

== Typ &amp; Literale ==
&lt;syntaxhighlight lang="csharp"&gt;
bool t = true;
bool f = false;
&lt;/syntaxhighlight&gt;
Wird primär für Kontrollfluss genutzt; keine implizite Konvertierung zu/zur Zahl.

== Logische Operatoren ==
&lt;syntaxhighlight lang="csharp"&gt;
bool not = !t;        // Negation
bool both = a &amp;&amp; b;   // UND (short-circuit)
bool either = a || b; // ODER (short-circuit)
bool xor = a ^ b;     // Exklusiv-Oder
&lt;/syntaxhighlight&gt;
&amp; und | auf bool werten beide Operanden immer aus:
&lt;syntaxhighlight lang="csharp"&gt;
bool bothAll = a &amp; b;
bool eitherAll = a | b;
&lt;/syntaxhighlight&gt;

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
bool eq = a == b;
bool ne = a != b;
&lt;/syntaxhighlight&gt;

== Zuweisung vs Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
// if (a = b)  // Compilerfehler (gut gegen Verwechslung mit ==)
&lt;/syntaxhighlight&gt;

== Operator-Präzedenz (Auszug) ==
! vor &amp;&amp; vor ||. Klammern für Klarheit:
&lt;syntaxhighlight lang="csharp"&gt;
if (!(a || b) &amp;&amp; c) { }
&lt;/syntaxhighlight&gt;

== De Morgan ==
&lt;syntaxhighlight lang="csharp"&gt;
!(a &amp;&amp; b) == !a || !b;
!(a || b) == !a &amp;&amp; !b;
&lt;/syntaxhighlight&gt;

== Ternärer Operator ==
&lt;syntaxhighlight lang="csharp"&gt;
string msg = ok ? "OK" : "FAIL";
&lt;/syntaxhighlight&gt;

== Nullable bool (bool?) ==
Drei Zustände: true, false, null.
&lt;syntaxhighlight lang="csharp"&gt;
bool? x = null;
if (x is true) { }
bool res = x ?? false;
bool onlyTrue = x == true;
&lt;/syntaxhighlight&gt;

== Pattern Matching ==
&lt;syntaxhighlight lang="csharp"&gt;
if (flag is true) { }
switch (flag) {
    case true:  break;
    case false: break;
}
&lt;/syntaxhighlight&gt;

== Parsing &amp; Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
bool b1 = bool.Parse("true");
if (bool.TryParse("False", out var b2)) { }
string s = b2.ToString();     // "True"/"False"
&lt;/syntaxhighlight&gt;

== Konvertierung zu Zahl ==
&lt;syntaxhighlight lang="csharp"&gt;
int bit = flag ? 1 : 0;
&lt;/syntaxhighlight&gt;

== Seiteneffekte erzwingen ==
&lt;syntaxhighlight lang="csharp"&gt;
if (CheckA() &amp; CheckB()) { }   // beide werden sicher ausgeführt
if (CheckA() &amp;&amp; CheckB()) { }  // CheckB nur bei wahr von CheckA
&lt;/syntaxhighlight&gt;

== Guard / Früher Rückgabepunkt ==
&lt;syntaxhighlight lang="csharp"&gt;
if (!isValid) return;
&lt;/syntaxhighlight&gt;

== Debug / Verträge ==
&lt;syntaxhighlight lang="csharp"&gt;
Debug.Assert(condition);
Trace.Assert(condition);
&lt;/syntaxhighlight&gt;

== Häufige Fehlerquellen ==
* Erwartete Ausführung des rechten Operanden bei &amp;&amp; / || (short-circuit)
* Nutzung von &amp; / | statt &amp;&amp; / || (unbeabsichtigte Seiteneffekte)
* Null nicht beachtet bei bool?
* String-Parsing mit falscher Groß/Kleinschreibung (TryParse berücksichtigt beides)

== Kurzliste ==
true/false, !, &amp;&amp;, ||, ^, &amp;, | (kein short-circuit), ?:, ==, !=, bool.Parse/TryParse, bool?, Pattern (is true/false), De Morgan, Debug.Assert.</text>
      <sha1>tm0qksimnnw5st2ikzn127n35ap0b8l</sha1>
    </revision>
    <revision>
      <id>769</id>
      <parentid>768</parentid>
      <timestamp>2025-09-01T23:27:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>769</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="17258" sha1="8gmcky9amupu9patzvknchnl2ivp959" xml:space="preserve">= C# String-Operationen und wichtige Methoden =

== Grundlagen ==
; Deklaration
&lt;syntaxhighlight lang="csharp"&gt;
string name = "Alice";
string leer = string.Empty;
&lt;/syntaxhighlight&gt;

; Verkettung
&lt;syntaxhighlight lang="csharp"&gt;
string full = vorname + " " + nachname;
string interp = $"{vorname} {nachname}";
var builder = new StringBuilder().Append(vorname).Append(' ').Append(nachname).ToString();
&lt;/syntaxhighlight&gt;

== Häufig genutzte Eigenschaften ==
* Length – Anzahl der UTF-16 Codeeinheiten (nicht zwingend Benutzer-grafeme)

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Equals(a, b);                     // Ordinal, case-sensitiv
string.Equals(a, b, StringComparison.OrdinalIgnoreCase);
a.Equals(b, StringComparison.Ordinal);
a == b;                                  // Wertvergleich
string.Compare(a, b, StringComparison.Ordinal);
&lt;/syntaxhighlight&gt;

== Suchen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Contains("abc", StringComparison.Ordinal);
str.StartsWith("pre", StringComparison.OrdinalIgnoreCase);
str.EndsWith("suf", StringComparison.Ordinal);
str.IndexOf("x", StringComparison.Ordinal);
str.LastIndexOf('.');
&lt;/syntaxhighlight&gt;

== Extrahieren ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Substring(startIndex);
str.Substring(startIndex, length);
str[startIndex];         // einzelnes char
&lt;/syntaxhighlight&gt;

== Teilstrings moderner (Span-Slicing) ==
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = str.AsSpan();
var teil = span.Slice(5, 3); // vermeidet Kopie
&lt;/syntaxhighlight&gt;

== Aufteilen &amp; Zusammenfügen ==
&lt;syntaxhighlight lang="csharp"&gt;
var parts = str.Split('.', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
string joined = string.Join(";", parts);
&lt;/syntaxhighlight&gt;

== Trimmen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Trim();      // Whitespace
str.TrimStart();
str.TrimEnd();
str.Trim('0');   // spezifische Zeichen
&lt;/syntaxhighlight&gt;

== Ersetzen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Replace("alt", "neu");
str.Replace('a', 'b');
Regex.Replace(str, "[0-9]+", "#");
&lt;/syntaxhighlight&gt;

== Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Format("Wert: {0:N2}", value);
$"Wert: {value:N2}";
value.ToString("N2", CultureInfo.InvariantCulture);
&lt;/syntaxhighlight&gt;

== Groß/Kleinschreibung ==
&lt;syntaxhighlight lang="csharp"&gt;
str.ToUpperInvariant();
str.ToLower(CultureInfo.CurrentCulture);
&lt;/syntaxhighlight&gt;

== Einfügen &amp; Entfernen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Insert(index, "XYZ");
str.Remove(startIndex);
str.Remove(startIndex, count);
&lt;/syntaxhighlight&gt;

== Pad (Auffüllen) ==
&lt;syntaxhighlight lang="csharp"&gt;
"42".PadLeft(5, '0');   // 00042
"42".PadRight(5, '.');  // 42...
&lt;/syntaxhighlight&gt;

== Zeichenprüfung ==
&lt;syntaxhighlight lang="csharp"&gt;
char.IsLetterOrDigit(ch);
char.IsWhiteSpace(ch);
&lt;/syntaxhighlight&gt;

== Immutable Hinweis ==
Strings sind unveränderlich. Viele Operationen erzeugen neue Instanzen. Für viele Verkettungen: StringBuilder.

== StringBuilder ==
&lt;syntaxhighlight lang="csharp"&gt;
var sb = new StringBuilder(capacity:256)
    .Append("Zeile ").AppendLine("1")
    .AppendFormat("Wert={0}", 123);
string result = sb.ToString();
&lt;/syntaxhighlight&gt;

== Sicherheitsrelevante Vergleiche ==
&lt;syntaxhighlight lang="csharp"&gt;
CryptographicOperations.FixedTimeEquals(
    MemoryMarshal.AsBytes("secret"u8),
    MemoryMarshal.AsBytes(eingabe.AsSpan()));
&lt;/syntaxhighlight&gt;

== Null / Empty / WhiteSpace ==
&lt;syntaxhighlight lang="csharp"&gt;
string.IsNullOrEmpty(str);
string.IsNullOrWhiteSpace(str);
&lt;/syntaxhighlight&gt;

== Interpolated String Handler (Performance) ==
&lt;syntaxhighlight lang="csharp"&gt;
[InterpolatedStringHandler]
public ref struct LogHandler {
    // eigener Handler für Logging
}
&lt;/syntaxhighlight&gt;

== Raw String Literals (C# 11) ==
&lt;syntaxhighlight lang="csharp"&gt;
string json = """
{
  "id": 1,
  "name": "Alice"
}
""";
&lt;/syntaxhighlight&gt;

== Escapes ==
&lt;syntaxhighlight lang="csharp"&gt;
string pfad = @"C:\Temp\log.txt";
string zeile = "Text\nNeue Zeile\tTab";
&lt;/syntaxhighlight&gt;

== Normalisierung (Unicode) ==
&lt;syntaxhighlight lang="csharp"&gt;
string norm = str.Normalize(NormalizationForm.FormC);
&lt;/syntaxhighlight&gt;

== Split vs Span ==
Für Hochleistung: str.AsSpan().Split(...) (ab .NET 8: MemoryExtensions.Split)

== Zusammenfassung ==
Kurzliste: Length, Indexer, Substring, Contains, StartsWith, EndsWith, IndexOf, Split, Join, Trim*, Replace, Insert, Remove, PadLeft/Right, ToUpper*/ToLower*, Format/$-Interpolation, Equals/Compare, Normalize, StringBuilder.

= Ganzzahlen: Operationen und wichtige Methoden =
=== Basis-Typen ===
* sbyte / byte (8 Bit), short / ushort (16), int / uint (32), long / ulong (64)
* nint / nuint (plattformabhängig), BigInteger (beliebig groß, System.Numerics)

=== Deklaration &amp; Literale ===
&lt;syntaxhighlight lang="csharp"&gt;
int a = 42;
long b = 1_000_000_000L;
uint c = 0u;
nint p = 123n;
int bin = 0b1010_1100;
int hex = 0xFF_A0;
&lt;/syntaxhighlight&gt;

=== Konvertierung / Casting ===
&lt;syntaxhighlight lang="csharp"&gt;
long l = a;              // implizit (erweiternd)
int k = (int)l;          // explizit (evtl. Datenverlust)
int parsed = int.Parse("123", CultureInfo.InvariantCulture);
if (int.TryParse("123", out var val)) { /* ok */ }
&lt;/syntaxhighlight&gt;

=== Rechenoperationen ===
&lt;syntaxhighlight lang="csharp"&gt;
int sum = x + y;
int diff = x - y;
int prod = x * y;
int quot = x / y;        // ganzzahlig, Rest abgeschnitten
int mod = x % y;
int neg = -x;
&lt;/syntaxhighlight&gt;

=== Division: Ganzzahl vs Gleitkomma ===
&lt;syntaxhighlight lang="csharp"&gt;
int r1 = 5 / 2;      // 2
double r2 = 5 / 2.0; // 2.5
&lt;/syntaxhighlight&gt;

=== Inkrement / Dekrement ===
&lt;syntaxhighlight lang="csharp"&gt;
i++;
++i;
i--;
&lt;/syntaxhighlight&gt;

=== Overflow-Kontrolle ===
&lt;syntaxhighlight lang="csharp"&gt;
checked {
    int o = int.MaxValue;
    // int p = o + 1;  // OverflowException
}
unchecked {
    int wrap = int.MaxValue + 1; // Wrap-around
}
bool ok = int.TryParse("9999999999", out _); // false wenn außerhalb Range
&lt;/syntaxhighlight&gt;

=== Vergleich &amp; Relationen ===
&lt;syntaxhighlight lang="csharp"&gt;
bool eq = a == b;
bool ne = a != b;
bool lt = a &lt; b;
bool between = x &gt;= min &amp;&amp; x &lt;= max;
&lt;/syntaxhighlight&gt;

=== Bitoperationen ===
&lt;syntaxhighlight lang="csharp"&gt;
int and = flags &amp; mask;
int or  = flags | mask;
int xor = flags ^ mask;
int not = ~flags;
int shiftedL = value &lt;&lt; 3;
int shiftedR = value &gt;&gt; 2;
bool has = (flags &amp; mask) != 0;
&lt;/syntaxhighlight&gt;

=== BitHelpers (.NET) ===
&lt;syntaxhighlight lang="csharp"&gt;
int pop = System.Numerics.BitOperations.PopCount((uint)value);
int leading = BitOperations.LeadingZeroCount((uint)value);
int rot = BitOperations.RotateLeft(value, 5);
&lt;/syntaxhighlight&gt;

=== Math / Numerik ===
&lt;syntaxhighlight lang="csharp"&gt;
int abs = Math.Abs(v);
int clamped = Math.Clamp(v, 0, 100);
int max = Math.Max(a, b);
int min = Math.Min(a, b);
int sign = Math.Sign(v);
long pow2 = 1L &lt;&lt; n;
&lt;/syntaxhighlight&gt;

=== Zufallszahlen ===
&lt;syntaxhighlight lang="csharp"&gt;
int r = Random.Shared.Next(0, 100);          // 0..99
int rr = RandomNumberGenerator.GetInt32(0, 100); // kryptographisch
&lt;/syntaxhighlight&gt;

=== Parsing / Formatierung ===
&lt;syntaxhighlight lang="csharp"&gt;
int n = int.Parse("42");
if (int.TryParse("42", NumberStyles.Integer, CultureInfo.InvariantCulture, out var num)) {}
string s1 = num.ToString();          // kulturabhängig
string s2 = num.ToString("D6");      // führende Nullen
string hexStr = num.ToString("X");   // Hex
&lt;/syntaxhighlight&gt;

=== Performance / Span Parsing ===
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = "12345".AsSpan();
if (int.TryParse(span, out int fast)) { }
&lt;/syntaxhighlight&gt;

=== Checked Arithmetik Helpers (C# 11+) ===
&lt;syntaxhighlight lang="csharp"&gt;
int safe = int.CreateChecked((long)other);
int trunc = int.CreateTruncating(big);
int sat = int.CreateSaturating(big);
&lt;/syntaxhighlight&gt;

=== Pattern Matching / Ranges ===
&lt;syntaxhighlight lang="csharp"&gt;
bool ok = value is &gt;= 0 and &lt;= 10;
&lt;/syntaxhighlight&gt;

=== Flags Enum Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
[Flags]
enum Perm { None=0, Read=1, Write=2, Exec=4 }
Perm p = Perm.Read | Perm.Write;
bool canWrite = p.HasFlag(Perm.Write); // langsamer
bool canWriteFast = (p &amp; Perm.Write) != 0;
&lt;/syntaxhighlight&gt;

=== Häufige Fehlerquellen ===
* Ganzzahldivision statt Gleitkomma
* Overflow bei Multiplikation (checked nutzen)
* Parse ohne Fehlerprüfung
* Bitmasken falsch (Klammern, Vorzeichen)

=== Zusammenfassung Ganzzahlen ===
Kurzliste: + - * / % ++ -- Vergleiche, Bit: &amp; | ^ ~ &lt;&lt; &gt;&gt;, Parse/TryParse, ToString("D"/"X"), Math.* (Abs, Clamp, Min, Max, Sign), Random.Shared.Next, BitOperations (PopCount/Rotate/LeadingZeroCount), checked/unchecked, Flags-Enums.

= Fließkommazahlen: Operationen und wichtige Methoden =

=== Typen &amp; Eigenschaften ===
* float (Single, 32 Bit IEEE 754, ca. 7 Dezimalstellen)
* double (64 Bit IEEE 754, ca. 15–17 Dezimalstellen) – Standard
* decimal (128 Bit, Basis-10, 28–29 signifikante Stellen, langsamer, für Geld/Buchhaltung)
&lt;syntaxhighlight lang="csharp"&gt;
float f = 1.5f;
double d = 1.5;
decimal m = 1.5m;
&lt;/syntaxhighlight&gt;

=== Basis-Operationen ===
&lt;syntaxhighlight lang="csharp"&gt;
double sum = a + b;
double diff = a - b;
double prod = a * b;
double quot = a / b;
double neg = -a;
&lt;/syntaxhighlight&gt;

=== Vergleich (Toleranz) ===
Direkter == Vergleich problematisch wegen Rundungsfehlern.
&lt;syntaxhighlight lang="csharp"&gt;
bool AreClose(double x, double y, double relEps = 1e-12, double absEps = 1e-15) {
    double diff = Math.Abs(x - y);
    if (diff &lt;= absEps) return true;
    return diff &lt;= relEps * Math.Max(Math.Abs(x), Math.Abs(y));
}
&lt;/syntaxhighlight&gt;

=== Spezielle Werte ===
&lt;syntaxhighlight lang="csharp"&gt;
double nan = double.NaN;
double posInf = double.PositiveInfinity;
double negInf = double.NegativeInfinity;
bool isNan = double.IsNaN(nan);
bool isInf = double.IsInfinity(posInf);
bool isFinite = double.IsFinite(1.0);
double eps = double.Epsilon; // kleinste &gt;0 Subnormal bei double
&lt;/syntaxhighlight&gt;

=== Decimal Besonderheiten ===
&lt;syntaxhighlight lang="csharp"&gt;
decimal preis = 12.34m;
decimal sum = preis * 3; // exakte Dezimalarithmetik (Basis 10)
&lt;/syntaxhighlight&gt;

=== Casting / Konvertierung ===
&lt;syntaxhighlight lang="csharp"&gt;
double dd = (double)f;           // implizit float -&gt; double
float ff = (float)dd;            // explizit (Präzisionsverlust)
decimal dm = (decimal)dd;        // kann Overflow werfen
double back = (double)dm;
&lt;/syntaxhighlight&gt;

=== Rundung ===
&lt;syntaxhighlight lang="csharp"&gt;
double r1 = Math.Round(2.345, 2); // Banker's (ToEven)
double r2 = Math.Round(2.345, 2, MidpointRounding.AwayFromZero);
double ceil = Math.Ceiling(x);
double floor = Math.Floor(x);
double trunc = Math.Truncate(x);
&lt;/syntaxhighlight&gt;

=== Math Funktionen ===
&lt;syntaxhighlight lang="csharp"&gt;
double abs = Math.Abs(x);
double pow = Math.Pow(2.0, 10);
double sq = Math.Sqrt(v);
double c = Math.Cos(a);
double s = Math.Sin(a);
double t = Math.Tan(a);
double exp = Math.Exp(a);
double ln = Math.Log(a);
double log10 = Math.Log10(a);
double clamped = Math.Clamp(x, 0.0, 1.0);
double min = Math.Min(a, b);
double max = Math.Max(a, b);
double copySign = Math.CopySign(magnitude:5.0, sign:-2.0);
&lt;/syntaxhighlight&gt;

=== MathF für float ===
&lt;syntaxhighlight lang="csharp"&gt;
float sf = MathF.Sqrt(3f);
&lt;/syntaxhighlight&gt;

=== Fused Multiply-Add (FMA) ===
&lt;syntaxhighlight lang="csharp"&gt;
double fma = Math.FusedMultiplyAdd(a, b, c); // a*b + c mit geringerer Rundung
&lt;/syntaxhighlight&gt;

=== Parsing &amp; Formatierung ===
&lt;syntaxhighlight lang="csharp"&gt;
double v = double.Parse("1.23", CultureInfo.InvariantCulture);
if (double.TryParse("1.23", NumberStyles.Float, CultureInfo.InvariantCulture, out var parsed)) { }
string sG = v.ToString("G17", CultureInfo.InvariantCulture); // max Genauigkeit double
string sF = v.ToString("F2");       // 2 Nachkommastellen
string sE = v.ToString("E3");       // wissenschaftlich
string sR = v.ToString("R");        // Round-trip
&lt;/syntaxhighlight&gt;

=== Span Parsing (Performance) ===
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = "3.14159".AsSpan();
if (double.TryParse(span, NumberStyles.Float, CultureInfo.InvariantCulture, out double pi)) { }
&lt;/syntaxhighlight&gt;

=== Interop / Bit-Ebene ===
&lt;syntaxhighlight lang="csharp"&gt;
long bits = BitConverter.DoubleToInt64Bits(d);
double again = BitConverter.Int64BitsToDouble(bits);
int floatBits = BitConverter.SingleToInt32Bits(f);
&lt;/syntaxhighlight&gt;

=== NaN Verhalten ===
&lt;syntaxhighlight lang="csharp"&gt;
bool eqNaN = double.NaN == double.NaN;        // false
bool notEq = double.NaN != double.NaN;        // true
bool ordered = double.NaN &lt; 1.0;              // false
&lt;/syntaxhighlight&gt;

=== Aggregationen / Summe (Stabilität) ===
&lt;syntaxhighlight lang="csharp"&gt;
double StableSum(double[] data) {
    double sum = 0, c = 0; // Kahan
    foreach (var x in data) {
        double y = x - c;
        double t = sum + y;
        c = (t - sum) - y;
        sum = t;
    }
    return sum;
}
&lt;/syntaxhighlight&gt;

=== Random Gleitkomma ===
&lt;syntaxhighlight lang="csharp"&gt;
double r = Random.Shared.NextDouble();      // [0,1)
double rRange = Random.Shared.NextDouble() * (max - min) + min;
&lt;/syntaxhighlight&gt;

=== Performance Hinweise ===
* double schneller als decimal
* float spart Speicher (Arrays, GPU), aber geringere Präzision
* Avoid boxing bei Formatierung durch Span-basierte APIs (TryFormat)

=== Tolerante Sortierung Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
Array.Sort(values, (x,y) =&gt; Math.Abs(x-y) &lt; 1e-12 ? 0 : x.CompareTo(y));
&lt;/syntaxhighlight&gt;

=== Exceptions vermeiden ===
Verwendung von TryParse, keine Annahme auf exakte Darstellung (0.1 + 0.2 != 0.3 exakt).

=== Häufige Fehlerquellen ===
* Direkter == Vergleich ohne Toleranz
* decimal mit Math.* (gibt nur double-Überladungen für viele Funktionen)
* Kulturabhängige Dezimaltrennzeichen beim Parse
* Rundung (MidpointRounding falsch gewählt)
* Überlauf in decimal (Casting von sehr großen double)

=== Auswahlhilfe ===
* Wissenschaft / Grafik: float (wenn Speicher wichtig) oder double
* Standard: double
* Geld / Finanzen (exakte Dezimalstellen): decimal

=== Zusammenfassung Fließkomma ===
Kurzliste: + - * / Vergleich mit Toleranz, Math (Sqrt, Pow, Sin, Cos, Log, Exp, Clamp, Min/Max, CopySign, FusedMultiplyAdd), Round/Ceiling/Floor/Truncate, double.IsNaN/IsInfinity/IsFinite, Parse/TryParse, ToString("G17","F","E","R"), BitConverter.*Bits, Random.Shared.NextDouble, Kahan-Summe, decimal für Geld.

= C# bool-Operationen und wichtige Methoden =

== Typ &amp; Literale ==
&lt;syntaxhighlight lang="csharp"&gt;
bool t = true;
bool f = false;
&lt;/syntaxhighlight&gt;
Wird primär für Kontrollfluss genutzt; keine implizite Konvertierung zu/zur Zahl.

== Logische Operatoren ==
&lt;syntaxhighlight lang="csharp"&gt;
bool not = !t;        // Negation
bool both = a &amp;&amp; b;   // UND (short-circuit)
bool either = a || b; // ODER (short-circuit)
bool xor = a ^ b;     // Exklusiv-Oder
&lt;/syntaxhighlight&gt;
&amp; und | auf bool werten beide Operanden immer aus:
&lt;syntaxhighlight lang="csharp"&gt;
bool bothAll = a &amp; b;
bool eitherAll = a | b;
&lt;/syntaxhighlight&gt;

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
bool eq = a == b;
bool ne = a != b;
&lt;/syntaxhighlight&gt;

== Zuweisung vs Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
// if (a = b)  // Compilerfehler (gut gegen Verwechslung mit ==)
&lt;/syntaxhighlight&gt;

== Operator-Präzedenz (Auszug) ==
! vor &amp;&amp; vor ||. Klammern für Klarheit:
&lt;syntaxhighlight lang="csharp"&gt;
if (!(a || b) &amp;&amp; c) { }
&lt;/syntaxhighlight&gt;

== De Morgan ==
&lt;syntaxhighlight lang="csharp"&gt;
!(a &amp;&amp; b) == !a || !b;
!(a || b) == !a &amp;&amp; !b;
&lt;/syntaxhighlight&gt;

== Ternärer Operator ==
&lt;syntaxhighlight lang="csharp"&gt;
string msg = ok ? "OK" : "FAIL";
&lt;/syntaxhighlight&gt;

== Nullable bool (bool?) ==
Drei Zustände: true, false, null.
&lt;syntaxhighlight lang="csharp"&gt;
bool? x = null;
if (x is true) { }
bool res = x ?? false;
bool onlyTrue = x == true;
&lt;/syntaxhighlight&gt;

== Pattern Matching ==
&lt;syntaxhighlight lang="csharp"&gt;
if (flag is true) { }
switch (flag) {
    case true:  break;
    case false: break;
}
&lt;/syntaxhighlight&gt;

== Parsing &amp; Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
bool b1 = bool.Parse("true");
if (bool.TryParse("False", out var b2)) { }
string s = b2.ToString();     // "True"/"False"
&lt;/syntaxhighlight&gt;

== Konvertierung zu Zahl ==
&lt;syntaxhighlight lang="csharp"&gt;
int bit = flag ? 1 : 0;
&lt;/syntaxhighlight&gt;

== Seiteneffekte erzwingen ==
&lt;syntaxhighlight lang="csharp"&gt;
if (CheckA() &amp; CheckB()) { }   // beide werden sicher ausgeführt
if (CheckA() &amp;&amp; CheckB()) { }  // CheckB nur bei wahr von CheckA
&lt;/syntaxhighlight&gt;

== Guard / Früher Rückgabepunkt ==
&lt;syntaxhighlight lang="csharp"&gt;
if (!isValid) return;
&lt;/syntaxhighlight&gt;

== Debug / Verträge ==
&lt;syntaxhighlight lang="csharp"&gt;
Debug.Assert(condition);
Trace.Assert(condition);
&lt;/syntaxhighlight&gt;

== Häufige Fehlerquellen ==
* Erwartete Ausführung des rechten Operanden bei &amp;&amp; / || (short-circuit)
* Nutzung von &amp; / | statt &amp;&amp; / || (unbeabsichtigte Seiteneffekte)
* Null nicht beachtet bei bool?
* String-Parsing mit falscher Groß/Kleinschreibung (TryParse berücksichtigt beides)

== Kurzliste ==
true/false, !, &amp;&amp;, ||, ^, &amp;, | (kein short-circuit), ?:, ==, !=, bool.Parse/TryParse, bool?, Pattern (is true/false), De Morgan, Debug.Assert.</text>
      <sha1>8gmcky9amupu9patzvknchnl2ivp959</sha1>
    </revision>
    <revision>
      <id>770</id>
      <parentid>769</parentid>
      <timestamp>2025-09-01T23:46:52Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>770</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="17282" sha1="brcgse2q25n65nvgh4vji6jnrzcodjs" xml:space="preserve">
* [[Kurse:Datentypen-C-Sharp String-Operationen und wichtige Methoden]]
== Grundlagen ==
; Deklaration
&lt;syntaxhighlight lang="csharp"&gt;
string name = "Alice";
string leer = string.Empty;
&lt;/syntaxhighlight&gt;

; Verkettung
&lt;syntaxhighlight lang="csharp"&gt;
string full = vorname + " " + nachname;
string interp = $"{vorname} {nachname}";
var builder = new StringBuilder().Append(vorname).Append(' ').Append(nachname).ToString();
&lt;/syntaxhighlight&gt;

== Häufig genutzte Eigenschaften ==
* Length – Anzahl der UTF-16 Codeeinheiten (nicht zwingend Benutzer-grafeme)

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Equals(a, b);                     // Ordinal, case-sensitiv
string.Equals(a, b, StringComparison.OrdinalIgnoreCase);
a.Equals(b, StringComparison.Ordinal);
a == b;                                  // Wertvergleich
string.Compare(a, b, StringComparison.Ordinal);
&lt;/syntaxhighlight&gt;

== Suchen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Contains("abc", StringComparison.Ordinal);
str.StartsWith("pre", StringComparison.OrdinalIgnoreCase);
str.EndsWith("suf", StringComparison.Ordinal);
str.IndexOf("x", StringComparison.Ordinal);
str.LastIndexOf('.');
&lt;/syntaxhighlight&gt;

== Extrahieren ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Substring(startIndex);
str.Substring(startIndex, length);
str[startIndex];         // einzelnes char
&lt;/syntaxhighlight&gt;

== Teilstrings moderner (Span-Slicing) ==
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = str.AsSpan();
var teil = span.Slice(5, 3); // vermeidet Kopie
&lt;/syntaxhighlight&gt;

== Aufteilen &amp; Zusammenfügen ==
&lt;syntaxhighlight lang="csharp"&gt;
var parts = str.Split('.', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
string joined = string.Join(";", parts);
&lt;/syntaxhighlight&gt;

== Trimmen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Trim();      // Whitespace
str.TrimStart();
str.TrimEnd();
str.Trim('0');   // spezifische Zeichen
&lt;/syntaxhighlight&gt;

== Ersetzen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Replace("alt", "neu");
str.Replace('a', 'b');
Regex.Replace(str, "[0-9]+", "#");
&lt;/syntaxhighlight&gt;

== Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Format("Wert: {0:N2}", value);
$"Wert: {value:N2}";
value.ToString("N2", CultureInfo.InvariantCulture);
&lt;/syntaxhighlight&gt;

== Groß/Kleinschreibung ==
&lt;syntaxhighlight lang="csharp"&gt;
str.ToUpperInvariant();
str.ToLower(CultureInfo.CurrentCulture);
&lt;/syntaxhighlight&gt;

== Einfügen &amp; Entfernen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Insert(index, "XYZ");
str.Remove(startIndex);
str.Remove(startIndex, count);
&lt;/syntaxhighlight&gt;

== Pad (Auffüllen) ==
&lt;syntaxhighlight lang="csharp"&gt;
"42".PadLeft(5, '0');   // 00042
"42".PadRight(5, '.');  // 42...
&lt;/syntaxhighlight&gt;

== Zeichenprüfung ==
&lt;syntaxhighlight lang="csharp"&gt;
char.IsLetterOrDigit(ch);
char.IsWhiteSpace(ch);
&lt;/syntaxhighlight&gt;

== Immutable Hinweis ==
Strings sind unveränderlich. Viele Operationen erzeugen neue Instanzen. Für viele Verkettungen: StringBuilder.

== StringBuilder ==
&lt;syntaxhighlight lang="csharp"&gt;
var sb = new StringBuilder(capacity:256)
    .Append("Zeile ").AppendLine("1")
    .AppendFormat("Wert={0}", 123);
string result = sb.ToString();
&lt;/syntaxhighlight&gt;

== Sicherheitsrelevante Vergleiche ==
&lt;syntaxhighlight lang="csharp"&gt;
CryptographicOperations.FixedTimeEquals(
    MemoryMarshal.AsBytes("secret"u8),
    MemoryMarshal.AsBytes(eingabe.AsSpan()));
&lt;/syntaxhighlight&gt;

== Null / Empty / WhiteSpace ==
&lt;syntaxhighlight lang="csharp"&gt;
string.IsNullOrEmpty(str);
string.IsNullOrWhiteSpace(str);
&lt;/syntaxhighlight&gt;

== Interpolated String Handler (Performance) ==
&lt;syntaxhighlight lang="csharp"&gt;
[InterpolatedStringHandler]
public ref struct LogHandler {
    // eigener Handler für Logging
}
&lt;/syntaxhighlight&gt;

== Raw String Literals (C# 11) ==
&lt;syntaxhighlight lang="csharp"&gt;
string json = """
{
  "id": 1,
  "name": "Alice"
}
""";
&lt;/syntaxhighlight&gt;

== Escapes ==
&lt;syntaxhighlight lang="csharp"&gt;
string pfad = @"C:\Temp\log.txt";
string zeile = "Text\nNeue Zeile\tTab";
&lt;/syntaxhighlight&gt;

== Normalisierung (Unicode) ==
&lt;syntaxhighlight lang="csharp"&gt;
string norm = str.Normalize(NormalizationForm.FormC);
&lt;/syntaxhighlight&gt;

== Split vs Span ==
Für Hochleistung: str.AsSpan().Split(...) (ab .NET 8: MemoryExtensions.Split)

== Zusammenfassung ==
Kurzliste: Length, Indexer, Substring, Contains, StartsWith, EndsWith, IndexOf, Split, Join, Trim*, Replace, Insert, Remove, PadLeft/Right, ToUpper*/ToLower*, Format/$-Interpolation, Equals/Compare, Normalize, StringBuilder.

= Ganzzahlen: Operationen und wichtige Methoden =
=== Basis-Typen ===
* sbyte / byte (8 Bit), short / ushort (16), int / uint (32), long / ulong (64)
* nint / nuint (plattformabhängig), BigInteger (beliebig groß, System.Numerics)

=== Deklaration &amp; Literale ===
&lt;syntaxhighlight lang="csharp"&gt;
int a = 42;
long b = 1_000_000_000L;
uint c = 0u;
nint p = 123n;
int bin = 0b1010_1100;
int hex = 0xFF_A0;
&lt;/syntaxhighlight&gt;

=== Konvertierung / Casting ===
&lt;syntaxhighlight lang="csharp"&gt;
long l = a;              // implizit (erweiternd)
int k = (int)l;          // explizit (evtl. Datenverlust)
int parsed = int.Parse("123", CultureInfo.InvariantCulture);
if (int.TryParse("123", out var val)) { /* ok */ }
&lt;/syntaxhighlight&gt;

=== Rechenoperationen ===
&lt;syntaxhighlight lang="csharp"&gt;
int sum = x + y;
int diff = x - y;
int prod = x * y;
int quot = x / y;        // ganzzahlig, Rest abgeschnitten
int mod = x % y;
int neg = -x;
&lt;/syntaxhighlight&gt;

=== Division: Ganzzahl vs Gleitkomma ===
&lt;syntaxhighlight lang="csharp"&gt;
int r1 = 5 / 2;      // 2
double r2 = 5 / 2.0; // 2.5
&lt;/syntaxhighlight&gt;

=== Inkrement / Dekrement ===
&lt;syntaxhighlight lang="csharp"&gt;
i++;
++i;
i--;
&lt;/syntaxhighlight&gt;

=== Overflow-Kontrolle ===
&lt;syntaxhighlight lang="csharp"&gt;
checked {
    int o = int.MaxValue;
    // int p = o + 1;  // OverflowException
}
unchecked {
    int wrap = int.MaxValue + 1; // Wrap-around
}
bool ok = int.TryParse("9999999999", out _); // false wenn außerhalb Range
&lt;/syntaxhighlight&gt;

=== Vergleich &amp; Relationen ===
&lt;syntaxhighlight lang="csharp"&gt;
bool eq = a == b;
bool ne = a != b;
bool lt = a &lt; b;
bool between = x &gt;= min &amp;&amp; x &lt;= max;
&lt;/syntaxhighlight&gt;

=== Bitoperationen ===
&lt;syntaxhighlight lang="csharp"&gt;
int and = flags &amp; mask;
int or  = flags | mask;
int xor = flags ^ mask;
int not = ~flags;
int shiftedL = value &lt;&lt; 3;
int shiftedR = value &gt;&gt; 2;
bool has = (flags &amp; mask) != 0;
&lt;/syntaxhighlight&gt;

=== BitHelpers (.NET) ===
&lt;syntaxhighlight lang="csharp"&gt;
int pop = System.Numerics.BitOperations.PopCount((uint)value);
int leading = BitOperations.LeadingZeroCount((uint)value);
int rot = BitOperations.RotateLeft(value, 5);
&lt;/syntaxhighlight&gt;

=== Math / Numerik ===
&lt;syntaxhighlight lang="csharp"&gt;
int abs = Math.Abs(v);
int clamped = Math.Clamp(v, 0, 100);
int max = Math.Max(a, b);
int min = Math.Min(a, b);
int sign = Math.Sign(v);
long pow2 = 1L &lt;&lt; n;
&lt;/syntaxhighlight&gt;

=== Zufallszahlen ===
&lt;syntaxhighlight lang="csharp"&gt;
int r = Random.Shared.Next(0, 100);          // 0..99
int rr = RandomNumberGenerator.GetInt32(0, 100); // kryptographisch
&lt;/syntaxhighlight&gt;

=== Parsing / Formatierung ===
&lt;syntaxhighlight lang="csharp"&gt;
int n = int.Parse("42");
if (int.TryParse("42", NumberStyles.Integer, CultureInfo.InvariantCulture, out var num)) {}
string s1 = num.ToString();          // kulturabhängig
string s2 = num.ToString("D6");      // führende Nullen
string hexStr = num.ToString("X");   // Hex
&lt;/syntaxhighlight&gt;

=== Performance / Span Parsing ===
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = "12345".AsSpan();
if (int.TryParse(span, out int fast)) { }
&lt;/syntaxhighlight&gt;

=== Checked Arithmetik Helpers (C# 11+) ===
&lt;syntaxhighlight lang="csharp"&gt;
int safe = int.CreateChecked((long)other);
int trunc = int.CreateTruncating(big);
int sat = int.CreateSaturating(big);
&lt;/syntaxhighlight&gt;

=== Pattern Matching / Ranges ===
&lt;syntaxhighlight lang="csharp"&gt;
bool ok = value is &gt;= 0 and &lt;= 10;
&lt;/syntaxhighlight&gt;

=== Flags Enum Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
[Flags]
enum Perm { None=0, Read=1, Write=2, Exec=4 }
Perm p = Perm.Read | Perm.Write;
bool canWrite = p.HasFlag(Perm.Write); // langsamer
bool canWriteFast = (p &amp; Perm.Write) != 0;
&lt;/syntaxhighlight&gt;

=== Häufige Fehlerquellen ===
* Ganzzahldivision statt Gleitkomma
* Overflow bei Multiplikation (checked nutzen)
* Parse ohne Fehlerprüfung
* Bitmasken falsch (Klammern, Vorzeichen)

=== Zusammenfassung Ganzzahlen ===
Kurzliste: + - * / % ++ -- Vergleiche, Bit: &amp; | ^ ~ &lt;&lt; &gt;&gt;, Parse/TryParse, ToString("D"/"X"), Math.* (Abs, Clamp, Min, Max, Sign), Random.Shared.Next, BitOperations (PopCount/Rotate/LeadingZeroCount), checked/unchecked, Flags-Enums.

= Fließkommazahlen: Operationen und wichtige Methoden =

=== Typen &amp; Eigenschaften ===
* float (Single, 32 Bit IEEE 754, ca. 7 Dezimalstellen)
* double (64 Bit IEEE 754, ca. 15–17 Dezimalstellen) – Standard
* decimal (128 Bit, Basis-10, 28–29 signifikante Stellen, langsamer, für Geld/Buchhaltung)
&lt;syntaxhighlight lang="csharp"&gt;
float f = 1.5f;
double d = 1.5;
decimal m = 1.5m;
&lt;/syntaxhighlight&gt;

=== Basis-Operationen ===
&lt;syntaxhighlight lang="csharp"&gt;
double sum = a + b;
double diff = a - b;
double prod = a * b;
double quot = a / b;
double neg = -a;
&lt;/syntaxhighlight&gt;

=== Vergleich (Toleranz) ===
Direkter == Vergleich problematisch wegen Rundungsfehlern.
&lt;syntaxhighlight lang="csharp"&gt;
bool AreClose(double x, double y, double relEps = 1e-12, double absEps = 1e-15) {
    double diff = Math.Abs(x - y);
    if (diff &lt;= absEps) return true;
    return diff &lt;= relEps * Math.Max(Math.Abs(x), Math.Abs(y));
}
&lt;/syntaxhighlight&gt;

=== Spezielle Werte ===
&lt;syntaxhighlight lang="csharp"&gt;
double nan = double.NaN;
double posInf = double.PositiveInfinity;
double negInf = double.NegativeInfinity;
bool isNan = double.IsNaN(nan);
bool isInf = double.IsInfinity(posInf);
bool isFinite = double.IsFinite(1.0);
double eps = double.Epsilon; // kleinste &gt;0 Subnormal bei double
&lt;/syntaxhighlight&gt;

=== Decimal Besonderheiten ===
&lt;syntaxhighlight lang="csharp"&gt;
decimal preis = 12.34m;
decimal sum = preis * 3; // exakte Dezimalarithmetik (Basis 10)
&lt;/syntaxhighlight&gt;

=== Casting / Konvertierung ===
&lt;syntaxhighlight lang="csharp"&gt;
double dd = (double)f;           // implizit float -&gt; double
float ff = (float)dd;            // explizit (Präzisionsverlust)
decimal dm = (decimal)dd;        // kann Overflow werfen
double back = (double)dm;
&lt;/syntaxhighlight&gt;

=== Rundung ===
&lt;syntaxhighlight lang="csharp"&gt;
double r1 = Math.Round(2.345, 2); // Banker's (ToEven)
double r2 = Math.Round(2.345, 2, MidpointRounding.AwayFromZero);
double ceil = Math.Ceiling(x);
double floor = Math.Floor(x);
double trunc = Math.Truncate(x);
&lt;/syntaxhighlight&gt;

=== Math Funktionen ===
&lt;syntaxhighlight lang="csharp"&gt;
double abs = Math.Abs(x);
double pow = Math.Pow(2.0, 10);
double sq = Math.Sqrt(v);
double c = Math.Cos(a);
double s = Math.Sin(a);
double t = Math.Tan(a);
double exp = Math.Exp(a);
double ln = Math.Log(a);
double log10 = Math.Log10(a);
double clamped = Math.Clamp(x, 0.0, 1.0);
double min = Math.Min(a, b);
double max = Math.Max(a, b);
double copySign = Math.CopySign(magnitude:5.0, sign:-2.0);
&lt;/syntaxhighlight&gt;

=== MathF für float ===
&lt;syntaxhighlight lang="csharp"&gt;
float sf = MathF.Sqrt(3f);
&lt;/syntaxhighlight&gt;

=== Fused Multiply-Add (FMA) ===
&lt;syntaxhighlight lang="csharp"&gt;
double fma = Math.FusedMultiplyAdd(a, b, c); // a*b + c mit geringerer Rundung
&lt;/syntaxhighlight&gt;

=== Parsing &amp; Formatierung ===
&lt;syntaxhighlight lang="csharp"&gt;
double v = double.Parse("1.23", CultureInfo.InvariantCulture);
if (double.TryParse("1.23", NumberStyles.Float, CultureInfo.InvariantCulture, out var parsed)) { }
string sG = v.ToString("G17", CultureInfo.InvariantCulture); // max Genauigkeit double
string sF = v.ToString("F2");       // 2 Nachkommastellen
string sE = v.ToString("E3");       // wissenschaftlich
string sR = v.ToString("R");        // Round-trip
&lt;/syntaxhighlight&gt;

=== Span Parsing (Performance) ===
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = "3.14159".AsSpan();
if (double.TryParse(span, NumberStyles.Float, CultureInfo.InvariantCulture, out double pi)) { }
&lt;/syntaxhighlight&gt;

=== Interop / Bit-Ebene ===
&lt;syntaxhighlight lang="csharp"&gt;
long bits = BitConverter.DoubleToInt64Bits(d);
double again = BitConverter.Int64BitsToDouble(bits);
int floatBits = BitConverter.SingleToInt32Bits(f);
&lt;/syntaxhighlight&gt;

=== NaN Verhalten ===
&lt;syntaxhighlight lang="csharp"&gt;
bool eqNaN = double.NaN == double.NaN;        // false
bool notEq = double.NaN != double.NaN;        // true
bool ordered = double.NaN &lt; 1.0;              // false
&lt;/syntaxhighlight&gt;

=== Aggregationen / Summe (Stabilität) ===
&lt;syntaxhighlight lang="csharp"&gt;
double StableSum(double[] data) {
    double sum = 0, c = 0; // Kahan
    foreach (var x in data) {
        double y = x - c;
        double t = sum + y;
        c = (t - sum) - y;
        sum = t;
    }
    return sum;
}
&lt;/syntaxhighlight&gt;

=== Random Gleitkomma ===
&lt;syntaxhighlight lang="csharp"&gt;
double r = Random.Shared.NextDouble();      // [0,1)
double rRange = Random.Shared.NextDouble() * (max - min) + min;
&lt;/syntaxhighlight&gt;

=== Performance Hinweise ===
* double schneller als decimal
* float spart Speicher (Arrays, GPU), aber geringere Präzision
* Avoid boxing bei Formatierung durch Span-basierte APIs (TryFormat)

=== Tolerante Sortierung Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
Array.Sort(values, (x,y) =&gt; Math.Abs(x-y) &lt; 1e-12 ? 0 : x.CompareTo(y));
&lt;/syntaxhighlight&gt;

=== Exceptions vermeiden ===
Verwendung von TryParse, keine Annahme auf exakte Darstellung (0.1 + 0.2 != 0.3 exakt).

=== Häufige Fehlerquellen ===
* Direkter == Vergleich ohne Toleranz
* decimal mit Math.* (gibt nur double-Überladungen für viele Funktionen)
* Kulturabhängige Dezimaltrennzeichen beim Parse
* Rundung (MidpointRounding falsch gewählt)
* Überlauf in decimal (Casting von sehr großen double)

=== Auswahlhilfe ===
* Wissenschaft / Grafik: float (wenn Speicher wichtig) oder double
* Standard: double
* Geld / Finanzen (exakte Dezimalstellen): decimal

=== Zusammenfassung Fließkomma ===
Kurzliste: + - * / Vergleich mit Toleranz, Math (Sqrt, Pow, Sin, Cos, Log, Exp, Clamp, Min/Max, CopySign, FusedMultiplyAdd), Round/Ceiling/Floor/Truncate, double.IsNaN/IsInfinity/IsFinite, Parse/TryParse, ToString("G17","F","E","R"), BitConverter.*Bits, Random.Shared.NextDouble, Kahan-Summe, decimal für Geld.

= C# bool-Operationen und wichtige Methoden =

== Typ &amp; Literale ==
&lt;syntaxhighlight lang="csharp"&gt;
bool t = true;
bool f = false;
&lt;/syntaxhighlight&gt;
Wird primär für Kontrollfluss genutzt; keine implizite Konvertierung zu/zur Zahl.

== Logische Operatoren ==
&lt;syntaxhighlight lang="csharp"&gt;
bool not = !t;        // Negation
bool both = a &amp;&amp; b;   // UND (short-circuit)
bool either = a || b; // ODER (short-circuit)
bool xor = a ^ b;     // Exklusiv-Oder
&lt;/syntaxhighlight&gt;
&amp; und | auf bool werten beide Operanden immer aus:
&lt;syntaxhighlight lang="csharp"&gt;
bool bothAll = a &amp; b;
bool eitherAll = a | b;
&lt;/syntaxhighlight&gt;

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
bool eq = a == b;
bool ne = a != b;
&lt;/syntaxhighlight&gt;

== Zuweisung vs Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
// if (a = b)  // Compilerfehler (gut gegen Verwechslung mit ==)
&lt;/syntaxhighlight&gt;

== Operator-Präzedenz (Auszug) ==
! vor &amp;&amp; vor ||. Klammern für Klarheit:
&lt;syntaxhighlight lang="csharp"&gt;
if (!(a || b) &amp;&amp; c) { }
&lt;/syntaxhighlight&gt;

== De Morgan ==
&lt;syntaxhighlight lang="csharp"&gt;
!(a &amp;&amp; b) == !a || !b;
!(a || b) == !a &amp;&amp; !b;
&lt;/syntaxhighlight&gt;

== Ternärer Operator ==
&lt;syntaxhighlight lang="csharp"&gt;
string msg = ok ? "OK" : "FAIL";
&lt;/syntaxhighlight&gt;

== Nullable bool (bool?) ==
Drei Zustände: true, false, null.
&lt;syntaxhighlight lang="csharp"&gt;
bool? x = null;
if (x is true) { }
bool res = x ?? false;
bool onlyTrue = x == true;
&lt;/syntaxhighlight&gt;

== Pattern Matching ==
&lt;syntaxhighlight lang="csharp"&gt;
if (flag is true) { }
switch (flag) {
    case true:  break;
    case false: break;
}
&lt;/syntaxhighlight&gt;

== Parsing &amp; Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
bool b1 = bool.Parse("true");
if (bool.TryParse("False", out var b2)) { }
string s = b2.ToString();     // "True"/"False"
&lt;/syntaxhighlight&gt;

== Konvertierung zu Zahl ==
&lt;syntaxhighlight lang="csharp"&gt;
int bit = flag ? 1 : 0;
&lt;/syntaxhighlight&gt;

== Seiteneffekte erzwingen ==
&lt;syntaxhighlight lang="csharp"&gt;
if (CheckA() &amp; CheckB()) { }   // beide werden sicher ausgeführt
if (CheckA() &amp;&amp; CheckB()) { }  // CheckB nur bei wahr von CheckA
&lt;/syntaxhighlight&gt;

== Guard / Früher Rückgabepunkt ==
&lt;syntaxhighlight lang="csharp"&gt;
if (!isValid) return;
&lt;/syntaxhighlight&gt;

== Debug / Verträge ==
&lt;syntaxhighlight lang="csharp"&gt;
Debug.Assert(condition);
Trace.Assert(condition);
&lt;/syntaxhighlight&gt;

== Häufige Fehlerquellen ==
* Erwartete Ausführung des rechten Operanden bei &amp;&amp; / || (short-circuit)
* Nutzung von &amp; / | statt &amp;&amp; / || (unbeabsichtigte Seiteneffekte)
* Null nicht beachtet bei bool?
* String-Parsing mit falscher Groß/Kleinschreibung (TryParse berücksichtigt beides)

== Kurzliste ==
true/false, !, &amp;&amp;, ||, ^, &amp;, | (kein short-circuit), ?:, ==, !=, bool.Parse/TryParse, bool?, Pattern (is true/false), De Morgan, Debug.Assert.</text>
      <sha1>brcgse2q25n65nvgh4vji6jnrzcodjs</sha1>
    </revision>
    <revision>
      <id>773</id>
      <parentid>770</parentid>
      <timestamp>2025-09-06T04:32:19Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>773</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="17291" sha1="g4dwc8kidzzfz3wf6i52cdbyxoauobi" xml:space="preserve">
* [[Kurse:Datentypen-C-Sharp String-Operationen und wichtige Methoden]]
=String=
== Grundlagen ==
; Deklaration
&lt;syntaxhighlight lang="csharp"&gt;
string name = "Alice";
string leer = string.Empty;
&lt;/syntaxhighlight&gt;

; Verkettung
&lt;syntaxhighlight lang="csharp"&gt;
string full = vorname + " " + nachname;
string interp = $"{vorname} {nachname}";
var builder = new StringBuilder().Append(vorname).Append(' ').Append(nachname).ToString();
&lt;/syntaxhighlight&gt;

== Häufig genutzte Eigenschaften ==
* Length – Anzahl der UTF-16 Codeeinheiten (nicht zwingend Benutzer-grafeme)

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Equals(a, b);                     // Ordinal, case-sensitiv
string.Equals(a, b, StringComparison.OrdinalIgnoreCase);
a.Equals(b, StringComparison.Ordinal);
a == b;                                  // Wertvergleich
string.Compare(a, b, StringComparison.Ordinal);
&lt;/syntaxhighlight&gt;

== Suchen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Contains("abc", StringComparison.Ordinal);
str.StartsWith("pre", StringComparison.OrdinalIgnoreCase);
str.EndsWith("suf", StringComparison.Ordinal);
str.IndexOf("x", StringComparison.Ordinal);
str.LastIndexOf('.');
&lt;/syntaxhighlight&gt;

== Extrahieren ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Substring(startIndex);
str.Substring(startIndex, length);
str[startIndex];         // einzelnes char
&lt;/syntaxhighlight&gt;

== Teilstrings moderner (Span-Slicing) ==
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = str.AsSpan();
var teil = span.Slice(5, 3); // vermeidet Kopie
&lt;/syntaxhighlight&gt;

== Aufteilen &amp; Zusammenfügen ==
&lt;syntaxhighlight lang="csharp"&gt;
var parts = str.Split('.', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
string joined = string.Join(";", parts);
&lt;/syntaxhighlight&gt;

== Trimmen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Trim();      // Whitespace
str.TrimStart();
str.TrimEnd();
str.Trim('0');   // spezifische Zeichen
&lt;/syntaxhighlight&gt;

== Ersetzen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Replace("alt", "neu");
str.Replace('a', 'b');
Regex.Replace(str, "[0-9]+", "#");
&lt;/syntaxhighlight&gt;

== Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Format("Wert: {0:N2}", value);
$"Wert: {value:N2}";
value.ToString("N2", CultureInfo.InvariantCulture);
&lt;/syntaxhighlight&gt;

== Groß/Kleinschreibung ==
&lt;syntaxhighlight lang="csharp"&gt;
str.ToUpperInvariant();
str.ToLower(CultureInfo.CurrentCulture);
&lt;/syntaxhighlight&gt;

== Einfügen &amp; Entfernen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Insert(index, "XYZ");
str.Remove(startIndex);
str.Remove(startIndex, count);
&lt;/syntaxhighlight&gt;

== Pad (Auffüllen) ==
&lt;syntaxhighlight lang="csharp"&gt;
"42".PadLeft(5, '0');   // 00042
"42".PadRight(5, '.');  // 42...
&lt;/syntaxhighlight&gt;

== Zeichenprüfung ==
&lt;syntaxhighlight lang="csharp"&gt;
char.IsLetterOrDigit(ch);
char.IsWhiteSpace(ch);
&lt;/syntaxhighlight&gt;

== Immutable Hinweis ==
Strings sind unveränderlich. Viele Operationen erzeugen neue Instanzen. Für viele Verkettungen: StringBuilder.

== StringBuilder ==
&lt;syntaxhighlight lang="csharp"&gt;
var sb = new StringBuilder(capacity:256)
    .Append("Zeile ").AppendLine("1")
    .AppendFormat("Wert={0}", 123);
string result = sb.ToString();
&lt;/syntaxhighlight&gt;

== Sicherheitsrelevante Vergleiche ==
&lt;syntaxhighlight lang="csharp"&gt;
CryptographicOperations.FixedTimeEquals(
    MemoryMarshal.AsBytes("secret"u8),
    MemoryMarshal.AsBytes(eingabe.AsSpan()));
&lt;/syntaxhighlight&gt;

== Null / Empty / WhiteSpace ==
&lt;syntaxhighlight lang="csharp"&gt;
string.IsNullOrEmpty(str);
string.IsNullOrWhiteSpace(str);
&lt;/syntaxhighlight&gt;

== Interpolated String Handler (Performance) ==
&lt;syntaxhighlight lang="csharp"&gt;
[InterpolatedStringHandler]
public ref struct LogHandler {
    // eigener Handler für Logging
}
&lt;/syntaxhighlight&gt;

== Raw String Literals (C# 11) ==
&lt;syntaxhighlight lang="csharp"&gt;
string json = """
{
  "id": 1,
  "name": "Alice"
}
""";
&lt;/syntaxhighlight&gt;

== Escapes ==
&lt;syntaxhighlight lang="csharp"&gt;
string pfad = @"C:\Temp\log.txt";
string zeile = "Text\nNeue Zeile\tTab";
&lt;/syntaxhighlight&gt;

== Normalisierung (Unicode) ==
&lt;syntaxhighlight lang="csharp"&gt;
string norm = str.Normalize(NormalizationForm.FormC);
&lt;/syntaxhighlight&gt;

== Split vs Span ==
Für Hochleistung: str.AsSpan().Split(...) (ab .NET 8: MemoryExtensions.Split)

== Zusammenfassung ==
Kurzliste: Length, Indexer, Substring, Contains, StartsWith, EndsWith, IndexOf, Split, Join, Trim*, Replace, Insert, Remove, PadLeft/Right, ToUpper*/ToLower*, Format/$-Interpolation, Equals/Compare, Normalize, StringBuilder.

= Ganzzahlen: Operationen und wichtige Methoden =
=== Basis-Typen ===
* sbyte / byte (8 Bit), short / ushort (16), int / uint (32), long / ulong (64)
* nint / nuint (plattformabhängig), BigInteger (beliebig groß, System.Numerics)

=== Deklaration &amp; Literale ===
&lt;syntaxhighlight lang="csharp"&gt;
int a = 42;
long b = 1_000_000_000L;
uint c = 0u;
nint p = 123n;
int bin = 0b1010_1100;
int hex = 0xFF_A0;
&lt;/syntaxhighlight&gt;

=== Konvertierung / Casting ===
&lt;syntaxhighlight lang="csharp"&gt;
long l = a;              // implizit (erweiternd)
int k = (int)l;          // explizit (evtl. Datenverlust)
int parsed = int.Parse("123", CultureInfo.InvariantCulture);
if (int.TryParse("123", out var val)) { /* ok */ }
&lt;/syntaxhighlight&gt;

=== Rechenoperationen ===
&lt;syntaxhighlight lang="csharp"&gt;
int sum = x + y;
int diff = x - y;
int prod = x * y;
int quot = x / y;        // ganzzahlig, Rest abgeschnitten
int mod = x % y;
int neg = -x;
&lt;/syntaxhighlight&gt;

=== Division: Ganzzahl vs Gleitkomma ===
&lt;syntaxhighlight lang="csharp"&gt;
int r1 = 5 / 2;      // 2
double r2 = 5 / 2.0; // 2.5
&lt;/syntaxhighlight&gt;

=== Inkrement / Dekrement ===
&lt;syntaxhighlight lang="csharp"&gt;
i++;
++i;
i--;
&lt;/syntaxhighlight&gt;

=== Overflow-Kontrolle ===
&lt;syntaxhighlight lang="csharp"&gt;
checked {
    int o = int.MaxValue;
    // int p = o + 1;  // OverflowException
}
unchecked {
    int wrap = int.MaxValue + 1; // Wrap-around
}
bool ok = int.TryParse("9999999999", out _); // false wenn außerhalb Range
&lt;/syntaxhighlight&gt;

=== Vergleich &amp; Relationen ===
&lt;syntaxhighlight lang="csharp"&gt;
bool eq = a == b;
bool ne = a != b;
bool lt = a &lt; b;
bool between = x &gt;= min &amp;&amp; x &lt;= max;
&lt;/syntaxhighlight&gt;

=== Bitoperationen ===
&lt;syntaxhighlight lang="csharp"&gt;
int and = flags &amp; mask;
int or  = flags | mask;
int xor = flags ^ mask;
int not = ~flags;
int shiftedL = value &lt;&lt; 3;
int shiftedR = value &gt;&gt; 2;
bool has = (flags &amp; mask) != 0;
&lt;/syntaxhighlight&gt;

=== BitHelpers (.NET) ===
&lt;syntaxhighlight lang="csharp"&gt;
int pop = System.Numerics.BitOperations.PopCount((uint)value);
int leading = BitOperations.LeadingZeroCount((uint)value);
int rot = BitOperations.RotateLeft(value, 5);
&lt;/syntaxhighlight&gt;

=== Math / Numerik ===
&lt;syntaxhighlight lang="csharp"&gt;
int abs = Math.Abs(v);
int clamped = Math.Clamp(v, 0, 100);
int max = Math.Max(a, b);
int min = Math.Min(a, b);
int sign = Math.Sign(v);
long pow2 = 1L &lt;&lt; n;
&lt;/syntaxhighlight&gt;

=== Zufallszahlen ===
&lt;syntaxhighlight lang="csharp"&gt;
int r = Random.Shared.Next(0, 100);          // 0..99
int rr = RandomNumberGenerator.GetInt32(0, 100); // kryptographisch
&lt;/syntaxhighlight&gt;

=== Parsing / Formatierung ===
&lt;syntaxhighlight lang="csharp"&gt;
int n = int.Parse("42");
if (int.TryParse("42", NumberStyles.Integer, CultureInfo.InvariantCulture, out var num)) {}
string s1 = num.ToString();          // kulturabhängig
string s2 = num.ToString("D6");      // führende Nullen
string hexStr = num.ToString("X");   // Hex
&lt;/syntaxhighlight&gt;

=== Performance / Span Parsing ===
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = "12345".AsSpan();
if (int.TryParse(span, out int fast)) { }
&lt;/syntaxhighlight&gt;

=== Checked Arithmetik Helpers (C# 11+) ===
&lt;syntaxhighlight lang="csharp"&gt;
int safe = int.CreateChecked((long)other);
int trunc = int.CreateTruncating(big);
int sat = int.CreateSaturating(big);
&lt;/syntaxhighlight&gt;

=== Pattern Matching / Ranges ===
&lt;syntaxhighlight lang="csharp"&gt;
bool ok = value is &gt;= 0 and &lt;= 10;
&lt;/syntaxhighlight&gt;

=== Flags Enum Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
[Flags]
enum Perm { None=0, Read=1, Write=2, Exec=4 }
Perm p = Perm.Read | Perm.Write;
bool canWrite = p.HasFlag(Perm.Write); // langsamer
bool canWriteFast = (p &amp; Perm.Write) != 0;
&lt;/syntaxhighlight&gt;

=== Häufige Fehlerquellen ===
* Ganzzahldivision statt Gleitkomma
* Overflow bei Multiplikation (checked nutzen)
* Parse ohne Fehlerprüfung
* Bitmasken falsch (Klammern, Vorzeichen)

=== Zusammenfassung Ganzzahlen ===
Kurzliste: + - * / % ++ -- Vergleiche, Bit: &amp; | ^ ~ &lt;&lt; &gt;&gt;, Parse/TryParse, ToString("D"/"X"), Math.* (Abs, Clamp, Min, Max, Sign), Random.Shared.Next, BitOperations (PopCount/Rotate/LeadingZeroCount), checked/unchecked, Flags-Enums.

= Fließkommazahlen: Operationen und wichtige Methoden =

=== Typen &amp; Eigenschaften ===
* float (Single, 32 Bit IEEE 754, ca. 7 Dezimalstellen)
* double (64 Bit IEEE 754, ca. 15–17 Dezimalstellen) – Standard
* decimal (128 Bit, Basis-10, 28–29 signifikante Stellen, langsamer, für Geld/Buchhaltung)
&lt;syntaxhighlight lang="csharp"&gt;
float f = 1.5f;
double d = 1.5;
decimal m = 1.5m;
&lt;/syntaxhighlight&gt;

=== Basis-Operationen ===
&lt;syntaxhighlight lang="csharp"&gt;
double sum = a + b;
double diff = a - b;
double prod = a * b;
double quot = a / b;
double neg = -a;
&lt;/syntaxhighlight&gt;

=== Vergleich (Toleranz) ===
Direkter == Vergleich problematisch wegen Rundungsfehlern.
&lt;syntaxhighlight lang="csharp"&gt;
bool AreClose(double x, double y, double relEps = 1e-12, double absEps = 1e-15) {
    double diff = Math.Abs(x - y);
    if (diff &lt;= absEps) return true;
    return diff &lt;= relEps * Math.Max(Math.Abs(x), Math.Abs(y));
}
&lt;/syntaxhighlight&gt;

=== Spezielle Werte ===
&lt;syntaxhighlight lang="csharp"&gt;
double nan = double.NaN;
double posInf = double.PositiveInfinity;
double negInf = double.NegativeInfinity;
bool isNan = double.IsNaN(nan);
bool isInf = double.IsInfinity(posInf);
bool isFinite = double.IsFinite(1.0);
double eps = double.Epsilon; // kleinste &gt;0 Subnormal bei double
&lt;/syntaxhighlight&gt;

=== Decimal Besonderheiten ===
&lt;syntaxhighlight lang="csharp"&gt;
decimal preis = 12.34m;
decimal sum = preis * 3; // exakte Dezimalarithmetik (Basis 10)
&lt;/syntaxhighlight&gt;

=== Casting / Konvertierung ===
&lt;syntaxhighlight lang="csharp"&gt;
double dd = (double)f;           // implizit float -&gt; double
float ff = (float)dd;            // explizit (Präzisionsverlust)
decimal dm = (decimal)dd;        // kann Overflow werfen
double back = (double)dm;
&lt;/syntaxhighlight&gt;

=== Rundung ===
&lt;syntaxhighlight lang="csharp"&gt;
double r1 = Math.Round(2.345, 2); // Banker's (ToEven)
double r2 = Math.Round(2.345, 2, MidpointRounding.AwayFromZero);
double ceil = Math.Ceiling(x);
double floor = Math.Floor(x);
double trunc = Math.Truncate(x);
&lt;/syntaxhighlight&gt;

=== Math Funktionen ===
&lt;syntaxhighlight lang="csharp"&gt;
double abs = Math.Abs(x);
double pow = Math.Pow(2.0, 10);
double sq = Math.Sqrt(v);
double c = Math.Cos(a);
double s = Math.Sin(a);
double t = Math.Tan(a);
double exp = Math.Exp(a);
double ln = Math.Log(a);
double log10 = Math.Log10(a);
double clamped = Math.Clamp(x, 0.0, 1.0);
double min = Math.Min(a, b);
double max = Math.Max(a, b);
double copySign = Math.CopySign(magnitude:5.0, sign:-2.0);
&lt;/syntaxhighlight&gt;

=== MathF für float ===
&lt;syntaxhighlight lang="csharp"&gt;
float sf = MathF.Sqrt(3f);
&lt;/syntaxhighlight&gt;

=== Fused Multiply-Add (FMA) ===
&lt;syntaxhighlight lang="csharp"&gt;
double fma = Math.FusedMultiplyAdd(a, b, c); // a*b + c mit geringerer Rundung
&lt;/syntaxhighlight&gt;

=== Parsing &amp; Formatierung ===
&lt;syntaxhighlight lang="csharp"&gt;
double v = double.Parse("1.23", CultureInfo.InvariantCulture);
if (double.TryParse("1.23", NumberStyles.Float, CultureInfo.InvariantCulture, out var parsed)) { }
string sG = v.ToString("G17", CultureInfo.InvariantCulture); // max Genauigkeit double
string sF = v.ToString("F2");       // 2 Nachkommastellen
string sE = v.ToString("E3");       // wissenschaftlich
string sR = v.ToString("R");        // Round-trip
&lt;/syntaxhighlight&gt;

=== Span Parsing (Performance) ===
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = "3.14159".AsSpan();
if (double.TryParse(span, NumberStyles.Float, CultureInfo.InvariantCulture, out double pi)) { }
&lt;/syntaxhighlight&gt;

=== Interop / Bit-Ebene ===
&lt;syntaxhighlight lang="csharp"&gt;
long bits = BitConverter.DoubleToInt64Bits(d);
double again = BitConverter.Int64BitsToDouble(bits);
int floatBits = BitConverter.SingleToInt32Bits(f);
&lt;/syntaxhighlight&gt;

=== NaN Verhalten ===
&lt;syntaxhighlight lang="csharp"&gt;
bool eqNaN = double.NaN == double.NaN;        // false
bool notEq = double.NaN != double.NaN;        // true
bool ordered = double.NaN &lt; 1.0;              // false
&lt;/syntaxhighlight&gt;

=== Aggregationen / Summe (Stabilität) ===
&lt;syntaxhighlight lang="csharp"&gt;
double StableSum(double[] data) {
    double sum = 0, c = 0; // Kahan
    foreach (var x in data) {
        double y = x - c;
        double t = sum + y;
        c = (t - sum) - y;
        sum = t;
    }
    return sum;
}
&lt;/syntaxhighlight&gt;

=== Random Gleitkomma ===
&lt;syntaxhighlight lang="csharp"&gt;
double r = Random.Shared.NextDouble();      // [0,1)
double rRange = Random.Shared.NextDouble() * (max - min) + min;
&lt;/syntaxhighlight&gt;

=== Performance Hinweise ===
* double schneller als decimal
* float spart Speicher (Arrays, GPU), aber geringere Präzision
* Avoid boxing bei Formatierung durch Span-basierte APIs (TryFormat)

=== Tolerante Sortierung Beispiel ===
&lt;syntaxhighlight lang="csharp"&gt;
Array.Sort(values, (x,y) =&gt; Math.Abs(x-y) &lt; 1e-12 ? 0 : x.CompareTo(y));
&lt;/syntaxhighlight&gt;

=== Exceptions vermeiden ===
Verwendung von TryParse, keine Annahme auf exakte Darstellung (0.1 + 0.2 != 0.3 exakt).

=== Häufige Fehlerquellen ===
* Direkter == Vergleich ohne Toleranz
* decimal mit Math.* (gibt nur double-Überladungen für viele Funktionen)
* Kulturabhängige Dezimaltrennzeichen beim Parse
* Rundung (MidpointRounding falsch gewählt)
* Überlauf in decimal (Casting von sehr großen double)

=== Auswahlhilfe ===
* Wissenschaft / Grafik: float (wenn Speicher wichtig) oder double
* Standard: double
* Geld / Finanzen (exakte Dezimalstellen): decimal

=== Zusammenfassung Fließkomma ===
Kurzliste: + - * / Vergleich mit Toleranz, Math (Sqrt, Pow, Sin, Cos, Log, Exp, Clamp, Min/Max, CopySign, FusedMultiplyAdd), Round/Ceiling/Floor/Truncate, double.IsNaN/IsInfinity/IsFinite, Parse/TryParse, ToString("G17","F","E","R"), BitConverter.*Bits, Random.Shared.NextDouble, Kahan-Summe, decimal für Geld.

= C# bool-Operationen und wichtige Methoden =

== Typ &amp; Literale ==
&lt;syntaxhighlight lang="csharp"&gt;
bool t = true;
bool f = false;
&lt;/syntaxhighlight&gt;
Wird primär für Kontrollfluss genutzt; keine implizite Konvertierung zu/zur Zahl.

== Logische Operatoren ==
&lt;syntaxhighlight lang="csharp"&gt;
bool not = !t;        // Negation
bool both = a &amp;&amp; b;   // UND (short-circuit)
bool either = a || b; // ODER (short-circuit)
bool xor = a ^ b;     // Exklusiv-Oder
&lt;/syntaxhighlight&gt;
&amp; und | auf bool werten beide Operanden immer aus:
&lt;syntaxhighlight lang="csharp"&gt;
bool bothAll = a &amp; b;
bool eitherAll = a | b;
&lt;/syntaxhighlight&gt;

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
bool eq = a == b;
bool ne = a != b;
&lt;/syntaxhighlight&gt;

== Zuweisung vs Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
// if (a = b)  // Compilerfehler (gut gegen Verwechslung mit ==)
&lt;/syntaxhighlight&gt;

== Operator-Präzedenz (Auszug) ==
! vor &amp;&amp; vor ||. Klammern für Klarheit:
&lt;syntaxhighlight lang="csharp"&gt;
if (!(a || b) &amp;&amp; c) { }
&lt;/syntaxhighlight&gt;

== De Morgan ==
&lt;syntaxhighlight lang="csharp"&gt;
!(a &amp;&amp; b) == !a || !b;
!(a || b) == !a &amp;&amp; !b;
&lt;/syntaxhighlight&gt;

== Ternärer Operator ==
&lt;syntaxhighlight lang="csharp"&gt;
string msg = ok ? "OK" : "FAIL";
&lt;/syntaxhighlight&gt;

== Nullable bool (bool?) ==
Drei Zustände: true, false, null.
&lt;syntaxhighlight lang="csharp"&gt;
bool? x = null;
if (x is true) { }
bool res = x ?? false;
bool onlyTrue = x == true;
&lt;/syntaxhighlight&gt;

== Pattern Matching ==
&lt;syntaxhighlight lang="csharp"&gt;
if (flag is true) { }
switch (flag) {
    case true:  break;
    case false: break;
}
&lt;/syntaxhighlight&gt;

== Parsing &amp; Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
bool b1 = bool.Parse("true");
if (bool.TryParse("False", out var b2)) { }
string s = b2.ToString();     // "True"/"False"
&lt;/syntaxhighlight&gt;

== Konvertierung zu Zahl ==
&lt;syntaxhighlight lang="csharp"&gt;
int bit = flag ? 1 : 0;
&lt;/syntaxhighlight&gt;

== Seiteneffekte erzwingen ==
&lt;syntaxhighlight lang="csharp"&gt;
if (CheckA() &amp; CheckB()) { }   // beide werden sicher ausgeführt
if (CheckA() &amp;&amp; CheckB()) { }  // CheckB nur bei wahr von CheckA
&lt;/syntaxhighlight&gt;

== Guard / Früher Rückgabepunkt ==
&lt;syntaxhighlight lang="csharp"&gt;
if (!isValid) return;
&lt;/syntaxhighlight&gt;

== Debug / Verträge ==
&lt;syntaxhighlight lang="csharp"&gt;
Debug.Assert(condition);
Trace.Assert(condition);
&lt;/syntaxhighlight&gt;

== Häufige Fehlerquellen ==
* Erwartete Ausführung des rechten Operanden bei &amp;&amp; / || (short-circuit)
* Nutzung von &amp; / | statt &amp;&amp; / || (unbeabsichtigte Seiteneffekte)
* Null nicht beachtet bei bool?
* String-Parsing mit falscher Groß/Kleinschreibung (TryParse berücksichtigt beides)

== Kurzliste ==
true/false, !, &amp;&amp;, ||, ^, &amp;, | (kein short-circuit), ?:, ==, !=, bool.Parse/TryParse, bool?, Pattern (is true/false), De Morgan, Debug.Assert.</text>
      <sha1>g4dwc8kidzzfz3wf6i52cdbyxoauobi</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Datentypen-C-Sharp String-Operationen und wichtige Methoden</title>
    <ns>3002</ns>
    <id>192</id>
    <revision>
      <id>771</id>
      <timestamp>2025-09-01T23:47:28Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „== Grundlagen == ; Deklaration &lt;syntaxhighlight lang="csharp"&gt; string name = "Alice"; string leer = string.Empty; &lt;/syntaxhighlight&gt;  ; Verkettung &lt;syntaxhighlight lang="csharp"&gt; string full = vorname + " " + nachname; string interp = $"{vorname} {nachname}"; var builder = new StringBuilder().Append(vorname).Append(' ').Append(nachname).ToString(); &lt;/syntaxhighlight&gt;  == Häufig genutzte Eigenschaften == * Length – Anzahl der UTF-16 Codeeinheiten (nicht…“</comment>
      <origin>771</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="4442" sha1="6e4zibacw80a8vrml4gm9x1148cy7rd" xml:space="preserve">== Grundlagen ==
; Deklaration
&lt;syntaxhighlight lang="csharp"&gt;
string name = "Alice";
string leer = string.Empty;
&lt;/syntaxhighlight&gt;

; Verkettung
&lt;syntaxhighlight lang="csharp"&gt;
string full = vorname + " " + nachname;
string interp = $"{vorname} {nachname}";
var builder = new StringBuilder().Append(vorname).Append(' ').Append(nachname).ToString();
&lt;/syntaxhighlight&gt;

== Häufig genutzte Eigenschaften ==
* Length – Anzahl der UTF-16 Codeeinheiten (nicht zwingend Benutzer-grafeme)

== Vergleich ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Equals(a, b);                     // Ordinal, case-sensitiv
string.Equals(a, b, StringComparison.OrdinalIgnoreCase);
a.Equals(b, StringComparison.Ordinal);
a == b;                                  // Wertvergleich
string.Compare(a, b, StringComparison.Ordinal);
&lt;/syntaxhighlight&gt;

== Suchen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Contains("abc", StringComparison.Ordinal);
str.StartsWith("pre", StringComparison.OrdinalIgnoreCase);
str.EndsWith("suf", StringComparison.Ordinal);
str.IndexOf("x", StringComparison.Ordinal);
str.LastIndexOf('.');
&lt;/syntaxhighlight&gt;

== Extrahieren ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Substring(startIndex);
str.Substring(startIndex, length);
str[startIndex];         // einzelnes char
&lt;/syntaxhighlight&gt;

== Teilstrings moderner (Span-Slicing) ==
&lt;syntaxhighlight lang="csharp"&gt;
ReadOnlySpan&lt;char&gt; span = str.AsSpan();
var teil = span.Slice(5, 3); // vermeidet Kopie
&lt;/syntaxhighlight&gt;

== Aufteilen &amp; Zusammenfügen ==
&lt;syntaxhighlight lang="csharp"&gt;
var parts = str.Split('.', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
string joined = string.Join(";", parts);
&lt;/syntaxhighlight&gt;

== Trimmen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Trim();      // Whitespace
str.TrimStart();
str.TrimEnd();
str.Trim('0');   // spezifische Zeichen
&lt;/syntaxhighlight&gt;

== Ersetzen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Replace("alt", "neu");
str.Replace('a', 'b');
Regex.Replace(str, "[0-9]+", "#");
&lt;/syntaxhighlight&gt;

== Formatierung ==
&lt;syntaxhighlight lang="csharp"&gt;
string.Format("Wert: {0:N2}", value);
$"Wert: {value:N2}";
value.ToString("N2", CultureInfo.InvariantCulture);
&lt;/syntaxhighlight&gt;

== Groß/Kleinschreibung ==
&lt;syntaxhighlight lang="csharp"&gt;
str.ToUpperInvariant();
str.ToLower(CultureInfo.CurrentCulture);
&lt;/syntaxhighlight&gt;

== Einfügen &amp; Entfernen ==
&lt;syntaxhighlight lang="csharp"&gt;
str.Insert(index, "XYZ");
str.Remove(startIndex);
str.Remove(startIndex, count);
&lt;/syntaxhighlight&gt;

== Pad (Auffüllen) ==
&lt;syntaxhighlight lang="csharp"&gt;
"42".PadLeft(5, '0');   // 00042
"42".PadRight(5, '.');  // 42...
&lt;/syntaxhighlight&gt;

== Zeichenprüfung ==
&lt;syntaxhighlight lang="csharp"&gt;
char.IsLetterOrDigit(ch);
char.IsWhiteSpace(ch);
&lt;/syntaxhighlight&gt;

== Immutable Hinweis ==
Strings sind unveränderlich. Viele Operationen erzeugen neue Instanzen. Für viele Verkettungen: StringBuilder.

== StringBuilder ==
&lt;syntaxhighlight lang="csharp"&gt;
var sb = new StringBuilder(capacity:256)
    .Append("Zeile ").AppendLine("1")
    .AppendFormat("Wert={0}", 123);
string result = sb.ToString();
&lt;/syntaxhighlight&gt;

== Sicherheitsrelevante Vergleiche ==
&lt;syntaxhighlight lang="csharp"&gt;
CryptographicOperations.FixedTimeEquals(
    MemoryMarshal.AsBytes("secret"u8),
    MemoryMarshal.AsBytes(eingabe.AsSpan()));
&lt;/syntaxhighlight&gt;

== Null / Empty / WhiteSpace ==
&lt;syntaxhighlight lang="csharp"&gt;
string.IsNullOrEmpty(str);
string.IsNullOrWhiteSpace(str);
&lt;/syntaxhighlight&gt;

== Interpolated String Handler (Performance) ==
&lt;syntaxhighlight lang="csharp"&gt;
[InterpolatedStringHandler]
public ref struct LogHandler {
    // eigener Handler für Logging
}
&lt;/syntaxhighlight&gt;

== Raw String Literals (C# 11) ==
&lt;syntaxhighlight lang="csharp"&gt;
string json = """
{
  "id": 1,
  "name": "Alice"
}
""";
&lt;/syntaxhighlight&gt;

== Escapes ==
&lt;syntaxhighlight lang="csharp"&gt;
string pfad = @"C:\Temp\log.txt";
string zeile = "Text\nNeue Zeile\tTab";
&lt;/syntaxhighlight&gt;

== Normalisierung (Unicode) ==
&lt;syntaxhighlight lang="csharp"&gt;
string norm = str.Normalize(NormalizationForm.FormC);
&lt;/syntaxhighlight&gt;

== Split vs Span ==
Für Hochleistung: str.AsSpan().Split(...) (ab .NET 8: MemoryExtensions.Split)

== Zusammenfassung ==
Kurzliste: Length, Indexer, Substring, Contains, StartsWith, EndsWith, IndexOf, Split, Join, Trim*, Replace, Insert, Remove, PadLeft/Right, ToUpper*/ToLower*, Format/$-Interpolation, Equals/Compare, Normalize, StringBuilder.</text>
      <sha1>6e4zibacw80a8vrml4gm9x1148cy7rd</sha1>
    </revision>
    <revision>
      <id>772</id>
      <parentid>771</parentid>
      <timestamp>2025-09-01T23:58:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>772</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3569" sha1="0cxddiee9kb5zymbevzc76rbcm4cw1a" xml:space="preserve">Hier ist die Übersicht, sortiert von Anfänger bis Profi, jeweils mit Beispielcode und Merkzettel:

== Anfänger ==
; Deklaration &amp; Verkettung
&lt;syntaxhighlight lang="csharp"&gt;
string name = "Alice";
string full = vorname + " " + nachname;
&lt;/syntaxhighlight&gt;
* Merkzettel: Strings sind Zeichenketten. Verkettung mit +.

; Eigenschaften &amp; Vergleich
&lt;syntaxhighlight lang="csharp"&gt;
int len = str.Length;
bool gleich = str == "abc";
&lt;/syntaxhighlight&gt;
* Merkzettel: .Length gibt die Länge. == vergleicht Werte.

; Suchen &amp; Extrahieren
&lt;syntaxhighlight lang="csharp"&gt;
bool hat = str.Contains("abc");
char c = str[0];
string teil = str.Substring(2, 3);
&lt;/syntaxhighlight&gt;
* Merkzettel: .Contains prüft auf Teilstring, [i] für Zeichen, Substring für Ausschnitt.

; Aufteilen &amp; Zusammenfügen
&lt;syntaxhighlight lang="csharp"&gt;
var parts = str.Split(',');
string joined = string.Join(";", parts);
&lt;/syntaxhighlight&gt;
* Merkzettel: Split teilt, Join verbindet.

; Trimmen &amp; Ersetzen
&lt;syntaxhighlight lang="csharp"&gt;
str.Trim();
str.Replace("alt", "neu");
&lt;/syntaxhighlight&gt;
* Merkzettel: Trim entfernt Leerzeichen, Replace ersetzt Text.

== Fortgeschritten ==
; Formatierung &amp; Groß/Kleinschreibung
&lt;syntaxhighlight lang="csharp"&gt;
string s = $"Wert: {value:N2}";
str.ToUpperInvariant();
&lt;/syntaxhighlight&gt;
* Merkzettel: $"" für Interpolation, ToUpper/ToLower für Umwandlung.

; Einfügen &amp; Entfernen &amp; Pad
&lt;syntaxhighlight lang="csharp"&gt;
str.Insert(2, "X");
str.Remove(1, 2);
"42".PadLeft(5, '0');
&lt;/syntaxhighlight&gt;
* Merkzettel: Insert/Remove ändern Text, PadLeft/Right füllt auf.

; Zeichenprüfung
&lt;syntaxhighlight lang="csharp"&gt;
char.IsLetterOrDigit(ch);
&lt;/syntaxhighlight&gt;
* Merkzettel: Prüft Zeichen auf Buchstabe/Ziffer.

; Null/Empty/WhiteSpace
&lt;syntaxhighlight lang="csharp"&gt;
string.IsNullOrEmpty(str);
string.IsNullOrWhiteSpace(str);
&lt;/syntaxhighlight&gt;
* Merkzettel: Prüft auf leere oder nur Leerzeichen.

== Profi ==
; StringBuilder (für viele Änderungen)
&lt;syntaxhighlight lang="csharp"&gt;
var sb = new StringBuilder().Append("A").Append("B");
string result = sb.ToString();
&lt;/syntaxhighlight&gt;
* Merkzettel: StringBuilder für viele Verkettungen.

; Span-Slicing &amp; Split (Performance)
&lt;syntaxhighlight lang="csharp"&gt;
var teil = str.AsSpan().Slice(2, 3);
&lt;/syntaxhighlight&gt;
* Merkzettel: AsSpan/Slice für schnelle Teilstrings.

; Sicherheitsrelevanter Vergleich
&lt;syntaxhighlight lang="csharp"&gt;
CryptographicOperations.FixedTimeEquals(
    MemoryMarshal.AsBytes("secret"u8),
    MemoryMarshal.AsBytes(eingabe.AsSpan()));
&lt;/syntaxhighlight&gt;
* Merkzettel: FixedTimeEquals für sichere Vergleiche.

; Interpolated String Handler
&lt;syntaxhighlight lang="csharp"&gt;
[InterpolatedStringHandler]
public ref struct LogHandler { }
&lt;/syntaxhighlight&gt;
* Merkzettel: Eigene Handler für Logging/Performance.

; Raw String Literals (C# 11)
&lt;syntaxhighlight lang="csharp"&gt;
string json = """
{
  "id": 1,
  "name": "Alice"
}
""";
&lt;/syntaxhighlight&gt;
* Merkzettel: Mehrzeilige Strings mit """.

; Escapes &amp; Normalisierung
&lt;syntaxhighlight lang="csharp"&gt;
string pfad = @"C:\Temp\log.txt";
string norm = str.Normalize(NormalizationForm.FormC);
&lt;/syntaxhighlight&gt;
* Merkzettel: @ für Pfade, Normalize für Unicode.

== Zusammenfassung ==
Kurzliste Anfänger: Deklaration, Verkettung, Eigenschaften, Vergleich, Suchen, Extrahieren, Split, Join, Trim, Replace  
Kurzliste Fortgeschritten: Formatierung, Groß/Klein, Insert, Remove, Pad, Zeichenprüfung, Null/Empty  
Kurzliste Profi: StringBuilder, Span, Sicherheitsvergleich, Interpolated Handler, Raw Literals, Escapes, Normalisierung</text>
      <sha1>0cxddiee9kb5zymbevzc76rbcm4cw1a</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Moderne-C-Charp Class Aufbau</title>
    <ns>3002</ns>
    <id>193</id>
    <revision>
      <id>778</id>
      <timestamp>2025-09-07T03:56:10Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>778</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="3837" sha1="lmtq2i9trtupyqr47q24oynvb2j4snn" xml:space="preserve">== Aufbau einer modernen C#-Klasse ==

Eine Klasse bündelt Daten (Eigenschaften) und Verhalten (Methoden). Modernes C# nutzt file-scoped Namespaces, Auto-Properties, required/init, Expression-bodied Members, Events und optional Primärkonstruktoren (C# 12).

=== Minimales Gerüst ===

&lt;syntaxhighlight lang="csharp"&gt;
namespace MeineApp;

public class Person
{
    public required string Name { get; init; }
    public int Alter { get; set; }

    public void Begruessen() =&gt; Console.WriteLine($"Hallo, mein Name ist {Name}.");
}
&lt;/syntaxhighlight&gt;

=== Maximales Gerüst ===

&lt;syntaxhighlight lang="csharp"&gt;
namespace MeineApp.Models;

public class Person
{
    // Primärkonstruktor (ab C# 12)
    public Person(string name, int alter)
    {
        Name = name;
        Alter = alter;
    }

    // Auto-Properties mit required und init
    public required string Name { get; init; }
    public int Alter { get; set; }

    // Event
    public event EventHandler? Begruesst;

    // Expression-bodied Member
    public string Info =&gt; $"{Name} ({Alter} Jahre)";

    // Methode mit Event-Auslösung
    public void Begruessen()
    {
        Console.WriteLine($"Hallo, mein Name ist {Name}.");
        Begruesst?.Invoke(this, EventArgs.Empty);
    }

    // Statische Factory-Methode
    public static Person Erstellen(string name) =&gt; new(name, 0);
}
&lt;/syntaxhighlight&gt;

=== Klassisches Klassen-Formular ===

&lt;syntaxhighlight lang="csharp"&gt;
namespace MeineApp.Classic
{
    public class Person
    {
        private string _name;
        private int _alter;

        public Person(string name, int alter)
        {
            _name = name;
            _alter = alter;
        }

        public string Name
        {
            get { return _name; }
            set { _name = value; }
        }

        public int Alter
        {
            get { return _alter; }
            set { _alter = value; }
        }

        public void Begruessen()
        {
            Console.WriteLine("Hallo, mein Name ist " + _name + ".");
        }
    }
}
&lt;/syntaxhighlight&gt;

=== Praxis: Gemachte Form ===

&lt;syntaxhighlight lang="csharp"&gt;
namespace MeineApp.Praxis;

public class Person
{
    public required string Name { get; init; }
    public int Alter { get; set; }
    public string Beruf { get; set; } = "Unbekannt";

    public void Begruessen()
    {
        Console.WriteLine($"Hallo, ich bin {Name}, {Alter} Jahre alt und arbeite als {Beruf}.");
    }

    public void GeburtstagFeiern()
    {
        Alter++;
        Console.WriteLine($"Alles Gute zum Geburtstag, {Name}! Du bist jetzt {Alter}.");
    }
}
&lt;/syntaxhighlight&gt;



# 20 einfache Praxis-Übungen für moderne C#-Klassen (für Einsteiger)

1. Eine Klasse für einen Hund mit Name und Alter.
2. Eine Klasse für ein Auto mit Marke und Baujahr.
3. Eine Klasse für ein Buch mit Titel und Autor.
4. Eine Klasse für einen Schüler mit Name und Note.
5. Eine Klasse für einen Ball mit Farbe und Größe.
6. Eine Klasse für eine Lampe mit An/Aus-Status.
7. Eine Klasse für ein Rechteck mit Breite und Höhe.
8. Eine Klasse für einen Würfel mit Methode zum Würfeln.
9. Eine Klasse für eine Einkaufsliste mit Produkten.
10. Eine Klasse für einen Timer mit Start/Stop.
11. Eine Klasse für einen Musik-Track mit Titel und Dauer.
12. Eine Klasse für eine Adresse mit Straße und Stadt.
13. Eine Klasse für einen Film mit Titel und Bewertung.
14. Eine Klasse für ein Konto mit Kontostand.
15. Eine Klasse für eine Nachricht mit Text und Absender.
16. Eine Klasse für eine Temperatur mit Umrechnung Celsius/Fahrenheit.
17. Eine Klasse für einen Kalender-Eintrag mit Datum und Beschreibung.
18. Eine Klasse für eine Aufgabe mit Erledigt-Status.
19. Eine Klasse für einen Kontakt mit Name und Telefonnummer.
20. Eine Klasse für eine Ampel mit Status (Rot/Gelb/Grün).</text>
      <sha1>lmtq2i9trtupyqr47q24oynvb2j4snn</sha1>
    </revision>
    <revision>
      <id>779</id>
      <parentid>778</parentid>
      <timestamp>2025-09-07T03:57:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>779</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2629" sha1="lj096jptmjkrjkrdt55agp95thojb5k" xml:space="preserve">== Aufbau einer modernen C#-Klasse ==

Eine Klasse bündelt Daten (Eigenschaften) und Verhalten (Methoden). Modernes C# nutzt file-scoped Namespaces, Auto-Properties, required/init, Expression-bodied Members, Events und optional Primärkonstruktoren (C# 12).

=== Minimales Gerüst ===

&lt;syntaxhighlight lang="csharp"&gt;
namespace MeineApp;

public class Person
{
    public required string Name { get; init; }
    public int Alter { get; set; }

    public void Begruessen() =&gt; Console.WriteLine($"Hallo, mein Name ist {Name}.");
}
&lt;/syntaxhighlight&gt;

=== Maximales Gerüst ===

&lt;syntaxhighlight lang="csharp"&gt;
namespace MeineApp.Models;

public class Person
{
    // Primärkonstruktor (ab C# 12)
    public Person(string name, int alter)
    {
        Name = name;
        Alter = alter;
    }

    // Auto-Properties mit required und init
    public required string Name { get; init; }
    public int Alter { get; set; }

    // Event
    public event EventHandler? Begruesst;

    // Expression-bodied Member
    public string Info =&gt; $"{Name} ({Alter} Jahre)";

    // Methode mit Event-Auslösung
    public void Begruessen()
    {
        Console.WriteLine($"Hallo, mein Name ist {Name}.");
        Begruesst?.Invoke(this, EventArgs.Empty);
    }

    // Statische Factory-Methode
    public static Person Erstellen(string name) =&gt; new(name, 0);
}
&lt;/syntaxhighlight&gt;

=== Klassisches Klassen-Formular ===

&lt;syntaxhighlight lang="csharp"&gt;
namespace MeineApp.Classic
{
    public class Person
    {
        private string _name;
        private int _alter;

        public Person(string name, int alter)
        {
            _name = name;
            _alter = alter;
        }

        public string Name
        {
            get { return _name; }
            set { _name = value; }
        }

        public int Alter
        {
            get { return _alter; }
            set { _alter = value; }
        }

        public void Begruessen()
        {
            Console.WriteLine("Hallo, mein Name ist " + _name + ".");
        }
    }
}
&lt;/syntaxhighlight&gt;

=== Praxis: Gemachte Form ===

&lt;syntaxhighlight lang="csharp"&gt;
namespace MeineApp.Praxis;

public class Person
{
    public required string Name { get; init; }
    public int Alter { get; set; }
    public string Beruf { get; set; } = "Unbekannt";

    public void Begruessen()
    {
        Console.WriteLine($"Hallo, ich bin {Name}, {Alter} Jahre alt und arbeite als {Beruf}.");
    }

    public void GeburtstagFeiern()
    {
        Alter++;
        Console.WriteLine($"Alles Gute zum Geburtstag, {Name}! Du bist jetzt {Alter}.");
    }
}
&lt;/syntaxhighlight&gt;</text>
      <sha1>lj096jptmjkrjkrdt55agp95thojb5k</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Asp Net Core Einstellung</title>
    <ns>3002</ns>
    <id>194</id>
    <revision>
      <id>789</id>
      <timestamp>2025-09-25T18:50:54Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>Die Seite wurde neu angelegt: „&lt;pre&gt; var builder = WebApplication.CreateBuilder(args); builder.Services.AddControllersWithViews(); var app = builder.Build();  app.UseStaticFiles(); app.UseRouting();  app.MapControllerRoute(     name: "default",     pattern: "{controller=Home}/{action=Index}/{id?}"); &lt;/pre&gt;“</comment>
      <origin>789</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="276" sha1="f1aydb18yt92c3cgpin8hzry3tje82g" xml:space="preserve">&lt;pre&gt;
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddControllersWithViews();
var app = builder.Build();

app.UseStaticFiles();
app.UseRouting();

app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");
&lt;/pre&gt;</text>
      <sha1>f1aydb18yt92c3cgpin8hzry3tje82g</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Lerntechnik</title>
    <ns>3002</ns>
    <id>195</id>
    <revision>
      <id>791</id>
      <timestamp>2025-09-26T10:25:49Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>791</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="941" sha1="nx9b7caj2veorjkq5ha8qd0dhyhk0m4" xml:space="preserve">==Lernressourcen==
* Lernpath
* Schritt für Schritte Anleitung
* Schritt für Schritt
* Kleine Projekte umsetzen
* Tutorials
* Kurse
* Dokumentationen
* Video-Tutorials
* Coding-Plattformen
* Cheat Sheets und Spickzettel
* Coding-Challenge
* Microlearning (Lernen in kleinen Einheiten)

==Projektbasiertes und Nicht-Lineares Lernen==
Projektbasiertes Lernen ist eine Lernmethode, bei der Lernende Wissen und Kompetenzen durch die Bearbeitung von Projekten erwerben. Im Mittelpunkt steht dabei die eigenständige Planung, Durchführung und Präsentation eines Projekts, das häufig an realen Problemen oder Fragestellungen orientiert ist. Diese Methode fördert selbstständiges Arbeiten, Teamfähigkeit und die Anwendung von Wissen in praxisnahen Situationen.

* Learning by Doing / Projektmethode
* Interleaving (Durchmischen)
* Top-Down-Lernen
* Active Recall (Aktives Erinnern)
* Challenge-Based Learning (Lernen durch Herausforderungen)</text>
      <sha1>nx9b7caj2veorjkq5ha8qd0dhyhk0m4</sha1>
    </revision>
    <revision>
      <id>792</id>
      <parentid>791</parentid>
      <timestamp>2025-09-26T13:08:21Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>792</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1015" sha1="s4plooxmod84ospou8sw4k6yhv0quwy" xml:space="preserve">==Lernressourcen==
* Lernpath
* Schritt für Schritte Anleitung
* Schritt für Schritt
* Kleine Projekte umsetzen
* Tutorials
* Kurse
* Dokumentationen
* Video-Tutorials
* Coding-Plattformen
* Cheat Sheets und Spickzettel
* Coding-Challenge
* Microlearning (Lernen in kleinen Einheiten)
* Notizen
* Best Practices
* Learning by Teaching (Lernen durch Erklären)
==Projektbasiertes und Nicht-Lineares Lernen==
Projektbasiertes Lernen ist eine Lernmethode, bei der Lernende Wissen und Kompetenzen durch die Bearbeitung von Projekten erwerben. Im Mittelpunkt steht dabei die eigenständige Planung, Durchführung und Präsentation eines Projekts, das häufig an realen Problemen oder Fragestellungen orientiert ist. Diese Methode fördert selbstständiges Arbeiten, Teamfähigkeit und die Anwendung von Wissen in praxisnahen Situationen.

* Learning by Doing / Projektmethode
* Interleaving (Durchmischen)
* Top-Down-Lernen
* Active Recall (Aktives Erinnern)
* Challenge-Based Learning (Lernen durch Herausforderungen)</text>
      <sha1>s4plooxmod84ospou8sw4k6yhv0quwy</sha1>
    </revision>
    <revision>
      <id>793</id>
      <parentid>792</parentid>
      <timestamp>2025-09-27T04:32:02Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>/* Lernressourcen */</comment>
      <origin>793</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="889" sha1="tmjj6gd3lhdyczcf0obcam8j2r7u4bv" xml:space="preserve">==Lernressourcen==
* Lernpath
* Schritt für Schritte Anleitung
* Schritt für Schritt
* Tutorials und Dokumentationen
* Kleine Projekte umsetzen (Micro-Projekte)
* Coding-Plattformen und Coding-Challenges 
* Notizen 
* Best Practices

==Projektbasiertes und Nicht-Lineares Lernen==
Projektbasiertes Lernen ist eine Lernmethode, bei der Lernende Wissen und Kompetenzen durch die Bearbeitung von Projekten erwerben. Im Mittelpunkt steht dabei die eigenständige Planung, Durchführung und Präsentation eines Projekts, das häufig an realen Problemen oder Fragestellungen orientiert ist. Diese Methode fördert selbstständiges Arbeiten, Teamfähigkeit und die Anwendung von Wissen in praxisnahen Situationen.

* Learning by Doing / Projektmethode
* Interleaving (Durchmischen)
* Top-Down-Lernen
* Active Recall (Aktives Erinnern)
* Challenge-Based Learning (Lernen durch Herausforderungen)</text>
      <sha1>tmjj6gd3lhdyczcf0obcam8j2r7u4bv</sha1>
    </revision>
    <revision>
      <id>794</id>
      <parentid>793</parentid>
      <timestamp>2025-09-27T05:19:38Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <origin>794</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2681" sha1="2ro89rslphv3ficylkdg5hw0fca90bu" xml:space="preserve">==Die besten modernen Lernmethoden für das Lernen von Programmiersprachen==

Effektives Programmierenlernen kombiniert praktische Übung, kognitive Strategien und soziale Formate. Die folgenden Ansätze lassen sich flexibel mischen und iterativ anwenden.

===Praktische Ansätze===
* '''Projektbasiertes Lernen''': Eigene Mini‑Projekte (z.B. To‑Do‑App, CLI‑Tool, kleines Spiel) liefern schnellen Praxisbezug und fördern Transfer.
* '''Coding-Challenges und Online-Plattformen''': Regelmäßiges Lösen von Aufgaben auf [[LeetCode]], [[HackerRank]] oder [[Codewars]] festigt Syntax und Problemlösungsfähigkeiten.
* '''Pair Programming''': Abwechselndes „Driver/Navigator“-Arbeiten erhöht Code‑Qualität und Wissenstransfer.
* '''Katas und Refactoring''': Wiederholtes Lösen kleiner Aufgaben schärft Automatisierung und sauberes Design.
* '''Open-Source-Beiträge''': Kleine PRs an Einsteigerfreundlichen Repos zeigen reale Standards und Workflows.

===Kognitive Methoden===
* '''Active Recall (Aktives Erinnern)''': Wissen aktiv abrufen (Kurztests, Karteikarten) statt nur erneut lesen.
* '''Spaced Repetition (Verteiltes Wiederholen)''': Inhalte in wachsenden Intervallen wiederholen (z.B. mit Anki).
* '''Interleaving (Vermischtes Lernen)''': Themen und Aufgabentypen mischen, um flexible Kompetenz aufzubauen.
* '''Feynman-Technik''': Konzepte einfach erklären und Lücken gezielt schließen.
* '''Deliberate Practice (Bewusstes Üben)''': Eng umrissene Schwächen (z.B. Rekursion, Tests) mit Feedback trainieren.
* '''Testing-Effekt''': Häufige Selbsttests statt passiver Wiederholung erhöhen Behaltensleistung.

===Soziale und strukturierte Ansätze===
* '''Peer Learning''': Lernen in Tandems/Gruppe; gegenseitige Reviews, gemeinsame Retrospektiven.
* '''Micro-Learning''': Kurze, fokussierte Einheiten (15–30 Min.) mit klarem Ziel.
* '''Gamification''': Badges, Levels, Streaks zur Motivationsstütze.
* '''Mentoring/Code-Reviews''': Gezieltes Feedback beschleunigt Lernkurven und Qualitätsverständnis.

===Alternative Lernstrategien===
* '''Top-Down-Lernen''': Vom Ziel/Prototyp ausgehend nur die nötigen Details vertiefen.
* '''REPL-basiertes Lernen''': Sofortiges Feedback durch REPL/Notebooks (z.B. Python, Node.js, Clojure).
* '''Learning in Public''': Notizen/Projekte öffentlich dokumentieren (Blog, GitHub), um Feedback zu erhalten.

===Praktische Umsetzung (Kurzleitfaden)===
# Konkretes Wochenziel definieren (Feature/Kata).
# Täglich 30–60 Min. Praxis + 10–15 Min. Active Recall/Spaced Repetition.
# Wöchentlich 1 Code-Review/Pair-Session einplanen.
# Mini‑Retro durchführen: Was hat funktioniert? Was nächste Woche ändern?</text>
      <sha1>2ro89rslphv3ficylkdg5hw0fca90bu</sha1>
    </revision>
  </page>
  <page>
    <title>Kurse:Asp net core leer</title>
    <ns>3002</ns>
    <id>196</id>
    <revision>
      <id>797</id>
      <timestamp>2025-09-28T11:28:03Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>797</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="40" sha1="dj8661pt2jj33qgwrxsvtc8ybhtnx4p" xml:space="preserve">==Asp net core leer==
===Vorausetzung===</text>
      <sha1>dj8661pt2jj33qgwrxsvtc8ybhtnx4p</sha1>
    </revision>
    <revision>
      <id>800</id>
      <parentid>797</parentid>
      <timestamp>2025-09-28T13:19:15Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>800</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1891" sha1="s7xzn6ycy8pvq94l6iodhawa1z8bw0l" xml:space="preserve">==Asp net core leer==
===Vorausetzung===
'''Wichtige Grundlagen für ASP.NET Core:'''
* ASP.NET Core ist ein plattformübergreifendes, Open-Source-Framework für moderne Webanwendungen.
* Die wichtigsten Konzepte sind Middleware, Dependency Injection und Routing.
* Projekte werden meist mit dem Befehl `dotnet new` erstellt.
* Die Datei `Program.cs` ist der Einstiegspunkt der Anwendung.
* Konfiguration erfolgt über `appsettings.json` und Umgebungsvariablen.
* Für Datenbankzugriffe wird häufig Entity Framework Core verwendet.
* Entwicklungswerkzeuge: Visual Studio Code, .NET CLI, Browser.
&lt;pre&gt;
sudo snap install code --classic
sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
sudo apt-get update # Aktualisiert die Paketliste
sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
dotnet tool install --global dotnet-ef
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet tool install -g Microsoft.Web.LibraryManager.Cli
echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
source ~/.bashrc  # Aktualisierung der .bashrc
code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung
&lt;/pre&gt;



===Wichtige Übung===

&lt;pre&gt;
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddControllersWithViews();
var app = builder.Build();
app.UseStaticFiles();
app.UseRouting();
app.MapControllerRoute(

   name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");
app.Run();


&lt;/pre&gt;

===Wichtige Frontend Pakete===
&lt;pre&gt;
libman install bootstrap -p cdnjs -d wwwroot/lib/bootstrap
libman install jquery -p cdnjs -d wwwroot/lib/jquery
&lt;/pre&gt;</text>
      <sha1>s7xzn6ycy8pvq94l6iodhawa1z8bw0l</sha1>
    </revision>
    <revision>
      <id>801</id>
      <parentid>800</parentid>
      <timestamp>2025-09-28T13:23:34Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>801</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="1903" sha1="531l4p31xv05ziknw8cez97oqv5e8zi" xml:space="preserve">==Asp net core leer==
===Vorausetzung===
'''Wichtige Grundlagen für ASP.NET Core:'''
* ASP.NET Core ist ein plattformübergreifendes, Open-Source-Framework für moderne Webanwendungen.
* Die wichtigsten Konzepte sind Middleware, Dependency Injection und Routing.
* Projekte werden meist mit dem Befehl `dotnet new` erstellt.
* Die Datei `Program.cs` ist der Einstiegspunkt der Anwendung.
* Konfiguration erfolgt über `appsettings.json` und Umgebungsvariablen.
* Für Datenbankzugriffe wird häufig Entity Framework Core verwendet.
* Entwicklungswerkzeuge: Visual Studio Code, .NET CLI, Browser.
&lt;pre&gt;
sudo snap install code --classic
sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
sudo apt-get update # Aktualisiert die Paketliste
sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
dotnet tool install --global dotnet-ef
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet tool install -g Microsoft.Web.LibraryManager.Cli
echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
source ~/.bashrc  # Aktualisierung der .bashrc
code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung
&lt;/pre&gt;



===Wichtige Übung===

&lt;pre&gt;
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddControllersWithViews();
var app = builder.Build();
app.UseStaticFiles();
app.UseRouting();
app.MapControllerRoute(

   name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");
app.Run();


&lt;/pre&gt;

===Wichtige Frontend Pakete===
&lt;pre&gt;
libman init
libman install bootstrap -p cdnjs -d wwwroot/lib/bootstrap
libman install jquery -p cdnjs -d wwwroot/lib/jquery
&lt;/pre&gt;</text>
      <sha1>531l4p31xv05ziknw8cez97oqv5e8zi</sha1>
    </revision>
    <revision>
      <id>802</id>
      <parentid>801</parentid>
      <timestamp>2025-09-28T14:30:17Z</timestamp>
      <contributor>
        <username>Thorsten</username>
        <id>1</id>
      </contributor>
      <comment>// via Wikitext Extension for VSCode</comment>
      <origin>802</origin>
      <model>wikitext</model>
      <format>text/x-wiki</format>
      <text bytes="2077" sha1="1a07pl3r7kog14ru6b6lkzbdiiy1mv2" xml:space="preserve">==Asp net core leer==
===Vorausetzung===
'''Wichtige Grundlagen für ASP.NET Core:'''
* ASP.NET Core ist ein plattformübergreifendes, Open-Source-Framework für moderne Webanwendungen.
* Die wichtigsten Konzepte sind Middleware, Dependency Injection und Routing.
* Projekte werden meist mit dem Befehl `dotnet new` erstellt.
* Die Datei `Program.cs` ist der Einstiegspunkt der Anwendung.
* Konfiguration erfolgt über `appsettings.json` und Umgebungsvariablen.
* Für Datenbankzugriffe wird häufig Entity Framework Core verwendet.
* Entwicklungswerkzeuge: Visual Studio Code, .NET CLI, Browser.
&lt;pre&gt;
sudo snap install code --classic
sudo apt-get install postgresql-all
  sudo -u postgres -i
createuser thorsten
createdb -E UTF8 -O thorsten thorsten
psql -c "\password thorsten"
psql -c "ALTER USER dein_benutzername CREATEDB;"
exit # Ausloggen
sudo apt-get update # Aktualisiert die Paketliste
sudo apt-get install -y dotnet-sdk-9.0 # Installation des .NET SDK
sudo apt-get install -y dotnet-sdk-8.0 # Installation des .NET SDK
dotnet tool install --global dotnet-ef
dotnet tool install --global dotnet-aspnet-codegenerator
dotnet tool install -g Microsoft.Web.LibraryManager.Cli
echo 'export PATH=$HOME/.dotnet/tools:$PATH' &gt;&gt; ~/.bashrc # Hinzufügen des Pfads zum .bashrc
source ~/.bashrc  # Aktualisierung der .bashrc
code --install-extension ms-dotnettools.csdevkit # Installiert die C# Dev Kit Erweiterung
&lt;/pre&gt;



===Wichtige Übung===

&lt;pre&gt;
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddControllersWithViews();
var app = builder.Build();
app.UseStaticFiles();
app.UseRouting();
app.MapControllerRoute(

   name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}");
app.Run();


&lt;/pre&gt;

===Wichtige Frontend Pakete===
&lt;pre&gt;
libman init
libman install bootstrap -p cdnjs -d wwwroot/lib/bootstrap
libman install jquery -p cdnjs -d wwwroot/lib/jquery
libman install jquery-validation-unobtrusive -p cdnjs -d wwwroot/lib/jquery-validation-unobtrusive
libman install jquery-validation -p cdnjs -d wwwroot/lib/jquery-validation
&lt;/pre&gt;</text>
      <sha1>1a07pl3r7kog14ru6b6lkzbdiiy1mv2</sha1>
    </revision>
  </page>
</mediawiki>
